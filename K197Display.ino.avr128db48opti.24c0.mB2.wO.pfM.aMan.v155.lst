
C:\Users\dax\AppData\Local\Temp\arduino_build_599034/K197Display.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000200 <__vectors>:
__vector_default():
../../../../crt1/gcrt1.S:61
     200:	0c 94 22 2d 	jmp	0x5a44	; 0x5a44 <__ctors_end>
../../../../crt1/gcrt1.S:67
     204:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:68
     208:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:69
     20c:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:70
     210:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:71
     214:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:72
     218:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:73
     21c:	0c 94 dd 57 	jmp	0xafba	; 0xafba <__vector_7>
../../../../crt1/gcrt1.S:74
     220:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:75
     224:	0c 94 8c 58 	jmp	0xb118	; 0xb118 <__vector_9>
../../../../crt1/gcrt1.S:76
     228:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:77
     22c:	0c 94 7d 58 	jmp	0xb0fa	; 0xb0fa <__vector_11>
../../../../crt1/gcrt1.S:78
     230:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:79
     234:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:80
     238:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:81
     23c:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:82
     240:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:83
     244:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:84
     248:	0c 94 0c 57 	jmp	0xae18	; 0xae18 <__vector_18>
../../../../crt1/gcrt1.S:85
     24c:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:86
     250:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:87
     254:	0c 94 6d 56 	jmp	0xacda	; 0xacda <__vector_21>
../../../../crt1/gcrt1.S:88
     258:	0c 94 67 56 	jmp	0xacce	; 0xacce <__vector_22>
../../../../crt1/gcrt1.S:89
     25c:	0c 94 73 56 	jmp	0xace6	; 0xace6 <__vector_23>
../../../../crt1/gcrt1.S:90
     260:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:91
     264:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:92
     268:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:93
     26c:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:94
     270:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:95
     274:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:96
     278:	0c 94 6d 58 	jmp	0xb0da	; 0xb0da <__vector_30>
../../../../crt1/gcrt1.S:97
     27c:	0c 94 f0 56 	jmp	0xade0	; 0xade0 <__vector_31>
../../../../crt1/gcrt1.S:98
     280:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:99
     284:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:100
     288:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:101
     28c:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:102
     290:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:103
     294:	0c 94 3b 58 	jmp	0xb076	; 0xb076 <__vector_37>
../../../../crt1/gcrt1.S:104
     298:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:105
     29c:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:106
     2a0:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:107
     2a4:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:108
     2a8:	0c 94 b6 57 	jmp	0xaf6c	; 0xaf6c <__vector_42>
../../../../crt1/gcrt1.S:109
     2ac:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:110
     2b0:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:111
     2b4:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:112
     2b8:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:113
     2bc:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:114
     2c0:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:115
     2c4:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:116
     2c8:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:117
     2cc:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:118
     2d0:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:119
     2d4:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:120
     2d8:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:121
     2dc:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:122
     2e0:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:123
     2e4:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:124
     2e8:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:125
     2ec:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>
../../../../crt1/gcrt1.S:126
     2f0:	0c 94 4c 2d 	jmp	0x5a98	; 0x5a98 <__bad_interrupt>

000002f4 <__trampolines_end>:
__trampolines_end():
     2f4:	4e 41       	sbci	r20, 0x1E	; 30
     2f6:	4e 49       	Address 0x000002f6 is out of bounds.
.word	0xffff	; ????

000002f7 <pstr_inity>:
     2f7:	49 4e 49 54 59                                      INITY

000002fc <pstr_inf>:
     2fc:	49 4e 46                                            INF

000002ff <pwr_m10>:
     2ff:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     30f:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000317 <pwr_p10>:
     317:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     327:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
     337:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
     347:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
     357:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
     367:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
     377:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
     387:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
     397:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     3a7:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     3b7:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     3c7:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     3d7:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     3e7:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     3f7:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     407:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     417:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     427:	3d 27                                               ='

00000429 <__c.2216>:
     429:	45 46 47 65 66 67 00                                EFGefg.

00000430 <__c.2210>:
     430:	20 2b 2d 2e 30 31 32 33 34 35 36 37 38 39 68 00      +-.0123456789h.

00000440 <opt_gr_yscale_forcesym>:
     440:	46 6f 72 63 65 20 73 79 6d 6d 2e 00                 Force symm..

0000044c <opt_gr_yscale_0sym>:
     44c:	30 2b 73 79 6d 6d 00                                0+symm.

00000453 <opt_gr_yscale_prefsym>:
     453:	53 79 6d 6d 65 74 72 69 63 00                       Symmetric.

0000045d <opt_gr_yscale_zero>:
     45d:	49 6e 63 6c 2e 20 30 00                             Incl. 0.

00000465 <opt_gr_yscale_max>:
     465:	7a 6f 6f 6d 00                                      zoom.

0000046a <opt_gr_type_dots>:
     46a:	44 6f 74 73 00                                      Dots.

0000046f <opt_gr_type_lines>:
     46f:	4c 69 6e 65 73 00                                   Lines.

00000475 <printPrompt()::__c>:
     475:	3e 20 00                                            > .

00000478 <printPrompt()::__c>:
     478:	20 4d 61 78 20 6c 6f 6f 70 20 74 69 6d 65 20 28      Max loop time (
     488:	75 73 29 3a 20 00                                   us): .

0000048e <printHelp()::__c>:
     48e:	20 63 6f 6e 74 72 61 73 74 20 6e 20 3d 3d 3e 20      contrast n ==> 
     49e:	73 65 74 20 64 69 73 70 6c 61 79 20 63 6f 6e 74     set display cont
     4ae:	72 61 73 74 20 5b 30 2d 32 35 35 5d 00              rast [0-255].

000004bb <printHelp()::__c>:
     4bb:	20 6c 6f 67 20 3d 3d 3e 20 74 6f 67 67 6c 65 20      log ==> toggle 
     4cb:	64 61 74 61 20 6c 6f 67 67 69 6e 67 00              data logging.

000004d8 <printHelp()::__c>:
     4d8:	20 6d 73 67 20 3d 3d 3e 20 74 6f 67 67 6c 65 20      msg ==> toggle 
     4e8:	70 72 69 6e 74 6f 75 74 20 6f 66 20 64 61 74 61     printout of data
     4f8:	20 74 6f 2f 66 72 6f 6d 20 6d 61 69 6e 20 62 6f      to/from main bo
     508:	61 72 64 00                                         ard.

0000050c <printHelp()::__c>:
     50c:	20 76 6f 6c 74 20 3d 3d 3e 20 63 68 65 63 6b 20      volt ==> check 
     51c:	76 6f 6c 74 61 67 65 73 20 26 20 74 65 6d 70 65     voltages & tempe
     52c:	72 61 74 75 72 65 00                                rature.

00000533 <printHelp()::__c>:
     533:	20 6a 6d 70 30 20 3d 3d 3e 20 6a 75 6d 70 20 74      jmp0 ==> jump t
     543:	6f 20 30 20 28 64 69 72 74 79 20 72 65 73 65 74     o 0 (dirty reset
     553:	29 00                                               ).

00000555 <printHelp()::__c>:
     555:	20 73 77 72 20 20 3d 3d 3e 20 74 72 69 67 65 72      swr  ==> triger
     565:	20 73 6f 66 74 77 61 72 65 20 72 65 73 65 74 00      software reset.

00000575 <printHelp()::__c>:
     575:	20 77 64 74 20 20 3d 3d 3e 20 74 72 69 67 67 65      wdt  ==> trigge
     585:	72 20 77 61 74 63 68 64 6f 67 20 72 65 73 65 74     r watchdog reset
	...

00000596 <printHelp()::__c>:
     596:	20 3f 20 2d 20 70 72 69 6e 74 20 74 68 69 73 20      ? - print this 
     5a6:	68 65 6c 70 20 74 65 78 74 00                       help text.

000005b0 <k197ButtonCluster::DebugOut_printEventName(K197UIeventType)::__c>:
     5b0:	75 6e 6b 6e 6f 77 6e 20 65 76 2e 20 00              unknown ev. .

000005bd <k197ButtonCluster::DebugOut_printEventName(K197UIeventType)::__c>:
     5bd:	65 76 65 6e 74 52 65 6c 65 61 73 65 00              eventRelease.

000005ca <k197ButtonCluster::DebugOut_printEventName(K197UIeventType)::__c>:
     5ca:	65 76 65 6e 74 48 6f 6c 64 00                       eventHold.

000005d4 <k197ButtonCluster::DebugOut_printEventName(K197UIeventType)::__c>:
     5d4:	65 76 65 6e 74 4c 6f 6e 67 50 72 65 73 73 00        eventLongPress.

000005e3 <k197ButtonCluster::DebugOut_printEventName(K197UIeventType)::__c>:
     5e3:	65 76 65 6e 74 50 72 65 73 73 00                    eventPress.

000005ee <k197ButtonCluster::DebugOut_printEventName(K197UIeventType)::__c>:
     5ee:	65 76 65 6e 74 4c 6f 6e 67 43 6c 69 63 6b 00        eventLongClick.

000005fd <k197ButtonCluster::DebugOut_printEventName(K197UIeventType)::__c>:
     5fd:	65 76 65 6e 74 44 6f 75 62 6c 65 43 6c 69 63 6b     eventDoubleClick
	...

0000060e <k197ButtonCluster::DebugOut_printEventName(K197UIeventType)::__c>:
     60e:	65 76 65 6e 74 43 6c 69 63 6b 00                    eventClick.

00000619 <myButtonCallback(K197UIeventsource, K197UIeventType)::__c>:
     619:	20 00                                                .

0000061b <myButtonCallback(K197UIeventsource, K197UIeventType)::__c>:
     61b:	20 00                                                .

0000061d <myButtonCallback(K197UIeventsource, K197UIeventType)::__c>:
     61d:	50 49 4e 3d 00                                      PIN=.

00000622 <UImanager::setup()::__c>:
     622:	73 69 7a 65 6f 66 28 75 38 67 32 5f 75 69 6e 74     sizeof(u8g2_uint
     632:	5f 74 29 3d 00                                      _t)=.

00000637 <UImanager::setup()::__c>:
     637:	53 50 49 20 70 69 6e 20 6d 61 70 70 69 6e 67 20     SPI pin mapping 
     647:	66 61 69 6c 65 64 21 00                             failed!.

0000064f <dxUtilClass::printResetFlags()::__c>:
     64f:	50 6f 77 65 72 20 6f 6e 20 72 65 73 65 74 00        Power on reset.

0000065e <dxUtilClass::printResetFlags()::__c>:
     65e:	42 72 6f 77 6e 6f 75 74 20 52 65 73 65 74 00        Brownout Reset.

0000066d <dxUtilClass::printResetFlags()::__c>:
     66d:	48 57 20 52 65 73 65 74 00                          HW Reset.

00000676 <dxUtilClass::printResetFlags()::__c>:
     676:	53 57 20 72 65 73 65 74 00                          SW reset.

0000067f <dxUtilClass::printResetFlags()::__c>:
     67f:	57 44 54 20 72 65 73 65 74 00                       WDT reset.

00000689 <dxUtilClass::printResetFlags()::__c>:
     689:	55 50 44 49 20 72 65 73 65 74 20 28 75 70 6c 6f     UPDI reset (uplo
     699:	61 64 29 00                                         ad).

0000069d <dxUtilClass::pollMVIOstatus()::__c>:
     69d:	4d 56 49 4f 20 6e 6f 74 20 6f 6b 21 00              MVIO not ok!.

000006aa <dxUtilClass::pollMVIOstatus()::__c>:
     6aa:	4d 56 49 4f 20 6f 6b 00                             MVIO ok.

000006b2 <setup::__c>:
     6b2:	42 54 20 69 73 20 6f 66 66 00                       BT is off.

000006bc <setup::__c>:
     6bc:	42 54 20 69 73 20 6f 6e 00                          BT is on.

000006c5 <setup::__c>:
     6c5:	2c 20 00                                            , .

000006c8 <setup::__c>:
     6c8:	4b 31 39 37 44 69 73 70 6c 61 79 00                 K197Display.

000006d4 <setup::__c>:
     6d4:	4b 31 39 37 44 69 73 70 6c 61 79 20 72 75 6e 6e     K197Display runn
     6e4:	69 6e 67 20 6f 6e 20 64 78 43 6f 72 65 00           ing on dxCore.

000006f2 <buttonPinIn>:
     6f2:	1b 1d 22 23                                         .."#

000006f6 <dumpFifoStatus(char const*)::__c>:
     6f6:	2c 20 66 69 66 6f 5f 72 65 61 72 3d 00              , fifo_rear=.

00000703 <dumpFifoStatus(char const*)::__c>:
     703:	2c 20 66 69 66 6f 5f 66 72 6f 6e 74 3d 00           , fifo_front=.

00000711 <dumpFifoStatus(char const*)::__c>:
     711:	20 20 20 66 69 66 6f 5f 73 69 7a 65 3d 00              fifo_size=.

0000071f <dumpFifoStatus(char const*)::__c>:
     71f:	20 30 78 00                                          0x.

00000723 <dumpFifoStatus(char const*)::__c>:
     723:	3a 20 00                                            : .

00000726 <fifo_isFull()::__c>:
     726:	66 69 66 6f 5f 69 73 46 75 6c 6c 3a 20 73 69 7a     fifo_isFull: siz
     736:	65 20 6d 69 73 6d 61 74 63 68 00                    e mismatch.

00000741 <fifo_isEmpty()::__c>:
     741:	66 69 66 6f 5f 69 73 45 6d 70 74 79 3a 20 73 69     fifo_isEmpty: si
     751:	7a 65 20 6d 69 73 6d 61 74 63 68 00                 ze mismatch.

0000075d <scaleFactor>:
     75d:	bd 37 86 35 ac c5 27 37 17 b7 d1 38 6f 12 83 3a     .7.5..'7...8o..:
     76d:	0a d7 23 3c cd cc cc 3d 00 00 80 3f 00 00 20 41     ..#<...=...?.. A
     77d:	00 00 c8 42 00 00 7a 44 00 40 1c 46 00 50 c3 47     ...B..zD.@.F.P.G
     78d:	00 24 74 49                                         .$tI

00000791 <permadata::store_to_EEPROM()::__c>:
     791:	45 45 50 52 4f 4d 3a 20 73 74 6f 72 65 20 6f 6b     EEPROM: store ok
	...

000007a2 <logU2U()::__c>:
     7a2:	20 3b 00                                             ;.

000007a5 <permadata::retrieve_from_EEPROM()::__c>:
     7a5:	45 45 50 52 4f 4d 3a 20 6e 6f 20 64 61 74 61 00     EEPROM: no data.

000007b5 <permadata::retrieve_from_EEPROM()::__c>:
     7b5:	45 45 50 52 4f 4d 3a 20 72 65 73 74 6f 72 65 20     EEPROM: restore 
     7c5:	6f 6b 00                                            ok.

000007c8 <permadata::retrieve_from_EEPROM()::__c>:
     7c8:	2c 20 65 78 70 65 63 74 65 64 20 00                 , expected .

000007d4 <permadata::retrieve_from_EEPROM()::__c>:
     7d4:	45 45 50 52 4f 4d 3a 20 72 65 76 2e 20 00           EEPROM: rev. .

000007e2 <calcIncrement(unsigned char, K197UIeventsource, unsigned char)::__c>:
     7e2:	4e 65 77 20 69 6e 63 3a 20 00                       New inc: .

000007ec <MenuInputOptions::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)::__c>:
     7ec:	20 3e 00                                             >.

000007ef <MenuInputOptions::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)::__c>:
     7ef:	3a 20 3c 20 00                                      : < .

000007f4 <UImessageBox::draw(U8G2*, unsigned int, unsigned int)::__c>:
     7f4:	4f 6b 00                                            Ok.

000007f7 <printError(char const*)::__c>:
     7f7:	49 6e 76 61 6c 69 64 20 63 6f 6d 6d 61 6e 64 3a     Invalid command:
     807:	20 00                                                .

00000809 <cmdTmpScaling()::__c>:
     809:	43 6f 6e 74 72 61 73 74 3a 20 3c 6e 6f 20 63 68     Contrast: <no ch
     819:	61 6e 67 65 3e 00                                   ange>.

0000081f <debugUtil::profilePrintln(unsigned int, __FlashStringHelper const*)::__c>:
     81f:	75 73 00                                            us.

00000822 <K197device::troubleshootAutoscale(float, float)::__c>:
     822:	3d 00                                               =.

00000824 <K197device::troubleshootAutoscale(float, float)::__c>:
     824:	2a 00                                               *.

00000826 <K197device::troubleshootAutoscale(float, float)::__c>:
     826:	4d 41 58 20 31 30 5e 00                             MAX 10^.

0000082e <K197device::troubleshootAutoscale(float, float)::__c>:
     82e:	74 65 73 74 6d 61 78 3d 00                          testmax=.

00000837 <K197device::troubleshootAutoscale(float, float)::__c>:
     837:	3d 00                                               =.

00000839 <K197device::troubleshootAutoscale(float, float)::__c>:
     839:	2a 00                                               *.

0000083b <K197device::troubleshootAutoscale(float, float)::__c>:
     83b:	4d 49 4e 20 31 30 5e 00                             MIN 10^.

00000843 <K197device::troubleshootAutoscale(float, float)::__c>:
     843:	74 65 73 74 6d 69 6e 3d 00                          testmin=.

0000084c <K197device::troubleshootAutoscale(float, float)::__c>:
     84c:	54 69 6d 65 20 73 70 65 6e 74 20 69 6e 20 74 72     Time spent in tr
     85c:	6f 75 62 6c 65 73 68 6f 6f 74 41 75 74 6f 73 63     oubleshootAutosc
     86c:	61 6c 65 28 29 00                                   ale().

00000872 <cmdTmpScaling()::__c>:
     872:	58 3d 00                                            X=.

00000875 <cmdContrast()::__c>:
     875:	43 6f 6e 74 72 61 73 74 3a 20 3c 6e 6f 20 63 68     Contrast: <no ch
     885:	61 6e 67 65 3e 00                                   ange>.

0000088b <cmdContrast()::__c>:
     88b:	43 6f 6e 74 72 61 73 74 3d 00                       Contrast=.

00000895 <_ZZ12handleSerialvE3__c__12_>:
     895:	20 00                                                .

00000897 <_ZZ12handleSerialvE3__c__11_>:
     897:	78 00                                               x.

00000899 <_ZZ12handleSerialvE3__c__10_>:
     899:	63 6f 6e 74 72 61 73 74 00                          contrast.

000008a2 <handleSerial()::__c>:
     8a2:	6c 6f 67 00                                         log.

000008a6 <handleSerial()::__c>:
     8a6:	6d 73 67 00                                         msg.

000008aa <handleSerial()::__c>:
     8aa:	2c 20 00                                            , .

000008ad <handleSerial()::__c>:
     8ad:	76 6f 6c 74 00                                      volt.

000008b2 <handleSerial()::__c>:
     8b2:	54 65 73 74 69 6e 67 20 64 69 72 74 79 20 72 65     Testing dirty re
     8c2:	73 65 74 00                                         set.

000008c6 <handleSerial()::__c>:
     8c6:	6a 6d 70 30 00                                      jmp0.

000008cb <handleSerial()::__c>:
     8cb:	54 65 73 74 69 6e 67 20 53 57 20 72 65 73 65 74     Testing SW reset
	...

000008dc <handleSerial()::__c>:
     8dc:	73 77 72 00                                         swr.

000008e0 <handleSerial()::__c>:
     8e0:	54 65 73 74 69 6e 67 20 77 61 74 63 68 64 6f 67     Testing watchdog
     8f0:	20 72 65 73 65 74 00                                 reset.

000008f7 <handleSerial()::__c>:
     8f7:	77 64 74 00                                         wdt.

000008fb <handleSerial()::__c>:
     8fb:	3f 00                                               ?.

000008fd <K197device::getNewReading(unsigned char*)::__c>:
     8fd:	20 43 41 4c 20 66 6f 75 6e 64 21 00                  CAL found!.

00000909 <K197device::getNewReading(unsigned char*)::__c>:
     909:	20 43 41 4c 00                                       CAL.

0000090e <K197device::getNewReading(unsigned char*)::__c>:
     90e:	30 4c 00                                            0L.

00000911 <seg2char>:
     911:	20 27 69 49 5e 2a 2a 54 2d 2a 72 66 2a 2a 2a 46      'iI^**T-*rf***F
     921:	5f 2a 65 4c 2a 2a 2a 43 3d 2a 63 74 58 2a 67 45     _*eL***C=*ctX*gE
     931:	27 22 2a 2a 3f 2a 2a 2a 2a 2a 2f 2a 2a 2a 2a 50     '"**?*****/****P
     941:	2a 2a 2a 2a 2a 4d 2a 2a 2a 59 2a 40 2a 51 32 52     *****M***Y*@*Q2R
     951:	69 2a 2a 2a 2a 2a 2a 2a 2a 5c 6e 68 2a 2a 2a 4b     i********\nh***K
     961:	6a 2a 75 2a 20 2a 57 47 61 2a 6f 62 2a 35 2a 36     j*u* *WGa*ob*5*6
     971:	31 2a 2a 2a 37 37 37 4e 2a 34 2a 48 2a 39 2a 41     1***777N*4*H*9*A
     981:	4a 56 4a 55 44 2a 2a 30 2a 79 64 26 33 39 61 38     JVJUD**0*yd&39a8

00000991 <K197device::getNewReading(unsigned char*)::__c>:
     991:	57 61 72 6e 69 6e 67 2c 20 4b 31 39 37 20 64 75     Warning, K197 du
     9a1:	70 6c 2e 20 44 50 00                                pl. DP.

000009a8 <K197device::getNewReading(unsigned char*)::__c>:
     9a8:	57 61 72 6e 69 6e 67 2c 20 4b 31 39 37 20 6e 3d     Warning, K197 n=
	...

000009b9 <SPIdevice::debugPrintData(unsigned char*, unsigned char)::__c>:
     9b9:	30 78 00                                            0x.

000009bc <K197device::debugPrint()::__c>:
     9bc:	20 2b 20 4f 76 2e 52 61 6e 67 65 00                  + Ov.Range.

000009c8 <K197device::debugPrint()::__c>:
     9c8:	20 30 78 00                                          0x.

000009cc <K197device::debugPrint()::__c>:
     9cc:	2c 20 28 00                                         , (.

000009d0 <UImanager::drawGraphScreenNormalPanel(unsigned int, unsigned int)::__c>:
     9d0:	20 20 20 20 20 00                                        .

000009d6 <UImanager::drawGraphScreenNormalPanel(unsigned int, unsigned int)::__c>:
     9d6:	20 48 4f 4c 44 00                                    HOLD.

000009dc <UImanager::drawGraphScreenNormalPanel(unsigned int, unsigned int)::__c>:
     9dc:	20 20 20 20 00                                          .

000009e1 <UImanager::drawGraphScreenNormalPanel(unsigned int, unsigned int)::__c>:
     9e1:	41 55 54 4f 00                                      AUTO.

000009e6 <UImanager::drawGraphScreenNormalPanel(unsigned int, unsigned int)::__c>:
     9e6:	20 20 20 20 00                                          .

000009eb <UImanager::drawGraphScreenNormalPanel(unsigned int, unsigned int)::__c>:
     9eb:	20 52 45 4c 00                                       REL.

000009f0 <UImanager::drawGraphScreenNormalPanel(unsigned int, unsigned int)::__c>:
     9f0:	20 20 20 00                                            .

000009f4 <UImanager::drawGraphScreenNormalPanel(unsigned int, unsigned int)::__c>:
     9f4:	20 41 43 00                                          AC.

000009f8 <printXYLabel(k197graph_label_type, unsigned int)::__c>:
     9f8:	73 2f 00                                            s/.

000009fb <K197device::fillGraphDisplayData(k197graph_type*, k197graph_yscale_opt)::__c>:
     9fb:	67 72 61 70 68 20 73 69 7a 65 21 00                 graph size!.

00000a07 <K197device::fillGraphDisplayData(k197graph_type*, k197graph_yscale_opt)::__c>:
     a07:	2c 20 67 3d 00                                      , g=.

00000a0c <K197device::fillGraphDisplayData(k197graph_type*, k197graph_yscale_opt)::__c>:
     a0c:	2c 20 63 3d 00                                      , c=.

00000a11 <K197device::fillGraphDisplayData(k197graph_type*, k197graph_yscale_opt)::__c>:
     a11:	69 3d 00                                            i=.

00000a14 <UImanager::updateMinMaxScreen()::__c>:
     a14:	20 20 20 20 00                                          .

00000a19 <UImanager::updateMinMaxScreen()::__c>:
     a19:	48 4f 4c 44 00                                      HOLD.

00000a1e <UImanager::updateMinMaxScreen()::__c>:
     a1e:	20 20 20 20 20 20 20 20 20 20 00                              .

00000a29 <UImanager::updateMinMaxScreen()::__c>:
     a29:	4d 69 6e 20 00                                      Min .

00000a2e <UImanager::updateMinMaxScreen()::__c>:
     a2e:	41 76 67 20 00                                      Avg .

00000a33 <UImanager::updateMinMaxScreen()::__c>:
     a33:	4d 61 78 20 00                                      Max .

00000a38 <UImanager::updateMinMaxScreen()::__c>:
     a38:	20 20 20 00                                            .

00000a3c <UImanager::updateMinMaxScreen()::__c>:
     a3c:	52 45 4c 00                                         REL.

00000a40 <UImanager::updateMinMaxScreen()::__c>:
     a40:	20 20 00                                              .

00000a43 <UImanager::updateMinMaxScreen()::__c>:
     a43:	41 43 00                                            AC.

00000a46 <_ZZN9UImanager18updateNormalScreenEvE3__c__18_>:
     a46:	20 20 20 20 20 20 20 20 20 20 00                              .

00000a51 <_ZZN9UImanager18updateNormalScreenEvE3__c__17_>:
     a51:	20 20 20 00                                            .

00000a55 <_ZZN9UImanager18updateNormalScreenEvE3__c__16_>:
     a55:	52 4d 54 00                                         RMT.

00000a59 <_ZZN9UImanager18updateNormalScreenEvE3__c__15_>:
     a59:	20 20 20 00                                            .

00000a5d <_ZZN9UImanager18updateNormalScreenEvE3__c__14_>:
     a5d:	43 61 6c 00                                         Cal.

00000a61 <_ZZN9UImanager18updateNormalScreenEvE3__c__13_>:
     a61:	20 20 20 20 00                                          .

00000a66 <_ZZN9UImanager18updateNormalScreenEvE3__c__12_>:
     a66:	52 43 4c 20 00                                      RCL .

00000a6b <_ZZN9UImanager18updateNormalScreenEvE3__c__11_>:
     a6b:	20 20 20 20 00                                          .

00000a70 <_ZZN9UImanager18updateNormalScreenEvE3__c__10_>:
     a70:	53 54 4f 20 00                                      STO .

00000a75 <UImanager::updateNormalScreen()::__c>:
     a75:	48 4f 4c 44 00                                      HOLD.

00000a7a <UImanager::updateNormalScreen()::__c>:
     a7a:	20 20 00                                              .

00000a7d <UImanager::updateNormalScreen()::__c>:
     a7d:	64 42 00                                            dB.

00000a80 <UImanager::updateNormalScreen()::__c>:
     a80:	20 20 20 00                                            .

00000a84 <UImanager::updateNormalScreen()::__c>:
     a84:	52 45 4c 00                                         REL.

00000a88 <UImanager::updateNormalScreen()::__c>:
     a88:	20 20 20 00                                            .

00000a8c <UImanager::updateNormalScreen()::__c>:
     a8c:	42 41 54 00                                         BAT.

00000a90 <UImanager::updateNormalScreen()::__c>:
     a90:	20 20 20 20 00                                          .

00000a95 <UImanager::updateNormalScreen()::__c>:
     a95:	41 55 54 4f 00                                      AUTO.

00000a9a <UImanager::updateNormalScreen()::__c>:
     a9a:	20 20 00                                              .

00000a9d <UImanager::updateNormalScreen()::__c>:
     a9d:	41 43 00                                            AC.

00000aa0 <_ZZN9UImanager17updateSplitScreenEvE3__c__14_>:
     aa0:	20 20 20 20 20 20 00                                      .

00000aa7 <_ZZN9UImanager17updateSplitScreenEvE3__c__13_>:
     aa7:	52 4d 54 20 20 20 00                                RMT   .

00000aae <_ZZN9UImanager17updateSplitScreenEvE3__c__12_>:
     aae:	20 20 20 20 00                                          .

00000ab3 <_ZZN9UImanager17updateSplitScreenEvE3__c__11_>:
     ab3:	52 43 4c 20 00                                      RCL .

00000ab8 <_ZZN9UImanager17updateSplitScreenEvE3__c__10_>:
     ab8:	20 20 20 20 00                                          .

00000abd <UImanager::updateSplitScreen()::__c>:
     abd:	53 54 4f 20 00                                      STO .

00000ac2 <UImanager::updateSplitScreen()::__c>:
     ac2:	20 20 20 20 20 20 00                                      .

00000ac9 <UImanager::updateSplitScreen()::__c>:
     ac9:	20 41 43 20 20 20 00                                 AC   .

00000ad0 <UImanager::updateSplitScreen()::__c>:
     ad0:	20 20 20 20 20 20 00                                      .

00000ad7 <UImanager::updateSplitScreen()::__c>:
     ad7:	43 61 6c 20 20 20 00                                Cal   .

00000ade <UImanager::updateSplitScreen()::__c>:
     ade:	20 20 20 20 00                                          .

00000ae3 <UImanager::updateSplitScreen()::__c>:
     ae3:	52 45 4c 20 00                                      REL .

00000ae8 <UImanager::updateSplitScreen()::__c>:
     ae8:	20 20 20 20 00                                          .

00000aed <UImanager::updateSplitScreen()::__c>:
     aed:	42 41 54 20 00                                      BAT .

00000af2 <UImanager::updateSplitScreen()::__c>:
     af2:	20 20 20 20 20 00                                        .

00000af8 <UImanager::updateSplitScreen()::__c>:
     af8:	41 55 54 4f 20 00                                   AUTO .

00000afe <UImanager::logData()::__c>:
     afe:	3b 20 00                                            ; .

00000b01 <UImanager::logData()::__c>:
     b01:	3b 20 00                                            ; .

00000b04 <UImanager::logData()::__c>:
     b04:	3b 20 00                                            ; .

00000b07 <UImanager::logData()::__c>:
     b07:	3b 20 00                                            ; .

00000b0a <UImanager::logData()::__c>:
     b0a:	20 41 43 00                                          AC.

00000b0e <UImanager::logData()::__c>:
     b0e:	20 6d 73 3b 20 00                                    ms; .

00000b14 <BTmanager::checkPresence()::__c>:
     b14:	42 54 20 74 75 72 6e 65 64 20 6f 6e 00              BT turned on.

00000b21 <BTmanager::checkPresence()::__c>:
     b21:	42 54 20 74 75 72 6e 65 64 20 6f 66 66 00           BT turned off.

00000b2f <UImanager::updateBtStatus()::__c>:
     b2f:	20 20 20 00                                            .

00000b33 <UImanager::updateBtStatus()::__c>:
     b33:	3c 2d 3e 00                                         <->.

00000b37 <UImanager::updateBtStatus()::__c>:
     b37:	3c 3d 3e 00                                         <=>.

00000b3b <UImanager::updateBtStatus()::__c>:
     b3b:	20 20 20 00                                            .

00000b3f <UImanager::updateBtStatus()::__c>:
     b3f:	62 74 20 00                                         bt .

00000b43 <fifo_getSize()::__c>:
     b43:	66 69 66 6f 5f 67 65 74 53 69 7a 65 3a 20 73 69     fifo_getSize: si
     b53:	7a 65 20 6d 69 73 6d 61 74 63 68 00                 ze mismatch.

00000b5f <k197ButtonCluster::checkNew()::__c>:
     b5f:	46 49 46 4f 20 46 75 6c 6c 00                       FIFO Full.

00000b69 <loop::__c>:
     b69:	63 6c 65 61 72 65 64 00                             cleared.

00000b71 <loop::__c>:
     b71:	44 45 54 45 43 54 45 44 00                          DETECTED.

00000b7a <loop::__c>:
     b7a:	43 6f 6c 6c 69 73 69 6f 6e 20 00                    Collision .

00000b85 <loop::__c>:
     b85:	72 61 77 3a 20 00                                   raw: .

00000b8b <loop::__c>:
     b8b:	3a 20 00                                            : .

00000b8e <loop::__c>:
     b8e:	53 50 49 20 70 61 63 6b 65 74 20 2d 20 4e 3d 00     SPI packet - N=.

00000b9e <K197device::getUnit(bool)::__c>:
     b9e:	20 20 00                                              .

00000ba1 <K197device::getUnit(bool)::__c>:
     ba1:	64 42 00                                            dB.

00000ba4 <K197device::getUnit(bool)::__c>:
     ba4:	20 41 00                                             A.

00000ba7 <K197device::getUnit(bool)::__c>:
     ba7:	6d 41 00                                            mA.

00000baa <K197device::getUnit(bool)::__c>:
     baa:	c2 b5 41 00                                         ..A.

00000bae <K197device::getUnit(bool)::__c>:
     bae:	20 e2 84 a6 00                                       ....

00000bb3 <K197device::getUnit(bool)::__c>:
     bb3:	6b e2 84 a6 00                                      k....

00000bb8 <K197device::getUnit(bool)::__c>:
     bb8:	4d e2 84 a6 00                                      M....

00000bbd <K197device::getUnit(bool)::__c>:
     bbd:	20 56 00                                             V.

00000bc0 <K197device::getUnit(bool)::__c>:
     bc0:	6d 56 00                                            mV.

00000bc3 <K197device::getUnit(bool)::__c>:
     bc3:	c2 b0 43 00                                         ..C.

00000bc7 <dxUtilClass::checkVoltages(bool)::__c>:
     bc7:	56 00                                               V.

00000bc9 <dxUtilClass::checkVoltages(bool)::__c>:
     bc9:	56 2c 20 00                                         V, .

00000bcd <dxUtilClass::checkTemperature(bool)::__c>:
     bcd:	20 43 00                                             C.

00000bd0 <dxUtilClass::checkTemperature(bool)::__c>:
     bd0:	54 3d 00                                            T=.

00000bd3 <dxUtilClass::reportStack(bool)::__c>:
     bd3:	53 74 61 63 6b 3d 00                                Stack=.

00000bda <_usart0_pins>:
     bda:	00 00 02 01 04 06 03 00 03                          .........

00000be3 <__class_gr_sample_time::__class_gr_sample_time()::__c>:
     be3:	53 61 6d 70 6c 65 20 74 69 6d 65 20 28 73 29 00     Sample time (s).

00000bf3 <__class_opt_gr_yscale::__class_opt_gr_yscale()::__c>:
     bf3:	59 20 61 78 69 73 00                                Y axis.

00000bfa <__class_logStatSamples::__class_logStatSamples()::__c>:
     bfa:	4e 75 6d 2e 20 53 61 6d 70 6c 65 73 00              Num. Samples.

00000c07 <__class_contrastCtrl::__class_contrastCtrl()::__c>:
     c07:	43 6f 6e 74 72 61 73 74 00                          Contrast.

00000c10 <__class_gr_xscale_autosample::__class_gr_xscale_autosample()::__c>:
     c10:	41 75 74 6f 20 73 61 6d 70 6c 65 00                 Auto sample.

00000c1c <__txt_gr_xscale_roll_mode>:
     c1c:	52 6f 6c 6c 20 6d 6f 64 65 00                       Roll mode.

00000c26 <__txt_graphSeparator2>:
     c26:	3c 20 58 20 61 78 69 73 20 3e 00                    < X axis >.

00000c31 <__txt_gr_yscale_show0>:
     c31:	53 68 6f 77 20 79 3d 30 00                          Show y=0.

00000c3a <__txt_graphSeparator1>:
     c3a:	3c 20 59 20 61 78 69 73 20 3e 00                    < Y axis >.

00000c45 <__txt_opt_gr_type>:
     c45:	47 72 61 70 68 20 74 79 70 65 00                    Graph type.

00000c50 <__txt_graphSeparator0>:
     c50:	3c 20 47 72 61 70 68 20 6f 70 74 69 6f 6e 73 20     < Graph options 
     c60:	3e 00                                               >.

00000c62 <__txt_logSeparator1>:
     c62:	3c 20 53 74 61 74 69 73 74 69 63 73 20 3e 00        < Statistics >.

00000c71 <__txt_logStat>:
     c71:	49 6e 63 6c 75 64 65 20 53 74 61 74 69 73 74 69     Include Statisti
     c81:	63 73 00                                            cs.

00000c84 <__txt_logTamb>:
     c84:	49 6e 63 6c 75 64 65 20 54 61 6d 62 00              Include Tamb.

00000c91 <__txt_logTimestamp>:
     c91:	4c 6f 67 20 74 69 6d 65 73 74 61 6d 70 00           Log timestamp.

00000c9f <__txt_logSplitUnit>:
     c9f:	53 70 6c 69 74 20 75 6e 69 74 00                    Split unit.

00000caa <__txt_logSkip>:
     caa:	53 61 6d 70 6c 65 73 20 74 6f 20 73 6b 69 70 00     Samples to skip.

00000cba <__txt_logEnable>:
     cba:	45 6e 61 62 6c 65 64 00                             Enabled.

00000cc2 <__txt_logSeparator0>:
     cc2:	3c 20 42 54 20 44 61 74 61 6c 6f 67 67 69 6e 67     < BT Datalogging
     cd2:	20 3e 00                                             >.

00000cd5 <__class_openLog::__class_openLog()::__c>:
     cd5:	53 68 6f 77 20 6c 6f 67 00                          Show log.

00000cde <__class_reloadSettings::__class_reloadSettings()::__c>:
     cde:	52 65 6c 6f 61 64 20 73 65 74 74 69 6e 67 73 00     Reload settings.

00000cee <__class_saveSettings::__class_saveSettings()::__c>:
     cee:	53 61 76 65 20 73 65 74 74 69 6e 67 73 00           Save settings.

00000cfc <__txt_bluetoothMenu>:
     cfc:	42 6c 75 65 74 6f 6f 74 68 00                       Bluetooth.

00000d06 <__txt_btGraphOpt>:
     d06:	47 72 61 70 68 20 6f 70 74 69 6f 6e 73 20 3e 3e     Graph options >>
     d16:	3e 00                                               >.

00000d18 <__txt_btDatalog>:
     d18:	44 61 74 61 20 6c 6f 67 67 69 6e 67 20 3e 3e 3e     Data logging >>>
	...

00000d29 <__txt_reassignStoRcl>:
     d29:	52 65 61 73 73 69 67 6e 20 53 54 4f 2f 52 43 4c     Reassign STO/RCL
	...

00000d3a <__txt_additionalModes>:
     d3a:	45 78 74 72 61 20 4d 6f 64 65 73 00                 Extra Modes.

00000d46 <__txt_mainSeparator0>:
     d46:	3c 20 4f 70 74 69 6f 6e 73 20 3e 00                 < Options >.

00000d52 <__class_exitMenu::__class_exitMenu()::__c>:
     d52:	45 78 69 74 00                                      Exit.

00000d57 <__txt_closeMenu>:
     d57:	3c 20 42 61 63 6b 00                                < Back.

00000d5e <__txt_ERROR_msg_box>:
     d5e:	45 72 72 6f 72 20 28 73 65 65 20 6c 6f 67 29 00     Error (see log).

00000d6e <__txt_EEPROM_reload_msg_box>:
     d6e:	63 6f 6e 66 69 67 20 72 65 6c 6f 61 64 65 64 00     config reloaded.

00000d7e <__txt_EEPROM_save_msg_box>:
     d7e:	63 6f 6e 66 69 67 20 73 61 76 65 64 00              config saved.

00000d8b <u8g2_font_inr16_mr>:
     d8b:	5f 02 04 03 04 05 01 03 05 0e 15 00 fc 10 fc 11     _...............
     d9b:	fc 03 05 06 93 09 74 20 09 5e c3 3f fe ff 97 00     ......t .^.?....
     dab:	21 0e 5e c3 9b ec 62 fd 7b 94 b3 eb 71 02 22 14     !.^...b.{...q.".
     dbb:	5e c3 93 88 a0 88 a0 88 a0 88 a0 88 a0 88 3c fe     ^.............<.
     dcb:	3f 02 23 28 5e c3 3f 8c 4c a0 4c a0 88 60 8c d4     ?.#(^.?.L.L..`..
     ddb:	01 cd 01 59 8c 60 4c a0 4c a0 4c d8 01 cd 01 55     ...Y.`L.L.L....U
     deb:	8c 60 8c 60 8c 60 4c 3c 4e 00 24 26 5e c3 9b b0     .`.`.`L<N.$&^...
     dfb:	a8 9d 84 2a 11 91 28 11 41 11 c9 52 62 52 09 49     ...*..(.A..RbR.I
     e0b:	11 41 11 41 11 21 11 09 a9 03 b9 5a 61 79 44 00     .A.A.!.....ZayD.
     e1b:	25 27 5e c3 3f 04 91 4c 51 90 88 22 11 09 29 0b     %'^.?..LQ.."..).
     e2b:	31 0a 61 59 e1 60 89 c1 88 32 09 11 21 11 45 22     1.aY.`...2..!.E"
     e3b:	6a 84 88 84 e6 31 07 26 22 5e c3 3f cc 68 a1 8c     j....1.&"^.?.h..
     e4b:	9c 8c 9c 8c a0 84 64 a9 68 a5 88 1a 25 32 42 44     ......d.h...%2BD
     e5b:	52 8a a8 2c a6 68 e2 31 07 27 0b 5e c3 9b b0 de     R..,.h.1.'.^....
     e6b:	e3 ff 33 00 28 16 5e c3 a7 ec a8 ac ec ac b0 ac     ..3.(.^.........
     e7b:	b0 be 16 96 16 96 96 1e 96 01 29 15 5e c3 4f f0     ..........).^.O.
     e8b:	f4 b0 b4 62 d5 c2 7a 2b 2c 2b 3b ba 56 12 00 2a     ...b..z+,+;.V..*
     e9b:	1a 5e c3 3f 5e 08 47 47 8a 84 0c 1d 08 ce 46 84     .^.?^.GG......F.
     eab:	4a 08 ca 88 49 c9 e3 31 00 2b 10 5e c3 3f 26 c2     J...I..1.+.^.?&.
     ebb:	1a 1e 0c 1d 0c 0a eb 1e 3f 2c 0e 5e c3 3f fe 9f     ........?,.^.?..
     ecb:	c9 d2 0e 0b a7 0e 04 2d 0e 5e c3 3f 7e 79 20 75     .......-.^.?~y u
     edb:	20 8f ff 0e 00 2e 0c 5e c3 3f fe 9f cd ae c7 09      ......^.?......
     eeb:	00 2f 17 5e c3 6b b0 5a 61 59 61 59 61 59 61 e1     ./.^.k.ZaYaYaYa.
     efb:	60 e1 60 b5 c2 f2 d8 01 30 27 5e c3 3f 0c a5 dd     `.`.....0'^.?...
     f0b:	8c 98 54 94 d4 90 10 91 50 84 90 4c 88 90 48 8c     ..T.....P..L..H.
     f1b:	90 84 8c 10 91 d0 94 22 31 21 39 4b 7a 9c 00 31     ......."1!9Kz..1
     f2b:	0f 5e c3 3f 94 28 a5 84 b0 fe df e3 04 00 32 14     .^.?.(........2.
     f3b:	5e c3 3f 0c e5 99 d0 b0 6e f5 b1 ec 81 d4 81 3c     ^.?.....n......<
     f4b:	e6 00 33 17 5e c3 3f 4c e1 f1 b0 5a 49 52 6a c5     ..3.^.?L...ZIRj.
     f5b:	9a 05 89 1d 04 d2 e3 04 00 34 1e 5e c3 3f 98 b0     .........4.^.?..
     f6b:	ec 28 69 84 64 88 a0 88 60 8c 9c 8c 98 90 d8 c1     .(i.d...`.......
     f7b:	d0 c1 a8 b0 f6 b8 00 35 1a 5e c3 3f c8 41 d8 41     .......5.^.?.A.A
     f8b:	98 b0 26 91 77 42 d2 c2 3a 92 12 3b 08 a4 c7 05     ..&.wB..:..;....
     f9b:	00 36 21 5e c3 3f 14 e1 99 b0 ac b0 4c a0 44 19     .6!^.?......L.D.
     fab:	8d 94 d4 90 98 90 98 90 98 90 98 94 90 dc 21 3d     ..............!=
     fbb:	2e 00 37 17 5e c3 3f c4 81 d4 81 ac b0 70 b0 5a     ..7.^.?......p.Z
     fcb:	61 b5 c2 6a 85 d5 e3 08 00 38 24 5e c3 3f 10 a5     a..j.....8$^.?..
     fdb:	9d 90 98 90 98 90 d8 8c dc 84 e4 a8 88 9c 90 94     ................
     feb:	98 90 98 90 98 d0 90 d8 41 20 3d 2e 00 39 20 5e     ........A =..9 ^
     ffb:	c3 3f 10 e1 9d 90 94 66 42 62 42 62 52 42 53 07     .?.....fBbBbRBS.
    100b:	72 14 c2 c2 c1 62 41 53 07 81 f4 38 01 3a 0e 5e     r....bAS...8.:.^
    101b:	c3 3f 9e cf ae c7 b3 d9 f5 38 01 3b 0f 5e c3 3f     .?.......8.;.^.?
    102b:	9e cf ae c7 57 b3 c3 8a 13 02 3c 13 5e c3 3f 42     ....W.....<.^.?B
    103b:	51 42 2e 67 a7 17 13 4f 4b c7 e3 2d 00 3d 12 5e     QB.g...OK..-.=.^
    104b:	c3 3f 6e 0f 86 0e e6 b1 38 18 3a 98 c7 5f 02 3e     .?n.....8.:.._.>
    105b:	11 5e c3 3f 6a 61 1e cf 4e ae a4 1c 95 c7 57 00     .^.?ja..N.....W.
    106b:	3f 15 5e c3 53 dd 41 98 90 58 98 b0 5a 1d ab 47     ?.^.S.A..X..Z..G
    107b:	3a bb 1e 27 00 40 27 5e c3 3f 10 e1 41 d4 90 94     :..'.@'^.?..A...
    108b:	98 8c 8c 8d c8 8d c4 8c 0a 21 19 09 21 19 89 91     .........!..!...
    109b:	19 91 23 99 10 21 69 e1 83 c0 7a 1c 41 22 5e c3     ..#..!i...z.A"^.
    10ab:	3f 54 74 b0 f0 6c 44 a8 84 64 88 64 4c a0 8c 5c     ?Tt..lD..d.dL..\
    10bb:	90 dc d9 81 94 22 39 19 39 19 39 79 ac 01 42 25     ....."9.9.9y..B%
    10cb:	5e c3 ff 41 d8 81 94 d4 90 98 90 98 90 94 d4 81     ^..A............
    10db:	d4 41 98 94 32 21 31 21 31 21 31 21 a9 a1 03 a9     .A..2!1!1!1!....
    10eb:	7b 9c 00 43 19 5e c3 3f 10 e1 41 d4 d0 90 98 8c     {..C.^.?..A.....
    10fb:	b0 3e 1e 16 9e 92 3a 08 a4 c7 05 00 44 23 5e c3     .>....:.....D#^.
    110b:	3f 84 e1 41 98 d0 94 66 42 62 42 62 42 62 42 62     ?..A...fBbBbBbBb
    111b:	42 62 42 62 42 62 42 52 8a a6 0e c2 ec 71 02 45     BbBbBbBR.....q.E
    112b:	19 5e c3 3f c4 c1 d0 c1 90 b0 8e 0f a4 0e a4 84     .^.?............
    113b:	75 7c 30 74 30 8f 35 00 46 15 5e c3 3f c4 81 d4     u|0t0.5.F.^.?...
    114b:	81 94 b0 c6 07 61 07 61 c2 fa 3d ce 00 47 1e 5e     .....a.a..=..G.^
    115b:	c3 3f 10 e1 41 d4 d0 90 58 90 b0 8e 6a 84 6a e4     .?..A...X...j.j.
    116b:	64 e4 84 c4 84 a6 a4 0e e4 ea 71 48 28 5e c3 3f     d.........qH(^.?
    117b:	84 98 90 98 90 98 90 98 90 98 90 98 90 98 d0 c1     ................
    118b:	d0 c1 90 98 90 98 90 98 90 98 90 98 90 98 90 98     ................
    119b:	3c d6 00 49 12 5e c3 3f c4 41 d8 41 a4 b0 fe 97     <..I.^.?.A.A....
    11ab:	07 61 07 f1 38 4a 11 5e c3 3f d0 dd a9 b0 fe b3     .a..8J.^.?......
    11bb:	20 b9 c3 7a 9c 00 4b 23 5e c3 bf 98 90 94 22 31      ..z..K#^....."1
    11cb:	19 39 91 39 11 41 09 c9 4a 43 11 41 19 39 21 31     .9.9.A..JC.A.9!1
    11db:	21 31 29 65 42 62 f3 58 03 4c 0f 5e c3 3f 84 b0     !1)eBb.X.L.^.?..
    11eb:	fe 1f 1f 0c 1d cc 63 0d 4d 2b 5e c3 bf 9c 8c 9c     ......c.M+^.....
    11fb:	cc d4 cc d4 0c 1b 89 98 08 19 09 6d 44 22 42 64     ...........mD"Bd
    120b:	44 46 64 64 62 d4 c9 c8 c9 c8 c9 c8 c9 c8 c9 c8     DFddb...........
    121b:	c9 63 0d 4e 2b 5e c3 bf 98 d0 94 d0 94 10 91 10     .c.N+^..........
    122b:	91 0a 19 21 09 19 21 11 45 32 21 42 32 12 42 42     ...!..!.E2!B2.BB
    123b:	11 42 42 44 52 43 52 43 62 42 62 f2 98 03 4f 22     .BBDRCRCbBb...O"
    124b:	5e c3 3f 4c e1 99 94 46 72 32 72 32 72 32 72 32     ^.?L...Fr2r2r2r2
    125b:	72 32 72 32 72 32 72 42 52 52 43 62 97 f4 b8 00     r2r2r2rBRRCb....
    126b:	50 1d 5e c3 3f c4 41 d8 81 94 d4 90 98 90 98 90     P.^.?.A.........
    127b:	98 90 d4 d0 81 d4 41 98 b0 be c7 19 00 51 26 5e     ......A......Q&^
    128b:	c3 3f 4c e1 99 94 46 72 32 72 32 72 32 72 32 72     .?L...Fr2r2r2r2r
    129b:	32 72 32 72 32 72 42 52 43 52 62 13 83 b5 c2 d2     2r2r2rBRCRb.....
    12ab:	c4 32 00 52 25 5e c3 3f c4 41 d8 81 94 d4 90 98     .2.R%^.?.A......
    12bb:	90 98 90 98 90 d4 d0 81 d4 41 98 8c 9c 90 98 90     .........A......
    12cb:	98 94 ce 84 c4 e4 b1 06 53 1a 5e c3 3f 4c e1 41     ........S.^.?L.A
    12db:	94 c6 c2 8b 8b a7 15 0b c5 09 49 49 1d c8 d5 e3     ..........II....
    12eb:	02 00 54 0f 5e c3 ff 01 cd 01 9d b0 fe df e3 06     ..T.^...........
    12fb:	00 55 26 5e c3 bf 98 90 98 90 98 90 98 90 98 90     .U&^............
    130b:	98 90 98 90 98 90 98 90 98 90 98 90 98 90 98 94     ................
    131b:	90 d8 41 20 3d 4e 00 56 21 5e c3 bf 9c 8c 9c 90     ..A =N.V!^......
    132b:	98 90 58 94 32 21 31 a1 38 19 41 11 41 91 48 09     ..X.2!1.8.A.A.H.
    133b:	51 d2 d9 61 e1 78 dc 00 57 2f 5e c3 7f a4 88 4c     Q..a.x..W/^....L
    134b:	50 8c 9a 18 35 31 6a 82 42 46 84 42 22 14 49 44     P...51j.BF.B".ID
    135b:	48 44 49 44 48 44 91 44 44 cd 4c cd 8c 09 89 09     HDIDHD.DD.L.....
    136b:	89 45 c5 45 c5 e3 00 58 21 5e c3 3f 84 58 94 32     .E.E...X!^.?.X.2
    137b:	a1 38 19 41 09 49 09 d1 d9 b5 94 12 92 22 72 32     .8.A.I......."r2
    138b:	72 42 52 aa e2 e4 b1 06 59 19 5e c3 bf 9c 90 98     rBR.....Y.^.....
    139b:	90 94 98 90 98 8c a0 88 a0 48 28 e9 b0 7e 8f 13     .........H(..~..
    13ab:	00 5a 1b 5e c3 ff c1 d0 c1 ac b0 ac 70 b0 ac b0     .Z.^........p...
    13bb:	ac 70 b0 ac b0 ec 01 cd 01 3d d6 00 5b 12 5e c3     .p.......=..[.^.
    13cb:	d3 41 d8 41 98 b0 fe 7f 7c 10 76 10 0f 01 5c 18     .A.A....|.v...\.
    13db:	5e c3 8b b0 b4 b0 74 b4 b0 b4 b0 b4 b0 b4 b0 b4     ^.....t.........
    13eb:	b0 b4 b0 74 3c 06 5d 12 5e c3 cb 41 d8 41 b0 fe     ...t<.].^..A.A..
    13fb:	ff ec 20 ec 20 1e 06 00 5e 14 5e c3 3f 54 b4 ec     .. . ...^.^.?T..
    140b:	a8 84 a4 48 a0 8c 5c 54 3c fe cf 00 5f 0d 5e c3     ...H..\T<..._.^.
    141b:	3f fe 7f 7e 40 73 40 8f 00 60 11 5e c3 3f 92 e8     ?..~@s@..`.^.?..
    142b:	68 61 69 61 e9 68 79 fc a7 00 61 1a 5e c3 3f ce     haia.hy...a.^.?.
    143b:	eb 0e 82 87 d5 5d 1d 08 89 09 89 09 49 4d 1d 88     .....]......IM..
    144b:	91 c8 63 0e 62 21 5e c3 8b b0 5e d0 1d 48 0d 49     ..c.b!^...^..H.I
    145b:	89 09 89 09 89 09 89 09 89 09 89 09 0d 49 1d 84     .............I..
    146b:	85 d0 e3 02 00 63 14 5e c3 3f ee 0b 0f a2 14 09     .....c.^.?......
    147b:	eb 78 58 2a ee 20 ae 1e 07 64 21 5e c3 a7 b0 ee     .xX*. ...d!^....
    148b:	28 a4 0e a4 84 86 c4 84 c4 84 c4 84 c4 84 c4 84     (...............
    149b:	c4 a4 84 a6 0e e4 46 e4 31 07 65 1a 5e c3 3f ce     ......F.1.e.^.?.
    14ab:	0b cf a4 84 c4 84 0e 86 0e 86 84 55 4b c5 1d c4     ...........UK...
    14bb:	d5 e3 02 00 66 14 5e c3 1f e1 d9 50 98 b0 d2 83     ....f.^....P....
    14cb:	b0 83 40 61 fd 3d 8e 00 67 1f 5e c3 3f ae 4b 84     ..@a.=..g.^.?.K.
    14db:	0e 66 a4 f4 4c 66 ce 4e 58 d8 f2 20 2a 4e 46 4e     .f..Lf.NX.. *NFN
    14eb:	46 4e e6 60 cc 0a 00 68 12 5e c3 8b b0 9e cc 49     FN.`...h.^.....I
    14fb:	94 0d 49 e9 ff bf c7 1c 00 69 10 5e c3 9b ec 70     ..I......i.^...p
    150b:	3c c2 ca 62 fd e5 dd 3d 0e 6a 12 5e c3 9f f0 70     <..b...=.j.^...p
    151b:	3c 32 43 63 fd ef 82 c4 0e eb 00 6b 1d 5e c3 8b     <2Cc.......k.^..
    152b:	b0 5e 29 12 93 91 13 11 94 90 ac 9c 10 94 91 93     .^).............
    153b:	19 13 9a d2 4c 1e 6b 00 6c 0f 5e c3 4b 65 b1 fe     ....L.k.l.^.Ke..
    154b:	5f 1e 48 1d c8 63 0e 6d 23 5e c3 3f 6e 25 46 66     _.H..c.m#^.?n%Ff
    155b:	0e 4a 64 94 c8 28 91 51 22 a3 44 46 89 8c 12 19     .Jd..(.Q".DF....
    156b:	25 32 4a 64 94 c8 a8 c7 18 00 6e 11 5e c3 3f 8e     %2Jd......n.^.?.
    157b:	45 e6 24 ca 86 a4 f4 ff df 63 0e 6f 1c 5e c3 3f     E.$......c.o.^.?
    158b:	ce 0b cf a4 84 c4 84 e4 64 e4 64 e4 64 e4 64 c4     ........d.d.d.d.
    159b:	a4 94 1d d6 e3 02 00 70 21 5e c3 3f 8e 45 e6 0e     .......p!^.?.E..
    15ab:	a4 86 a4 c4 84 c4 84 c4 84 c4 84 c4 84 c4 84 86     ................
    15bb:	a4 0e a4 24 e8 84 35 05 71 20 5e c3 3f ce 29 a4     ...$..5.q ^.?.).
    15cb:	0e a4 84 86 c4 84 c4 84 c4 84 c4 84 c4 84 c4 a4     ................
    15db:	84 c6 0e e2 46 84 75 03 72 12 5e c3 3f ae 45 c8     ....F.u.r.^.?.E.
    15eb:	24 ac 88 a2 66 85 f5 7b 5c 01 73 17 5e c3 3f ce     $...f..{\.s.^.?.
    15fb:	0b cf a4 14 4f 13 13 0f 4b 85 49 1d c4 d9 e3 02     ....O...K.I.....
    160b:	00 74 13 5e c3 3f 12 61 a5 07 61 07 81 c2 fa 51     .t.^.?.a..a....Q
    161b:	a0 25 3d 0e 75 1f 5e c3 3f 8e c5 84 c4 84 c4 84     .%=.u.^.?.......
    162b:	c4 84 c4 84 c4 84 c4 84 c4 84 c4 84 56 1d 88 91     ............V...
    163b:	c8 63 0d 76 1d 5e c3 3f 6e e5 84 c4 a2 c4 52 89     .c.v.^.?n.....R.
    164b:	09 c5 c9 08 8a 08 8a 44 4a 88 ce 0e c7 e3 06 00     .......DJ.......
    165b:	77 29 5e c3 3f 6e 05 45 64 64 62 d4 04 c5 c8 04     w)^.?n.Eddb.....
    166b:	c5 c8 04 49 90 04 49 44 28 92 08 89 10 92 08 19     ...I..ID(.......
    167b:	93 19 13 12 13 92 c7 1c 00 78 1c 5e c3 3f 8e a5     .........x.^.?..
    168b:	c4 64 e4 64 04 25 44 67 97 4a 48 4a 08 ca 88 49     .d.d.%Dg.JHJ...I
    169b:	a9 9a c7 1a 00 79 1e 5e c3 3f 8e c5 84 c4 84 a4     .....y.^.?......
    16ab:	c4 84 c4 84 02 45 04 45 04 45 42 d9 0a 0b 07 0b     .....E.E.EB.....
    16bb:	56 52 02 7a 15 5e c3 3f 8e 0f a4 0e 64 b5 9d d5     VR.z.^.?....d...
    16cb:	76 f4 60 e8 60 1e 73 00 7b 13 5e c3 3f 18 65 a1     v.`.`.s.{.^.?.e.
    16db:	b0 8e 43 49 a7 15 eb eb 52 1a 00 7c 0a 5e c3 9b     ..CI....R..|.^..
    16eb:	b0 fe ff cf 00 7d 14 5e c3 3f 44 a5 b5 b0 5e d3     .....}.^.?D...^.
    16fb:	8e ca 0a eb ed 9c 61 1d 00 7e 10 5e c3 3f ce 63     ......a..~.^.?.c
    170b:	8b 62 64 8c 82 e8 f1 3f 03 00 00 00 04 ff ff 00     .bd....?........
	...

0000171c <u8g2_font_6x12_mr>:
    171c:	5f 02 03 02 03 04 01 02 04 06 0c 00 fe 07 fe 08     _...............
    172c:	ff 01 7b 03 16 04 8b 20 07 e6 f8 f9 4f 00 21 0a     ..{.... ....O.!.
    173c:	e6 f8 c9 69 77 30 a7 00 22 0c e6 f8 e1 24 4b b2     ...iw0.."....$K.
    174c:	24 e7 13 00 23 0f e6 f8 19 93 68 90 92 2c 89 06     $...#.....h..,..
    175c:	29 c9 09 24 0e e6 f8 f1 70 4a 3a 8e 49 a7 31 87     )..$....pJ:.I.1.
    176c:	00 25 0d e6 f8 89 52 22 85 9d 94 48 87 01 26 0e     .%....R"...H..&.
    177c:	e6 f8 a9 61 92 25 61 a5 29 53 72 18 27 09 e6 f8     ...a.%a.)Sr.'...
    178c:	f1 b4 ce 37 00 28 0d e6 f8 29 61 1a a6 e5 34 ce     ...7.(...)a...4.
    179c:	11 00 29 0c e6 f8 e1 6a 9c 16 d3 30 c7 00 2a 0e     ..)....j...0..*.
    17ac:	e6 f8 c9 59 52 1a c3 29 a9 e5 14 00 2b 0a e6 f8     ...YR..)....+...
    17bc:	59 6b 83 96 e6 0c 2c 09 e6 f8 f9 2e 6a 3a 06 2d     Yk....,.....j:.-
    17cc:	09 e6 f8 79 19 74 6e 00 2e 09 e6 f8 f9 2e ea 14     ...y.tn.........
    17dc:	00 2f 0b e6 f8 59 c2 34 ac 86 39 0d 30 0a e6 f8     ./...Y.4..9.0...
    17ec:	c9 5a d4 bf e9 04 31 09 e6 f8 c9 a1 da 71 27 32     .Z....1......q'2
    17fc:	0c e6 f8 a9 53 96 86 8d 83 0e 03 33 0d e6 f8 89     ....S......3....
    180c:	83 1a 86 72 92 45 3b 01 34 0d e6 f8 e9 a1 96 44     ...r.E;.4......D
    181c:	a5 41 4c 73 02 35 0d e6 f8 89 83 92 0e 71 9a 64     .ALs.5.......q.d
    182c:	d1 4e 36 0d e6 f8 c9 5a 98 0e 51 96 64 d1 4e 37     .N6....Z..Q.d.N7
    183c:	0c e6 f8 89 83 1a a6 61 5a a7 00 38 0e e6 f8 a9     .......aZ..8....
    184c:	53 96 64 d1 94 25 59 b4 13 39 0e e6 f8 a9 53 96     S.d..%Y..9....S.
    185c:	64 d1 90 86 99 4e 01 3a 0b e6 f8 b9 89 3a 26 ea     d....N.:.....:&.
    186c:	14 00 3b 0b e6 f8 b9 89 3a 26 6a 3a 06 3c 09 e6     ..;.....:&j:.<..
    187c:	f8 99 c3 72 9d 0c 3d 0a e6 f8 39 0d fa a0 33 02     ...r..=...9...3.
    188c:	3e 09 e6 f8 19 e3 62 9d 05 3f 0c e6 f8 a9 53 16     >.....b..?....S.
    189c:	56 73 30 a7 00 40 0d e6 f8 a9 53 96 24 4b 97 25     Vs0..@....S.$K.%
    18ac:	de 09 41 10 e6 f8 a9 53 96 64 c9 a0 64 49 96 64     ..A....S.d..dI.d
    18bc:	39 0c 42 0d e6 f8 89 43 16 35 6d 51 cb 90 13 43     9.B....C.5mQ...C
    18cc:	0b e6 f8 a9 53 96 a4 6d d1 4e 44 0b e6 f8 89 43     ....S..m.ND....C
    18dc:	16 f5 2f 43 4e 45 0e e6 f8 89 83 92 a6 43 94 a6     ../CNE.......C..
    18ec:	83 0e 03 46 0d e6 f8 89 83 92 a6 43 94 d6 69 00     ...F.......C..i.
    18fc:	47 0d e6 f8 a9 53 96 a4 25 25 8b 76 02 48 11 e6     G....S..%%.v.H..
    190c:	f8 89 59 92 25 59 32 28 59 92 25 59 0e 03 49 09     ..Y.%Y2(Y.%Y..I.
    191c:	e6 f8 a9 63 da 71 27 4a 0b e6 f8 c9 63 da 54 d3     ...c.q'J....c.T.
    192c:	29 00 4b 0f e6 f8 89 59 12 55 32 31 c9 a2 5a 0e     ).K....Y.U21..Z.
    193c:	03 4c 0a e6 f8 89 69 af 83 0e 03 4d 0f e6 f8 89     .L....i....M....
    194c:	59 62 e9 96 64 49 96 64 39 0c 4e 10 e6 f8 89 59     Yb..dI.d9.N....Y
    195c:	92 25 52 d2 49 c9 92 2c 87 01 4f 0f e6 f8 a9 53     .%R.I..,..O....S
    196c:	96 64 49 96 64 49 16 ed 04 50 0e e6 f8 89 43 94     .dI.dI...P....C.
    197c:	25 59 32 44 69 9d 06 51 0f e6 f8 a9 53 96 64 49     %Y2Di..Q....S.dI
    198c:	96 74 ca 94 1c 06 52 10 e6 f8 89 43 94 25 59 32     .t....R....C.%Y2
    199c:	44 49 16 d5 72 18 53 0d e6 f8 a9 53 96 c4 73 92     DI..r.S....S..s.
    19ac:	45 3b 01 54 0a e6 f8 89 83 96 f6 4e 01 55 10 e6     E;.T.......N.U..
    19bc:	f8 89 59 92 25 59 92 25 59 92 45 3b 01 56 10 e6     ..Y.%Y.%Y.E;.V..
    19cc:	f8 89 59 92 25 59 92 45 49 96 84 39 05 57 0f e6     ..Y.%Y.EI..9.W..
    19dc:	f8 89 59 92 25 59 92 25 7d 4a 72 02 58 10 e6 f8     ..Y.%Y.%}Jr.X...
    19ec:	89 59 92 45 49 58 89 b2 24 cb 61 00 59 0d e6 f8     .Y.EIX..$.a.Y...
    19fc:	89 59 92 45 49 98 b6 53 00 5a 0b e6 f8 89 83 1a     .Y.EI..S.Z......
    1a0c:	76 1d 74 18 5b 0a e6 f8 e1 2d ed eb 8e 00 5c 0b     v.t.[....-....\.
    1a1c:	e6 f8 89 71 1a 57 e3 1c 06 5d 09 e6 f8 e1 b5 df     ...q.W...]......
    1a2c:	76 04 5e 0b e6 f8 f1 30 89 b2 9c 2f 00 5f 08 e6     v.^....0.../._..
    1a3c:	f8 f9 b7 41 01 60 08 e6 f8 e1 76 3e 01 61 0d e6     ...A.`....v>.a..
    1a4c:	f8 b9 cd d1 90 64 d1 90 c3 00 62 0f e6 f8 89 69     .....d....b....i
    1a5c:	3a 44 59 92 25 59 32 e4 04 63 0b e6 f8 b9 4d 59     :DY.%Y2..c....MY
    1a6c:	92 66 d1 4e 64 10 e6 f8 59 d2 68 48 b2 24 4b b2     .f.Nd...Y.hH.$K.
    1a7c:	68 c8 61 00 65 0b e6 f8 b9 4d 59 32 44 f1 4e 66     h.a.e....MY2D.Nf
    1a8c:	0b e6 f8 c9 5a 54 1c d3 3a 09 67 0e e6 f8 b9 4d     ....ZT..:.g....M
    1a9c:	59 92 25 59 34 a4 d1 04 68 10 e6 f8 89 69 3a 44     Y.%Y4...h....i:D
    1aac:	59 92 25 59 92 e5 30 00 69 0a e6 f8 c9 39 a6 36     Y.%Y..0.i....9.6
    1abc:	ee 04 6a 0b e6 f8 59 72 4c ed 54 93 00 6b 0e e6     ..j...YrL.T..k..
    1acc:	f8 89 69 2d 89 a2 2d aa e5 30 00 6c 09 e6 f8 a9     ..i-..-..0.l....
    1adc:	6a 8f 3b 01 6d 0b e6 f8 39 29 51 d2 ff 0e 03 6e     j.;.m...9)Q....n
    1aec:	0e e6 f8 39 25 92 94 64 49 96 64 39 0c 6f 0c e6     ...9%..dI.d9.o..
    1afc:	f8 b9 4d 59 92 25 59 b4 13 70 0f e6 f8 39 0d 51     ..MY.%Y..p...9.Q
    1b0c:	96 64 49 96 0c 51 9a 02 71 0e e6 f8 b9 0d 49 96     .dI..Q..q.....I.
    1b1c:	64 49 16 0d 69 05 72 0c e6 f8 39 25 92 94 a4 75     dI..i.r...9%...u
    1b2c:	1a 00 73 0b e6 f8 b9 0d 49 3c 27 43 4e 74 0c e6     ..s.....I<'CNt..
    1b3c:	f8 c9 69 36 68 69 59 87 01 75 0e e6 f8 39 65 49     ..i6hiY..u...9eI
    1b4c:	96 64 49 64 c9 61 00 76 0e e6 f8 39 65 49 96 64     .dId.a.v...9eI.d
    1b5c:	51 12 e6 14 00 77 0c e6 f8 39 65 49 96 f4 29 c9     Q....w...9eI..).
    1b6c:	09 78 0d e6 f8 39 65 51 12 56 a2 2c 87 01 79 0d     .x...9eQ.V.,..y.
    1b7c:	e6 f8 39 65 49 96 64 51 12 b6 02 7a 0b e6 f8 39     ..9eI.dQ...z...9
    1b8c:	0d 62 e3 a0 c3 00 7b 0c e6 f8 29 61 5a 8c d3 72     .b....{...)aZ..r
    1b9c:	8e 00 7c 09 e6 f8 f1 b4 bf 43 00 7d 0b e6 f8 e1     ..|......C.}....
    1bac:	6a 39 4c 8b 39 06 7e 0a e6 f8 b9 45 49 a7 9c 15     j9L.9.~....EI...
    1bbc:	00 00 00 04 ff ff 00 00                             ........

00001bc4 <u8g2_font_inr30_mr>:
    1bc4:	5f 02 05 03 05 06 01 04 06 19 28 00 f8 1e f8 1f     _.........(.....
    1bd4:	f8 05 c1 0c bc 12 ca 20 0b 19 0d f9 c7 ff ff ff     ....... ........
    1be4:	1f 02 21 18 19 0d f9 07 32 b5 68 af b2 3a 76 ff     ..!.....2.h..:v.
    1bf4:	ef 63 84 a8 4d 8f d2 c7 97 01 22 24 19 0d f9 07     .c..M....."$....
    1c04:	21 46 dc 94 71 53 c6 4d 19 37 65 dc 94 71 53 c6     !F..qS.M.7e..qS.
    1c14:	4d 19 37 65 dc 94 71 53 e6 e3 ff ff cb 00 23 4d     M.7e..qS......#M
    1c24:	19 0d f9 47 75 ca b8 29 e3 a6 8c 13 23 4f ca b8     ...Gu..)....#O..
    1c34:	29 e3 a6 4c 3a 70 c0 ca 81 03 a6 a6 8c 9b 32 4e     )..L:p........2N
    1c44:	8c 3c 29 e3 a6 8c 9b 32 6e ca b8 29 93 0e 1c b0     .<)....2n..)....
    1c54:	72 e0 80 29 31 f2 c4 c8 93 32 6e ca b8 29 e3 a6     r..)1....2n..)..
    1c64:	8c 9b 32 6e ca b8 29 f2 f1 93 00 24 51 19 0d f9     ..2n..)....$Q...
    1c74:	87 32 76 55 83 07 a8 1d 38 45 62 44 a5 19 43 24     .2vU....8EbD..C$
    1c84:	d1 98 12 69 c8 3c 1a f3 68 0c 24 31 b0 c2 c4 03     ...i.<..h.$1....
    1c94:	21 0f 88 3c 20 f2 80 c0 09 f6 66 d0 1b 42 6e 08     !..< .....f..Bn.
    1ca4:	b9 29 e3 86 10 8a 32 84 ce 90 19 74 6a 8c 28 74     .)....2....tj.(t
    1cb4:	e0 80 ac 03 f5 0e 04 1d bb 3e 9e 01 25 51 19 0d     .........>..%Q..
    1cc4:	f9 47 92 d4 9c 3b 73 0e 48 99 33 83 ca 9c 21 0b     .G...;s.H.3...!.
    1cd4:	0d 59 68 c8 8c 49 24 68 8c 3a 20 62 d8 8d 69 44     .Yh..I$h.: b..iD
    1ce4:	a6 8e 9d 3a 76 ea d8 a9 43 c8 cd 30 36 e3 40 2c     ...:v...C..06.@,
    1cf4:	19 24 28 cd 18 32 68 c8 42 43 d6 99 32 64 ce 94     .$(..2h.BC..2d..
    1d04:	21 63 e6 50 98 33 c8 ce 28 fa f8 26 00 26 4d 19     !c.P.3..(..&.&M.
    1d14:	0d f9 47 d5 e4 81 80 07 c6 11 a1 36 66 da 98 69     ..G........6f..i
    1d24:	63 a6 8d 99 46 65 dc 10 72 24 08 4e 20 69 b2 e6     c...Fe..r$.N i..
    1d34:	45 0a f4 68 8c 89 43 84 ca 32 34 a6 d0 21 31 85     E..h..C..24..!1.
    1d44:	d0 99 49 76 28 d5 a1 54 87 d0 9d 22 15 06 1d 28     ..Iv(..T..."...(
    1d54:	41 e8 c0 90 51 85 e2 e3 93 00 27 0f 19 0d f9 07     A...Q.....'.....
    1d64:	23 76 ff 7d fc ff 7f 1d 00 28 2a 19 0d f9 87 25     #v.}.....(*....%
    1d74:	96 a6 c9 9a 8d b2 3a 95 ea 54 aa 63 a7 72 75 ec     ......:..T.c.ru.
    1d84:	b2 54 39 3b 96 2a d9 b1 54 c9 b2 5a 95 6c d5 56     .T9;.*..T..Z.l.V
    1d94:	e9 86 01 29 24 19 0d b9 8f 4b b5 aa d5 aa 64 b9     ...)$....K....d.
    1da4:	4a 96 2a d9 b1 54 c9 ee 5f 65 75 2a d5 a9 44 a9     J.*..T.._eu*..D.
    1db4:	12 e5 66 a3 54 65 02 2a 2f 19 0d f9 c7 87 a9 32     ..f.Te.*/......2
    1dc4:	3b 56 9e 18 75 88 08 21 73 42 c4 a1 03 e7 0e c4     ;V..u..!sB......
    1dd4:	24 6a 72 c4 c4 11 03 87 8c 1b 33 8c 0c 29 42 c3     $jr.......3..)B.
    1de4:	22 c9 c7 7f 16 00 2b 1a 19 0d f9 c7 f3 63 f7 73     ".....+......c.s
    1df4:	07 0e 94 39 70 a0 cc 81 03 e5 c6 ee ef e3 bf 0d     ...9p...........
    1e04:	2c 17 19 0d f9 c7 ff ff 37 a6 d6 34 da ec b2 62     ,.......7..4...b
    1e14:	a7 8e 9d 3a 37 1e 00 2d 16 19 0d f9 c7 ff 0b 07     ...:7..-........
    1e24:	0e 0c 3a 70 60 d0 81 03 f3 f1 ff 4f 00 2e 10 19     ..:p`......O....
    1e34:	0d f9 c7 ff ff 37 88 da 74 94 3e be 0c 2f 2e 19     .....7..t.>../..
    1e44:	0d f9 07 16 77 ec 54 aa 53 a9 4e a5 3a 95 ea d8     ....w.T.S.N.:...
    1e54:	a9 63 a7 52 9d 4a 75 2a d5 a9 54 c7 4e 1d 3b 95     .c.R.Ju*..T.N.;.
    1e64:	ea 54 aa 53 a9 4e a5 1b 1f cf 01 30 4e 19 0d f9     .T.S.N.....0N...
    1e74:	47 b7 e4 01 79 07 a8 15 21 36 67 16 a1 49 94 26     G...y...!6g..I.&
    1e84:	11 2a 34 a9 d0 20 3b 74 26 90 21 33 82 cc 1c 19     .*4.. ;t&.!3....
    1e94:	64 16 19 33 65 99 21 63 c6 90 98 33 86 c4 18 16     d..3e.!c...3....
    1ea4:	e6 d0 31 44 a7 d2 a0 4a 83 28 31 34 8b 0c ad 22     ..1D...J.(14..."
    1eb4:	d4 0e d0 3b 20 b2 3e 3e 0c 31 17 19 0d f9 47 78     ...; .>>.1....Gx
    1ec4:	68 c9 83 07 04 92 18 18 65 ec fe ff 7f 1f 5f 06     h.......e....._.
    1ed4:	32 2f 19 0d f9 47 d6 e2 81 71 07 6c 91 a9 44 88     2/...G...q.l..D.
    1ee4:	94 28 aa cc 4e 65 75 2a 51 46 6b 12 e5 ab 53 89     .(..Neu*QFk...S.
    1ef4:	52 9d 7a e0 c0 a0 03 07 06 1d 38 30 1f 9f 04 33     R.z.......80...3
    1f04:	32 19 0d f9 47 d5 e2 81 71 07 8c 8d a1 16 88 ec     2...G...q.......
    1f14:	ae 12 a5 59 f0 40 c4 03 11 0f 48 2d 4b 76 2c 55     ...Y.@....H-Kv,U
    1f24:	b2 53 99 0a b5 10 29 2a b5 0e 5c 3b 30 d1 3e be     .S....)*..\;0.>.
    1f34:	0c 34 38 19 0d f9 47 7c 2a a3 35 6d 4a 18 39 61     .48...G|*.5mJ.9a
    1f44:	e2 88 89 32 06 ce 98 37 64 9e 94 71 53 a6 8d 99     ...2...7d..qS...
    1f54:	26 67 d8 9c 59 83 66 0d 1a 75 e0 40 99 03 07 ca     &g..Y.f..u.@....
    1f64:	1c 38 50 72 ec 7e 1f 5f 05 35 33 19 0d f9 47 f2     .8Pr.~._.53...G.
    1f74:	c0 81 50 07 0e 84 3a 70 20 d4 d8 7d a2 de 01 63     ..P...:p ..}...c
    1f84:	07 6e 15 31 35 88 56 28 aa 64 f7 a9 50 94 44 11     .n.15.V(.d..P.D.
    1f94:	62 a9 4c a9 03 d7 0e 4c b4 8f 0f 03 36 43 19 0d     b.L....L....6C..
    1fa4:	f9 47 d8 e2 81 71 07 6c 55 99 45 28 d8 54 aa 63     .G...q.lU.E(.T.c
    1fb4:	a7 b2 51 6d c4 01 59 13 0e 90 3a 52 a9 0e 25 86     ..Qm..Y...:R..%.
    1fc4:	48 0d 9a 35 68 d6 20 52 83 48 4d 1a 35 69 d4 24     H..5h. R.HM.5i.$
    1fd4:	42 a4 c8 d0 2a 52 ec 40 b9 03 13 ed e3 bb 00 37     B...*R.@.......7
    1fe4:	2d 19 0d f9 47 f1 c0 01 49 07 0e 48 3a 70 40 ea     -...G...I..H:p@.
    1ff4:	54 aa 63 a7 52 9d 4a 75 ec 54 aa 63 a7 52 9d ca     T.c.R.Ju.T.c.R..
    2004:	ea 54 56 a7 b2 3a 95 d5 f9 f8 3a 00 38 46 19 0d     .TV..:....:.8F..
    2014:	f9 47 d6 e2 81 71 07 8a 15 a9 35 88 12 21 4a 93     .G...q....5..!J.
    2024:	28 8d 9a 44 88 12 a1 59 64 88 d5 20 77 60 e0 45     (..D...Yd.. w`.E
    2034:	0a e5 a6 10 9b 43 6a 12 a5 51 83 48 d1 19 36 67     .....Cj..Q.H..6g
    2044:	d8 1c 52 74 48 11 62 a9 4c a9 03 d7 0e 4c b4 8f     ..RtH.b.L....L..
    2054:	0f 03 39 41 19 0d f9 47 d6 e4 01 71 07 aa 11 a9     ..9A...G...q....
    2064:	45 67 d6 20 4a 94 26 51 5a 8a d0 28 42 a4 06 51     Eg. J.&QZ..(B..Q
    2074:	a2 34 89 9d 52 44 4e 1d a0 30 eb 80 88 71 34 a8     .4..RDN..0...q4.
    2084:	b2 3a 76 2a d5 61 81 68 51 21 76 a0 dc 81 89 f6     .:v*.a.hQ!v.....
    2094:	f1 65 00 3a 15 19 0d f9 c7 bf 4f d4 a6 a3 f4 f1     .e.:......O.....
    20a4:	77 89 da 74 94 3e be 0c 3b 1c 19 0d f9 c7 bf 4f     w..t.>..;......O
    20b4:	d4 a6 a3 f4 f1 77 89 da 74 95 d5 b1 53 c7 8a 1d     .....w..t...S...
    20c4:	2b 1f 10 00 3c 1e 19 0d f9 c7 d9 b0 43 6b 5a f4     +...<.......CkZ.
    20d4:	27 6b 52 25 5b d5 d5 aa ae 56 75 95 ec e0 f8 f8     'kR%[....Vu.....
    20e4:	2b 00 3d 21 19 0d f9 c7 5f 3f 70 a0 cc 81 03 65     +.=!...._?p....e
    20f4:	0e 1c a8 8f a7 0f 1c 28 73 e0 40 99 03 07 ea e3     .......(s.@.....
    2104:	ff 05 00 3e 1d 19 0d f9 c7 71 b9 54 fd d1 a3 56     ...>.....q.T...V
    2114:	8b d6 2c 69 d1 c9 92 16 9d b4 49 55 3e fe 45 00     ..,i......IU>.E.
    2124:	3f 27 19 0d f9 87 61 f1 c0 b8 03 c5 8a 94 22 44     ?'....a......."D
    2134:	69 12 a9 58 63 b7 ca 28 af 4e 65 75 ec fa 58 9f     i..Xc..(.Neu..X.
    2144:	5a b4 d5 f9 f8 32 00 40 51 19 0d f9 47 d7 e2 81     Z....2.@Q...G...
    2154:	71 07 6c 91 a9 44 69 10 ad 39 c3 c6 0c 3a 10 66     q.l..Di..9...:.f
    2164:	cc 81 31 62 0e 50 99 52 64 ca 10 32 53 86 cc 99     ..1b.P.Rd..2S...
    2174:	32 64 ce 94 21 73 a6 0c 99 33 65 08 15 2a 43 6a     2d..!s...3e..*Cj
    2184:	54 99 72 a0 cc 94 0b 63 e6 0c 23 3b 96 d9 3a c2     T.r....c..#;..:.
    2194:	0e 58 3b 50 d0 3e 3e 0b 41 44 19 0d f9 07 1f 38     .X;P.>>.AD.....8
    21a4:	dd b1 63 89 b6 39 61 e4 84 91 13 26 ce 18 38 63     ..c..9a....&..8c
    21b4:	e0 0c 72 53 c6 4d 19 37 66 d8 9c 61 73 68 1d 38     ..rS.M.7f..ash.8
    21c4:	75 e0 40 a8 03 07 24 4d 22 44 6a d0 2c 3a c3 c6     u.@...$M"Dj.,:..
    21d4:	4c a3 32 8d ca b8 21 f3 e8 e3 83 00 42 51 19 0d     L.2...!.....BQ..
    21e4:	f9 47 f0 80 b1 03 07 42 1d 38 20 69 52 a1 51 84     .G.....B.8 iR.Q.
    21f4:	66 d1 99 45 67 d8 9c 59 74 66 d1 19 45 68 12 a5     f..Eg..Ytf..Eh..
    2204:	03 07 42 1d b8 75 e0 80 a4 49 85 66 d1 19 36 67     ..B..u...I.f..6g
    2214:	18 99 61 64 a6 8d 19 46 66 18 99 61 64 66 d1 19     ..ad...Ff..adf..
    2224:	55 e7 c0 81 41 07 0e 84 3a 60 1f df 05 43 2e 19     U...A...:`...C..
    2234:	0d f9 47 d7 e2 81 69 07 4e 59 a9 44 88 29 32 c4     ..G...i.NY.D.)2.
    2244:	e4 50 9d ca ab 63 97 a5 ca d9 b1 54 c9 d2 92 c4     .P...c.....T....
    2254:	90 95 52 07 ae 1d 98 68 1f df 05 44 4d 19 0d f9     ..R....h...DM...
    2264:	47 f0 00 b9 03 b7 0e 1c 08 35 a8 d2 24 4a a3 08     G........5..$J..
    2274:	cd a2 33 8b ce b0 39 c3 e6 0c 23 33 8c cc 30 32     ..3...9...#3..02
    2284:	d3 c6 4c 1b 33 6d cc 30 32 c3 c8 0c 23 33 6c ce     ..L.3m.02...#3l.
    2294:	b0 39 b3 e8 cc 1a 34 8a d0 24 4a 73 2c 1d 38 10     .9....4..$Js,.8.
    22a4:	ea 80 b1 03 f4 f1 65 00 45 2e 19 0d f9 47 f0 c0     ......e.E....G..
    22b4:	01 3a 07 0e d0 39 70 80 ce d8 fd d9 03 07 42 1d     .:...9p.......B.
    22c4:	38 10 ea c0 81 50 63 f7 9f 3d 70 80 ce 81 03 74     8....Pc..=p....t
    22d4:	0e 1c a0 8f 4f 02 46 21 19 0d f9 47 f1 c0 81 41     ....O.F!...G...A
    22e4:	07 0e 0c 3a 70 60 d0 d8 fd d9 03 b7 0e dc 3a 70     ...:p`........:p
    22f4:	6b ec fe df c7 2f 00 47 42 19 0d f9 47 f7 e0 01     k..../.GB...G...
    2304:	62 07 4e 95 a9 c4 0e a9 39 c4 02 51 1d 3b 95 d5     b.N.....9..Q.;..
    2314:	b1 0b 1d 90 32 e8 80 14 3a 07 a4 50 9b 42 6d 0a     ....2...:..P.Bm.
    2324:	b5 31 d3 c6 10 1b 43 6c 0e ad 41 94 08 59 b1 74     .1....Cl..A..Y.t
    2334:	e0 40 b0 03 04 ef e3 b3 00 48 4e 19 0d f9 47 90     .@.......HN...G.
    2344:	d6 9c 61 73 86 cd 19 36 67 d8 9c 61 73 86 cd 19     ..as...6g..as...
    2354:	36 67 d8 9c 61 73 86 cd 19 36 e7 c0 01 3a 07 0e     6g..as...6...:..
    2364:	d0 39 70 80 ce b0 39 c3 e6 0c 9b 33 6c ce b0 39     .9p...9....3l..9
    2374:	c3 e6 0c 9b 33 6c ce b0 39 c3 e6 0c 9b 33 6c ce     ....3l..9....3l.
    2384:	b0 39 c3 e6 e3 93 00 49 1f 19 0d f9 47 f2 c0 ad     .9.....I....G...
    2394:	03 b7 0e 1c 1c bb ff ff 0f 1e 38 10 ea c0 81 50     ..........8....P
    23a4:	07 0e c4 c7 47 01 4a 22 19 0d f9 47 f5 80 b1 03     ....G.J"...G....
    23b4:	c6 0e 98 1c bb ff 7f 95 b1 40 b4 e4 10 23 52 ec     .........@...#R.
    23c4:	40 b9 03 13 ed e3 db 00 4b 4b 19 0d f9 47 8f 16     @.......KK...G..
    23d4:	99 59 74 46 11 9a 44 69 10 a9 39 b4 e6 0c 1b 43     .YtF..Di..9....C
    23e4:	6c 0a b5 21 e4 66 d0 1b 41 70 02 c5 03 02 0f cc     l..!.f..Ap......
    23f4:	ab 40 8f 06 b9 29 d4 a6 50 1b 43 6c 0e ad 41 a4     .@...)..P.Cl..A.
    2404:	06 91 9a 44 69 14 a1 51 84 66 d1 19 46 66 58 7d     ...Di..Q.f..FfX}
    2414:	7c 11 00 4c 1a 19 0d f9 47 90 ea d8 fd ff ff d9     |..L....G.......
    2424:	03 07 e8 1c 38 40 e7 c0 01 fa f8 24 00 4d 5c 19     ....8@.....$.M\.
    2434:	0d f9 47 6f da 18 62 63 68 91 29 45 a6 14 19 43     ..Go..bch.)E...C
    2444:	65 0c 95 99 30 c6 cc 84 31 12 c6 4c 98 32 61 cc     e...0...1..L.2a.
    2454:	88 21 22 c6 8c 98 31 62 cc 8c 11 32 c6 cc 98 30     .!"...1b...2...0
    2464:	63 cc 90 22 63 86 14 19 33 65 99 29 cb 8c 09 b3     c.."c...3e.)....
    2474:	da 98 69 63 a6 8d 99 36 66 da 98 69 63 a6 8d 99     ..ic...6f..ic...
    2484:	36 66 da 98 69 f3 f1 49 00 4e 59 19 0d f9 47 90     6f..i..I.NY...G.
    2494:	16 19 5a 73 4a cd 29 35 c7 d2 1c 4b 73 26 0c 9a     ..ZsJ.)5...Ks&..
    24a4:	33 61 d0 9c 11 73 96 20 33 67 c6 98 39 33 a8 cc     3a...s. 3g..93..
    24b4:	19 32 65 ce 10 22 73 a6 0c 99 33 85 c6 9c 31 33     .2e.."s...3...13
    24c4:	e6 8c 21 31 67 89 39 83 26 cc 19 34 61 ce 24 3b     ..!1g.9.&..4a.$;
    24d4:	93 ec 8c aa 33 aa ce 2c 3a b3 e8 0c 9b 33 6c 3e     ....3..,:....3l>
    24e4:	3e 09 4f 46 19 0d f9 47 d6 e2 81 71 07 6c 55 a9     >.OF...G...q.lU.
    24f4:	44 88 12 3b b4 e6 0c 23 33 8c 0a b5 29 d4 a6 50     D..;...#3...)..P
    2504:	9b 32 6e ca b8 29 e3 a6 8c 9b 42 6d 0a b5 29 d4     .2n..)....Bm..).
    2514:	a6 50 1b 33 8c 0c 2d 32 b4 06 51 62 87 54 95 5a     .P.3..-2..Qb.T.Z
    2524:	07 cc 1d 10 59 1f 1f 06 50 36 19 0d f9 47 f0 80     ....Y...P6...G..
    2534:	b1 03 07 42 1d 38 20 69 52 a1 59 74 66 d1 19 36     ...B.8 iR.Ytf..6
    2544:	67 d8 9c 61 73 86 cd 99 45 67 16 9d 49 85 0e 1c     g..as...Eg..I...
    2554:	90 74 e0 40 a8 03 c6 c6 ee ff 3e 7e 02 00 51 50     .t.@......>~..QP
    2564:	19 0d f9 47 b7 e2 81 71 07 6c 55 a9 54 87 12 3b     ...G...q.lU.T..;
    2574:	b4 e6 d0 22 33 8c cc b4 29 d4 a6 50 9b 32 6e ca     ..."3...)..P.2n.
    2584:	b8 29 e3 a6 8c 9b 42 6d 0a b5 29 d4 a6 50 1b 33     .)....Bm..)..P.3
    2594:	8c cc 30 32 b4 e8 8c 22 44 89 1d 52 36 6c 1d 30     ..02..."D..R6l.0
    25a4:	77 40 64 d5 b1 63 c9 1e 90 78 20 e4 75 00 52 4f     w@d..c...x .u.RO
    25b4:	19 0d f9 47 f0 80 b1 03 07 42 1d 38 20 69 52 a1     ...G.....B.8 iR.
    25c4:	51 84 66 d1 99 45 67 d8 9c 61 73 66 d1 99 45 67     Q.f..Eg..asf..Eg
    25d4:	14 a1 49 85 0e 1c 90 74 e0 40 a8 03 c6 c6 4c 9b     ..I....t.@....L.
    25e4:	33 6c ce b0 39 b4 06 cd 1a 44 6a d2 a8 49 94 46     3l..9....Dj..I.F
    25f4:	11 1a 45 68 16 9d 59 74 86 d1 c7 17 01 53 38 19     ..Eh..Yt.....S8.
    2604:	0d f9 47 d7 e0 01 6a 07 4e 95 a9 b4 12 29 49 63     ..G...j.N....)Ic
    2614:	c7 52 25 4b b6 aa d1 03 31 0f 04 b5 5a 96 55 b2     .R%K....1...Z.U.
    2624:	eb 44 a3 23 8c ce 28 3a 66 2a 1d 38 20 eb 40 bd     .D.#..(:f*.8 .@.
    2634:	03 f1 f1 5d 00 54 19 19 0d f9 47 ef c0 01 2b 07     ...].T....G...+.
    2644:	0e 58 39 70 c0 da d8 fd ff ff fb f8 34 00 55 49     .X9p........4.UI
    2654:	19 0d f9 47 90 d8 98 69 63 a6 8d 99 36 66 da 98     ...G...ic...6f..
    2664:	69 63 a6 8d 99 36 66 da 98 69 63 a6 8d 99 36 66     ic...6f..ic...6f
    2674:	da 98 69 63 a6 8d 99 36 66 da 98 69 63 a6 8d 99     ..ic...6f..ic...
    2684:	36 66 18 19 5a 64 68 d1 a1 44 88 12 a5 2a b5 0e     6f..Zdh..D...*..
    2694:	58 3b 40 f0 3e be 0b 56 43 19 0d f9 47 6f dc 94     X;@.>..VC...Go..
    26a4:	71 53 a8 8d 19 36 67 d8 1c 5a 83 46 4d 1a 35 89     qS...6g..Z.FM.5.
    26b4:	d2 a8 41 b3 06 cd a2 33 6c cc b4 31 d3 a8 8c 1b     ..A....3l..1....
    26c4:	32 6f c8 3c 1a 03 47 4c 1c 31 72 c2 c8 09 32 8d     2o.<..GL.1r...2.
    26d4:	16 a5 4a 76 ac 5c f9 f8 34 00 57 64 19 0d f9 47     ..Jv.\..4.Wd...G
    26e4:	6e e0 8c 81 43 e6 c4 19 32 27 8e 94 31 63 a4 8c     n...C...2'..1c..
    26f4:	19 23 65 cc 94 65 a6 8c 19 52 64 cc 90 22 63 86     .#e..e...Rd.."c.
    2704:	14 91 33 63 c2 0c 39 33 26 cc 90 33 43 c4 42 23     ..3c..93&..3C.B#
    2714:	44 2c 34 61 c6 84 41 13 84 4c 90 34 41 c8 04 49     D,4a..A..L.4A..I
    2724:	13 84 4c 90 64 a5 52 99 52 64 4a 91 a1 45 67 d6     ..L.d.R.RdJ..Eg.
    2734:	a0 59 83 66 0d 1a 26 49 58 28 f9 f8 28 00 58 44     .Y.f..&IX(..(.XD
    2744:	19 0d f9 47 70 d8 1c 52 93 46 4d 22 34 6b d0 2c     ...Gp..R.FM"4k.,
    2754:	32 d3 88 90 1b 32 8f 04 c1 11 13 0f 84 b4 69 94     2....2........i.
    2764:	2a d5 9a 26 0f 44 1c 31 90 04 bd 21 e3 88 50 1b     *..&.D.1...!..P.
    2774:	43 8b 0c ad 41 94 08 51 1a 45 87 d6 9c 61 f4 f1     C...A..Q.E...a..
    2784:	45 00 59 2e 19 0d f9 47 8f da 18 62 63 68 0d 22     E.Y....G...bch."
    2794:	35 88 12 43 a3 e8 d0 22 33 8c 0a 35 22 e3 68 d0     5..C..."3..5".h.
    27a4:	23 31 90 c4 c4 93 37 8b 56 1d bb ff 7d 7c 19 00     #1....7.V...}|..
    27b4:	5a 32 19 0d f9 47 f0 c0 01 3a 07 0e d0 39 70 80     Z2...G...:...9p.
    27c4:	ea 54 aa ab 52 9d 4a 75 55 aa 53 a9 ae 4a 75 2a     .T..R.JuU.S..Ju*
    27d4:	d5 55 a9 2e 3b f5 c0 81 32 07 0e 94 39 70 a0 3e     .U..;...2...9p.>
    27e4:	be 08 5b 1b 19 0d f9 3f 70 eb c0 ad 03 b7 c6 ee     ..[....?p.......
    27f4:	ff ff ff d9 03 b7 0e dc 3a 70 1f 49 00 5c 2b 19     ........:p.I.\+.
    2804:	0d b9 8f 3b 76 2c d9 b1 64 c7 92 1d 4b 76 dd b1     ...;v,..d...Kv..
    2814:	63 c9 8e 25 3b 96 ec 58 b2 eb 8e 1d 4b 76 2c d9     c..%;..X....Kv,.
    2824:	b1 64 c7 92 8d 8f 17 00 5d 1a 19 0d 79 3f 70 eb     .d......]...y?p.
    2834:	c0 ad 03 67 f7 ff ff ff ad 03 b7 0e dc 3a 70 1f     ...g.........:p.
    2844:	51 00 5e 21 19 0d f9 47 58 ee 54 aa 35 6d 5e 1c     Q.^!...GX.T.5m^.
    2854:	31 90 04 bd 21 e3 c6 4c 1b 33 6c d0 b0 48 f2 f1     1...!..L.3l..H..
    2864:	ff 3f 09 5f 16 19 0d f9 c7 ff ff 7f f5 c0 01 2b     .?._...........+
    2874:	07 0e 58 39 70 c0 3e a6 00 60 1a 19 0d f9 c7 5c     ..X9p.>..`.....\
    2884:	60 b9 72 c7 8e a5 5a 95 6a 55 b2 eb 2a 1c 1f ff     `.r...Z.jU..*...
    2894:	ff 14 00 61 38 19 0d f9 c7 df 3a 78 80 d8 81 5b     ...a8.....:x...[
    28a4:	64 6a 85 1a 4b 95 ec 6a 07 6a 1d b8 74 e0 80 a0     dj..K..j.j..t...
    28b4:	4a 83 66 cd 21 45 67 16 1d 4a 75 08 19 22 73 e8     J.f.!Eg..Ju.."s.
    28c4:	80 85 49 07 66 cc b2 32 1f 9f 04 62 41 19 0d 39     ..I.f..2...bA..9
    28d4:	a7 3a 76 7f c4 d8 88 03 b2 26 1c a8 34 41 4a a5     .:v......&..4AJ.
    28e4:	42 4c d1 21 45 87 14 9d 61 73 86 cd 19 36 67 d8     BL.!E...as...6g.
    28f4:	9c 61 73 86 cd a1 35 87 14 1d 52 83 0a 11 b2 52     .as...5...R....R
    2904:	69 c2 01 52 23 0e c8 92 52 1f 1f 06 63 2a 19 0d     i..R#...R...c*..
    2914:	f9 c7 1f 3b 78 80 da 01 5b 55 2a 51 1a 44 2b d2     ...;x...[U*Q.D+.
    2924:	54 56 c7 2e 4b 95 59 aa 64 29 c9 aa 52 eb 80 b5     TV..K.Y.d)..R...
    2934:	03 04 ef e3 b3 00 64 43 19 0d f9 87 45 75 ec 7e     ......dC....Eu.~
    2944:	ad c8 ac 03 22 46 1d a0 30 a9 8a 21 42 85 28 11     ...."F..0..!B.(.
    2954:	9a 35 87 d6 1c 5a 73 86 cd 19 36 67 d8 1c 5a 73     .5...Zs...6g..Zs
    2964:	68 cd a1 35 68 14 21 4a 84 ea 54 aa 62 ea 00 85     h..5h.!J..T.b...
    2974:	59 07 44 4c 2b 42 1f 9f 04 65 33 19 0d f9 c7 1f     Y.DL+B...e3.....
    2984:	33 78 80 da 01 5b 55 4a 4d 5a 8a d0 ac 39 b4 e6     3x...[UJMZ...9..
    2994:	1c 38 40 e7 c0 81 32 07 0e d0 19 4b 95 d9 b1 2c     .8@...2....K...,
    29a4:	89 2a 53 ea c0 b5 03 04 ef e3 b3 00 66 26 19 0d     .*S.........f&..
    29b4:	f9 87 63 f1 c0 b8 03 c5 aa 90 22 24 8b 52 ac b1     ..c......."$.R..
    29c4:	bb 78 e0 40 a8 03 07 42 1d 38 10 6f ec fe ff 3e     .x.@...B.8.o...>
    29d4:	3e 0e 67 4c 19 0d f9 c7 9f 2a 33 e9 80 88 42 07     >.gL.....*3...B.
    29e4:	0e cc 29 52 6b ce 2c 42 a3 08 8d 9a 34 8a d0 28     ..)Rk.,B....4..(
    29f4:	42 b3 c8 d0 2a 42 ed 00 bd 03 f2 26 50 14 bb ec     B...*B.....&P...
    2a04:	01 6b 07 6e 1d 38 10 69 14 9d 61 63 a6 8d 99 36     .k.n.8.i..ac...6
    2a14:	86 16 99 4a 84 0e 1c 98 74 e0 dc 01 49 00 68 3f     ...J....t...I.h?
    2a24:	19 0d 79 a7 3a 76 7f a5 d8 8c 03 a2 46 1c 18 35     ..y.:v......F..5
    2a34:	61 0a 25 3b 84 0a b1 44 88 12 a1 59 83 66 0d 9a     a.%;...D...Y.f..
    2a44:	35 68 d6 a0 59 83 66 0d 9a 35 68 d6 a0 59 83 66     5h..Y.f..5h..Y.f
    2a54:	0d 9a 35 68 d6 a0 59 83 66 cd c7 27 01 69 20 19     ..5h..Y.f..'.i .
    2a64:	0d f9 87 32 b5 68 ab f3 b1 7b 40 e0 01 81 07 c4     ...2.h...{@.....
    2a74:	ee ff 0f 1e b8 75 e0 d6 81 fb f8 28 00 6a 25 19     .....u.....(.j%.
    2a84:	0d f9 07 34 b5 68 ab f3 b1 7a 80 dc 01 72 07 c8     ...4.h...z...r..
    2a94:	ee ff ff 2a b1 40 c4 e2 10 23 52 ec 40 b9 03 13     ...*.@...#R.@...
    2aa4:	ad 01 6b 3d 19 0d f9 a0 3a 76 ff 14 a1 49 94 06     ..k=....:v...I..
    2ab4:	91 9a 43 6b 0c b1 29 d4 86 90 9b 41 6f 04 c1 09     ..Ck..)....Ao...
    2ac4:	05 0f cc b3 40 ae 44 35 22 c5 c6 10 9b 43 6b 10     ....@.D5"....Ck.
    2ad4:	a9 41 95 26 51 1a 45 68 16 9d 59 f5 f1 45 00 6c     .A.&Q.Eh..Y..E.l
    2ae4:	1d 19 0d 79 3f 20 f0 80 c0 03 62 f7 ff ff 0f 1e     ...y? ....b.....
    2af4:	38 20 e9 c0 01 49 07 0e c8 c7 37 01 6d 52 19 0d     8 ...I....7.mR..
    2b04:	f9 c7 1f 99 41 84 ce 84 13 57 26 3c 10 a5 86 09     ....A....W&<....
    2b14:	2a 44 8a b0 42 84 95 29 44 c6 4c 21 32 66 0a 91     *D..B..)D.L!2f..
    2b24:	31 53 88 8c 99 42 64 cc 14 22 63 a6 10 19 33 85     1S...Bd.."c...3.
    2b34:	c8 98 29 44 c6 4c 21 32 66 0a 91 31 53 88 8c 99     ..)D.L!2f..1S...
    2b44:	42 64 cc 14 22 63 a6 10 19 33 85 3e 3e 08 6e 3e     Bd.."c...3.>>.n>
    2b54:	19 0d f9 c7 9f 99 52 6c c6 01 51 23 0e 8c 9a 30     ......Rl..Q#...0
    2b64:	85 92 1d 42 85 58 22 44 89 d0 ac 41 b3 06 cd 1a     ...B.X"D...A....
    2b74:	34 6b d0 ac 41 b3 06 cd 1a 34 6b d0 ac 41 b3 06     4k..A....4k..A..
    2b84:	cd 1a 34 6b d0 ac 41 b3 e6 e3 93 00 6f 38 19 0d     ..4k..A.....o8..
    2b94:	f9 c7 df b2 78 60 dc 81 62 54 4a 11 62 89 d0 2c     ....x`..bTJ.b..,
    2ba4:	32 b4 c8 10 1b 33 6d cc b4 31 d3 c6 10 1b 43 6c     2....3m..1....Cl
    2bb4:	0c 2d 3a b3 e8 90 9a 44 88 14 95 62 07 ca 1d 98     .-:....D...b....
    2bc4:	68 1f 1f 06 70 41 19 0d f9 c7 5f 19 62 6c c4 81     h...pA...._.bl..
    2bd4:	51 13 0e 54 9a 20 a5 52 21 a6 e8 90 a2 43 8a ce     Q..T. .R!....C..
    2be4:	b0 39 c3 e6 0c 9b 33 6c ce b0 39 c3 e6 d0 9a 43     .9....3l..9....C
    2bf4:	8a 0e a9 41 85 08 59 a9 34 e1 00 a9 11 07 64 0d     ...A..Y.4.....d.
    2c04:	a9 36 76 bf 09 71 3f 19 0d f9 c7 9f b2 31 eb 80     .6v..q?......1..
    2c14:	88 51 07 28 4c aa 62 a8 4e 21 4a 84 66 cd a1 35     .Q.(L.b.N!J.f..5
    2c24:	87 d6 9c 61 73 86 cd 19 36 87 d6 1c 5a 73 68 0d     ...as...6...Zsh.
    2c34:	9a 35 88 12 3b 95 aa 98 3a 40 61 d6 01 11 d3 8a     .5..;...:@a.....
    2c44:	8c dd 5f 01 72 20 19 0d f9 c7 df 99 62 6b c6 81     .._.r ......bk..
    2c54:	49 23 0e 14 9a 40 65 d2 1d 49 36 8b 52 65 75 ec     I#...@e..I6.Reu.
    2c64:	fe f7 f1 03 73 34 19 0d f9 c7 df b2 78 80 d8 81     ....s4......x...
    2c74:	5b 64 2a 11 a2 34 4a 14 55 b2 55 0f 84 3c 30 f2     [d*..4J.U.U..<0.
    2c84:	40 50 b3 64 27 05 9b 14 6c d0 28 42 75 2a 1d 38     @P.d'...l.(Bu*.8
    2c94:	10 eb 40 c1 fb f8 30 00 74 25 19 0d f9 c7 20 55     ..@...0.t%.... U
    2ca4:	ae 8e 9d 78 e0 40 a8 03 07 42 1d 38 10 6f ec fe     ...x.@...B.8.o..
    2cb4:	9f a5 5a 64 dc 01 72 07 26 da c7 57 01 75 3d 19     ..Zd..r.&..W.u=.
    2cc4:	0d f9 c7 5f 99 35 68 d6 a0 59 83 66 0d 9a 35 68     ..._.5h..Y.f..5h
    2cd4:	d6 a0 59 83 66 0d 9a 35 68 d6 a0 59 83 66 0d 9a     ..Y.f..5h..Y.f..
    2ce4:	35 68 d6 20 52 83 28 11 a2 c4 4e a5 2a a6 0e 50     5h. R.(...N.*..P
    2cf4:	98 75 40 c4 b4 22 f4 f1 49 00 76 36 19 0d f9 c7     .u@.."..I.v6....
    2d04:	1f 21 36 67 d8 1c 5a 83 66 0d 1a 35 89 d2 a8 49     .!6g..Z.f..5...I
    2d14:	a3 e8 cc a2 33 6c cc 34 2a e3 a6 8c a3 31 8f c6     ....3l.4*....1..
    2d24:	c0 11 13 29 8c 9c 30 d2 a6 51 aa 54 e7 e3 d3 00     ...)..0..Q.T....
    2d34:	77 52 19 0d f9 c7 1f 99 37 64 de 90 31 8b 8c 59     wR......7d..1..Y
    2d44:	64 cc 18 31 53 a8 88 19 52 45 cc 90 22 63 86 48     d..1S...RE.."c.H
    2d54:	10 32 66 88 84 19 73 84 48 98 31 67 c4 08 19 82     .2f...s.H.1g....
    2d64:	46 c8 18 21 68 84 8c 11 82 46 c8 98 30 49 82 14     F..!h....F..0I..
    2d74:	09 93 aa 58 aa 52 aa 4a 29 3a a4 e8 d0 9a 43 1f     ...X.R.J):....C.
    2d84:	df 04 78 35 19 0d f9 c7 5f 21 35 69 12 43 b3 c8     ..x5...._!5i.C..
    2d94:	4c 9b 42 8d c8 3c 12 13 27 50 bc 69 94 2a 51 93     L.B..<..'P.i.*Q.
    2da4:	07 22 8e 18 48 82 1c 11 6a 63 86 91 21 45 88 d2     ."..H...jc..!E..
    2db4:	28 3a a4 e8 e3 93 00 79 41 19 0d f9 c7 5f a1 45     (:.....yA...._.E
    2dc4:	86 d6 a0 59 83 66 0d a2 34 6a d2 28 42 b3 e6 0c     ...Y.f..4j.(B...
    2dd4:	9b 33 8c cc b4 29 e3 a6 8c a3 31 70 c6 40 12 13     .3...)....1p.@..
    2de4:	27 8c 9c 30 f2 66 d1 aa 54 c7 4e 1d 3b 95 9c 10     '..0.f..T.N.;...
    2df4:	7a 07 04 1e 08 69 10 00 7a 2b 19 0d f9 c7 9f 39     z....i..z+.....9
    2e04:	70 40 d2 81 03 92 0e 1c 10 4a 75 2a 51 56 a7 12     p@.......Ju*QV..
    2e14:	e5 2a 51 ae 12 25 7a e0 40 99 03 07 ca 1c 38 50     .*Q..%z.@.....8P
    2e24:	1f 5f 04 7b 28 19 0d f9 47 f9 40 c0 03 f2 0e 8c     ._.{(...G.@.....
    2e34:	23 4a 95 ea d8 fd 2a 51 92 36 a9 9a 65 76 ff 2c     #J....*Q.6..ev.,
    2e44:	55 66 a9 1e a0 77 60 e2 81 28 00 7c 0f 19 0d f9     Uf...w`..(.|....
    2e54:	07 32 76 ff ff ff ff ef 83 01 7d 27 19 0d f9 47     .2v.......}'...G
    2e64:	f2 01 81 07 a6 92 25 bb 3f 4b 76 2c d9 a3 25 2f     ......%.?Kv,..%/
    2e74:	52 9d ca ea d8 fd 55 a2 e5 0e cc 3b 20 f0 40 30     R.....U....; .@0
    2e84:	00 7e 1e 19 0d f9 c7 5f a2 79 28 d0 01 31 63 68     .~....._.y(..1ch
    2e94:	d4 a0 42 e5 c0 1c 39 07 62 d2 c7 ff 7f 18 00 00     ..B...9.b.......
    2ea4:	00 00 04 ff ff 00 00                                .......

00002eab <u8g2_font_9x15_m_symbols>:
    2eab:	cf 02 04 03 04 04 01 03 05 09 0f 00 fd 0a fd 0b     ................
    2ebb:	ff 02 21 04 7d 0e 18 20 07 f9 93 1f ff 00 21 0c     ..!.}.. ......!.
    2ecb:	f9 93 3b 30 df c3 06 c6 a3 00 22 0e f9 93 1f 2c     ..;0......"....,
    2edb:	24 2a 24 2a 24 1e 9f 00 23 16 f9 93 1f 3c 24 2a     $*$*$...#....<$*
    2eeb:	24 c8 28 24 2a 24 c8 28 24 2a 24 1e 25 00 24 15     $.($*$.($*$.%.$.
    2efb:	f9 93 1f 2e ac 26 24 67 11 71 73 11 61 21 b9 29     .....&$g.qs.a!.)
    2f0b:	8b 87 03 25 1e f9 93 1f 2a 28 24 22 24 26 22 24     ...%....*($"$&"$
    2f1b:	28 24 2e 30 2e 24 28 24 22 26 24 22 24 28 1e 1c     ($.0.$($"&$"$(..
    2f2b:	00 26 1a f9 93 1f 4a 2c 24 2a 24 2a 24 4c 4e 26     .&....J,$*$*$LN&
    2f3b:	24 45 4c a2 90 88 20 99 78 68 00 27 0a f9 93 1f     $EL... .xh.'....
    2f4b:	2e 30 3d 3e 02 28 0f f9 93 3d 2e 30 2e 30 2f 03     .0=>.(...=.0.0/.
    2f5b:	23 e3 c1 00 29 0f f9 93 39 32 30 32 30 ef 02 e3     #...)...92020...
    2f6b:	e2 01 01 2a 13 f9 93 1f 2e 2a 24 4d 44 aa a9 88     ...*.....*$MD...
    2f7b:	34 21 a9 e2 b1 06 2b 0d f9 93 1f 69 60 aa ab c0     4!....+....i`...
    2f8b:	f4 48 01 2c 0b f9 93 1f 1f c9 09 a6 0b 02 2d 09     .H.,..........-.
    2f9b:	f9 93 1f 47 f7 38 02 2e 09 f9 93 1f 1f c9 c9 23     ...G.8.........#
    2fab:	2f 10 f9 93 1f 34 2e 30 2e 61 5c c2 b8 78 44 00     /....4.0.a\..xD.
    2fbb:	30 17 f9 93 1f 6c 2a 26 55 48 54 48 54 48 54 48     0....l*&UHTHTHTH
    2fcb:	54 48 54 4c aa 79 04 31 10 f9 93 1f 2e 4e 2c 22     THTL.y.1.....N,"
    2fdb:	2a 24 30 af ee a1 01 32 0f f9 93 1f aa 26 2a 24     *$0....2.....&*$
    2feb:	2a 2e 1f de 43 03 33 11 f9 93 1f e8 30 2e dd 64     *...C.3.....0..d
    2ffb:	60 92 a8 98 7a 70 00 34 14 f9 93 1f 32 4e 2c 22     `...zp.4....2N,"
    300b:	2a 24 28 26 51 cc 5d 60 7a 70 00 35 12 f9 93 1f     *$(&Q.]`zp.5....
    301b:	e8 24 30 05 8d 50 60 26 51 31 f5 e0 00 36 16 f9     .$0..P`&Q1...6..
    302b:	93 1f 8c 28 2e 30 05 8d 50 48 54 48 54 48 54 4c     ...(.0..PHTHTHTL
    303b:	3d 38 00 37 12 f9 93 1f e8 30 2e 30 2e 30 2e 30     =8.7.....0.0.0.0
    304b:	2e 30 1e 09 00 38 14 f9 93 1f 6c 2a 26 55 4c aa     .0...8....l*&UL.
    305b:	a9 98 54 21 51 31 a9 e6 11 39 15 f9 93 1f aa 26     ..T!Q1...9.....&
    306b:	2a 24 2a 24 2a 24 48 86 22 30 5d 10 3d 02 3a 0c     *$*$*$H."0].=.:.
    307b:	f9 93 1f 23 39 79 44 72 f2 08 3b 0e f9 93 1f 23     ...#9yDr..;....#
    308b:	39 79 44 72 82 e9 82 00 3c 0c f9 93 1f 32 2e 87     9yDr....<....2..
    309b:	91 b9 07 07 3d 0b f9 93 1f d3 7b a8 7b 2c 00 3e     ....=.....{.{,.>
    30ab:	0c f9 93 1f 2a 32 87 71 b9 47 03 3f 12 f9 93 1f     ....*2.q.G.?....
    30bb:	aa 26 2a 24 2a 30 2e c3 78 90 78 14 00 40 1b f9     .&*$*0..x.x..@..
    30cb:	93 1f aa 26 2a 24 2a 24 84 24 22 26 24 22 44 24     ...&*$*$.$"&$"D$
    30db:	44 22 24 30 b2 1e 1c 00 41 18 f9 93 1f 2e 45 54     D"$0....A.....ET
    30eb:	4c aa 90 a8 90 a8 90 93 a8 90 a8 90 a8 78 68 00     L............xh.
    30fb:	42 16 f9 93 1f a8 28 4d 54 48 50 4c 51 9a a8 90     B.....(MTHPLQ...
    310b:	a8 90 a0 98 7a 04 43 0f f9 93 1f aa 26 2a 24 30     ....z.C.....&*$0
    311b:	5f c5 d4 83 03 44 18 f9 93 1f a8 28 4d 54 48 54     _....D.....(MTHT
    312b:	48 54 48 54 48 54 48 54 48 50 4c 3d 02 45 0f f9     HTHTHTHTHPL=.E..
    313b:	93 1f e8 24 30 61 51 60 86 f7 d0 00 46 0e f9 93     ...$0aQ`....F...
    314b:	1f e8 24 30 61 51 60 ee 11 01 47 15 f9 93 1f aa     ..$0aQ`...G.....
    315b:	26 2a 24 30 9b 91 a8 90 a8 90 a8 98 7a 70 00 48     &*$0........zp.H
    316b:	1b f9 93 1f 28 2a 24 2a 24 2a 24 2a e4 24 2a 24     ....(*$*$*$*.$*$
    317b:	2a 24 2a 24 2a 24 2a 1e 1a 00 49 0c f9 93 1f aa     *$*$*$*...I.....
    318b:	2c 30 3f ab 07 07 4a 0d f9 93 1f ae 2c 30 df 04     ,0?...J.....,0..
    319b:	05 d1 23 4b 19 f9 93 1f 28 2a 24 28 26 51 48 d4     ..#K....(*$(&QH.
    31ab:	58 44 58 48 54 4c 50 9a a8 78 68 00 4c 0b f9 93     XDXHTLP..xh.L...
    31bb:	1f 28 30 7f 78 0f 0d 4d 19 f9 93 1f 28 2a 24 2a     .(0.x..M....(*$*
    31cb:	44 46 24 22 93 88 4c f2 ab 90 a8 90 a8 78 68 00     DF$"..L......xh.
    31db:	4e 1c f9 93 1f 28 2a 24 2a 44 28 24 22 26 24 37     N....(*$*D($"&$7
    31eb:	11 21 41 22 51 21 51 21 51 f1 d0 00 4f 1a f9 93     .!A"Q!Q!Q...O...
    31fb:	1f aa 26 2a 24 2a 24 2a 24 2a 24 2a 24 2a 24 2a     ..&*$*$*$*$*$*$*
    320b:	24 2a a6 1e 1c 00 50 12 f9 93 1f c8 26 2a 24 2a     $*....P.....&*$*
    321b:	24 2a c4 26 30 f7 88 00 51 1b f9 93 1f aa 26 2a     $*.&0...Q.....&*
    322b:	24 2a 24 2a 24 2a 24 2a 24 2a 24 22 26 24 9b ba     $*$*$*$*$*$"&$..
    323b:	48 51 00 52 19 f9 93 1f c8 26 2a 24 2a 24 2a c4     HQ.R.....&*$*$*.
    324b:	26 24 2a 26 28 4d 54 48 54 3c 34 00 53 16 f9 93     &$*&(MTHT<4.S...
    325b:	1f aa 26 2a 24 2a 24 72 52 32 24 2a 24 2a a6 1e     ..&*$*$rR2$*$*..
    326b:	1c 00 54 0c f9 93 1f e8 2a 30 7f 8f 02 00 55 1b     ..T.....*0....U.
    327b:	f9 93 1f 28 2a 24 2a 24 2a 24 2a 24 2a 24 2a 24     ...(*$*$*$*$*$*$
    328b:	2a 24 2a 24 2a a6 1e 1c 00 56 1a f9 93 1f 28 2a     *$*$*....V....(*
    329b:	24 2a 24 2a 26 51 4c 50 4c 54 44 58 44 58 44 5c     $*$*&QLPLTDXDXD\
    32ab:	3c 0a 00 57 14 f9 93 1f 28 2a 24 2a 24 2a 24 2a     <..W....(*$*$*$*
    32bb:	24 ff 2f b2 49 0f 0e 58 18 f9 93 1f 28 2a 24 2a     $./.I..X....(*$*
    32cb:	26 55 44 5c 60 5c 44 54 4c aa 90 a8 78 68 00 59     &UD\`\DTL...xh.Y
    32db:	11 f9 93 1f 28 2a 24 2a 26 55 44 5c 60 de a3 00     ....(*$*&UD\`...
    32eb:	5a 0d f9 93 1f e8 30 2e 1f 06 de 43 03 5b 0c f9     Z.....0....C.[..
    32fb:	93 99 2a 30 ff 90 1e 0a 00 5c 10 f9 93 1f 28 32     ..*0.....\....(2
    330b:	30 32 61 64 c2 c8 78 68 00 5d 0b f9 93 97 30 ff     02ad..xh.]....0.
    331b:	15 3d 18 00 5e 0d f9 93 1f 2e 45 54 4c aa 78 bc     .=..^.....ETL.x.
    332b:	03 5f 0a f9 93 1f bf 39 88 07 02 60 09 f9 93 39     ._.....9...`...9
    333b:	32 3d 3e 06 61 12 f9 93 1f 93 ca c0 18 93 a8 90     2=>.a...........
    334b:	20 19 8a 78 68 00 62 17 f9 93 1f 28 30 0b 1a a1      ..xh.b....(0...
    335b:	90 a8 90 a8 90 a8 10 a1 90 08 7a 70 00 63 0f f9     ..........zp.c..
    336b:	93 1f 93 9a a8 90 c0 ac 62 ea c1 01 64 18 f9 93     ........b...d...
    337b:	1f 34 30 0d 45 48 90 48 54 48 54 48 54 48 90 0c     .40.EH.HTHTHTH..
    338b:	45 3c 34 00 65 11 f9 93 1f 93 9a a8 90 a8 90 93     E<4.e...........
    339b:	c0 c8 7a 70 00 66 12 f9 93 1f 6e 2a 26 28 26 28     ..zp.f....n*&(&(
    33ab:	30 ac 2c 30 7b 24 00 67 17 f9 93 1f 13 8a 90 a0     0.,0{$.g........
    33bb:	98 a0 98 a0 20 a2 c8 9a a8 90 a8 98 12 00 68 17     .... .........h.
    33cb:	f9 93 1f 28 30 0b 1a a1 90 a8 90 a8 90 a8 90 a8     ...(0...........
    33db:	90 a8 78 68 00 69 0d f9 93 1f 4c 1e 72 30 cf ea     ..xh.i....L.r0..
    33eb:	c1 01 6a 12 f9 93 1f 50 1e 72 30 6f 82 62 82 62     ..j....P.r0o.b.b
    33fb:	82 82 68 00 6b 16 f9 93 1f 28 30 ab 90 18 99 08     ..h.k....(0.....
    340b:	29 b9 08 a9 18 99 a8 78 68 00 6c 0b f9 93 1f 6a     )......xh.l....j
    341b:	30 7f 56 0f 0e 6d 0f f9 93 1f 8b 09 99 90 fc ff     0.V..m..........
    342b:	2a 1e 1a 00 6e 16 f9 93 1f 8b 08 1a a1 90 a8 90     *...n...........
    343b:	a8 90 a8 90 a8 90 a8 78 68 00 6f 14 f9 93 1f 93     .......xh.o.....
    344b:	9a a8 90 a8 90 a8 90 a8 90 a8 98 7a 70 00 70 17     ...........zp.p.
    345b:	f9 93 1f 8b 08 1a a1 90 a8 90 a8 90 a8 10 a1 90     ................
    346b:	08 9a c0 74 00 71 16 f9 93 1f 13 8a 90 20 91 a8     ...t.q....... ..
    347b:	90 a8 90 a8 90 20 19 8a c0 2c 00 72 0f f9 93 1f     ..... ...,.r....
    348b:	8b 90 21 99 44 31 81 d9 a3 01 73 11 f9 93 1f 93     ..!.D1....s.....
    349b:	9a a8 90 c8 ca 90 a8 98 7a 70 00 74 0f f9 93 1f     ........zp.t....
    34ab:	3e 30 cc 2a 30 37 51 f3 e0 00 75 16 f9 93 1f 8b     >0.*07Q...u.....
    34bb:	a0 98 a0 98 a0 98 a0 98 a0 98 a0 20 8a 78 68 00     ........... .xh.
    34cb:	76 14 f9 93 1f 8b a8 90 a8 98 44 31 51 11 61 11     v.........D1Q.a.
    34db:	71 f1 28 00 77 10 f9 93 1f 8b a8 90 a8 90 fc 17     q.(.w...........
    34eb:	d9 a4 07 07 78 12 f9 93 1f 8b a8 98 54 11 71 29     ....x.......T.q)
    34fb:	a2 62 52 c5 43 03 79 19 f9 93 1f 8b a0 98 a0 98     .bR.C.y.........
    350b:	a0 98 a0 98 a0 98 18 a1 89 c0 98 a0 20 1a 00 7a     ............ ..z
    351b:	0b f9 93 1f 8b bb bc bb 87 06 7b 11 f9 93 7d 2a     ..........{...}*
    352b:	30 65 98 9c 64 5c 60 ca 79 20 00 7c 0a f9 93 3b     0e..d\`.y .|...;
    353b:	30 ff 7b 38 00 7d 11 f9 93 75 32 30 5d a4 9c 58     0.{8.}...u20]..X
    354b:	64 60 aa 79 40 00 7e 0d f9 93 1f 4a 26 24 37 f2     d`.y@.~....J&$7.
    355b:	f8 04 00 a0 07 f9 93 1f ff 00 a1 0c f9 93 3b 30     ..............;0
    356b:	1e 36 30 df a3 00 a2 16 f9 93 1f 6d 14 51 48 44     .60........m.QHD
    357b:	4c 48 54 44 58 44 48 10 55 3c 1a 00 a3 15 f9 93     LHTDXDH.U<......
    358b:	1f 6e 2a 26 28 30 ac 2c 30 4e 2c 22 26 c5 3c 38     .n*&(0.,0N,"&.<8
    359b:	00 a4 12 f9 93 1f 3a 2a a6 28 26 28 26 a8 26 2a     ......:*.(&(&.&*
    35ab:	1e 53 00 a5 14 f9 93 1f 28 2a 24 2a 26 55 44 54     .S......(*$*&UDT
    35bb:	59 58 59 60 7a 14 00 a6 0d f9 93 1f 2e 30 f7 20     YXY`z........0. 
    35cb:	81 b9 87 03 a7 18 f9 93 1f 4c 2c 24 2a 52 2c 24     .........L,$*R,$
    35db:	2a 24 2a 24 4c 32 2a 24 4c 1e 0e 00 a8 0b f9 93     *$*$L2*$L.......
    35eb:	37 26 28 26 1e bf 02 a9 19 f9 93 1f 8a 28 49 88     7&(&.........(I.
    35fb:	48 44 92 88 8c 22 92 44 24 11 49 14 44 8f 12 00     HD...".D$.I.D...
    360b:	aa 10 f9 93 1f 4a 2c 24 6c 2a 24 8c ba 1e 63 00     .....J,$l*$...c.
    361b:	ab 18 f9 93 1f 45 48 50 48 50 48 50 48 54 48 58     .....EHPHPHPHTHX
    362b:	48 58 48 58 48 3c 3a 00 ac 0a f9 93 1f 53 c3 ec     HXHXH<:......S..
    363b:	31 01 ad 09 f9 93 1f 57 f5 b8 02 ae 1a f9 93 1f     1......W........
    364b:	8a 28 49 c4 48 44 92 88 14 23 11 99 44 24 89 08     .(I.HD...#..D$..
    365b:	09 0a a2 47 09 af 09 f9 93 1f c8 1e bf 02 b0 0e     ...G............
    366b:	f9 93 1f 4e 2c 24 2a 24 4c 1e 2f 01 b1 0e f9 93     ...N,$*$L./.....
    367b:	1f 2e 30 d5 55 60 f2 7b 74 00 b2 0f f9 93 1f 4a     ..0.U`.{t......J
    368b:	2c 24 30 4c 2c 90 1e 77 00 b3 10 f9 93 1f 4a 2c     ,$0L,..w......J,
    369b:	24 2e 32 2a 24 4c 1e 87 00 b4 09 f9 93 3d 2e 3d     $.2*$L.......=.=
    36ab:	3e 07 b5 19 f9 93 1f 8b a8 90 a8 90 a8 90 a8 90     >...............
    36bb:	a8 10 19 91 88 89 90 c0 78 08 00 b6 1e f9 93 1f     ........x.......
    36cb:	ca 24 26 22 24 26 22 24 26 22 86 22 2c 22 2c 22     .$&"$&"$&".",","
    36db:	2c 22 2c 22 2c 22 1e 1a 00 b7 0a f9 93 1f 6b 39     ,",","........k9
    36eb:	79 9c 01 b8 0b f9 93 1f bf 93 0a 09 13 02 b9 0c     y...............
    36fb:	f9 93 1f 2a 4e 30 bb 79 1c 02 ba 0f f9 93 1f 6a     ...*N0.y.......j
    370b:	2a 26 28 26 6a bc 1e 67 00 bb 18 f9 93 1f 3a 24     *&(&j..g......:$
    371b:	2c 24 2c 24 2c 24 2a 24 28 24 28 24 28 24 1e 29     ,$,$,$*$($($($.)
    372b:	00 bc 15 f9 93 1f 2a 4e 30 a3 90 11 b1 88 a8 90     ......*N0.......
    373b:	28 89 38 79 68 00 bd 12 f9 93 1f 2a 4e 30 13 19     (.8yh......*N0..
    374b:	92 c0 30 b1 40 7a 68 00 be 18 f9 93 1f 4a 2c 24     ..0.@zh......J,$
    375b:	2e 32 2a 24 8d 88 58 44 54 48 94 44 9c 3c 34 00     .2*$..XDTH.D.<4.
    376b:	bf 12 f9 93 1f 2e 1e 24 30 2e c3 a8 90 a8 98 7a     .......$0......z
    377b:	70 00 c0 17 f9 93 25 32 3d c4 54 4c aa 90 a8 90     p.....%2=.TL....
    378b:	93 a8 90 a8 90 a8 78 68 00 c1 17 f9 93 2d 2e 3d     ......xh.....-.=
    379b:	c4 54 4c aa 90 a8 90 93 a8 90 a8 90 a8 78 68 00     .TL..........xh.
    37ab:	c2 19 f9 93 29 2e 22 2a 26 7c 2a 26 55 48 54 c8     ....)."*&|*&UHT.
    37bb:	49 54 48 54 48 54 3c 34 00 c3 18 f9 93 57 26 24     ITHTHT<4.....W&$
    37cb:	64 7c 2a 26 55 48 54 c8 49 54 48 54 48 54 3c 34     d|*&UHT.ITHTHT<4
    37db:	00 c4 18 f9 93 37 26 28 26 7c 2a 26 55 48 54 c8     .....7&(&|*&UHT.
    37eb:	49 54 48 54 48 54 3c 34 00 c5 19 f9 93 79 2a 26     ITHTHT<4.....y*&
    37fb:	6a 2c 22 2a 26 55 48 54 c8 49 54 48 54 48 54 3c     j,"*&UHT.ITHTHT<
    380b:	34 00 c6 1a f9 93 1f 4a 62 24 55 48 54 48 54 48     4......Jb$UHTHTH
    381b:	94 4d 48 54 48 54 48 54 08 3d 34 00 c7 12 f9 93     .MHTHTHT.=4.....
    382b:	1f aa 26 2a 24 30 5f c5 94 49 85 84 09 01 c8 10     ..&*$0_..I......
    383b:	f9 93 25 32 f9 4d 60 20 55 60 ba 7b 68 00 c9 10     ..%2.M` U`.{h...
    384b:	f9 93 2d 2e f9 4d 60 20 55 60 ba 7b 68 00 ca 13     ..-..M` U`.{h...
    385b:	f9 93 29 2e 22 2a 26 f8 26 30 90 2a 30 dd 3d 34     ..)."*&.&0.*0.=4
    386b:	00 cb 12 f9 93 37 26 28 26 f8 26 30 90 2a 30 dd     .....7&(&.&0.*0.
    387b:	3d 34 00 cc 0d f9 93 25 32 7d 59 60 9e d5 83 03     =4.....%2}Y`....
    388b:	cd 0d f9 93 2d 2e 7d 59 60 9e d5 83 03 ce 10 f9     ....-.}Y`.......
    389b:	93 29 2e 22 2a 26 ba 2c 30 cf ea c1 01 cf 0f f9     .)."*&.,0.......
    38ab:	93 37 26 28 26 ba 2c 30 cf ea c1 01 d0 18 f9 93     .7&(&.,0........
    38bb:	1f a8 28 4d 54 48 54 c4 50 48 54 48 54 48 54 48     ..(MTHT.PHTHTHTH
    38cb:	50 4c 3d 02 d1 19 f9 93 57 26 24 64 38 2a 44 28     PL=.....W&$d8*D(
    38db:	24 22 26 24 bf 89 08 09 12 89 8a 87 06 d2 17 f9     $"&$............
    38eb:	93 25 32 7d 4d 54 48 54 48 54 48 54 48 54 48 54     .%2}MTHTHTHTHTHT
    38fb:	4c 3d 38 00 d3 17 f9 93 2d 2e 7d 4d 54 48 54 48     L=8.....-.}MTHTH
    390b:	54 48 54 48 54 48 54 4c 3d 38 00 d4 1a f9 93 29     THTHTHTL=8.....)
    391b:	2e 22 2a 26 ba 26 2a 24 2a 24 2a 24 2a 24 2a 24     ."*&.&*$*$*$*$*$
    392b:	2a a6 1e 1c 00 d5 19 f9 93 57 26 24 64 ba 26 2a     *........W&$d.&*
    393b:	24 2a 24 2a 24 2a 24 2a 24 2a a6 1e 1c 00 d6 19     $*$*$*$*$*......
    394b:	f9 93 37 26 28 26 ba 26 2a 24 2a 24 2a 24 2a 24     ..7&(&.&*$*$*$*$
    395b:	2a 24 2a a6 1e 1c 00 d7 12 f9 93 1f 5d 54 4c aa     *$*.........]TL.
    396b:	88 b8 14 51 31 a9 e2 d1 01 d8 1c f9 93 1f 22 a6     ...Q1.........".
    397b:	26 48 24 26 22 24 26 22 24 bf 88 09 89 88 09 11     &H$&"$&"$.......
    398b:	8a a9 89 07 05 d9 18 f9 93 25 32 79 54 48 54 48     .........%2yTHTH
    399b:	54 48 54 48 54 48 54 48 54 4c 3d 38 00 da 18 f9     THTHTHTHTL=8....
    39ab:	93 2d 2e 79 54 48 54 48 54 48 54 48 54 48 54 48     .-.yTHTHTHTHTHTH
    39bb:	54 4c 3d 38 00 db 1b f9 93 29 2e 22 2a 26 38 2a     TL=8.....)."*&8*
    39cb:	24 2a 24 2a 24 2a 24 2a 24 2a 24 2a a6 1e 1c 00     $*$*$*$*$*$*....
    39db:	dc 1a f9 93 37 26 28 26 38 2a 24 2a 24 2a 24 2a     ....7&(&8*$*$*$*
    39eb:	24 2a 24 2a 24 2a a6 1e 1c 00 dd 12 f9 93 2d 2e     $*$*$*........-.
    39fb:	79 54 48 54 4c aa 88 b8 c0 ec 51 00 de 14 f9 93     yTHTL.....Q.....
    3a0b:	1f 28 30 d0 26 2a 24 2a 24 2a c4 26 30 3d 22 00     .(0.&*$*$*.&0=".
    3a1b:	df 1a f9 93 1f 6c 2a 26 28 26 28 24 48 22 2c 24     .....l*&(&($H",$
    3a2b:	2a 26 28 26 28 26 28 42 1e 01 e0 13 f9 93 39 32     *&(&(&(B......92
    3a3b:	79 65 60 8c 49 54 48 90 0c 45 3c 34 00 e1 13 f9     ye`.ITH..E<4....
    3a4b:	93 3f 2e 7d 65 60 8c 49 54 48 90 0c 45 3c 34 00     .?.}e`.ITH..E<4.
    3a5b:	e2 16 f9 93 3b 2e 22 2a 26 ba 32 30 c6 24 2a 24     ....;."*&.20.$*$
    3a6b:	48 86 22 1e 1a 00 e3 16 f9 93 1f 4c 24 26 44 ba     H."........L$&D.
    3a7b:	32 30 c6 24 2a 24 48 86 22 1e 1a 00 e4 16 f9 93     20.$*$H.".......
    3a8b:	1f 2a 26 28 26 ba 32 30 c6 24 2a 24 48 86 22 1e     .*&(&.20.$*$H.".
    3a9b:	1a 00 e5 15 f9 93 5b 2c 24 4c bc 32 30 c6 24 2a     ......[,$L.20.$*
    3aab:	24 48 86 22 1e 1a 00 e6 15 f9 93 1f 13 09 99 90     $H."............
    3abb:	54 21 31 35 21 51 21 69 24 e6 a1 01 e7 12 f9 93     T!15!Q!i$.......
    3acb:	1f 93 9a a8 90 c0 ac 62 ca a4 42 c2 84 00 e8 12     .......b..B.....
    3adb:	f9 93 37 32 7d 4d 54 48 54 c8 49 60 64 3d 38 00     ..72}MTHT.I`d=8.
    3aeb:	e9 12 f9 93 3f 2e 7d 4d 54 48 54 c8 49 60 64 3d     ....?.}MTHT.I`d=
    3afb:	38 00 ea 15 f9 93 3b 2e 22 2a 26 ba 26 2a 24 2a     8.....;."*&.&*$*
    3b0b:	e4 24 30 b2 1e 1c 00 eb 15 f9 93 1f 2a 26 28 26     .$0.........*&(&
    3b1b:	ba 26 2a 24 2a e4 24 30 b2 1e 1c 00 ec 0c f9 93     .&*$*.$0........
    3b2b:	37 32 fd 60 9e d5 83 03 ed 0d f9 93 3d 2e 3d c4     72.`........=.=.
    3b3b:	60 9e d5 83 03 ee 0f f9 93 39 2e 22 2a 26 7c 30     `........9."*&|0
    3b4b:	cf ea c1 01 ef 0f f9 93 1f 2a 24 2a 24 7c 30 cf     .........*$*$|0.
    3b5b:	ea c1 01 f0 19 f9 93 37 24 4c 2c 22 32 aa 26 2a     .......7$L,"2.&*
    3b6b:	24 2a 24 2a 24 2a 24 2a a6 1e 1c 00 f1 1a f9 93     $*$*$*$*........
    3b7b:	1f 4a 26 24 64 38 82 46 28 24 2a 24 2a 24 2a 24     .J&$d8.F($*$*$*$
    3b8b:	2a 24 2a 1e 1a 00 f2 15 f9 93 37 32 7d 4d 54 48     *$*.......72}MTH
    3b9b:	54 48 54 48 54 48 54 4c 3d 38 00 f3 15 f9 93 3f     THTHTHTL=8.....?
    3bab:	2e 7d 4d 54 48 54 48 54 48 54 48 54 4c 3d 38 00     .}MTHTHTHTHTL=8.
    3bbb:	f4 18 f9 93 3b 2e 22 2a 26 ba 26 2a 24 2a 24 2a     ....;."*&.&*$*$*
    3bcb:	24 2a 24 2a a6 1e 1c 00 f5 18 f9 93 1f 4a 26 24     $*$*.........J&$
    3bdb:	64 ba 26 2a 24 2a 24 2a 24 2a 24 2a a6 1e 1c 00     d.&*$*$*$*$*....
    3beb:	f6 18 f9 93 1f 2a 26 28 26 ba 26 2a 24 2a 24 2a     .....*&(&.&*$*$*
    3bfb:	24 2a 24 2a a6 1e 1c 00 f7 0f f9 93 1f 45 dc 5c     $*$*.........E.\
    3c0b:	f8 79 dc 5c 3c 0a 00 f8 17 f9 93 1f 75 4c 4d 8a     .y.\<.......uLM.
    3c1b:	90 98 88 90 5c c4 84 44 c4 c4 d4 c4 83 02 f9 17     ....\..D........
    3c2b:	f9 93 37 32 79 50 4c 50 4c 50 4c 50 4c 50 4c 50     ..72yPLPLPLPLPLP
    3c3b:	10 45 3c 34 00 fa 17 f9 93 3f 2e 79 50 4c 50 4c     .E<4.....?.yPLPL
    3c4b:	50 4c 50 4c 50 4c 50 10 45 3c 34 00 fb 1a f9 93     PLPLPLP.E<4.....
    3c5b:	3b 2e 22 2a 26 38 28 26 28 26 28 26 28 26 28 26     ;."*&8(&(&(&(&(&
    3c6b:	28 88 22 1e 1a 00 fc 1a f9 93 1f 2a 24 2a 24 3a     (."........*$*$:
    3c7b:	28 26 28 26 28 26 28 26 28 26 28 88 22 1e 1a 00     (&(&(&(&(&(."...
    3c8b:	fd 1a f9 93 3d 2e 7d 50 4c 50 4c 50 4c 50 4c 50     ....=.}PLPLPLPLP
    3c9b:	4c 8c d0 44 60 4c 50 10 0d 00 fe 16 f9 93 1f 3a     L..D`LP........:
    3cab:	30 0b 1a a1 90 a8 90 a8 10 a1 90 08 9a c0 74 00     0.............t.
    3cbb:	ff 1d f9 93 1f 2a 24 2a 24 3a 28 26 28 26 28 26     .....*$*$:(&(&(&
    3ccb:	28 26 28 26 46 68 22 30 26 28 88 06 00 00 00 00     (&(&Fh"0&(......
    3cdb:	08 25 95 07 6b ff ff 20 a0 15 f9 93 1f 68 2a 30     .%..k.. .....h*0
    3ceb:	0d 45 4c 50 4c 94 59 60 20 3d 34 00 20 a1 1b f9     .ELPL.Y` =4. ...
    3cfb:	93 3f a8 26 45 48 4c 50 48 54 48 54 44 58 44 98     .?.&EHLPHTHTDXD.
    3d0b:	9c 50 88 4d 3c 28 00 20 a2 17 f9 93 1f aa 26 2a     .P.M<(. ......&*
    3d1b:	24 30 09 49 aa 90 a8 90 a8 90 34 f5 e0 00 20 a3     $0.I......4... .
    3d2b:	17 f9 93 1f e8 26 30 1d 85 4c 84 54 44 58 44 58     .....&0..L.TDXDX
    3d3b:	44 14 3d 0a 00 20 a4 16 f9 93 1f 6e 2a 26 28 ac     D.=.. .....n*&(.
    3d4b:	2c ac 2c 4e 2c 22 26 c5 3c 38 00 20 a5 18 f9 93     ,.,N,"&.<8. ....
    3d5b:	1f 79 c4 92 14 22 21 12 21 b9 10 09 91 08 49 15     .y..."!.!.....I.
    3d6b:	11 0f 0b 20 a6 1d f9 93 1f 28 2a 24 2a 44 28 e2     ... .....(*$*D(.
    3d7b:	40 22 24 c5 81 44 90 48 54 48 54 48 54 3c 34 00     @"$..D.HTHTHT<4.
    3d8b:	20 a7 13 f9 93 1f c8 26 2a e2 40 22 2a c4 26 30      ......&*.@"*.&0
    3d9b:	f7 88 00 20 a8 1c f9 93 1f 88 2a 26 e6 26 11 c5     ... ......*&.&..
    3dab:	84 48 50 44 88 48 9a 88 98 90 88 98 79 68 00 20     .HPD.H......yh. 
    3dbb:	a9 1a f9 93 1f 28 2a 24 2a 24 2a e2 40 22 24 c5     .....(*$*$*.@"$.
    3dcb:	81 44 48 be c8 26 3d 38 00 20 aa 1f f9 93 1f 6a     .DH..&=8. .....j
    3ddb:	2a 26 22 24 22 93 88 4c 22 32 89 c8 24 22 93 88     *&"$"..L"2..$"..
    3deb:	4c 22 62 42 42 e6 c1 01 20 ab 16 f9 93 1f 34 c6     L"bBB... .....4.
    3dfb:	30 86 22 24 48 24 2a 24 48 86 bc 1e 1c 00 20 ac     0."$H$*$H..... .
    3e0b:	13 f9 93 1f c5 54 4c ba aa b8 aa c8 98 a8 79 70     .....TL.......yp
    3e1b:	00 20 ad 1a f9 93 1f 28 2a 24 28 26 51 48 d0 4d     . .....(*$(&QH.M
    3e2b:	44 58 48 54 4c 50 9a a8 78 68 00 20 ae 12 f9 93     DXHTLP..xh. ....
    3e3b:	1f e8 2a 30 50 4c 30 50 4c 30 3d 0a 00 20 af 1d     ..*0PL0PL0=.. ..
    3e4b:	f9 93 1f 2c 8e 28 22 24 2a 26 28 26 28 26 28 26     ...,.("$*&(&(&(&
    3e5b:	46 26 24 42 24 26 44 1e 1c 00 20 b0 1e f9 93 1f     F&$B$&D... .....
    3e6b:	4e 2c 24 2a 24 2a 24 2a 24 2c 22 28 24 28 22 51     N,$*$*$*$,"($("Q
    3e7b:	84 44 48 9a c0 b8 58 00 20 b1 16 f9 93 1f a8 28     .DH...X. ......(
    3e8b:	c9 41 48 50 c8 41 48 50 4c 51 60 7a 44 00 21 03     .AHP.AHPLQ`zD.!.
    3e9b:	13 f9 93 35 2e 22 62 26 22 26 28 30 df 44 cd 83     ...5."b&"&(0.D..
    3eab:	03 21 09 12 f9 93 35 2e 22 2e d2 26 30 b0 28 30     .!....5."..&0.(0
    3ebb:	7b 34 00 21 26 18 f9 93 1f 7e 2a 26 55 48 54 48     {4.!&....~*&UHTH
    3ecb:	54 4c aa 88 b0 88 a0 89 79 68 00 21 90 0e f9 93     TL......yh.!....
    3edb:	1f 69 5c ba 9b c8 f4 48 01 21 91 11 f9 93 1f 2e     .i\....H.!......
    3eeb:	6e 2a 22 4d 48 aa c0 bc 47 01 21 92 0d f9 93 1f     n*"MH...G.!.....
    3efb:	69 64 9a bb ec 91 02 21 93 11 f9 93 1f 2e 30 af     id.....!......0.
    3f0b:	42 d2 44 a4 9a 8b 47 01 21 94 11 f9 93 1f 9b 88     B.D...G.!.......
    3f1b:	a8 98 98 9b 54 11 f1 d8 00 21 95 17 f9 93 1f 2e     ....T....!......
    3f2b:	6e 2a 22 4d 48 aa c0 a8 90 34 11 a9 e6 e2 51 00     n*"MH....4....Q.
    3f3b:	21 96 10 f9 93 1f 1d 95 5c 44 58 48 64 f6 e8 00     !.......\DXHd...
    3f4b:	21 97 11 f9 93 1f 29 9d 58 44 54 48 50 5c 7a d4     !.....).XDTHP\z.
    3f5b:	00 21 98 10 f9 93 1f 5d 64 26 61 11 71 52 f4 e8     .!.....]d&a.qR..
    3f6b:	00 21 99 11 f9 93 1f 75 5c a2 90 a8 88 30 39 7a     .!.....u\....09z
    3f7b:	a4 00 21 9a 14 f9 93 1f 65 5c 4c a2 90 83 90 98     ..!.....e\L.....
    3f8b:	a8 90 b0 78 b4 00 21 9b 14 f9 93 1f 69 58 48 54     ...x..!.....iXHT
    3f9b:	4c c8 41 48 50 4c ba 78 a4 00 21 9c 11 f9 93 1f     L.AHPL.x..!.....
    3fab:	65 5c a2 10 8a 24 c9 22 e3 d1 02 21 9d 12 f9 93     e\...$."...!....
    3fbb:	1f 69 64 50 92 88 08 a2 90 b8 f4 48 01 21 9e 16     .idP.......H.!..
    3fcb:	f9 93 1f 65 48 50 48 50 48 d0 41 48 b2 90 b0 90     ...eHPHPH.AH....
    3fdb:	78 84 00 21 9f 16 f9 93 1f 2e 6e 2a 22 4d 48 a2     x..!......n*"MH.
    3feb:	a9 88 34 21 a9 02 d3 a3 00 21 a0 17 f9 93 1f 5d     ..4!.....!.....]
    3ffb:	48 58 48 58 48 c8 41 50 48 50 48 50 48 3c 52 00     HXHXH.APHPHPH<R.
    400b:	21 a1 16 f9 93 1f 2e 30 55 48 9a 88 54 43 21 69     !......0UH..TC!i
    401b:	22 52 cd c5 a3 00 21 a2 12 f9 93 1f 69 5c 4c 36     "R....!.....i\L6
    402b:	55 31 51 31 51 f1 48 01 21 a3 11 f9 93 1f 69 54     U1Q1Q.H.!.....iT
    403b:	4c 54 4c 54 4d ee e2 91 02 21 a4 12 f9 93 1f 69     LTLTM....!.....i
    404b:	5c 4c a2 90 9b a0 34 51 f1 48 01 21 a5 12 f9 93     \L....4Q.H.!....
    405b:	1f 2e 6e 2a 22 4d 48 aa c0 9c d5 83 03 21 a6 12     ..n*"MH......!..
    406b:	f9 93 1f 69 54 4c 50 9a 93 a0 98 74 f1 48 01 21     ...iTLP....t.H.!
    407b:	a7 12 f9 93 1f aa 2c 30 57 21 69 22 52 cd c5 a3     ......,0W!i"R...
    408b:	00 21 a8 16 f9 93 1f 2e 6e 2a 22 4d 48 aa 24 69     .!......n*"MH.$i
    409b:	22 52 cd 45 dd 43 03 21 a9 10 f9 93 1f 65 5c 4c     "R.E.C.!.....e\L
    40ab:	aa 88 9b c8 f4 68 01 21 aa 0f f9 93 1f 69 54 4c     .....h.!.....iTL
    40bb:	aa 98 bb ec 91 02 21 ab 12 f9 93 1f 65 5c 4c 16     ......!.....e\L.
    40cb:	11 37 a9 42 c2 e2 d1 02 21 ac 13 f9 93 1f 69 54     .7.B....!.....iT
    40db:	4c 8a 98 98 9b 44 21 71 f1 48 01 21 ad 11 f9 93     L....D!q.H.!....
    40eb:	1f 93 98 24 29 58 44 c5 a4 c7 04 00 21 ae 12 f9     ...$)XD.....!...
    40fb:	93 1f 93 98 24 29 0e 24 42 d2 a4 c7 04 00 21 af     ....$).$B.....!.
    410b:	16 f9 93 1f 2e 61 48 50 c4 90 48 5c 60 54 44 1c     .....aHP..H\`TD.
    411b:	59 3c 0a 00 21 b0 11 f9 93 1f 2c 2e ce 28 26 2a     Y<..!.....,..(&*
    412b:	24 30 ef c1 01 21 b1 11 f9 93 1f 30 32 e6 24 28     $0...!.....02.$(
    413b:	26 51 60 ee 11 01 21 b2 12 f9 93 1f 32 30 57 21     &Q`...!.....20W!
    414b:	41 31 31 46 91 f1 48 00 21 b3 0e f9 93 1f 28 30     A11F..H.!.....(0
    415b:	6f 82 d2 dc a5 47 21 b4 0e f9 93 1f 5d 61 ce 22     o....G!.....]a."
    416b:	52 cd c5 23 21 b5 11 f9 93 1f 51 60 a2 98 44 21     R..#!.....Q`..D!
    417b:	37 91 f1 68 01 21 b6 13 f9 93 1f c5 54 4c aa 90     7..h.!......TL..
    418b:	28 89 34 11 73 f1 98 01 21 b7 14 f9 93 1f 7c 2a     (.4.s...!.....|*
    419b:	26 55 48 54 48 4c 44 aa b9 78 4c 00 21 b8 13 f9     &UHTHLD..xL.!...
    41ab:	93 1f e8 26 70 4c 2e 22 32 30 32 61 3c 34 00 21     ...&pL."202a<4.!
    41bb:	b9 19 f9 93 1f 3a 24 2a 22 ec 24 22 2c 24 59 44     .....:$*".$",$YD
    41cb:	c8 59 44 54 48 3c 34 00 21 ba 16 f9 93 1f a1 48     .YDTH<4.!......H
    41db:	4c cc 44 4c 44 84 54 48 54 4c aa 79 a4 00 21 bb     L.DLD.THTL.y..!.
    41eb:	15 f9 93 1f 61 88 cc 4c 44 36 21 51 21 51 31 a9     ....a..LD6!Q!Q1.
    41fb:	e6 11 02 21 d0 11 f9 93 1f 65 5c dc 81 e4 41 48     ...!.....e\...AH
    420b:	64 3c 5a 00 21 d1 1a f9 93 1f 2e 45 94 84 4c 44     d<Z.!......E..LD
    421b:	46 11 61 11 61 11 61 11 61 11 61 11 f1 08 21 d2     F.a.a.a.a.a...!.
    422b:	10 f9 93 1f 6d 64 c8 41 e4 81 5c 7a 94 00 21 d3     ....md.A..\z..!.
    423b:	1c f9 93 1f 2c 22 2c 22 2c 22 2c 22 2c 22 2c 22     ....,",",",",","
    424b:	28 22 1b 09 a9 88 b8 78 14 00 21 d4 14 f9 93 1f     (".....x..!.....
    425b:	65 44 54 4c cc 45 5c c4 4d aa 88 78 94 00 21 d5     eDTL.E\.M..x..!.
    426b:	1a f9 93 1f 2e 45 94 84 4c 44 46 11 61 11 41 11     .....E..LDF.a.A.
    427b:	d9 48 48 45 c4 c5 a3 00 21 d6 14 f9 93 1f 9d 4d     .HHE....!......M
    428b:	48 54 4c 90 4c 8a 98 90 94 f1 28 01 21 d7 15 f9     HTL.L.....(.!...
    429b:	93 1f a1 55 48 50 4c 1a 91 98 88 a8 90 a0 78 b4     ...UHPL.......x.
    42ab:	00 21 d8 14 f9 93 1f 65 92 34 11 31 31 42 31 51     .!.....e.4.11B1Q
    42bb:	21 31 f6 e8 00 21 d9 14 f9 93 1f 6d 50 48 54 44     !1...!.....mPHTD
    42cb:	4c 88 4c 46 21 51 f6 08 01 21 e6 12 f9 93 1f 65     L.LF!Q...!.....e
    42db:	9c 58 c4 5d 44 84 89 60 3c 5a 00 21 e7 19 f9 93     .X.]D..`<Z.!....
    42eb:	1f 2e 45 54 4c cc c4 50 44 58 44 58 44 58 44 58     ..ETL..PDXDXDXDX
    42fb:	44 d8 3c 02 21 e8 11 f9 93 1f 6d a0 88 45 ba 8b     D.<.!.....m..E..
    430b:	30 b9 78 94 00 21 e9 1a f9 93 1f 6c 2c 22 2c 22     0.x..!.....l,","
    431b:	2c 22 2c 22 2c 22 68 62 26 55 44 5c 3c 0a 00 25     ,",","hb&UD\<..%
    432b:	80 0a f9 93 e1 ff 1e c7 00 25 81 0a f9 93 1f 3f     .........%.....?
    433b:	3e 38 20 25 82 0b f9 93 1f 5f 1e fc 20 00 25 83     >8 %....._.. .%.
    434b:	0b f9 93 1f cf 0e fe 41 01 25 84 0b f9 93 1f 37     .......A.%.....7
    435b:	07 ff 07 02 25 85 0b f9 93 1f cb 83 ff 07 04 25     ....%..........%
    436b:	86 0b f9 93 1f d9 c1 ff 1f 04 25 87 0b f9 93 1f     ..........%.....
    437b:	e6 e0 ff 3f 28 25 88 0a f9 93 e1 ff ff 03 01 25     ...?(%.........%
    438b:	89 25 f9 93 e1 20 e2 20 e2 20 e2 20 e2 20 e2 20     .%... . . . . . 
    439b:	e2 20 e2 20 e2 20 e2 20 e2 20 e2 20 e2 20 e2 20     . . . . . . . . 
    43ab:	e2 20 02 00 25 8a 0a f9 93 e1 e4 ff 9f 00 25 8b     . ..%.........%.
    43bb:	0a f9 93 c1 c6 ff df 00 25 8c 0a f9 93 a1 a8 ff     ........%.......
    43cb:	1f 01 25 8d 0a f9 93 61 6c ff 9f 01 25 8e 0a f9     ..%....al...%...
    43db:	93 41 4e ff df 01 25 8f 0a f9 93 21 30 ff 1f 02     .AN...%....!0...
    43eb:	25 90 08 f9 93 8b ff 3f 25 91 19 f9 93 21 22 a7     %......?%....!".
    43fb:	11 99 46 e4 34 22 d3 88 9c 46 64 1a 91 d3 88 2c     ..F.4"...Fd....,
    440b:	00 25 92 10 f9 93 21 22 ff ff ff ff ff ff ff ff     .%....!"........
    441b:	03 25 93 1f f9 93 e1 40 22 17 07 13 59 1c 4c e4     .%.....@"...Y.L.
    442b:	e2 60 22 8b 83 89 5c 1c 4c 64 71 30 91 8b 03 01     .`"...\.Ldq0....
    443b:	25 94 0a f9 93 e1 01 3d 7e 0c 25 95 08 f9 93 31     %......=~.%....1
    444b:	ff 3f 25 96 0b f9 93 1f 37 45 fd 11 00 25 97 0a     .?%.....7E...%..
    445b:	f9 93 1f 87 54 fc 01 25 98 0b f9 93 a1 a8 df e3     ....T..%........
    446b:	05 00 25 99 0c f9 93 a1 a8 1f 1d fc 1f 08 25 9a     ..%...........%.
    447b:	0b f9 93 a1 a8 5f 52 f1 07 25 9b 0b f9 93 e1 ff     ....._R..%......
    448b:	a0 a8 3f 02 25 9c 09 f9 93 e1 ff 8a 7f 25 9d 0a     ..?.%........%..
    449b:	f9 93 8b bf c7 31 00 25 9e 0c f9 93 8b 5f 1d 08     .....1.%....._..
    44ab:	f5 47 00 25 9f 0b f9 93 8b 5f 1d fc 1f 18 25 a0     .G.%....._....%.
    44bb:	0b f9 93 1f dd c9 bf 47 07 25 a1 15 f9 93 1f dd     .......G.%......
    44cb:	49 54 48 54 48 54 48 54 48 54 c8 3d 3a 00 25 a2     ITHTHTHTHT.=:.%.
    44db:	15 f9 93 1f 61 4d 54 48 54 48 54 48 54 48 54 4c     ....aMTHTHTHTHTL
    44eb:	3d 42 00 25 a3 18 f9 93 1f dd 49 54 48 c4 44 48     =B.%......ITH.DH
    44fb:	c4 44 48 c4 44 48 54 c8 3d 3a 00 25 a4 13 f9 93     .DH.DHT.=:.%....
    450b:	1f dd 49 54 c8 49 54 c8 49 54 c8 3d 3a 00 25 a5     ..IT.IT.IT.=:.%.
    451b:	16 f9 93 1f dd 49 44 26 11 99 44 64 12 91 49 44     .....ID&..Dd..ID
    452b:	26 f7 e8 00 25 a6 14 f9 93 1f dd 49 44 26 27 11     &...%......ID&'.
    453b:	99 9c 44 64 72 8f 0e 00 25 a7 14 f9 93 1f dd 49     ..Ddr...%......I
    454b:	6e 22 42 64 44 22 62 42 32 b9 47 07 25 a8 14 f9     n"BdD"bB2.G.%...
    455b:	93 1f dd 49 2e 62 42 64 44 62 22 42 32 b9 47 07     ...I.bBdDb"B2.G.
    456b:	25 a9 1a f9 93 1f dd 89 44 84 48 4c 44 88 44 84     %.......D.HLD.D.
    457b:	48 44 4c 88 44 84 c8 3d 3a 00 25 aa 0b f9 93 1f     HDL.D..=:.%.....
    458b:	e3 b1 f5 18 03 25 ab 0d f9 93 1f e3 b1 88 b0 79     .....%.........y
    459b:	8c 01 25 ac 0b f9 93 1f fd c1 1f cc 63 25 ad 0d     ..%.........c%..
    45ab:	f9 93 1f fd c1 9c ba 83 79 0c 25 ae 0b f9 93 1f     ........y.%.....
    45bb:	bc a8 7f 0f 0e 25 af 19 f9 93 1f bc 28 26 28 26     .....%......(&(&
    45cb:	28 26 28 26 28 26 28 26 28 26 a8 1e 1c 00 25 b0     (&(&(&(&(&....%.
    45db:	10 f9 93 1f 8b 83 88 83 07 14 07 f1 58 00 25 b1     ............X.%.
    45eb:	11 f9 93 1f 8b 83 88 30 39 b1 88 83 78 2c 00 25     .......09...x,.%
    45fb:	b2 14 f9 93 1f 2e 30 6e 6c aa a8 e6 e4 e2 e0 80     ......0nl.......
    460b:	1e 18 00 25 b3 19 f9 93 1f 2e 30 2e 22 2c 22 2a     ...%......0.","*
    461b:	26 28 26 55 48 54 44 dc c1 3c 30 00 25 b4 10 f9     &(&UHTD..<0.%...
    462b:	93 1f 69 60 dc d8 54 51 cd 3d 3a 00 25 b5 14 f9     ..i`..TQ.=:.%...
    463b:	93 1f 69 60 5c 44 58 44 54 4c 50 4c cc 3d 3a 00     ..i`\DXDTLPL.=:.
    464b:	25 b6 14 f9 93 1f 58 8e ca e6 20 e2 e0 60 c2 86     %.....X... ..`..
    465b:	4a 1e 11 00 25 b7 18 f9 93 1f 58 2e 42 2a 46 26     J...%.....X.B*F&
    466b:	4a 22 4e 4a 22 46 26 42 4a 1e 11 00 25 b8 10 f9     J"NJ"F&BJ...%...
    467b:	93 1f 5d e0 58 d1 49 d1 58 3c 6a 00 25 b9 13 f9     ..].X.I.X<j.%...
    468b:	93 1f 5d e0 58 88 50 90 48 88 d0 58 3c 6a 00 25     ..].X.P.H..X<j.%
    469b:	ba 0f f9 93 1f fd 98 cd c1 41 cc 3c 66 00 25 bb     .........A.<f.%.
    46ab:	10 f9 93 1f fd 58 c8 4c 14 c9 cc 3c 66 00 25 bc     .....X.L...<f.%.
    46bb:	14 f9 93 1f e6 e0 80 e2 e4 a6 a8 6a 6c 2e 30 1e     ...........jl.0.
    46cb:	05 00 25 bd 19 f9 93 1f e6 60 2e 22 2a 24 2a 26     ..%......`."*$*&
    46db:	51 4c 54 44 58 44 5c 60 3c 0a 00 25 be 10 f9 93     QLTDXD\`<..%....
    46eb:	1f dd 4d 51 d5 d8 5c 60 3c 52 00 25 bf 13 f9 93     ..MQ..\`<R.%....
    46fb:	1f dd 4d a2 98 a8 88 b0 88 b8 c0 78 a4 00 25 c0     ..M........x..%.
    470b:	14 f9 93 1f 91 14 8d c5 c1 c1 c4 41 8c 15 9d 3c     ...........A...<
    471b:	30 00 25 c1 18 f9 93 1f 91 94 44 8c 4c 84 94 5c     0.%.......D.L..\
    472b:	84 54 8c 4c 94 44 9c 3c 30 00 25 c2 10 f9 93 1f     .T.L.D.<0.%.....
    473b:	75 d8 50 c9 51 d9 60 3c 3a 00 25 c3 13 f9 93 1f     u.P.Q.`<:.%.....
    474b:	75 d8 90 48 88 50 90 48 d8 60 3c 3a 00 25 c4 0e     u..H.P.H.`<:.%..
    475b:	f9 93 1f b3 99 83 83 18 b3 79 0c 25 c5 0f f9 93     .........y.%....
    476b:	1f b3 99 11 aa 98 91 b0 79 0c 25 c6 13 f9 93 1f     ........y.%.....
    477b:	45 dc 54 cd c5 81 c4 4d d5 5c 3c 0a 00 25 c7 17     E.T....M.\<..%..
    478b:	f9 93 1f 45 5c 44 54 4c aa 88 b8 88 a8 98 54 11     ...E\DTL......T.
    479b:	71 f1 28 00 25 c8 18 f9 93 1f 45 5c 44 54 4c 92     q.(.%.....E\DTL.
    47ab:	14 21 23 11 21 69 52 45 c4 c5 a3 00 25 c9 13 f9     .!#.!iRE....%...
    47bb:	93 1f e5 54 4c 92 2c 26 42 b2 49 35 8f 12 00 25     ...TL.,&B.I5...%
    47cb:	ca 17 f9 93 1f 45 60 5c 44 58 44 54 4c 54 44 58     .....E`\DXDTLTDX
    47db:	44 5c 60 3c 0a 00 25 cb 13 f9 93 1f e5 54 4c aa     D\`<..%......TL.
    47eb:	90 a8 90 a8 98 54 f3 28 01 25 cc 11 f9 93 1f 69     .....T.(.%.....i
    47fb:	58 4c 70 54 70 4c 58 3c 52 00 25 cd 16 f9 93 1f     XLpTpLX<R.%.....
    480b:	e5 94 84 4c 44 26 11 99 44 64 23 21 35 8f 12 00     ...LD&..Dd#!5...
    481b:	25 ce 12 f9 93 1f e5 54 4c 92 2c 32 c9 26 d5 3c     %......TL.,2.&.<
    482b:	4a 00 25 cf 0f f9 93 1f e5 54 cd c9 9b aa 79 94     J.%......T....y.
    483b:	00 25 d0 15 f9 93 1f e5 d4 44 0c 49 08 49 08 49     .%.......D.I.I.I
    484b:	cc 44 d4 3c 4a 00 25 d1 15 f9 93 1f e5 54 c4 4c     .D.<J.%......T.L
    485b:	08 49 08 49 08 4d c4 d4 3c 4a 00 25 d2 10 f9 93     .I.I.M..<J.%....
    486b:	1f e5 54 4c aa 90 37 55 f3 28 01 25 d3 11 f9 93     ..TL..7U.(.%....
    487b:	1f e5 54 cd c9 49 54 4c aa 79 94 00 25 d4 14 f9     ..T..ITL.y..%...
    488b:	93 1f e5 54 c4 4c 08 49 08 49 54 4c aa 79 94 00     ...T.L.I.ITL.y..
    489b:	25 d5 11 f9 93 1f e5 54 c4 4c 08 c9 9b aa 79 94     %......T.L....y.
    48ab:	00 25 d6 0e f9 93 1f a5 d8 14 67 73 f2 48 01 25     .%........gs.H.%
    48bb:	d7 0f f9 93 1f a9 dc 18 15 ab 31 79 94 00 25 d8     ..........1y..%.
    48cb:	0f f9 93 e1 1f d8 54 b1 aa 39 f8 03 03 25 d9 15     ......T..9...%..
    48db:	f9 93 e1 0f 68 2a 56 54 48 54 48 54 ac a8 39 f8     ....h*VTHTHT..9.
    48eb:	01 01 25 da 11 f9 93 e1 0f 68 2a 56 54 48 54 c4     ..%......h*VTHT.
    48fb:	e3 06 00 25 db 10 f9 93 1f 37 11 15 12 15 2b 6a     ...%.....7....+j
    490b:	0e 7e 40 25 dc 0d f9 93 1f a5 58 5c 60 3c 4e 01     .~@%......X\`<N.
    491b:	25 dd 0c f9 93 1f a9 64 c2 78 1c 01 25 de 0d f9     %......d.x..%...
    492b:	93 1f a7 81 71 61 f2 28 01 25 df 0d f9 93 1f 47     ....qa.(.%.....G
    493b:	81 91 91 f2 48 01 25 e0 0f f9 93 1f e5 54 4c aa     ....H.%......TL.
    494b:	90 a8 78 1c 01 25 e1 0f f9 93 1f 47 51 21 51 31     ..x..%.....GQ!Q1
    495b:	a9 e6 51 02 25 e2 10 f9 93 1f 75 9c d8 14 51 8d     ..Q.%.....u...Q.
    496b:	c9 3d 3a 00 25 e3 10 f9 93 1f 5d a0 dc 18 55 91     .=:.%.....]...U.
    497b:	cd 3d 3a 00 25 e4 10 f9 93 1f dd 89 4d 11 d5 98     .=:.%.......M...
    498b:	5c 3c 6a 00 25 e5 10 f9 93 1f dd 8d 51 15 d9 9c     \<j.%.......Q...
    499b:	60 3c 3a 00 25 e6 11 f9 93 1f 9b a9 98 a0 98 a0     `<:.%...........
    49ab:	98 a8 79 6c 00 25 e7 15 f9 93 1f dd 09 49 08 49     ..yl.%.......I.I
    49bb:	08 49 08 49 08 49 c8 3d 3a 00 25 e8 15 f9 93 1f     .I.I.I.=:.%.....
    49cb:	dd 49 08 49 08 49 08 49 08 49 08 c9 3d 3a 00 25     .I.I.I.I.I..=:.%
    49db:	e9 14 f9 93 1f dd c9 49 45 08 49 c8 4c 88 50 c8     .......IE.I.L.P.
    49eb:	3d 3a 00 25 ea 13 f9 93 1f dd 49 90 48 cc 48 08     =:.%......I.H.H.
    49fb:	49 44 c9 7b 74 00 25 eb 0e f9 93 1f dd 49 fe 7f     ID.{t.%......I..
    4a0b:	72 8f 0e 00 25 ec 1a f9 93 1f 2e 30 2e 22 2c 22     r...%......0.","
    4a1b:	2a 26 28 22 4d c4 44 48 16 71 07 f3 c0 00 25 ed     *&("M.DH.q....%.
    4a2b:	18 f9 93 1f 2e 30 6e 6c 6a 22 68 22 86 24 84 24     .....0nlj"h".$.$
    4a3b:	a2 e6 60 1e 18 00 25 ee 18 f9 93 1f 2e 30 6e 6c     ..`...%......0nl
    4a4b:	2a 62 28 62 26 84 24 84 22 e6 e0 1e 18 00 25 ef     *b(b&.$.".....%.
    4a5b:	12 f9 93 1f bc 26 2a 22 4e 77 11 51 31 f5 e0 00     .....&*"Nw.Q1...
    4a6b:	25 f0 12 f9 93 1f dd 49 3e 21 49 15 12 15 72 8f     %......I>!I...r.
    4a7b:	0e 00 25 f1 12 f9 93 1f dd 49 54 48 54 08 49 7e     ..%......ITHT.I~
    4a8b:	72 8f 0e 00 25 f2 12 f9 93 1f dd 49 54 48 54 48     r...%......ITHTH
    4a9b:	08 49 3e b9 47 07 25 f3 12 f9 93 1f dd 49 7e 42     .I>.G.%......I~B
    4aab:	12 15 12 15 72 8f 0e 00 25 f4 12 f9 93 1f 61 4d     ....r...%.....aM
    4abb:	48 9e 90 a4 0a 89 8a a9 47 08 25 f5 12 f9 93 1f     H.......G.%.....
    4acb:	61 4d 54 48 54 08 49 7e 53 8f 10 00 25 f6 12 f9     aMTHT.I~S...%...
    4adb:	93 1f 61 4d 54 48 54 48 08 49 be a9 47 08 25 f7     ..aMTHTH.I..G.%.
    4aeb:	12 f9 93 1f 61 4d 48 3e 21 89 0a 89 8a a9 47 08     ....aMH>!.....G.
    4afb:	25 f8 11 f9 93 1f 0b 9b 44 21 51 11 61 72 f1 a8     %.......D!Q.ar..
    4b0b:	01 25 f9 12 f9 93 1f 0b a3 98 a8 90 b0 88 38 c1     .%............8.
    4b1b:	78 84 00 25 fa 12 f9 93 1f 8b 40 b9 88 b0 90 a8     x..%......@.....
    4b2b:	98 20 7b 84 00 25 fb 13 f9 93 1f 0b 9b a0 98 a0     . {..%..........
    4b3b:	98 a0 98 a0 18 7b 84 00 25 fc 0b f9 93 1f 0b 1b     .....{..%.......
    4b4b:	bf 47 08 25 fd 11 f9 93 1f db a2 98 a0 98 a0 98     .G.%............
    4b5b:	a0 7a 84 00 25 fe 0b f9 93 1f db a2 de 23 04 25     .z..%........#.%
    4b6b:	ff 12 f9 93 1f b3 38 b1 88 a8 90 a0 98 18 7b 84     ......8.......{.
    4b7b:	00 26 00 14 f9 93 1f 2e 2a d1 54 49 44 45 48 d5     .&......*.TIDEH.
    4b8b:	50 54 7a a4 00 26 01 0c f9 93 1f a5 58 cd 3d ae     PTz..&......X.=.
    4b9b:	01 26 02 11 f9 93 1f 2e ac e6 2a 30 b3 88 b8 78     .&........*0...x
    4bab:	b4 00 26 03 1c f9 93 27 22 93 29 09 89 90 98 90     ..&....'".).....
    4bbb:	88 ac 22 d2 64 92 15 49 56 31 15 f1 c0 00 26 04     ..".d..IV1....&.
    4bcb:	1b f9 93 3d 2e 30 24 28 24 2a 24 48 22 24 22 24     ...=.0$($*$H"$"$
    4bdb:	45 90 48 50 92 30 79 24 00 26 05 15 f9 93 1f 45     E.HP.0y$.&.....E
    4beb:	60 dc cc 81 c4 4d 91 84 8c 92 a8 78 68 00 26 06     `....M.....xh.&.
    4bfb:	16 f9 93 1f 45 60 5c 44 0c 05 45 54 4c 26 59 64     ....E`\D..ETL&Yd
    4c0b:	22 23 0f 0d 26 07 0f f9 93 1f 51 5c 2e 53 c4 89     "#..&.....Q\.S..
    4c1b:	cd 43 03 26 08 1a f9 93 1f fa 24 28 26 51 48 54     .C.&......$(&QHT
    4c2b:	44 58 48 54 4c 44 48 90 48 cc 3c 34 00 26 09 11     DXHTLDH.H.<4.&..
    4c3b:	f9 93 1f 9b a9 98 54 21 b9 8a 49 35 8f 00 26 0a     ......T!..I5..&.
    4c4b:	14 f9 93 1f e5 54 4c aa 90 a8 90 a8 98 2c b2 49     .....TL......,.I
    4c5b:	0f 0e 26 0b 14 f9 93 1f 61 4c 8a 6c b2 0a 89 0a     ..&.....aL.l....
    4c6b:	89 8a 49 35 8f 00 26 0c 13 f9 93 1f a3 c0 b0 a9     ..I5..&.........
    4c7b:	98 a0 98 a0 98 a8 79 14 00 26 0d 19 f9 93 7b 2a     ......y..&....{*
    4c8b:	26 28 26 28 26 6a 2c 6c 2a 26 28 26 28 26 6a 1e     &(&(&j,l*&(&(&j.
    4c9b:	05 00 26 0e 17 f9 93 1f bc e6 42 8a 62 42 44 42     ..&.......B.bBDB
    4cab:	46 89 8c 04 c5 81 3d 30 00 26 0f 15 f9 93 1f 61     F.....=0.&.....a
    4cbb:	4d 54 44 c8 88 44 fe 24 8b b8 83 79 60 00 26 10     MTD..D.$...y`.&.
    4ccb:	1c f9 93 f5 24 2a 24 2a 24 2a 24 2a 24 2a 24 2a     ....$*$*$*$*$*$*
    4cdb:	24 2a 24 2a 24 2a e4 1e 1a 00 26 11 21 f9 93 f5     $*$*$*....&.!...
    4ceb:	24 2a 24 48 24 48 24 26 22 24 26 22 44 22 24 44     $*$H$H$&"$&"D"$D
    4cfb:	22 24 45 4c 48 44 4c c8 3d 34 00 26 12 1b f9 93     "$ELHDL.=4.&....
    4d0b:	f5 44 46 44 46 24 22 93 88 4c 72 91 49 44 26 32     .DFDF$"..Lr.ID&2
    4d1b:	22 32 22 f7 d0 00 26 13 1b f9 93 1f 2a 26 28 26     "2"...&.....*&(&
    4d2b:	2a 22 2c 22 2e 30 2e 22 2c 22 2a 26 28 26 1e 1c     *",".0.","*&(&..
    4d3b:	00 26 16 19 f9 93 1f 2e 45 54 4c 50 4c aa 90 a8     .&......ETLPL...
    4d4b:	90 a8 90 a8 90 a8 90 7b 68 00 26 17 0f f9 93 1f     .......{h.&.....
    4d5b:	2e 6e aa a8 e6 e4 ef a1 01 26 19 13 f9 93 1f e9     .n.......&......
    4d6b:	54 8d c9 89 4d 45 cc 48 98 3c 38 00 26 1a 11 f9     T...ME.H.<8.&...
    4d7b:	93 1f fd 41 0c 45 d0 44 50 95 3c 36 00 26 1b 11     ...A.E.DP.<6.&..
    4d8b:	f9 93 1f fd 41 44 04 4d c4 50 99 3c 56 00 26 1c     ....AD.M.P.<V.&.
    4d9b:	11 f9 93 1f fd 41 4c 50 9a a0 10 29 79 6c 00 26     .....ALP...)yl.&
    4dab:	1d 15 f9 93 1f 71 60 9c 94 44 50 4c 50 4c 54 48     .....q`..DPLPLTH
    4dbb:	14 3d 38 00 26 1e 11 f9 93 1f fd 41 44 50 4c 22     .=8.&......ADPL"
    4dcb:	91 30 79 ac 00 26 1f 14 f9 93 1f 25 55 48 50 4c     .0y..&.....%UHPL
    4ddb:	50 4c 94 44 9c 60 7a 70 00 26 54 19 f9 93 3b 6e     PL.D.`zp.&T...;n
    4deb:	28 24 c9 c4 48 54 48 54 4c a2 98 a0 98 54 21 f7     ($..HTHTL....T!.
    4dfb:	d0 00 26 55 1a f9 93 3b 2e 22 48 46 24 22 93 a8     ..&U...;."HF$"..
    4e0b:	90 a8 98 44 31 41 31 a9 42 ee a1 01 26 56 1b f9     ...D1A1.B...&V..
    4e1b:	93 1f 28 62 22 64 62 24 2a 24 2a 26 51 4c 50 4c     ..(b"db$*$*&QLPL
    4e2b:	50 4c aa 90 7b 68 00 26 57 18 f9 93 1f 2e 45 54     PL..{h.&W.....ET
    4e3b:	4c 50 4c 50 4c 50 4c d4 54 4c aa 90 7b 68 00 26     LPLPLPL.TL..{h.&
    4e4b:	58 1a f9 93 1f 32 88 22 24 2a 24 2a 46 26 2a 24     X....2."$*$*F&*$
    4e5b:	28 26 51 48 54 c8 3d 34 00 26 59 15 f9 93 1f a5     (&QHT.=4.&Y.....
    4e6b:	58 48 54 48 98 58 48 54 48 50 1a 7b 70 00 26 5a     XHTH.XHTHP.{p.&Z
    4e7b:	11 f9 93 3b 6e 28 24 c9 37 45 6d 4e ee a1 01 26     ...;n($.7EmN...&
    4e8b:	5b 12 f9 93 3b 6e e8 24 22 93 37 45 6d 4e ee a1     [...;n.$".7EmN..
    4e9b:	01 26 5c 11 f9 93 1f 28 62 22 e4 9b a2 6e 4e ee     .&\....(b"...nN.
    4eab:	a1 01 26 5d 14 f9 93 1f 2e 6e 6a 22 68 22 a8 d5     ..&].....nj"h"..
    4ebb:	54 cd c9 3d 34 00 26 5e 13 f9 93 1f 32 c8 84 42     T..=4.&^....2..B
    4ecb:	e4 c6 8a a8 c6 e4 3d 34 00 26 5f 11 f9 93 1f a5     ......=4.&_.....
    4edb:	18 15 99 18 15 91 8d 3d 38 00 26 60 13 f9 93 3b     .......=8.&`...;
    4eeb:	6e 6c aa a8 e6 e4 a6 2c 6e aa 1e 1c 00 26 61 19     nl.....,n....&a.
    4efb:	f9 93 57 42 26 24 5f 85 44 c5 24 8a 09 8a 89 8a     ..WB&$_.D.$.....
    4f0b:	08 8b 88 8b 47 01 26 62 1a f9 93 3b 2e 22 2c 22     ....G.&b...;.","
    4f1b:	2a 26 28 26 55 4c a2 98 a8 88 b0 88 b8 78 14 00     *&(&UL.......x..
    4f2b:	26 63 16 f9 93 3b 6e aa a8 26 62 22 e2 e0 81 85     &c...;n..&b"....
    4f3b:	44 84 54 dc 3c 02 26 64 1b f9 93 3b 2e 22 2c 22     D.T.<.&d...;.","
    4f4b:	2a 26 28 26 55 48 54 8c 84 54 44 54 4c cc 3d 34     *&(&UHT..TDTL.=4
    4f5b:	00 26 65 11 f9 93 57 42 e6 e4 9b a2 56 63 73 f1     .&e...WB....Vcs.
    4f6b:	28 00 26 66 13 f9 93 3b 6e 6c aa a8 e6 a6 a8 6a     (.&f...;nl.....j
    4f7b:	6c 2e 1e 05 00 26 67 1c f9 93 3b 2e 22 2a 26 28     l....&g...;."*&(
    4f8b:	26 66 62 22 24 22 44 4e 64 24 42 22 42 2a 6e 1e     &fb"$"DNd$B"B*n.
    4f9b:	01 26 80 11 f9 93 1f fa 22 4e 9b 18 39 75 11 f7     .&......"N..9u..
    4fab:	d0 00 26 81 13 f9 93 1f fa 22 4e 22 4a 4e ab 08     ..&......"N"JN..
    4fbb:	b9 88 7b 68 00 26 82 16 f9 93 1f fa 22 4e 22 4a     ..{h.&......"N"J
    4fcb:	4e 26 46 4e 2a 42 2e e2 1e 1a 00 26 83 15 f9 93     N&FN*B.....&....
    4fdb:	1f fa 22 4e 22 26 42 4e 8b 98 08 b9 88 7b 68 00     .."N"&BN.....{h.
    4feb:	26 84 18 f9 93 1f fa 22 4e 22 26 42 4e 26 46 4e     &......"N"&BN&FN
    4ffb:	22 26 42 2e e2 1e 1a 00 26 85 19 f9 93 1f fa 22     "&B.....&......"
    500b:	4e 22 26 42 4e 22 26 42 4e 22 26 42 2e e2 1e 1a     N"&BN"&BN"&B....
    501b:	00 27 13 12 f9 93 1f 51 60 ba c0 20 89 28 89 30     .'.....Q`.. .(.0
    502b:	79 a4 00 27 14 13 f9 93 1f 8d 9c 32 39 91 09 99     y..'.......29...
    503b:	09 21 2a 7a 14 00 27 15 16 f9 93 1f 5d 54 c4 cc     .!*z..'.....]T..
    504b:	c4 9a aa a9 9a 89 35 13 51 f1 40 00 27 16 15 f9     ......5.Q.@.'...
    505b:	93 1f d9 8c cd 05 c5 d1 d0 05 c5 41 c4 cd 3c 0c     ...........A..<.
    506b:	00 27 17 14 f9 93 1f 65 4c 54 44 5c 8a a8 98 a0     .'.....eLTD\....
    507b:	98 84 f1 68 00 27 18 14 f9 93 1f a1 88 10 99 dc     ...h.'..........
    508b:	94 84 90 84 8c 9c 3c 12 00 27 4f 11 f9 93 1f f8     ......<..'O.....
    509b:	24 2a 24 8a ab 83 92 f7 c0 00 27 50 10 f9 93 1f     $*$.......'P....
    50ab:	fc e4 e0 60 8a 57 21 f7 e0 00 27 51 17 f9 93 1f     ...`.W!...'Q....
    50bb:	d9 49 94 44 94 44 94 44 94 44 94 c4 41 c8 3d 34     .I.D.D.D.D..A.=4
    50cb:	00 27 52 17 f9 93 1f dd c5 41 44 94 44 94 44 94     .'R......AD.D.D.
    50db:	44 94 44 94 c4 3d 38 00 00 00                       D.D..=8...

000050e5 <u8g2_font_8x13_mr>:
    50e5:	5f 02 03 02 04 04 01 02 05 08 0d 00 fe 09 fe 09     _...............
    50f5:	00 01 d7 03 dc 05 8f 20 08 d8 c1 e7 ff 33 00 21     ....... .....3.!
    5105:	0b d8 c1 a7 e6 7d a7 e4 64 00 22 0c d8 c1 27 46     .....}..d."...'F
    5115:	61 14 46 39 ff 06 23 12 d8 c1 67 8d c2 28 1b b6     a.F9..#...g..(..
    5125:	28 1b b6 28 8c 72 56 00 24 12 d8 c1 a7 c6 43 96     (..(.rV.$.....C.
    5135:	a4 49 3c 27 69 92 0d 71 4e 06 25 12 d8 c1 27 66     .I<'i..qN.%...'f
    5145:	51 12 65 51 9c c7 a5 30 29 65 39 11 26 11 d8 c1     Q.eQ...0)e9.&...
    5155:	e7 ac 46 61 94 aa 51 12 65 e1 92 d3 00 27 09 d8     ..Fa..Q.e....'..
    5165:	c1 a7 e6 75 fe 15 28 0f d8 c1 a7 c7 79 9c d7 91     ...u..(.....y...
    5175:	3c 47 72 22 00 29 0e d8 c1 27 e6 48 9e 23 79 39     <Gr".)...'.H.#y9
    5185:	8f 73 06 2a 0e d8 c1 27 46 a9 38 8c 6a 94 f3 0b     .s.*...'F.8.j...
    5195:	00 2b 0b d8 c1 e7 5e 1d d4 3c e7 05 2c 09 d8 c1     .+....^..<..,...
    51a5:	e7 3f ae 6a 4e 2d 0a d8 c1 e7 fb a0 f3 0b 00 2e     .?.jN-..........
    51b5:	0a d8 c1 e7 bf c6 73 8e 02 2f 0b d8 c1 67 c9 e3     ......s../...g..
    51c5:	be e7 4c 00 30 13 d8 c1 a7 aa 51 16 46 61 14 46     ..L.0.....Q.Fa.F
    51d5:	61 14 66 51 aa 53 01 31 0d d8 c1 a7 c6 6a 92 f7     a.fQ.S.1.....j..
    51e5:	3a e8 44 00 32 11 d8 c1 27 0e 59 18 85 79 9c aa     :.D.2...'.Y..y..
    51f5:	71 3e ec 34 00 33 10 d8 c1 a7 0d 7b 5c de 91 3c     q>.4.3.....{\..<
    5205:	0a b3 21 27 02 34 10 d8 c1 a7 c7 6a 12 46 59 b7     ..!'.4.....j.FY.
    5215:	61 ce 73 22 00 35 10 d8 c1 a7 0d 53 5e d9 b4 bc     a.s".5.....S^...
    5225:	14 66 43 4e 04 36 11 d8 c1 a7 8e 71 5e d9 b4 28     .fCN.6.....q^..(
    5235:	8c c2 6c c8 89 00 37 0d d8 c1 a7 0d 7b 5c 8f f3     ..l...7.....{\..
    5245:	38 cf 19 38 14 d8 c1 27 0e 59 18 85 51 98 0d 59     8..8...'.Y..Q..Y
    5255:	18 85 51 98 0d 39 11 39 11 d8 c1 27 0e 59 18 85     ..Q..9.9...'.Y..
    5265:	51 a6 2d 79 39 dc a9 00 3a 0d d8 c1 e7 1e cf 39     Q.-y9...:......9
    5275:	53 3c e7 28 00 3b 0c d8 c1 e7 1e cf 39 cb aa e6     S<.(.;......9...
    5285:	04 3c 0f d8 c1 67 89 bb 23 39 92 23 39 92 d3 00     .<...g..#9.#9...
    5295:	3d 0b d8 c1 e7 79 d8 89 c3 ce 15 3e 0f d8 c1 a7     =....y.....>....
    52a5:	e5 48 8e e4 48 8e c4 dd 59 00 3f 0f d8 c1 27 0e     .H..H...Y.?...'.
    52b5:	59 18 85 79 5c cf 29 39 15 40 15 d8 c1 27 0e 59     Y..y\.)9.@...'.Y
    52c5:	18 85 51 34 25 51 25 91 2a 51 8e 0c 39 11 41 14     ..Q4%Q%.*Q..9.A.
    52d5:	d8 c1 a7 aa 51 16 46 61 14 46 c3 14 46 61 14 e6     ....Q.Fa.F..Fa..
    52e5:	34 00 42 13 d8 c1 a7 0d 61 56 8c b2 6c 08 b3 62     4.B.....aV..l..b
    52f5:	94 65 43 4e 05 43 0e d8 c1 27 0e 59 18 e5 3d 66     .eCN.C...'.Y..=f
    5305:	43 4e 04 44 14 d8 c1 a7 0d 61 56 8c c2 28 8c c2     CN.D.....aV..(..
    5315:	28 8c b2 6c c8 a9 00 45 0f d8 c1 a7 0d 53 5e 1f     (..l...E.....S^.
    5325:	c2 bc 3e ec 34 00 46 0d d8 c1 a7 0d 53 5e 1f c2     ..>.4.F.....S^..
    5335:	bc 9d 05 47 11 d8 c1 27 0e 59 18 e5 4d 53 18 65     ...G...'.Y..MS.e
    5345:	da 92 d3 00 48 14 d8 c1 a7 85 51 18 85 51 18 0d     ....H.....Q..Q..
    5355:	53 18 85 51 18 85 39 0d 49 0c d8 c1 a7 0d 6a de     S..Q..9.I.....j.
    5365:	d7 41 27 02 4a 0c d8 c1 a7 0e 6a de 5b 71 a7 02     .A'.J.....j.[q..
    5375:	4b 12 d8 c1 a7 85 51 56 0a 93 54 4e d2 28 cc 8a     K.....QV..TN.(..
    5385:	39 0d 4c 0b d8 c1 a7 e5 fd 3e ec 34 00 4d 14 d8     9.L......>.4.M..
    5395:	c1 27 a5 49 9a 68 4a 4f 95 a8 92 26 69 92 e6 34     .'.I.hJO...&i..4
    53a5:	00 4e 15 d8 c1 a7 85 51 18 69 51 12 b5 44 99 14     .N.....Q.iQ..D..
    53b5:	46 61 14 e6 34 00 4f 14 d8 c1 27 0e 59 18 85 51     Fa..4.O...'.Y..Q
    53c5:	18 85 51 18 85 51 98 0d 39 11 50 10 d8 c1 a7 0d     ..Q..Q..9.P.....
    53d5:	5a 18 85 51 18 0d 5a de ce 02 51 16 d8 c1 27 0e     Z..Q..Z...Q...'.
    53e5:	59 18 85 51 18 85 51 18 25 51 4b 36 e4 48 0e 01     Y..Q..Q.%QK6.H..
    53f5:	52 14 d8 c1 a7 0d 5a 18 85 51 18 0d 5a 92 46 61     R.....Z..Q..Z.Fa
    5405:	56 cc 69 00 53 13 d8 c1 27 0e 59 18 e5 39 32 e4     V.i.S...'.Y..92.
    5415:	48 1e 85 d9 90 13 01 54 0b d8 c1 27 0d 43 98 f7     H......T...'.C..
    5425:	3b 19 55 14 d8 c1 a7 85 51 18 85 51 18 85 51 18     ;.U.....Q..Q..Q.
    5435:	85 51 98 0d 39 11 56 11 d8 c1 27 a5 49 1a 65 3d     .Q..9.V...'.I.e=
    5445:	26 69 92 26 71 4e 06 57 14 d8 c1 27 a5 49 9a a4     &i.&qN.W...'.I..
    5455:	49 9a 44 95 a8 12 55 3a 65 39 11 58 13 d8 c1 27     I.D...U:e9.X...'
    5465:	a5 49 1a 65 61 12 57 c2 2c 4a 93 34 a7 01 59 0f     .I.ea.W.,J.4..Y.
    5475:	d8 c1 27 a5 49 1a 65 61 12 e7 dd c9 00 5a 0d d8     ..'.I.ea.....Z..
    5485:	c1 a7 0d 7b dc 7b 3e ec 34 00 5b 0c d8 c1 27 0e     ...{.{>.4.[...'.
    5495:	61 de f7 21 27 02 5c 12 d8 c1 27 e5 39 92 23 39     a..!'.\...'.9.#9
    54a5:	92 23 39 92 23 79 4e 03 5d 0b d8 c1 a7 0d 79 3f     .#9.#yN.].....y?
    54b5:	0e 39 15 5e 0c d8 c1 a7 c6 49 98 e5 fc 1b 00 5f     .9.^.....I....._
    54c5:	0a d8 c1 e7 ff 38 0c 39 04 60 0a d8 c1 07 73 24     .....8.9.`....s$
    54d5:	e7 7f 06 61 10 d8 c1 e7 7d c8 91 6c 90 c2 28 d3     ...a....}..l..(.
    54e5:	96 9c 06 62 11 d8 c1 a7 e5 2d 9b 16 85 51 18 69     ...b.....-...Q.i
    54f5:	51 b2 13 01 63 0e d8 c1 e7 7d c8 c2 28 2f 66 43     Q...c....}..(/fC
    5505:	4e 04 64 12 d8 c1 67 c9 6b 4b 94 49 61 14 46 99     N.d...g.kK.Ia.F.
    5515:	b6 e4 34 00 65 10 d8 c1 e7 7d c8 c2 68 98 f2 30     ..4.e....}..h..0
    5525:	1b 72 22 00 66 0d d8 c1 a7 8e 59 3d 1e c4 bc 9d     .r".f.....Y=....
    5535:	01 67 10 d8 c1 e7 7d 89 b2 c6 31 47 86 2c cc 86     .g....}...1G.,..
    5545:	08 68 11 d8 c1 a7 e5 2d 9b 16 85 51 18 85 51 98     .h.....-...Q..Q.
    5555:	d3 00 69 0c d8 c1 67 ce 71 bd eb a0 13 01 6a 0c     ..i...g.q.....j.
    5565:	d8 c1 e7 92 e3 7a b7 8e 1b 00 6b 0f d8 c1 a7 e5     .....z....k.....
    5575:	6d a5 70 8d c2 ac 98 d3 00 6c 0b d8 c1 27 ea fd     m.p......l...'..
    5585:	3a e8 44 00 6d 10 d8 c1 e7 75 91 5a a2 4a 54 89     :.D.m....u.Z.JT.
    5595:	2a 69 4e 03 6e 10 d8 c1 e7 39 d9 b4 28 8c c2 28     *iN.n....9..(..(
    55a5:	8c c2 9c 06 6f 10 d8 c1 e7 7d c8 c2 28 8c c2 28     ....o....}..(..(
    55b5:	cc 86 9c 08 70 10 d8 c1 e7 39 d9 b4 28 8c b4 28     ....p....9..(..(
    55c5:	d9 f2 32 00 71 0f d8 c1 e7 7d 89 32 29 8c 32 6d     ..2.q....}.2).2m
    55d5:	c9 5b 00 72 0b d8 c1 e7 39 19 b3 7a 3b 03 73 10     .[.r....9..z;.s.
    55e5:	d8 c1 e7 7d c8 c2 4c 47 b4 30 1b 72 22 00 74 0d     ...}..LG.0.r".t.
    55f5:	d8 c1 67 cd e3 41 cc db c2 9d 08 75 0b d8 c1 e7     ..g..A.....u....
    5605:	39 eb 1f 97 9c 06 76 0d d8 c1 e7 39 eb 31 49 93     9.....v....9.1I.
    5615:	38 27 03 77 10 d8 c1 e7 b5 92 26 51 25 aa 74 ca     8'.w......&Q%.t.
    5625:	72 22 00 78 0f d8 c1 e7 39 cc a2 54 56 a3 2c cc     r".x....9..TV.,.
    5635:	69 00 79 12 d8 c1 e7 39 8c c2 28 8c 32 6d c9 a3     i.y....9..(.2m..
    5645:	30 1b 22 00 7a 0b d8 c1 e7 79 98 3b 0f 3b 0d 7b     0.".z....y.;.;.{
    5655:	10 d8 c1 27 8f 79 8e a4 3a 12 e7 39 b2 d3 00 7c     ...'.y..:..9...|
    5665:	09 d8 c1 a7 e6 fd 9d 0c 7d 10 d8 c1 a7 ed 48 1e     ........}.....H.
    5675:	e7 88 9a 23 79 b8 93 01 7e 0c d8 c1 27 46 59 52     ...#y...~...'FYR
    5685:	8b 72 fe 11 00 00 00 04 ff ff 00 00                 .r..........

00005691 <u8g2_font_5x7_mr>:
    5691:	5f 02 03 02 03 03 01 01 04 05 07 00 ff 06 ff 06     _...............
    56a1:	00 01 2a 02 72 03 93 20 05 7d 7d 1e 21 08 7d ad     ..*.r.. .}}.!.}.
    56b1:	b0 1d ca 01 22 09 7d 9d 52 12 25 39 03 23 0b 7d     ....".}.R.%9.#.}
    56c1:	ed 24 19 94 ca a0 94 01 24 09 7d ed a5 b6 25 c9     .$......$.}...%.
    56d1:	0c 25 09 7d 8d 30 ca 9a c2 18 26 0a 7d ed 2c c9     .%.}.0....&.}.,.
    56e1:	2a 59 12 03 27 07 7d ad b0 ce 02 28 08 7d ad 2c     *Y..'.}....(.}.,
    56f1:	6c cd 01 29 09 7d 9d 34 6c cb 11 00 2a 09 7d ed     l..).}.4l...*.}.
    5701:	24 cb b6 4a 0c 2b 09 7d fd 30 1a a4 30 07 2c 07     $..J.+.}.0..0.,.
    5711:	7d 7d 16 ad 06 2d 08 7d 7d ca 90 93 00 2e 07 7d     }}...-.}}......}
    5721:	7d ba a6 03 2f 07 7d 7d 24 6b 27 30 0c 7d ad 2c     }.../.}}$k'0.}.,
    5731:	89 92 28 89 92 2c 07 31 08 7d ad 4c 6c 9b 01 32     ..(..,.1.}.Ll..2
    5741:	09 7d 1d a9 98 d5 86 18 33 0b 7d 8d 21 8c d4 24     .}......3.}.!..$
    5751:	8a 74 00 34 0b 7d ad 4c 4a a2 21 0b 73 00 35 0b     .t.4.}.LJ.!.s.5.
    5761:	7d 8d 21 09 d7 24 8a 74 00 36 0a 7d 1d 29 9c 2a     }.!..$.t.6.}.).*
    5771:	51 a4 03 37 0b 7d 8d 21 cc c2 2c cc 11 00 38 0a     Q..7.}.!..,...8.
    5781:	7d 1d a9 24 55 a2 48 07 39 0a 7d 1d a9 12 45 63     }..$U.H.9.}...Ec
    5791:	a4 03 3a 08 7d 6d 4d 47 34 1d 3b 09 7d 6d 4d 47     ..:.}mMG4.;.}mMG
    57a1:	b4 22 00 3c 08 7d 7d 24 ab 96 01 3d 09 7d 7d 6c     .".<.}}$...=.}}l
    57b1:	88 87 1c 04 3e 08 7d ed b4 56 47 00 3f 0a 7d ad     ....>.}..VG.?.}.
    57c1:	2c 09 b3 1c ca 01 40 0b 7d 1d a9 92 28 89 92 ea     ,.....@.}...(...
    57d1:	00 41 0c 7d 1d a9 12 25 43 12 25 51 0c 42 0a 7d     .A.}...%C.%Q.B.}
    57e1:	8d a9 32 55 a2 64 07 43 09 7d 1d a9 12 96 22 1d     ..2U.d.C.}....".
    57f1:	44 0c 7d 8d a9 12 25 51 12 25 3b 00 45 0b 7d 8d     D.}...%Q.%;.E.}.
    5801:	21 09 a7 30 1c 62 00 46 0a 7d 8d 21 09 a7 b0 0e     !..0.b.F.}.!....
    5811:	01 47 0b 7d 1d a9 12 26 4a 14 cd 00 48 0e 7d 8d     .G.}...&J...H.}.
    5821:	28 89 92 21 89 92 28 89 62 00 49 08 7d 9d 2d 6c     (..!..(.b.I.}.-l
    5831:	9b 01 4a 09 7d bd b0 25 8a 74 00 4b 0b 7d 8d 28     ..J.}..%.t.K.}.(
    5841:	29 69 5a 12 95 01 4c 08 7d 8d b0 e3 10 03 4d 0e     )iZ...L.}.....M.
    5851:	7d 8d 28 19 92 21 89 92 28 89 62 00 4e 0d 7d 8d     }.(..!..(.b.N.}.
    5861:	28 51 12 a5 a2 24 4a 14 03 4f 0c 7d 1d a9 12 25     (Q...$J..O.}...%
    5871:	51 12 45 3a 00 50 0b 7d 8d a9 12 25 53 98 43 00     Q.E:.P.}...%S.C.
    5881:	51 0c 7d 1d a9 12 25 51 a2 44 6a 02 52 0b 7d 8d     Q.}...%Q.Dj.R.}.
    5891:	a9 12 25 53 12 95 01 53 09 7d 1d a9 35 2a e9 00     ..%S...S.}..5*..
    58a1:	54 07 7d 9d 2d ec 0e 55 0d 7d 8d 28 89 92 28 89     T.}.-..U.}.(..(.
    58b1:	92 28 d2 01 56 0c 7d 8d 28 89 92 28 89 22 4d 07     .(..V.}.(..(."M.
    58c1:	57 0e 7d 8d 28 89 92 28 19 92 21 89 62 00 58 0c     W.}.(..(..!.b.X.
    58d1:	7d 8d 28 89 22 4d aa 44 31 00 59 0a 7d 9d 52 12     }.(."M.D1.Y.}.R.
    58e1:	25 59 58 07 5a 09 7d 8d 21 cc 1a 87 18 5b 08 7d     %YX.Z.}.!....[.}
    58f1:	9d 29 6c 9c 01 5c 07 7d dd ee 20 00 5d 07 7d 9d     .)l..\.}.. .].}.
    5901:	b1 d3 0c 5e 08 7d ad 2c c9 59 01 5f 07 7d 7d c6     ...^.}.,.Y._.}}.
    5911:	21 06 60 07 7d 9d 34 67 06 61 0b 7d 7d 70 89 92     !.`.}.4g.a.}}p..
    5921:	44 4a 62 00 62 0a 7d 8d 30 9c 2a 51 b2 03 63 08     DJb.b.}.0.*Q..c.
    5931:	7d 7d 50 0a 53 1d 64 0b 7d bd 30 5a a2 24 8a 66     }}P.S.d.}.0Z.$.f
    5941:	00 65 09 7d 7d 50 4a 8c 3a 00 66 0b 7d ad 2c 89     .e.}}PJ.:.f.}.,.
    5951:	b2 2d cc 11 00 67 0a 7d 7d 70 89 22 29 5d 00 68     .-...g.}}p.")].h
    5961:	0b 7d 8d 30 9c 2a 51 12 c5 00 69 09 7d ad 1c 11     .}.0.*Q...i.}...
    5971:	6b 33 00 6a 0a 7d bd 1c 0a 4b 49 16 01 6b 0a 7d     k3.j.}...KI..k.}
    5981:	8d b0 12 69 49 54 06 6c 07 7d 1d b1 db 0c 6d 0b     ...iIT.l.}....m.
    5991:	7d 7d 2c 89 86 24 4a a2 18 6e 0a 7d 7d 6c aa 44     }},..$J..n.}}l.D
    59a1:	49 14 03 6f 09 7d 7d 50 aa 44 91 0e 70 0a 7d 7d     I..o.}}P.D..p.}}
    59b1:	6c aa 44 c9 14 02 71 0b 7d 7d 70 89 92 28 1a 13     l.D...q.}}p..(..
    59c1:	00 72 09 7d 7d 6c aa 84 39 04 73 08 7d 7d 70 51     .r.}}l..9.s.}}pQ
    59d1:	95 1d 74 09 7d 9d 30 db c2 54 06 75 0b 7d 7d 2c     ..t.}.0..T.u.}},
    59e1:	4a a2 24 8a 66 00 76 0b 7d 7d 30 89 92 28 c9 72     J.$.f.v.}}0..(.r
    59f1:	00 77 0b 7d 7d 2c 4a a2 64 48 86 18 78 09 7d 7d     .w.}},J.dH..x.}}
    5a01:	2c 8a 34 a9 0c 79 0a 7d 7d 2c 4a a2 4a 56 03 7a     ,.4..y.}},J.JV.z
    5a11:	09 7d 7d 6c c8 6a 43 0c 7b 08 7d bd 9a 58 8d 01     .}}l.jC.{.}..X..
    5a21:	7c 07 7d ad b0 77 00 7d 0a 7d 9d 34 d4 c2 2c 47     |.}..w.}.}.4..,G
    5a31:	00 7e 07 7d 9d ee cc 00 00 00 00 04 ff ff 00 00     .~.}............
	...

00005a42 <__ctors_start>:
__ctors_start():
    5a42:	f3 59       	subi	r31, 0x93	; 147

00005a44 <__ctors_end>:
__ctors_end():
../../../../crt1/gcrt1.S:230
    5a44:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
    5a46:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
    5a48:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
    5a4a:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
    5a4c:	df e7       	ldi	r29, 0x7F	; 127
../../../../crt1/gcrt1.S:237
    5a4e:	de bf       	out	0x3e, r29	; 62

00005a50 <_initThreeStuff()>:
__do_copy_data():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2373
    5a50:	13 e4       	ldi	r17, 0x43	; 67
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2374
    5a52:	a0 e0       	ldi	r26, 0x00	; 0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2375
    5a54:	b0 e4       	ldi	r27, 0x40	; 64
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2376
    5a56:	ea e6       	ldi	r30, 0x6A	; 106
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2377
    5a58:	f1 ef       	ldi	r31, 0xF1	; 241
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2378
    5a5a:	00 e0       	ldi	r16, 0x00	; 0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2379
    5a5c:	0b bf       	out	0x3b, r16	; 59
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2380
    5a5e:	02 c0       	rjmp	.+4      	; 0x5a64 <_initThreeStuff()+0x14>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2382
    5a60:	07 90       	elpm	r0, Z+
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2383
    5a62:	0d 92       	st	X+, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2385
    5a64:	a8 3c       	cpi	r26, 0xC8	; 200
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2386
    5a66:	b1 07       	cpc	r27, r17
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2387
    5a68:	d9 f7       	brne	.-10     	; 0x5a60 <_initThreeStuff()+0x10>

00005a6a <__do_clear_bss>:
__do_clear_bss():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
    5a6a:	25 e5       	ldi	r18, 0x55	; 85
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
    5a6c:	a8 ec       	ldi	r26, 0xC8	; 200
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
    5a6e:	b3 e4       	ldi	r27, 0x43	; 67
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
    5a70:	01 c0       	rjmp	.+2      	; 0x5a74 <.do_clear_bss_start>

00005a72 <.do_clear_bss_loop>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
    5a72:	1d 92       	st	X+, r1

00005a74 <.do_clear_bss_start>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
    5a74:	af 36       	cpi	r26, 0x6F	; 111
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
    5a76:	b2 07       	cpc	r27, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
    5a78:	e1 f7       	brne	.-8      	; 0x5a72 <.do_clear_bss_loop>

00005a7a <__do_global_ctors>:
__do_global_ctors():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
    5a7a:	1d e2       	ldi	r17, 0x2D	; 45
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
    5a7c:	c2 e2       	ldi	r28, 0x22	; 34
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
    5a7e:	dd e2       	ldi	r29, 0x2D	; 45
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
    5a80:	04 c0       	rjmp	.+8      	; 0x5a8a <__do_global_ctors+0x10>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
    5a82:	21 97       	sbiw	r28, 0x01	; 1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
    5a84:	fe 01       	movw	r30, r28
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
    5a86:	0e 94 91 78 	call	0xf122	; 0xf122 <__tablejump2__>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
    5a8a:	c1 32       	cpi	r28, 0x21	; 33
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
    5a8c:	d1 07       	cpc	r29, r17
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
    5a8e:	c9 f7       	brne	.-14     	; 0x5a82 <__do_global_ctors+0x8>
../../../../crt1/gcrt1.S:314
    5a90:	0e 94 79 5e 	call	0xbcf2	; 0xbcf2 <main>
../../../../crt1/gcrt1.S:315
    5a94:	0c 94 b3 78 	jmp	0xf166	; 0xf166 <_exit>

00005a98 <__bad_interrupt>:
__vector_38():
../../../../crt1/gcrt1.S:209
    5a98:	0c 94 00 01 	jmp	0x200	; 0x200 <__vectors>

00005a9c <u8x8_ascii_next>:
u8x8_ascii_next():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:292
  u8x8->utf8_state = 0;	/* also reset during u8x8_SetupDefaults() */
}

uint16_t u8x8_ascii_next(U8X8_UNUSED u8x8_t *u8x8, uint8_t b)
{
  if ( b == 0 || b == '\n' ) /* '\n' terminates the string to support the string list procedures */
    5a9c:	66 23       	and	r22, r22
    5a9e:	29 f0       	breq	.+10     	; 0x5aaa <u8x8_ascii_next+0xe>
    5aa0:	6a 30       	cpi	r22, 0x0A	; 10
    5aa2:	19 f0       	breq	.+6      	; 0x5aaa <u8x8_ascii_next+0xe>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:294
    return 0x0ffff;	/* end of string detected*/
  return b;
    5aa4:	86 2f       	mov	r24, r22
    5aa6:	90 e0       	ldi	r25, 0x00	; 0
    5aa8:	08 95       	ret
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:293
}

uint16_t u8x8_ascii_next(U8X8_UNUSED u8x8_t *u8x8, uint8_t b)
{
  if ( b == 0 || b == '\n' ) /* '\n' terminates the string to support the string list procedures */
    return 0x0ffff;	/* end of string detected*/
    5aaa:	8f ef       	ldi	r24, 0xFF	; 255
    5aac:	9f ef       	ldi	r25, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:295
  return b;
}
    5aae:	08 95       	ret

00005ab0 <u8g2_ll_hvline_vertical_top_lsb>:
u8g2_ll_hvline_vertical_top_lsb():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:73
		1: vertical line (top to bottom)
  asumption: 
    all clipping done
*/
void u8g2_ll_hvline_vertical_top_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    5ab0:	af 92       	push	r10
    5ab2:	bf 92       	push	r11
    5ab4:	cf 92       	push	r12
    5ab6:	df 92       	push	r13
    5ab8:	ef 92       	push	r14
    5aba:	ff 92       	push	r15
    5abc:	0f 93       	push	r16
    5abe:	cf 93       	push	r28
    5ac0:	df 93       	push	r29
    5ac2:	ec 01       	movw	r28, r24
    5ac4:	da 01       	movw	r26, r20
    5ac6:	79 01       	movw	r14, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:89
  //assert(y >= u8g2->buf_y0);
  //assert(y < u8g2_GetU8x8(u8g2)->display_info->tile_height*8);
  
  /* bytes are vertical, lsb on top (y=0), msb at bottom (y=7) */
  bit_pos = y;		/* overflow truncate is ok here... */
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
    5ac8:	94 2f       	mov	r25, r20
    5aca:	97 70       	andi	r25, 0x07	; 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:91
  mask = 1;
  mask <<= bit_pos;
    5acc:	e1 e0       	ldi	r30, 0x01	; 1
    5ace:	f0 e0       	ldi	r31, 0x00	; 0
    5ad0:	9f 01       	movw	r18, r30
    5ad2:	09 2e       	mov	r0, r25
    5ad4:	01 c0       	rjmp	.+2      	; 0x5ad8 <u8g2_ll_hvline_vertical_top_lsb+0x28>
    5ad6:	22 0f       	add	r18, r18
    5ad8:	0a 94       	dec	r0
    5ada:	ea f7       	brpl	.-6      	; 0x5ad6 <u8g2_ll_hvline_vertical_top_lsb+0x26>
    5adc:	52 2f       	mov	r21, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:95

  or_mask = 0;
  xor_mask = 0;
  if ( u8g2->draw_color <= 1 )
    5ade:	6e 01       	movw	r12, r28
    5ae0:	8a e8       	ldi	r24, 0x8A	; 138
    5ae2:	c8 0e       	add	r12, r24
    5ae4:	d1 1c       	adc	r13, r1
    5ae6:	f6 01       	movw	r30, r12
    5ae8:	80 81       	ld	r24, Z
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:93
  bit_pos = y;		/* overflow truncate is ok here... */
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
  mask = 1;
  mask <<= bit_pos;

  or_mask = 0;
    5aea:	40 e0       	ldi	r20, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:95
  xor_mask = 0;
  if ( u8g2->draw_color <= 1 )
    5aec:	82 30       	cpi	r24, 0x02	; 2
    5aee:	18 f4       	brcc	.+6      	; 0x5af6 <u8g2_ll_hvline_vertical_top_lsb+0x46>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:96
    or_mask  = mask;
    5af0:	42 2f       	mov	r20, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:97
  if ( u8g2->draw_color != 1 )
    5af2:	81 30       	cpi	r24, 0x01	; 1
    5af4:	49 f1       	breq	.+82     	; 0x5b48 <u8g2_ll_hvline_vertical_top_lsb+0x98>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:102
    xor_mask = mask;


  offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
  offset &= ~7;
    5af6:	5d 01       	movw	r10, r26
    5af8:	f8 ef       	ldi	r31, 0xF8	; 248
    5afa:	af 22       	and	r10, r31
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:104
  offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
  ptr = u8g2->tile_buf_ptr;
    5afc:	e8 ad       	ldd	r30, Y+56	; 0x38
    5afe:	f9 ad       	ldd	r31, Y+57	; 0x39
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:103
    xor_mask = mask;


  offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
  offset &= ~7;
  offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
    5b00:	28 81       	ld	r18, Y
    5b02:	39 81       	ldd	r19, Y+1	; 0x01
    5b04:	d9 01       	movw	r26, r18
    5b06:	50 96       	adiw	r26, 0x10	; 16
    5b08:	8c 91       	ld	r24, X
    5b0a:	8a 9d       	mul	r24, r10
    5b0c:	90 01       	movw	r18, r0
    5b0e:	8b 9d       	mul	r24, r11
    5b10:	30 0d       	add	r19, r0
    5b12:	11 24       	eor	r1, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:106
  ptr = u8g2->tile_buf_ptr;
  ptr += offset;
  ptr += x;
    5b14:	62 0f       	add	r22, r18
    5b16:	73 1f       	adc	r23, r19
    5b18:	df 01       	movw	r26, r30
    5b1a:	a6 0f       	add	r26, r22
    5b1c:	b7 1f       	adc	r27, r23
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:108
  
  if ( dir == 0 )
    5b1e:	01 11       	cpse	r16, r1
    5b20:	1a c0       	rjmp	.+52     	; 0x5b56 <u8g2_ll_hvline_vertical_top_lsb+0xa6>
    5b22:	ea 0e       	add	r14, r26
    5b24:	fb 1e       	adc	r15, r27
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:115
      do
      {
#ifdef __unix
	assert(ptr < max_ptr);
#endif
	*ptr |= or_mask;
    5b26:	8c 91       	ld	r24, X
    5b28:	84 2b       	or	r24, r20
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:116
	*ptr ^= xor_mask;
    5b2a:	85 27       	eor	r24, r21
    5b2c:	8d 93       	st	X+, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:119
	ptr++;
	len--;
      } while( len != 0 );
    5b2e:	ae 15       	cp	r26, r14
    5b30:	bf 05       	cpc	r27, r15
    5b32:	c9 f7       	brne	.-14     	; 0x5b26 <u8g2_ll_hvline_vertical_top_lsb+0x76>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:152
	or_mask <<= 1;
	xor_mask <<= 1;
      }
    } while( len != 0 );
  }
}
    5b34:	df 91       	pop	r29
    5b36:	cf 91       	pop	r28
    5b38:	0f 91       	pop	r16
    5b3a:	ff 90       	pop	r15
    5b3c:	ef 90       	pop	r14
    5b3e:	df 90       	pop	r13
    5b40:	cf 90       	pop	r12
    5b42:	bf 90       	pop	r11
    5b44:	af 90       	pop	r10
    5b46:	08 95       	ret
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:94
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
  mask = 1;
  mask <<= bit_pos;

  or_mask = 0;
  xor_mask = 0;
    5b48:	50 e0       	ldi	r21, 0x00	; 0
    5b4a:	d5 cf       	rjmp	.-86     	; 0x5af6 <u8g2_ll_hvline_vertical_top_lsb+0x46>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:147
	if ( u8g2->draw_color != 1 )
	  xor_mask = 1;
      }
      else
      {
	or_mask <<= 1;
    5b4c:	44 0f       	add	r20, r20
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:148
	xor_mask <<= 1;
    5b4e:	55 0f       	add	r21, r21
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:150
      }
    } while( len != 0 );
    5b50:	e1 14       	cp	r14, r1
    5b52:	f1 04       	cpc	r15, r1
    5b54:	79 f3       	breq	.-34     	; 0x5b34 <u8g2_ll_hvline_vertical_top_lsb+0x84>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:128
    do
    {
#ifdef __unix
      assert(ptr < max_ptr);
#endif
      *ptr |= or_mask;
    5b56:	3c 91       	ld	r19, X
    5b58:	34 2b       	or	r19, r20
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:129
      *ptr ^= xor_mask;
    5b5a:	35 27       	eor	r19, r21
    5b5c:	3c 93       	st	X, r19
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:131
      
      bit_pos++;
    5b5e:	9f 5f       	subi	r25, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:132
      bit_pos &= 7;
    5b60:	97 70       	andi	r25, 0x07	; 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:134

      len--;
    5b62:	e1 e0       	ldi	r30, 0x01	; 1
    5b64:	ee 1a       	sub	r14, r30
    5b66:	f1 08       	sbc	r15, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:136

      if ( bit_pos == 0 )
    5b68:	91 11       	cpse	r25, r1
    5b6a:	f0 cf       	rjmp	.-32     	; 0x5b4c <u8g2_ll_hvline_vertical_top_lsb+0x9c>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:138
      {
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
    5b6c:	2c ad       	ldd	r18, Y+60	; 0x3c
    5b6e:	3d ad       	ldd	r19, Y+61	; 0x3d
    5b70:	a2 0f       	add	r26, r18
    5b72:	b3 1f       	adc	r27, r19
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:140
		
	if ( u8g2->draw_color <= 1 )
    5b74:	f6 01       	movw	r30, r12
    5b76:	80 81       	ld	r24, Z
    5b78:	82 30       	cpi	r24, 0x02	; 2
    5b7a:	28 f4       	brcc	.+10     	; 0x5b86 <u8g2_ll_hvline_vertical_top_lsb+0xd6>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:142
	  or_mask  = 1;
	if ( u8g2->draw_color != 1 )
    5b7c:	81 30       	cpi	r24, 0x01	; 1
    5b7e:	09 f0       	breq	.+2      	; 0x5b82 <u8g2_ll_hvline_vertical_top_lsb+0xd2>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:143
	  xor_mask = 1;
    5b80:	51 e0       	ldi	r21, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:141
      if ( bit_pos == 0 )
      {
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
		
	if ( u8g2->draw_color <= 1 )
	  or_mask  = 1;
    5b82:	41 e0       	ldi	r20, 0x01	; 1
    5b84:	e5 cf       	rjmp	.-54     	; 0x5b50 <u8g2_ll_hvline_vertical_top_lsb+0xa0>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_ll_hvline.c:143
	if ( u8g2->draw_color != 1 )
	  xor_mask = 1;
    5b86:	51 e0       	ldi	r21, 0x01	; 1
    5b88:	e3 cf       	rjmp	.-58     	; 0x5b50 <u8g2_ll_hvline_vertical_top_lsb+0xa0>

00005b8a <u8x8_dummy_cb>:
u8x8_dummy_cb():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_setup.c:44
/* universal dummy callback, which will be default for all callbacks */
uint8_t u8x8_dummy_cb(U8X8_UNUSED u8x8_t *u8x8, U8X8_UNUSED uint8_t msg, U8X8_UNUSED uint8_t arg_int, U8X8_UNUSED void *arg_ptr)
{
  /* the dummy callback will not handle any message and will fail for all messages */
  return 0;
}
    5b8a:	80 e0       	ldi	r24, 0x00	; 0
    5b8c:	08 95       	ret

00005b8e <u8g2_font_calc_vref_font>:
u8g2_font_calc_vref_font():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1230
/* callback procedures to correct the y position */

u8g2_uint_t u8g2_font_calc_vref_font(U8X8_UNUSED u8g2_t *u8g2)
{
  return 0;
}
    5b8e:	90 e0       	ldi	r25, 0x00	; 0
    5b90:	80 e0       	ldi	r24, 0x00	; 0
    5b92:	08 95       	ret

00005b94 <u8x8_SetContrast.constprop.148>:
u8x8_SetContrast.constprop.148():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:153
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_FLIP_MODE, mode, NULL);  
}

void u8x8_SetContrast(u8x8_t *u8x8, uint8_t value)
{
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_CONTRAST, value, NULL);  
    5b94:	e0 91 ab 51 	lds	r30, 0x51AB	; 0x8051ab <u8g2+0x8>
    5b98:	f0 91 ac 51 	lds	r31, 0x51AC	; 0x8051ac <u8g2+0x9>
    5b9c:	30 e0       	ldi	r19, 0x00	; 0
    5b9e:	20 e0       	ldi	r18, 0x00	; 0
    5ba0:	48 2f       	mov	r20, r24
    5ba2:	6e e0       	ldi	r22, 0x0E	; 14
    5ba4:	87 ea       	ldi	r24, 0xA7	; 167
    5ba6:	91 e5       	ldi	r25, 0x51	; 81
    5ba8:	09 94       	ijmp

00005baa <UImenu::selectFirstItem() [clone .constprop.145]>:
_ZN6UImenu15selectFirstItemEv.constprop.145():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:201
}

/*!
     @brief select the first selectable item in a menu
*/
void UImenu::selectFirstItem() {
    5baa:	0f 93       	push	r16
    5bac:	1f 93       	push	r17
    5bae:	cf 93       	push	r28
    5bb0:	df 93       	push	r29
    5bb2:	8c 01       	movw	r16, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:202
  for (int i = 0; i < num_items; i++) {
    5bb4:	d0 e0       	ldi	r29, 0x00	; 0
    5bb6:	c0 e0       	ldi	r28, 0x00	; 0
    5bb8:	d8 01       	movw	r26, r16
    5bba:	18 96       	adiw	r26, 0x08	; 8
    5bbc:	8c 91       	ld	r24, X
    5bbe:	18 97       	sbiw	r26, 0x08	; 8
    5bc0:	8c 17       	cp	r24, r28
    5bc2:	1d 06       	cpc	r1, r29
    5bc4:	b1 f0       	breq	.+44     	; 0x5bf2 <UImenu::selectFirstItem() [clone .constprop.145]+0x48>
    5bc6:	ac f0       	brlt	.+42     	; 0x5bf2 <UImenu::selectFirstItem() [clone .constprop.145]+0x48>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:203
    if (items[i]->selectable()) {
    5bc8:	16 96       	adiw	r26, 0x06	; 6
    5bca:	ed 91       	ld	r30, X+
    5bcc:	fc 91       	ld	r31, X
    5bce:	ce 01       	movw	r24, r28
    5bd0:	88 0f       	add	r24, r24
    5bd2:	99 1f       	adc	r25, r25
    5bd4:	e8 0f       	add	r30, r24
    5bd6:	f9 1f       	adc	r31, r25
    5bd8:	80 81       	ld	r24, Z
    5bda:	91 81       	ldd	r25, Z+1	; 0x01
    5bdc:	dc 01       	movw	r26, r24
    5bde:	ed 91       	ld	r30, X+
    5be0:	fc 91       	ld	r31, X
    5be2:	06 80       	ldd	r0, Z+6	; 0x06
    5be4:	f7 81       	ldd	r31, Z+7	; 0x07
    5be6:	e0 2d       	mov	r30, r0
    5be8:	09 95       	icall
    5bea:	88 23       	and	r24, r24
    5bec:	39 f0       	breq	.+14     	; 0x5bfc <UImenu::selectFirstItem() [clone .constprop.145]+0x52>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:204
      selectedItem = i;
    5bee:	f8 01       	movw	r30, r16
    5bf0:	c2 87       	std	Z+10, r28	; 0x0a
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:208
      return;
    }
  }
}
    5bf2:	df 91       	pop	r29
    5bf4:	cf 91       	pop	r28
    5bf6:	1f 91       	pop	r17
    5bf8:	0f 91       	pop	r16
    5bfa:	08 95       	ret
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:202

/*!
     @brief select the first selectable item in a menu
*/
void UImenu::selectFirstItem() {
  for (int i = 0; i < num_items; i++) {
    5bfc:	21 96       	adiw	r28, 0x01	; 1
    5bfe:	dc cf       	rjmp	.-72     	; 0x5bb8 <UImenu::selectFirstItem() [clone .constprop.145]+0xe>

00005c00 <u8g2_SetBufferCurrTileRow.constprop.137>:
u8g2_SetBufferCurrTileRow.constprop.137():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:100
  u8g2_send_buffer(u8g2);
  u8x8_RefreshDisplay( u8g2_GetU8x8(u8g2) );  
}

/*============================================*/
void u8g2_SetBufferCurrTileRow(u8g2_t *u8g2, uint8_t row)
    5c00:	cf 93       	push	r28
    5c02:	df 93       	push	r29
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:102
{
  u8g2->tile_curr_row = row;
    5c04:	c3 ea       	ldi	r28, 0xA3	; 163
    5c06:	d1 e5       	ldi	r29, 0x51	; 81
    5c08:	8f af       	std	Y+63, r24	; 0x3f
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:103
  u8g2->cb->update_dimension(u8g2);
    5c0a:	ea ad       	ldd	r30, Y+58	; 0x3a
    5c0c:	fb ad       	ldd	r31, Y+59	; 0x3b
    5c0e:	01 90       	ld	r0, Z+
    5c10:	f0 81       	ld	r31, Z
    5c12:	e0 2d       	mov	r30, r0
    5c14:	87 ea       	ldi	r24, 0xA7	; 167
    5c16:	91 e5       	ldi	r25, 0x51	; 81
    5c18:	09 95       	icall
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:104
  u8g2->cb->update_page_win(u8g2);
    5c1a:	ea ad       	ldd	r30, Y+58	; 0x3a
    5c1c:	fb ad       	ldd	r31, Y+59	; 0x3b
    5c1e:	02 80       	ldd	r0, Z+2	; 0x02
    5c20:	f3 81       	ldd	r31, Z+3	; 0x03
    5c22:	e0 2d       	mov	r30, r0
    5c24:	87 ea       	ldi	r24, 0xA7	; 167
    5c26:	91 e5       	ldi	r25, 0x51	; 81
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:105
}
    5c28:	df 91       	pop	r29
    5c2a:	cf 91       	pop	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:104
/*============================================*/
void u8g2_SetBufferCurrTileRow(u8g2_t *u8g2, uint8_t row)
{
  u8g2->tile_curr_row = row;
  u8g2->cb->update_dimension(u8g2);
  u8g2->cb->update_page_win(u8g2);
    5c2c:	09 94       	ijmp

00005c2e <Logic::attachInterrupt(void (*)(), unsigned char) [clone .constprop.124]>:
_ZN5Logic15attachInterruptEPFvvEh.constprop.124():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/LogicISR.cpp:7
// user program, thanks to dot_a_linkage set in library.properties

#include "Logic.h"

#if defined(CCL_CCL_vect)
void Logic::attachInterrupt(void (*userFunc)(void), uint8_t mode) {
    5c2e:	fc 01       	movw	r30, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/LogicISR.cpp:25
    default:
      // Only RISING, FALLING and CHANGE is supported
      return;
  }
  #if defined(CCL_TRUTH4)
  if (block.number > 3) {
    5c30:	a3 85       	ldd	r26, Z+11	; 0x0b
    5c32:	b4 85       	ldd	r27, Z+12	; 0x0c
    5c34:	9c 91       	ld	r25, X
    5c36:	94 30       	cpi	r25, 0x04	; 4
    5c38:	e0 f0       	brcs	.+56     	; 0x5c72 <Logic::attachInterrupt(void (*)(), unsigned char) [clone .constprop.124]+0x44>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/LogicISR.cpp:27
    const int16_t intmode_bp = (block.number & 0x03) * 2;
    CCL.INTCTRL1 = (CCL.INTCTRL1 & ~(CCL_INTMODE0_gm << intmode_bp)) | (intmode << intmode_bp);
    5c3a:	20 91 c6 01 	lds	r18, 0x01C6	; 0x8001c6 <__TEXT_REGION_LENGTH__+0x7e01c6>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/LogicISR.cpp:26
      // Only RISING, FALLING and CHANGE is supported
      return;
  }
  #if defined(CCL_TRUTH4)
  if (block.number > 3) {
    const int16_t intmode_bp = (block.number & 0x03) * 2;
    5c3e:	93 70       	andi	r25, 0x03	; 3
    5c40:	99 0f       	add	r25, r25
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/LogicISR.cpp:27
    CCL.INTCTRL1 = (CCL.INTCTRL1 & ~(CCL_INTMODE0_gm << intmode_bp)) | (intmode << intmode_bp);
    5c42:	43 e0       	ldi	r20, 0x03	; 3
    5c44:	50 e0       	ldi	r21, 0x00	; 0
    5c46:	01 c0       	rjmp	.+2      	; 0x5c4a <Logic::attachInterrupt(void (*)(), unsigned char) [clone .constprop.124]+0x1c>
    5c48:	44 0f       	add	r20, r20
    5c4a:	9a 95       	dec	r25
    5c4c:	ea f7       	brpl	.-6      	; 0x5c48 <Logic::attachInterrupt(void (*)(), unsigned char) [clone .constprop.124]+0x1a>
    5c4e:	92 2f       	mov	r25, r18
    5c50:	94 2b       	or	r25, r20
    5c52:	90 93 c6 01 	sts	0x01C6, r25	; 0x8001c6 <__TEXT_REGION_LENGTH__+0x7e01c6>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/LogicISR.cpp:37
  #else
  const int16_t intmode_bp = block.number * 2;
  CCL.INTCTRL0 = (CCL.INTCTRL0 & ~(CCL_INTMODE0_gm << intmode_bp)) | (intmode << intmode_bp);
  #endif
  // Store function pointer
  intFuncCCL[block.number] = userFunc;
    5c56:	03 84       	ldd	r0, Z+11	; 0x0b
    5c58:	f4 85       	ldd	r31, Z+12	; 0x0c
    5c5a:	e0 2d       	mov	r30, r0
    5c5c:	e0 81       	ld	r30, Z
    5c5e:	f0 e0       	ldi	r31, 0x00	; 0
    5c60:	ee 0f       	add	r30, r30
    5c62:	ff 1f       	adc	r31, r31
    5c64:	e1 54       	subi	r30, 0x41	; 65
    5c66:	fa 4b       	sbci	r31, 0xBA	; 186
    5c68:	88 e4       	ldi	r24, 0x48	; 72
    5c6a:	9a e4       	ldi	r25, 0x4A	; 74
    5c6c:	80 83       	st	Z, r24
    5c6e:	91 83       	std	Z+1, r25	; 0x01
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/LogicISR.cpp:38
}
    5c70:	08 95       	ret
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/LogicISR.cpp:30
  if (block.number > 3) {
    const int16_t intmode_bp = (block.number & 0x03) * 2;
    CCL.INTCTRL1 = (CCL.INTCTRL1 & ~(CCL_INTMODE0_gm << intmode_bp)) | (intmode << intmode_bp);
  } else {
    const int16_t intmode_bp = (block.number & 0x03) * 2;
    CCL.INTCTRL0 = (CCL.INTCTRL0 & ~(CCL_INTMODE0_gm << intmode_bp)) | (intmode << intmode_bp);
    5c72:	20 91 c5 01 	lds	r18, 0x01C5	; 0x8001c5 <__TEXT_REGION_LENGTH__+0x7e01c5>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/LogicISR.cpp:29
  #if defined(CCL_TRUTH4)
  if (block.number > 3) {
    const int16_t intmode_bp = (block.number & 0x03) * 2;
    CCL.INTCTRL1 = (CCL.INTCTRL1 & ~(CCL_INTMODE0_gm << intmode_bp)) | (intmode << intmode_bp);
  } else {
    const int16_t intmode_bp = (block.number & 0x03) * 2;
    5c76:	99 0f       	add	r25, r25
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/LogicISR.cpp:30
    CCL.INTCTRL0 = (CCL.INTCTRL0 & ~(CCL_INTMODE0_gm << intmode_bp)) | (intmode << intmode_bp);
    5c78:	43 e0       	ldi	r20, 0x03	; 3
    5c7a:	50 e0       	ldi	r21, 0x00	; 0
    5c7c:	01 c0       	rjmp	.+2      	; 0x5c80 <Logic::attachInterrupt(void (*)(), unsigned char) [clone .constprop.124]+0x52>
    5c7e:	44 0f       	add	r20, r20
    5c80:	9a 95       	dec	r25
    5c82:	ea f7       	brpl	.-6      	; 0x5c7e <Logic::attachInterrupt(void (*)(), unsigned char) [clone .constprop.124]+0x50>
    5c84:	92 2f       	mov	r25, r18
    5c86:	94 2b       	or	r25, r20
    5c88:	90 93 c5 01 	sts	0x01C5, r25	; 0x8001c5 <__TEXT_REGION_LENGTH__+0x7e01c5>
    5c8c:	e4 cf       	rjmp	.-56     	; 0x5c56 <Logic::attachInterrupt(void (*)(), unsigned char) [clone .constprop.124]+0x28>

00005c8e <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]>:
_ZN5Logic9initInputERN5logic2in7input_tER11PORT_structh.constprop.122():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:76
    return port.PIN6CTRL;
  }
  return port.PIN7CTRL;
}

void Logic::initInput(logic::in::input_t &input, PORT_t &port, const uint8_t pin_bm) {
    5c8e:	fc 01       	movw	r30, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:77
  if ((input & 0x30) && pin_bm) { // Input pin is either set to input or input with pullup
    5c90:	90 81       	ld	r25, Z
    5c92:	90 73       	andi	r25, 0x30	; 48
    5c94:	81 f1       	breq	.+96     	; 0x5cf6 <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x68>
    5c96:	44 23       	and	r20, r20
    5c98:	71 f1       	breq	.+92     	; 0x5cf6 <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x68>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:78
    port.DIRCLR = pin_bm;
    5c9a:	db 01       	movw	r26, r22
    5c9c:	12 96       	adiw	r26, 0x02	; 2
    5c9e:	4c 93       	st	X, r20
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:80

    if (input == logic::in::input) {
    5ca0:	80 81       	ld	r24, Z
    5ca2:	85 32       	cpi	r24, 0x25	; 37
    5ca4:	01 f5       	brne	.+64     	; 0x5ce6 <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x58>
PINCTRL():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:50
void Logic::stop() {
  start(false);
}

static volatile register8_t &PINCTRL(PORT_t &port, const uint8_t pin_bm) {
  if (pin_bm == PIN0_bm) {
    5ca6:	41 30       	cpi	r20, 0x01	; 1
    5ca8:	39 f4       	brne	.+14     	; 0x5cb8 <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x2a>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:51
    return port.PIN0CTRL;
    5caa:	60 5f       	subi	r22, 0xF0	; 240
    5cac:	7f 4f       	sbci	r23, 0xFF	; 255
_ZN5Logic9initInputERN5logic2in7input_tER11PORT_structh.constprop.122():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:81
void Logic::initInput(logic::in::input_t &input, PORT_t &port, const uint8_t pin_bm) {
  if ((input & 0x30) && pin_bm) { // Input pin is either set to input or input with pullup
    port.DIRCLR = pin_bm;

    if (input == logic::in::input) {
      PINCTRL(port, pin_bm) &= ~PORT_PULLUPEN_bm;
    5cae:	fb 01       	movw	r30, r22
    5cb0:	80 81       	ld	r24, Z
    5cb2:	87 7f       	andi	r24, 0xF7	; 247
    5cb4:	80 83       	st	Z, r24
    5cb6:	08 95       	ret
PINCTRL():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:53

static volatile register8_t &PINCTRL(PORT_t &port, const uint8_t pin_bm) {
  if (pin_bm == PIN0_bm) {
    return port.PIN0CTRL;
  }
  if (pin_bm == PIN1_bm) {
    5cb8:	42 30       	cpi	r20, 0x02	; 2
    5cba:	19 f4       	brne	.+6      	; 0x5cc2 <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x34>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:54
    return port.PIN1CTRL;
    5cbc:	6f 5e       	subi	r22, 0xEF	; 239
    5cbe:	7f 4f       	sbci	r23, 0xFF	; 255
    5cc0:	f6 cf       	rjmp	.-20     	; 0x5cae <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x20>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:56
  }
  if (pin_bm == PIN2_bm) {
    5cc2:	44 30       	cpi	r20, 0x04	; 4
    5cc4:	19 f4       	brne	.+6      	; 0x5ccc <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x3e>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:57
    return port.PIN2CTRL;
    5cc6:	6e 5e       	subi	r22, 0xEE	; 238
    5cc8:	7f 4f       	sbci	r23, 0xFF	; 255
    5cca:	f1 cf       	rjmp	.-30     	; 0x5cae <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x20>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:59
  }
  if (pin_bm == PIN3_bm) {
    5ccc:	48 30       	cpi	r20, 0x08	; 8
    5cce:	19 f4       	brne	.+6      	; 0x5cd6 <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x48>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:60
    return port.PIN3CTRL;
    5cd0:	6d 5e       	subi	r22, 0xED	; 237
    5cd2:	7f 4f       	sbci	r23, 0xFF	; 255
    5cd4:	ec cf       	rjmp	.-40     	; 0x5cae <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x20>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:70
  }
  if (pin_bm == PIN5_bm) {
    return port.PIN5CTRL;
  }
  #endif
  if (pin_bm == PIN6_bm) {
    5cd6:	40 34       	cpi	r20, 0x40	; 64
    5cd8:	19 f4       	brne	.+6      	; 0x5ce0 <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x52>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:71
    return port.PIN6CTRL;
    5cda:	6a 5e       	subi	r22, 0xEA	; 234
    5cdc:	7f 4f       	sbci	r23, 0xFF	; 255
    5cde:	e7 cf       	rjmp	.-50     	; 0x5cae <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x20>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:73
  }
  return port.PIN7CTRL;
    5ce0:	69 5e       	subi	r22, 0xE9	; 233
    5ce2:	7f 4f       	sbci	r23, 0xFF	; 255
    5ce4:	e4 cf       	rjmp	.-56     	; 0x5cae <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x20>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:50
void Logic::stop() {
  start(false);
}

static volatile register8_t &PINCTRL(PORT_t &port, const uint8_t pin_bm) {
  if (pin_bm == PIN0_bm) {
    5ce6:	41 30       	cpi	r20, 0x01	; 1
    5ce8:	39 f4       	brne	.+14     	; 0x5cf8 <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x6a>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:51
    return port.PIN0CTRL;
    5cea:	60 5f       	subi	r22, 0xF0	; 240
    5cec:	7f 4f       	sbci	r23, 0xFF	; 255
_ZN5Logic9initInputERN5logic2in7input_tER11PORT_structh.constprop.122():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:83
    port.DIRCLR = pin_bm;

    if (input == logic::in::input) {
      PINCTRL(port, pin_bm) &= ~PORT_PULLUPEN_bm;
    } else {
      PINCTRL(port, pin_bm) |= PORT_PULLUPEN_bm;
    5cee:	db 01       	movw	r26, r22
    5cf0:	8c 91       	ld	r24, X
    5cf2:	88 60       	ori	r24, 0x08	; 8
    5cf4:	8c 93       	st	X, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:86
    }
  }
}
    5cf6:	08 95       	ret
PINCTRL():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:53

static volatile register8_t &PINCTRL(PORT_t &port, const uint8_t pin_bm) {
  if (pin_bm == PIN0_bm) {
    return port.PIN0CTRL;
  }
  if (pin_bm == PIN1_bm) {
    5cf8:	42 30       	cpi	r20, 0x02	; 2
    5cfa:	19 f4       	brne	.+6      	; 0x5d02 <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x74>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:54
    return port.PIN1CTRL;
    5cfc:	6f 5e       	subi	r22, 0xEF	; 239
    5cfe:	7f 4f       	sbci	r23, 0xFF	; 255
    5d00:	f6 cf       	rjmp	.-20     	; 0x5cee <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x60>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:56
  }
  if (pin_bm == PIN2_bm) {
    5d02:	44 30       	cpi	r20, 0x04	; 4
    5d04:	19 f4       	brne	.+6      	; 0x5d0c <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x7e>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:57
    return port.PIN2CTRL;
    5d06:	6e 5e       	subi	r22, 0xEE	; 238
    5d08:	7f 4f       	sbci	r23, 0xFF	; 255
    5d0a:	f1 cf       	rjmp	.-30     	; 0x5cee <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x60>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:59
  }
  if (pin_bm == PIN3_bm) {
    5d0c:	48 30       	cpi	r20, 0x08	; 8
    5d0e:	19 f4       	brne	.+6      	; 0x5d16 <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x88>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:60
    return port.PIN3CTRL;
    5d10:	6d 5e       	subi	r22, 0xED	; 237
    5d12:	7f 4f       	sbci	r23, 0xFF	; 255
    5d14:	ec cf       	rjmp	.-40     	; 0x5cee <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x60>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:70
  }
  if (pin_bm == PIN5_bm) {
    return port.PIN5CTRL;
  }
  #endif
  if (pin_bm == PIN6_bm) {
    5d16:	40 34       	cpi	r20, 0x40	; 64
    5d18:	19 f4       	brne	.+6      	; 0x5d20 <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x92>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:71
    return port.PIN6CTRL;
    5d1a:	6a 5e       	subi	r22, 0xEA	; 234
    5d1c:	7f 4f       	sbci	r23, 0xFF	; 255
    5d1e:	e7 cf       	rjmp	.-50     	; 0x5cee <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x60>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:73
  }
  return port.PIN7CTRL;
    5d20:	69 5e       	subi	r22, 0xE9	; 233
    5d22:	7f 4f       	sbci	r23, 0xFF	; 255
    5d24:	e4 cf       	rjmp	.-56     	; 0x5cee <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]+0x60>

00005d26 <Logic::init() [clone .constprop.121]>:
_ZN5Logic4initEv.constprop.121():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:88
      PINCTRL(port, pin_bm) |= PORT_PULLUPEN_bm;
    }
  }
}

void Logic::init() {
    5d26:	cf 93       	push	r28
    5d28:	df 93       	push	r29
    5d2a:	ec 01       	movw	r28, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:90
  // Clear LUTCTRLA in case the CCL block gets reinitialized
  block.LUTCTRLA = 0x00;
    5d2c:	eb 85       	ldd	r30, Y+11	; 0x0b
    5d2e:	fc 85       	ldd	r31, Y+12	; 0x0c
    5d30:	06 84       	ldd	r0, Z+14	; 0x0e
    5d32:	f7 85       	ldd	r31, Z+15	; 0x0f
    5d34:	e0 2d       	mov	r30, r0
    5d36:	10 82       	st	Z, r1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:93

  // Configure input pins
  initInput(input0, block.PORT_IN, block.input0_bm);
    5d38:	eb 85       	ldd	r30, Y+11	; 0x0b
    5d3a:	fc 85       	ldd	r31, Y+12	; 0x0c
    5d3c:	66 81       	ldd	r22, Z+6	; 0x06
    5d3e:	77 81       	ldd	r23, Z+7	; 0x07
    5d40:	41 81       	ldd	r20, Z+1	; 0x01
    5d42:	01 96       	adiw	r24, 0x01	; 1
    5d44:	a4 df       	rcall	.-184    	; 0x5c8e <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:94
  initInput(input1, block.PORT_IN, block.input1_bm);
    5d46:	eb 85       	ldd	r30, Y+11	; 0x0b
    5d48:	fc 85       	ldd	r31, Y+12	; 0x0c
    5d4a:	66 81       	ldd	r22, Z+6	; 0x06
    5d4c:	77 81       	ldd	r23, Z+7	; 0x07
    5d4e:	42 81       	ldd	r20, Z+2	; 0x02
    5d50:	ce 01       	movw	r24, r28
    5d52:	02 96       	adiw	r24, 0x02	; 2
    5d54:	9c df       	rcall	.-200    	; 0x5c8e <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:95
  initInput(input2, block.PORT_IN, block.input2_bm);
    5d56:	eb 85       	ldd	r30, Y+11	; 0x0b
    5d58:	fc 85       	ldd	r31, Y+12	; 0x0c
    5d5a:	66 81       	ldd	r22, Z+6	; 0x06
    5d5c:	77 81       	ldd	r23, Z+7	; 0x07
    5d5e:	43 81       	ldd	r20, Z+3	; 0x03
    5d60:	ce 01       	movw	r24, r28
    5d62:	03 96       	adiw	r24, 0x03	; 3
    5d64:	94 df       	rcall	.-216    	; 0x5c8e <Logic::initInput(logic::in::input_t&, PORT_struct&, unsigned char) [clone .constprop.122]>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:98

  // Set output pin state and output pin swap
  if (output == logic::out::enable) {
    5d66:	8c 81       	ldd	r24, Y+4	; 0x04
    5d68:	81 30       	cpi	r24, 0x01	; 1
    5d6a:	e1 f4       	brne	.+56     	; 0x5da4 <Logic::init() [clone .constprop.121]+0x7e>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:99
    if (output_swap == logic::out::pin_swap && block.output_alt_bm) {
    5d6c:	8d 81       	ldd	r24, Y+5	; 0x05
    5d6e:	eb 85       	ldd	r30, Y+11	; 0x0b
    5d70:	fc 85       	ldd	r31, Y+12	; 0x0c
    5d72:	81 30       	cpi	r24, 0x01	; 1
    5d74:	09 f0       	breq	.+2      	; 0x5d78 <Logic::init() [clone .constprop.121]+0x52>
    5d76:	5c c0       	rjmp	.+184    	; 0x5e30 <Logic::init() [clone .constprop.121]+0x10a>
    5d78:	85 81       	ldd	r24, Z+5	; 0x05
    5d7a:	88 23       	and	r24, r24
    5d7c:	99 f0       	breq	.+38     	; 0x5da4 <Logic::init() [clone .constprop.121]+0x7e>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:101
      #if defined(PORTMUX_CCL)
      PORTMUX_CCL |= PORTMUX_ALTOUT_bm;
    5d7e:	80 91 e1 05 	lds	r24, 0x05E1	; 0x8005e1 <__TEXT_REGION_LENGTH__+0x7e05e1>
    5d82:	90 81       	ld	r25, Z
    5d84:	21 e0       	ldi	r18, 0x01	; 1
    5d86:	30 e0       	ldi	r19, 0x00	; 0
    5d88:	01 c0       	rjmp	.+2      	; 0x5d8c <Logic::init() [clone .constprop.121]+0x66>
    5d8a:	22 0f       	add	r18, r18
    5d8c:	9a 95       	dec	r25
    5d8e:	ea f7       	brpl	.-6      	; 0x5d8a <Logic::init() [clone .constprop.121]+0x64>
    5d90:	82 2b       	or	r24, r18
    5d92:	80 93 e1 05 	sts	0x05E1, r24	; 0x8005e1 <__TEXT_REGION_LENGTH__+0x7e05e1>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:103
      #endif
      block.PORT_OUT.DIRSET = block.output_alt_bm;
    5d96:	eb 85       	ldd	r30, Y+11	; 0x0b
    5d98:	fc 85       	ldd	r31, Y+12	; 0x0c
    5d9a:	a0 85       	ldd	r26, Z+8	; 0x08
    5d9c:	b1 85       	ldd	r27, Z+9	; 0x09
    5d9e:	85 81       	ldd	r24, Z+5	; 0x05
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:108
    } else if (output_swap == logic::out::no_swap && block.output_bm) {
      #if defined(PORTMUX_CCL)
      PORTMUX_CCL &= ~PORTMUX_ALTOUT_bm;
      #endif
      block.PORT_ALT_OUT.DIRSET = block.output_bm;
    5da0:	11 96       	adiw	r26, 0x01	; 1
    5da2:	8c 93       	st	X, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:113
    }
  }

  // Set inputs modes
  block.LUTCTRLB = ((input1 & 0x0f) << CCL_INSEL1_gp) | ((input0 & 0x0f) << CCL_INSEL0_gp);
    5da4:	eb 85       	ldd	r30, Y+11	; 0x0b
    5da6:	fc 85       	ldd	r31, Y+12	; 0x0c
    5da8:	00 88       	ldd	r0, Z+16	; 0x10
    5daa:	f1 89       	ldd	r31, Z+17	; 0x11
    5dac:	e0 2d       	mov	r30, r0
    5dae:	8a 81       	ldd	r24, Y+2	; 0x02
    5db0:	90 e1       	ldi	r25, 0x10	; 16
    5db2:	89 9f       	mul	r24, r25
    5db4:	90 01       	movw	r18, r0
    5db6:	11 24       	eor	r1, r1
    5db8:	89 81       	ldd	r24, Y+1	; 0x01
    5dba:	8f 70       	andi	r24, 0x0F	; 15
    5dbc:	82 2b       	or	r24, r18
    5dbe:	80 83       	st	Z, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:114
  block.LUTCTRLC = ((input2 & 0x0f) << CCL_INSEL2_gp);
    5dc0:	eb 85       	ldd	r30, Y+11	; 0x0b
    5dc2:	fc 85       	ldd	r31, Y+12	; 0x0c
    5dc4:	02 88       	ldd	r0, Z+18	; 0x12
    5dc6:	f3 89       	ldd	r31, Z+19	; 0x13
    5dc8:	e0 2d       	mov	r30, r0
    5dca:	8b 81       	ldd	r24, Y+3	; 0x03
    5dcc:	8f 70       	andi	r24, 0x0F	; 15
    5dce:	80 83       	st	Z, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:117

  // Set truth table
  block.TRUTH = truth;
    5dd0:	eb 85       	ldd	r30, Y+11	; 0x0b
    5dd2:	fc 85       	ldd	r31, Y+12	; 0x0c
    5dd4:	04 88       	ldd	r0, Z+20	; 0x14
    5dd6:	f5 89       	ldd	r31, Z+21	; 0x15
    5dd8:	e0 2d       	mov	r30, r0
    5dda:	88 85       	ldd	r24, Y+8	; 0x08
    5ddc:	80 83       	st	Z, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:120

  // Set sequencer
  if (!(block.number & 0x01)) {
    5dde:	eb 85       	ldd	r30, Y+11	; 0x0b
    5de0:	fc 85       	ldd	r31, Y+12	; 0x0c
    5de2:	80 81       	ld	r24, Z
    5de4:	80 fd       	sbrc	r24, 0
    5de6:	05 c0       	rjmp	.+10     	; 0x5df2 <Logic::init() [clone .constprop.121]+0xcc>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:121
    block.SEQCTRL = sequencer;
    5de8:	04 84       	ldd	r0, Z+12	; 0x0c
    5dea:	f5 85       	ldd	r31, Z+13	; 0x0d
    5dec:	e0 2d       	mov	r30, r0
    5dee:	89 85       	ldd	r24, Y+9	; 0x09
    5df0:	80 83       	st	Z, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:126
  }

  // Set logic output state and output filter
  block.LUTCTRLA = (output ? CCL_OUTEN_bm : 0)
                   | (edgedetect ? CCL_EDGEDET_EN_gc : 0)
    5df2:	8c 81       	ldd	r24, Y+4	; 0x04
    5df4:	40 e4       	ldi	r20, 0x40	; 64
    5df6:	81 11       	cpse	r24, r1
    5df8:	01 c0       	rjmp	.+2      	; 0x5dfc <Logic::init() [clone .constprop.121]+0xd6>
    5dfa:	40 e0       	ldi	r20, 0x00	; 0
    5dfc:	8f 81       	ldd	r24, Y+7	; 0x07
    5dfe:	90 e8       	ldi	r25, 0x80	; 128
    5e00:	81 11       	cpse	r24, r1
    5e02:	01 c0       	rjmp	.+2      	; 0x5e06 <Logic::init() [clone .constprop.121]+0xe0>
    5e04:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:125
  if (!(block.number & 0x01)) {
    block.SEQCTRL = sequencer;
  }

  // Set logic output state and output filter
  block.LUTCTRLA = (output ? CCL_OUTEN_bm : 0)
    5e06:	eb 85       	ldd	r30, Y+11	; 0x0b
    5e08:	fc 85       	ldd	r31, Y+12	; 0x0c
    5e0a:	06 84       	ldd	r0, Z+14	; 0x0e
    5e0c:	f7 85       	ldd	r31, Z+15	; 0x0f
    5e0e:	e0 2d       	mov	r30, r0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:127
                   | (edgedetect ? CCL_EDGEDET_EN_gc : 0)
                   | (filter << CCL_FILTSEL_gp)
    5e10:	2e 81       	ldd	r18, Y+6	; 0x06
    5e12:	80 e1       	ldi	r24, 0x10	; 16
    5e14:	28 9f       	mul	r18, r24
    5e16:	90 01       	movw	r18, r0
    5e18:	11 24       	eor	r1, r1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:129
                   #ifdef CCL_CLKSRC_gp
                   | (clocksource << CCL_CLKSRC_gp)
    5e1a:	8a 85       	ldd	r24, Y+10	; 0x0a
    5e1c:	88 0f       	add	r24, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:133
                   #else
                   | (clocksource << CCL_CLKSRC_bm)
                   #endif
                   | (enable ? CCL_ENABLE_bm : 0);
    5e1e:	82 2b       	or	r24, r18
    5e20:	28 81       	ld	r18, Y
    5e22:	82 2b       	or	r24, r18
    5e24:	84 2b       	or	r24, r20
    5e26:	89 2b       	or	r24, r25
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:125
  if (!(block.number & 0x01)) {
    block.SEQCTRL = sequencer;
  }

  // Set logic output state and output filter
  block.LUTCTRLA = (output ? CCL_OUTEN_bm : 0)
    5e28:	80 83       	st	Z, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:134
                   | (clocksource << CCL_CLKSRC_gp)
                   #else
                   | (clocksource << CCL_CLKSRC_bm)
                   #endif
                   | (enable ? CCL_ENABLE_bm : 0);
}
    5e2a:	df 91       	pop	r29
    5e2c:	cf 91       	pop	r28
    5e2e:	08 95       	ret
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:104
    if (output_swap == logic::out::pin_swap && block.output_alt_bm) {
      #if defined(PORTMUX_CCL)
      PORTMUX_CCL |= PORTMUX_ALTOUT_bm;
      #endif
      block.PORT_OUT.DIRSET = block.output_alt_bm;
    } else if (output_swap == logic::out::no_swap && block.output_bm) {
    5e30:	81 11       	cpse	r24, r1
    5e32:	b8 cf       	rjmp	.-144    	; 0x5da4 <Logic::init() [clone .constprop.121]+0x7e>
    5e34:	84 81       	ldd	r24, Z+4	; 0x04
    5e36:	88 23       	and	r24, r24
    5e38:	09 f4       	brne	.+2      	; 0x5e3c <Logic::init() [clone .constprop.121]+0x116>
    5e3a:	b4 cf       	rjmp	.-152    	; 0x5da4 <Logic::init() [clone .constprop.121]+0x7e>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:106
      #if defined(PORTMUX_CCL)
      PORTMUX_CCL &= ~PORTMUX_ALTOUT_bm;
    5e3c:	20 91 e1 05 	lds	r18, 0x05E1	; 0x8005e1 <__TEXT_REGION_LENGTH__+0x7e05e1>
    5e40:	30 81       	ld	r19, Z
    5e42:	81 e0       	ldi	r24, 0x01	; 1
    5e44:	90 e0       	ldi	r25, 0x00	; 0
    5e46:	01 c0       	rjmp	.+2      	; 0x5e4a <Logic::init() [clone .constprop.121]+0x124>
    5e48:	88 0f       	add	r24, r24
    5e4a:	3a 95       	dec	r19
    5e4c:	ea f7       	brpl	.-6      	; 0x5e48 <Logic::init() [clone .constprop.121]+0x122>
    5e4e:	80 95       	com	r24
    5e50:	82 23       	and	r24, r18
    5e52:	80 93 e1 05 	sts	0x05E1, r24	; 0x8005e1 <__TEXT_REGION_LENGTH__+0x7e05e1>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Logic\src/Logic.cpp:108
      #endif
      block.PORT_ALT_OUT.DIRSET = block.output_bm;
    5e56:	eb 85       	ldd	r30, Y+11	; 0x0b
    5e58:	fc 85       	ldd	r31, Y+12	; 0x0c
    5e5a:	a2 85       	ldd	r26, Z+10	; 0x0a
    5e5c:	b3 85       	ldd	r27, Z+11	; 0x0b
    5e5e:	84 81       	ldd	r24, Z+4	; 0x04
    5e60:	9f cf       	rjmp	.-194    	; 0x5da0 <Logic::init() [clone .constprop.121]+0x7a>

00005e62 <K197device::getUnit(bool) [clone .constprop.99]>:
_ZN10K197device7getUnitEb.constprop.99():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:279
    @param include_dB if true, returns "dB" as a unit when in dB mode
    @return the unit (2 characters + terminating NUL). This is a UTF-8 string
   because it may include Ω or µ
*/
const __FlashStringHelper *
K197device::getUnit(bool include_dB) { // Note: includes UTF-8 characters
    5e62:	90 91 74 52 	lds	r25, 0x5274	; 0x805274 <k197dev+0xf>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:280
  if (isV()) {                         // Voltage units
    5e66:	93 ff       	sbrs	r25, 3
    5e68:	13 c0       	rjmp	.+38     	; 0x5e90 <K197device::getUnit(bool) [clone .constprop.99]+0x2e>
    5e6a:	91 70       	andi	r25, 0x01	; 1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:281
    if (flags.tkMode && ismV() && isDC())
    5e6c:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
    5e70:	80 ff       	sbrs	r24, 0
    5e72:	09 c0       	rjmp	.+18     	; 0x5e86 <K197device::getUnit(bool) [clone .constprop.99]+0x24>
    5e74:	99 23       	and	r25, r25
    5e76:	49 f1       	breq	.+82     	; 0x5eca <K197device::getUnit(bool) [clone .constprop.99]+0x68>
    5e78:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    5e7c:	84 fd       	sbrc	r24, 4
    5e7e:	05 c0       	rjmp	.+10     	; 0x5e8a <K197device::getUnit(bool) [clone .constprop.99]+0x28>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:282
      return F("°C");
    5e80:	83 ec       	ldi	r24, 0xC3	; 195
    5e82:	9b e0       	ldi	r25, 0x0B	; 11
    5e84:	08 95       	ret
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:283
    else if (ismV())
    5e86:	99 23       	and	r25, r25
    5e88:	01 f1       	breq	.+64     	; 0x5eca <K197device::getUnit(bool) [clone .constprop.99]+0x68>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:284
      return F("mV");
    5e8a:	80 ec       	ldi	r24, 0xC0	; 192
    5e8c:	9b e0       	ldi	r25, 0x0B	; 11
    5e8e:	08 95       	ret
    5e90:	20 91 75 52 	lds	r18, 0x5275	; 0x805275 <k197dev+0x10>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:287
    else
      return F(" V");
  } else if (isOmega()) { // Resistence units
    5e94:	21 ff       	sbrs	r18, 1
    5e96:	07 c0       	rjmp	.+14     	; 0x5ea6 <K197device::getUnit(bool) [clone .constprop.99]+0x44>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:288
    if (isM())
    5e98:	91 fd       	sbrc	r25, 1
    5e9a:	1a c0       	rjmp	.+52     	; 0x5ed0 <K197device::getUnit(bool) [clone .constprop.99]+0x6e>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:290
      return F("MΩ");
    else if (isk())
    5e9c:	94 ff       	sbrs	r25, 4
    5e9e:	1b c0       	rjmp	.+54     	; 0x5ed6 <K197device::getUnit(bool) [clone .constprop.99]+0x74>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:291
      return F("kΩ");
    5ea0:	83 eb       	ldi	r24, 0xB3	; 179
    5ea2:	9b e0       	ldi	r25, 0x0B	; 11
    5ea4:	08 95       	ret
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:294
    else
      return F(" Ω");
  } else if (isA()) { // Current units
    5ea6:	22 ff       	sbrs	r18, 2
    5ea8:	07 c0       	rjmp	.+14     	; 0x5eb8 <K197device::getUnit(bool) [clone .constprop.99]+0x56>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:295
    if (ismicro())
    5eaa:	92 fd       	sbrc	r25, 2
    5eac:	17 c0       	rjmp	.+46     	; 0x5edc <K197device::getUnit(bool) [clone .constprop.99]+0x7a>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:297
      return F("µA");
    else if (ismA())
    5eae:	95 ff       	sbrs	r25, 5
    5eb0:	18 c0       	rjmp	.+48     	; 0x5ee2 <K197device::getUnit(bool) [clone .constprop.99]+0x80>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:298
      return F("mA");
    5eb2:	87 ea       	ldi	r24, 0xA7	; 167
    5eb4:	9b e0       	ldi	r25, 0x0B	; 11
    5eb6:	08 95       	ret
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:302
    else
      return F(" A");
  } else { // No unit found
    if (include_dB && isdB())
    5eb8:	88 23       	and	r24, r24
    5eba:	b1 f0       	breq	.+44     	; 0x5ee8 <K197device::getUnit(bool) [clone .constprop.99]+0x86>
    5ebc:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    5ec0:	83 ff       	sbrs	r24, 3
    5ec2:	12 c0       	rjmp	.+36     	; 0x5ee8 <K197device::getUnit(bool) [clone .constprop.99]+0x86>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:303
      return F("dB");
    5ec4:	81 ea       	ldi	r24, 0xA1	; 161
    5ec6:	9b e0       	ldi	r25, 0x0B	; 11
    5ec8:	08 95       	ret
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:286
    if (flags.tkMode && ismV() && isDC())
      return F("°C");
    else if (ismV())
      return F("mV");
    else
      return F(" V");
    5eca:	8d eb       	ldi	r24, 0xBD	; 189
    5ecc:	9b e0       	ldi	r25, 0x0B	; 11
    5ece:	08 95       	ret
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:289
  } else if (isOmega()) { // Resistence units
    if (isM())
      return F("MΩ");
    5ed0:	88 eb       	ldi	r24, 0xB8	; 184
    5ed2:	9b e0       	ldi	r25, 0x0B	; 11
    5ed4:	08 95       	ret
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:293
    else if (isk())
      return F("kΩ");
    else
      return F(" Ω");
    5ed6:	8e ea       	ldi	r24, 0xAE	; 174
    5ed8:	9b e0       	ldi	r25, 0x0B	; 11
    5eda:	08 95       	ret
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:296
  } else if (isA()) { // Current units
    if (ismicro())
      return F("µA");
    5edc:	8a ea       	ldi	r24, 0xAA	; 170
    5ede:	9b e0       	ldi	r25, 0x0B	; 11
    5ee0:	08 95       	ret
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:300
    else if (ismA())
      return F("mA");
    else
      return F(" A");
    5ee2:	84 ea       	ldi	r24, 0xA4	; 164
    5ee4:	9b e0       	ldi	r25, 0x0B	; 11
    5ee6:	08 95       	ret
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:305
  } else { // No unit found
    if (include_dB && isdB())
      return F("dB");
    else
      return F("  ");
    5ee8:	8e e9       	ldi	r24, 0x9E	; 158
    5eea:	9b e0       	ldi	r25, 0x0B	; 11
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:307
  }
}
    5eec:	08 95       	ret

00005eee <K197device::isTKModeActive() [clone .constprop.98]>:
_ZN10K197device14isTKModeActiveEv.constprop.98():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.h:598

  /*!
      @brief  check if the Thermocuple mode is active now
      @return returns true when K Thermocouple mode is enabled and active,
  */
  bool isTKModeActive() { return isV() && ismV() && flags.tkMode && isDC(); }
    5eee:	80 91 74 52 	lds	r24, 0x5274	; 0x805274 <k197dev+0xf>
    5ef2:	89 70       	andi	r24, 0x09	; 9
    5ef4:	89 30       	cpi	r24, 0x09	; 9
    5ef6:	69 f4       	brne	.+26     	; 0x5f12 <K197device::isTKModeActive() [clone .constprop.98]+0x24>
    5ef8:	90 91 65 52 	lds	r25, 0x5265	; 0x805265 <k197dev>
    5efc:	89 2f       	mov	r24, r25
    5efe:	81 70       	andi	r24, 0x01	; 1
    5f00:	90 ff       	sbrs	r25, 0
    5f02:	08 c0       	rjmp	.+16     	; 0x5f14 <K197device::isTKModeActive() [clone .constprop.98]+0x26>
    5f04:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    5f08:	82 95       	swap	r24
    5f0a:	81 70       	andi	r24, 0x01	; 1
    5f0c:	91 e0       	ldi	r25, 0x01	; 1
    5f0e:	89 27       	eor	r24, r25
    5f10:	08 95       	ret
    5f12:	80 e0       	ldi	r24, 0x00	; 0
    5f14:	08 95       	ret

00005f16 <K197device::getUnitPow10() [clone .constprop.91]>:
_ZN10K197device12getUnitPow10Ev.constprop.91():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:340
    @brief returns the exponent corresponding to the SI multiplier
    @details 10 elevated to the exponent returned gives the power of 10 corresponding to the prefix set in the annouciators
    For example, 1KΩ means 10^3Ω ==> exponent is 3. In 1µA means 10^-6A exponent is -6. with no prefix 0 is returned (10^0=1).
    @returns the exponent corresponding to the SI multiplier 
*/
int8_t K197device::getUnitPow10() {
    5f16:	80 91 74 52 	lds	r24, 0x5274	; 0x805274 <k197dev+0xf>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:341
  if (isV()) {                         // Voltage units
    5f1a:	83 ff       	sbrs	r24, 3
    5f1c:	11 c0       	rjmp	.+34     	; 0x5f40 <K197device::getUnitPow10() [clone .constprop.91]+0x2a>
    5f1e:	81 70       	andi	r24, 0x01	; 1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:342
    if (flags.tkMode && ismV() && isDC())
    5f20:	90 91 65 52 	lds	r25, 0x5265	; 0x805265 <k197dev>
    5f24:	90 ff       	sbrs	r25, 0
    5f26:	08 c0       	rjmp	.+16     	; 0x5f38 <K197device::getUnitPow10() [clone .constprop.91]+0x22>
    5f28:	88 23       	and	r24, r24
    5f2a:	21 f0       	breq	.+8      	; 0x5f34 <K197device::getUnitPow10() [clone .constprop.91]+0x1e>
    5f2c:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    5f30:	84 fd       	sbrc	r24, 4
    5f32:	04 c0       	rjmp	.+8      	; 0x5f3c <K197device::getUnitPow10() [clone .constprop.91]+0x26>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:347
      return 0;
    else if (ismV())
      return -3;
    else
      return 0;
    5f34:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:365
    else
      return 0;
  } else { // No unit found
      return 0;
  }
}
    5f36:	08 95       	ret
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:344
*/
int8_t K197device::getUnitPow10() {
  if (isV()) {                         // Voltage units
    if (flags.tkMode && ismV() && isDC())
      return 0;
    else if (ismV())
    5f38:	88 23       	and	r24, r24
    5f3a:	e1 f3       	breq	.-8      	; 0x5f34 <K197device::getUnitPow10() [clone .constprop.91]+0x1e>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:345
      return -3;
    5f3c:	8d ef       	ldi	r24, 0xFD	; 253
    5f3e:	08 95       	ret
    5f40:	90 91 75 52 	lds	r25, 0x5275	; 0x805275 <k197dev+0x10>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:348
    else
      return 0;
  } else if (isOmega()) { // Resistence units
    5f44:	91 ff       	sbrs	r25, 1
    5f46:	06 c0       	rjmp	.+12     	; 0x5f54 <K197device::getUnitPow10() [clone .constprop.91]+0x3e>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:349
    if (isM())
    5f48:	81 fd       	sbrc	r24, 1
    5f4a:	0b c0       	rjmp	.+22     	; 0x5f62 <K197device::getUnitPow10() [clone .constprop.91]+0x4c>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:351
      return 6;
    else if (isk())
    5f4c:	84 ff       	sbrs	r24, 4
    5f4e:	f2 cf       	rjmp	.-28     	; 0x5f34 <K197device::getUnitPow10() [clone .constprop.91]+0x1e>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:352
      return 3;
    5f50:	83 e0       	ldi	r24, 0x03	; 3
    5f52:	08 95       	ret
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:355
    else
      return 0;
  } else if (isA()) { // Current units
    5f54:	92 ff       	sbrs	r25, 2
    5f56:	ee cf       	rjmp	.-36     	; 0x5f34 <K197device::getUnitPow10() [clone .constprop.91]+0x1e>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:356
    if (ismicro())
    5f58:	82 fd       	sbrc	r24, 2
    5f5a:	05 c0       	rjmp	.+10     	; 0x5f66 <K197device::getUnitPow10() [clone .constprop.91]+0x50>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:358
      return -6;
    else if (ismA())
    5f5c:	85 ff       	sbrs	r24, 5
    5f5e:	ea cf       	rjmp	.-44     	; 0x5f34 <K197device::getUnitPow10() [clone .constprop.91]+0x1e>
    5f60:	ed cf       	rjmp	.-38     	; 0x5f3c <K197device::getUnitPow10() [clone .constprop.91]+0x26>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:350
      return -3;
    else
      return 0;
  } else if (isOmega()) { // Resistence units
    if (isM())
      return 6;
    5f62:	86 e0       	ldi	r24, 0x06	; 6
    5f64:	08 95       	ret
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:357
      return 3;
    else
      return 0;
  } else if (isA()) { // Current units
    if (ismicro())
      return -6;
    5f66:	8a ef       	ldi	r24, 0xFA	; 250
    5f68:	08 95       	ret

00005f6a <u8x8_byte_SendBytes.constprop.21>:
u8x8_byte_SendBytes.constprop.21():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_byte.c:44
uint8_t u8x8_byte_SetDC(u8x8_t *u8x8, uint8_t dc)
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SET_DC, dc, NULL);
}

uint8_t u8x8_byte_SendBytes(u8x8_t *u8x8, uint8_t cnt, uint8_t *data)
    5f6a:	9b 01       	movw	r18, r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_byte.c:46
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SEND, cnt, (void *)data);
    5f6c:	dc 01       	movw	r26, r24
    5f6e:	18 96       	adiw	r26, 0x08	; 8
    5f70:	ed 91       	ld	r30, X+
    5f72:	fc 91       	ld	r31, X
    5f74:	41 e0       	ldi	r20, 0x01	; 1
    5f76:	67 e1       	ldi	r22, 0x17	; 23
    5f78:	09 94       	ijmp

00005f7a <Print::print(char)>:
_ZN5Print5printEc():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:71
size_t Print::print(const char str[]) {
  return write(str);
}

size_t Print::print(char c) {
  return write(c);
    5f7a:	dc 01       	movw	r26, r24
    5f7c:	ed 91       	ld	r30, X+
    5f7e:	fc 91       	ld	r31, X
    5f80:	01 90       	ld	r0, Z+
    5f82:	f0 81       	ld	r31, Z
    5f84:	e0 2d       	mov	r30, r0
    5f86:	09 94       	ijmp

00005f88 <Print::print(__FlashStringHelper const*)>:
_ZN5Print5printEPK19__FlashStringHelper():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:41
    }
  }
  return n;
}

size_t Print::print(const __FlashStringHelper *ifsh) {
    5f88:	ef 92       	push	r14
    5f8a:	ff 92       	push	r15
    5f8c:	0f 93       	push	r16
    5f8e:	1f 93       	push	r17
    5f90:	cf 93       	push	r28
    5f92:	df 93       	push	r29
    5f94:	8c 01       	movw	r16, r24
    5f96:	7b 01       	movw	r14, r22
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:44
  #if defined(__AVR__)
  PGM_P p = reinterpret_cast<PGM_P>(ifsh);
  size_t n = 0;
    5f98:	d0 e0       	ldi	r29, 0x00	; 0
    5f9a:	c0 e0       	ldi	r28, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:46
  while (1) {
    unsigned char c = pgm_read_byte(p++);
    5f9c:	f7 01       	movw	r30, r14
    5f9e:	ec 0f       	add	r30, r28
    5fa0:	fd 1f       	adc	r31, r29
    5fa2:	64 91       	lpm	r22, Z
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:47
    if (c == 0) {
    5fa4:	66 23       	and	r22, r22
    5fa6:	61 f0       	breq	.+24     	; 0x5fc0 <Print::print(__FlashStringHelper const*)+0x38>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:50
      break;
    }
    if (write(c)) {
    5fa8:	d8 01       	movw	r26, r16
    5faa:	ed 91       	ld	r30, X+
    5fac:	fc 91       	ld	r31, X
    5fae:	01 90       	ld	r0, Z+
    5fb0:	f0 81       	ld	r31, Z
    5fb2:	e0 2d       	mov	r30, r0
    5fb4:	c8 01       	movw	r24, r16
    5fb6:	09 95       	icall
    5fb8:	89 2b       	or	r24, r25
    5fba:	11 f0       	breq	.+4      	; 0x5fc0 <Print::print(__FlashStringHelper const*)+0x38>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:51
      n++;
    5fbc:	21 96       	adiw	r28, 0x01	; 1
    5fbe:	ee cf       	rjmp	.-36     	; 0x5f9c <Print::print(__FlashStringHelper const*)+0x14>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:60
  }
  return n;
  #else
  return print(reinterpret_cast<const char *>(ifsh));
  #endif
}
    5fc0:	ce 01       	movw	r24, r28
    5fc2:	df 91       	pop	r29
    5fc4:	cf 91       	pop	r28
    5fc6:	1f 91       	pop	r17
    5fc8:	0f 91       	pop	r16
    5fca:	ff 90       	pop	r15
    5fcc:	ef 90       	pop	r14
    5fce:	08 95       	ret

00005fd0 <Print::write(unsigned char const*, unsigned int)>:
_ZN5Print5writeEPKhj():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:29
#include "Print.h"

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size) {
    5fd0:	af 92       	push	r10
    5fd2:	bf 92       	push	r11
    5fd4:	cf 92       	push	r12
    5fd6:	df 92       	push	r13
    5fd8:	ef 92       	push	r14
    5fda:	ff 92       	push	r15
    5fdc:	0f 93       	push	r16
    5fde:	1f 93       	push	r17
    5fe0:	cf 93       	push	r28
    5fe2:	df 93       	push	r29
    5fe4:	6c 01       	movw	r12, r24
    5fe6:	7b 01       	movw	r14, r22
    5fe8:	8b 01       	movw	r16, r22
    5fea:	04 0f       	add	r16, r20
    5fec:	15 1f       	adc	r17, r21
    5fee:	eb 01       	movw	r28, r22
    5ff0:	5e 01       	movw	r10, r28
    5ff2:	ae 18       	sub	r10, r14
    5ff4:	bf 08       	sbc	r11, r15
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:31
  size_t n = 0;
  while (size--) {
    5ff6:	c0 17       	cp	r28, r16
    5ff8:	d1 07       	cpc	r29, r17
    5ffa:	59 f0       	breq	.+22     	; 0x6012 <Print::write(unsigned char const*, unsigned int)+0x42>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:32
    if (write(*buffer++)) {
    5ffc:	69 91       	ld	r22, Y+
    5ffe:	d6 01       	movw	r26, r12
    6000:	ed 91       	ld	r30, X+
    6002:	fc 91       	ld	r31, X
    6004:	01 90       	ld	r0, Z+
    6006:	f0 81       	ld	r31, Z
    6008:	e0 2d       	mov	r30, r0
    600a:	c6 01       	movw	r24, r12
    600c:	09 95       	icall
    600e:	89 2b       	or	r24, r25
    6010:	79 f7       	brne	.-34     	; 0x5ff0 <Print::write(unsigned char const*, unsigned int)+0x20>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:39
    } else {
      break;
    }
  }
  return n;
}
    6012:	c5 01       	movw	r24, r10
    6014:	df 91       	pop	r29
    6016:	cf 91       	pop	r28
    6018:	1f 91       	pop	r17
    601a:	0f 91       	pop	r16
    601c:	ff 90       	pop	r15
    601e:	ef 90       	pop	r14
    6020:	df 90       	pop	r13
    6022:	cf 90       	pop	r12
    6024:	bf 90       	pop	r11
    6026:	af 90       	pop	r10
    6028:	08 95       	ret

0000602a <HardwareSerial::availableForWrite()>:
_ZN14HardwareSerial17availableForWriteEv():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:727
      int HardwareSerial::availableForWrite(void) {
        tx_buffer_index_t head;
        tx_buffer_index_t tail;

        TX_BUFFER_ATOMIC {
          head = _tx_buffer_head;
    602a:	fc 01       	movw	r30, r24
    602c:	51 89       	ldd	r21, Z+17	; 0x11
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:728
          tail = _tx_buffer_tail;
    602e:	42 89       	ldd	r20, Z+18	; 0x12
    6030:	25 2f       	mov	r18, r21
    6032:	30 e0       	ldi	r19, 0x00	; 0
    6034:	84 2f       	mov	r24, r20
    6036:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:731
        }
        if (head >= tail) {
          return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    6038:	82 1b       	sub	r24, r18
    603a:	93 0b       	sbc	r25, r19
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:730

        TX_BUFFER_ATOMIC {
          head = _tx_buffer_head;
          tail = _tx_buffer_tail;
        }
        if (head >= tail) {
    603c:	54 17       	cp	r21, r20
    603e:	10 f0       	brcs	.+4      	; 0x6044 <HardwareSerial::availableForWrite()+0x1a>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:731
          return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    6040:	cf 96       	adiw	r24, 0x3f	; 63
    6042:	08 95       	ret
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:733
        }
        return tail - head - 1;
    6044:	01 97       	sbiw	r24, 0x01	; 1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:734
      }
    6046:	08 95       	ret

00006048 <HardwareSerial::read()>:
_ZN14HardwareSerial4readEv():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:711
      } else {
        return _rx_buffer[_rx_buffer_tail];
      }
    }

    int HardwareSerial::read(void) {
    6048:	fc 01       	movw	r30, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:713
      // if the head isn't ahead of the tail, we don't have any characters
      if (_rx_buffer_head == _rx_buffer_tail) {
    604a:	97 85       	ldd	r25, Z+15	; 0x0f
    604c:	80 89       	ldd	r24, Z+16	; 0x10
    604e:	98 17       	cp	r25, r24
    6050:	61 f0       	breq	.+24     	; 0x606a <HardwareSerial::read()+0x22>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:716
        return -1;
      } else {
        unsigned char c = _rx_buffer[_rx_buffer_tail];
    6052:	a0 89       	ldd	r26, Z+16	; 0x10
    6054:	ae 0f       	add	r26, r30
    6056:	bf 2f       	mov	r27, r31
    6058:	b1 1d       	adc	r27, r1
    605a:	53 96       	adiw	r26, 0x13	; 19
    605c:	8c 91       	ld	r24, X
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:717
        _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) & (SERIAL_RX_BUFFER_SIZE - 1);   // % SERIAL_RX_BUFFER_SIZE;
    605e:	90 89       	ldd	r25, Z+16	; 0x10
    6060:	9f 5f       	subi	r25, 0xFF	; 255
    6062:	9f 73       	andi	r25, 0x3F	; 63
    6064:	90 8b       	std	Z+16, r25	; 0x10
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:718
        return c;
    6066:	90 e0       	ldi	r25, 0x00	; 0
    6068:	08 95       	ret
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:714
    }

    int HardwareSerial::read(void) {
      // if the head isn't ahead of the tail, we don't have any characters
      if (_rx_buffer_head == _rx_buffer_tail) {
        return -1;
    606a:	8f ef       	ldi	r24, 0xFF	; 255
    606c:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:720
      } else {
        unsigned char c = _rx_buffer[_rx_buffer_tail];
        _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) & (SERIAL_RX_BUFFER_SIZE - 1);   // % SERIAL_RX_BUFFER_SIZE;
        return c;
      }
    }
    606e:	08 95       	ret

00006070 <Stream::readBytesUntil(char, char*, unsigned int) [clone .part.0] [clone .constprop.114]>:
_ZN6Stream14readBytesUntilEcPcj.part.0.constprop.114():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Stream.cpp:252

// as readBytes with terminator character
// terminates if length characters have been read, timeout, or if the terminator character  detected
// returns the number of characters placed in the buffer (0 means no valid data found)

size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length) {
    6070:	cf 92       	push	r12
    6072:	df 92       	push	r13
    6074:	ef 92       	push	r14
    6076:	ff 92       	push	r15
    6078:	0f 93       	push	r16
    607a:	1f 93       	push	r17
    607c:	cf 93       	push	r28
    607e:	df 93       	push	r29
    6080:	8c 01       	movw	r16, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Stream.cpp:256
  if (length < 1) {
    return 0;
  }
  size_t index = 0;
    6082:	d0 e0       	ldi	r29, 0x00	; 0
    6084:	c0 e0       	ldi	r28, 0x00	; 0
millis():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:413
  unsigned long millis() {
    // return timer_overflow_count; // for debugging timekeeping issues where these variables are out of scope from the sketch
    unsigned long m;
    // disable interrupts while we read timer_millis or we might get an
    // inconsistent value (e.g. in the middle of a write to timer_millis)
    uint8_t oldSREG = SREG;
    6086:	8f b7       	in	r24, 0x3f	; 63
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:414
    cli();
    6088:	f8 94       	cli
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:465
        "adc %D0, %D1"    "\n\t"
        : "+r" (m), "+r" (temp), "+d" (cnt)
        );
      */
    #else
      m = timingStruct.timer_millis;
    608a:	c0 90 bb 45 	lds	r12, 0x45BB	; 0x8045bb <timingStruct>
    608e:	d0 90 bc 45 	lds	r13, 0x45BC	; 0x8045bc <timingStruct+0x1>
    6092:	e0 90 bd 45 	lds	r14, 0x45BD	; 0x8045bd <timingStruct+0x2>
    6096:	f0 90 be 45 	lds	r15, 0x45BE	; 0x8045be <timingStruct+0x3>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Stream.cpp:43
int Stream::timedRead() {
  #if !defined(MILLIS_USE_TIMERNONE)
    int c;
    unsigned long startMillis = millis(); //formerly, this was a member variable! Eating 4 bytes of ram for no bloody reason.
    do {
      c = read();
    609a:	8f bf       	out	0x3f, r24	; 63
timedRead():
    609c:	87 ec       	ldi	r24, 0xC7	; 199
    609e:	95 e4       	ldi	r25, 0x45	; 69
    60a0:	d3 df       	rcall	.-90     	; 0x6048 <HardwareSerial::read()>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Stream.cpp:44
      if (c >= 0) {
    60a2:	97 ff       	sbrs	r25, 7
    60a4:	26 c0       	rjmp	.+76     	; 0x60f2 <Stream::readBytesUntil(char, char*, unsigned int) [clone .part.0] [clone .constprop.114]+0x82>
millis():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:413
  unsigned long millis() {
    // return timer_overflow_count; // for debugging timekeeping issues where these variables are out of scope from the sketch
    unsigned long m;
    // disable interrupts while we read timer_millis or we might get an
    // inconsistent value (e.g. in the middle of a write to timer_millis)
    uint8_t oldSREG = SREG;
    60a6:	2f b7       	in	r18, 0x3f	; 63
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:414
    cli();
    60a8:	f8 94       	cli
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:465
        "adc %D0, %D1"    "\n\t"
        : "+r" (m), "+r" (temp), "+d" (cnt)
        );
      */
    #else
      m = timingStruct.timer_millis;
    60aa:	80 91 bb 45 	lds	r24, 0x45BB	; 0x8045bb <timingStruct>
    60ae:	90 91 bc 45 	lds	r25, 0x45BC	; 0x8045bc <timingStruct+0x1>
    60b2:	a0 91 bd 45 	lds	r26, 0x45BD	; 0x8045bd <timingStruct+0x2>
    60b6:	b0 91 be 45 	lds	r27, 0x45BE	; 0x8045be <timingStruct+0x3>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:466
      SREG = oldSREG;
    60ba:	2f bf       	out	0x3f, r18	; 63
timedRead():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Stream.cpp:47
        return c;
      }
    } while (millis() - startMillis < _timeout);
    60bc:	8c 19       	sub	r24, r12
    60be:	9d 09       	sbc	r25, r13
    60c0:	ae 09       	sbc	r26, r14
    60c2:	bf 09       	sbc	r27, r15
    60c4:	40 91 cb 45 	lds	r20, 0x45CB	; 0x8045cb <Serial0+0x4>
    60c8:	50 91 cc 45 	lds	r21, 0x45CC	; 0x8045cc <Serial0+0x5>
    60cc:	60 91 cd 45 	lds	r22, 0x45CD	; 0x8045cd <Serial0+0x6>
    60d0:	70 91 ce 45 	lds	r23, 0x45CE	; 0x8045ce <Serial0+0x7>
    60d4:	84 17       	cp	r24, r20
    60d6:	95 07       	cpc	r25, r21
    60d8:	a6 07       	cpc	r26, r22
    60da:	b7 07       	cpc	r27, r23
    60dc:	f8 f2       	brcs	.-66     	; 0x609c <Stream::readBytesUntil(char, char*, unsigned int) [clone .part.0] [clone .constprop.114]+0x2c>
_ZN6Stream14readBytesUntilEcPcj.part.0.constprop.114():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Stream.cpp:266
    }
    *buffer++ = (char)c;
    index++;
  }
  return index; // return number of characters, not including null terminator
}
    60de:	ce 01       	movw	r24, r28
    60e0:	df 91       	pop	r29
    60e2:	cf 91       	pop	r28
    60e4:	1f 91       	pop	r17
    60e6:	0f 91       	pop	r16
    60e8:	ff 90       	pop	r15
    60ea:	ef 90       	pop	r14
    60ec:	df 90       	pop	r13
    60ee:	cf 90       	pop	r12
    60f0:	08 95       	ret
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Stream.cpp:259
    return 0;
  }
  size_t index = 0;
  while (index < length) {
    int c = timedRead();
    if (c < 0 || c == terminator) {
    60f2:	80 32       	cpi	r24, 0x20	; 32
    60f4:	91 05       	cpc	r25, r1
    60f6:	99 f3       	breq	.-26     	; 0x60de <Stream::readBytesUntil(char, char*, unsigned int) [clone .part.0] [clone .constprop.114]+0x6e>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Stream.cpp:262
      break;
    }
    *buffer++ = (char)c;
    60f8:	f8 01       	movw	r30, r16
    60fa:	81 93       	st	Z+, r24
    60fc:	8f 01       	movw	r16, r30
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Stream.cpp:263
    index++;
    60fe:	21 96       	adiw	r28, 0x01	; 1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Stream.cpp:257
size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length) {
  if (length < 1) {
    return 0;
  }
  size_t index = 0;
  while (index < length) {
    6100:	ce 31       	cpi	r28, 0x1E	; 30
    6102:	d1 05       	cpc	r29, r1
    6104:	09 f0       	breq	.+2      	; 0x6108 <Stream::readBytesUntil(char, char*, unsigned int) [clone .part.0] [clone .constprop.114]+0x98>
    6106:	bf cf       	rjmp	.-130    	; 0x6086 <Stream::readBytesUntil(char, char*, unsigned int) [clone .part.0] [clone .constprop.114]+0x16>
    6108:	ea cf       	rjmp	.-44     	; 0x60de <Stream::readBytesUntil(char, char*, unsigned int) [clone .part.0] [clone .constprop.114]+0x6e>

0000610a <HardwareSerial::peek()>:
_ZN14HardwareSerial4peekEv():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:703

    int HardwareSerial::available(void) {
      return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) & (SERIAL_RX_BUFFER_SIZE - 1);   //% SERIAL_RX_BUFFER_SIZE;
    }

    int HardwareSerial::peek(void) {
    610a:	fc 01       	movw	r30, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:704
      if (_rx_buffer_head == _rx_buffer_tail) {
    610c:	97 85       	ldd	r25, Z+15	; 0x0f
    610e:	80 89       	ldd	r24, Z+16	; 0x10
    6110:	98 17       	cp	r25, r24
    6112:	31 f0       	breq	.+12     	; 0x6120 <HardwareSerial::peek()+0x16>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:707
        return -1;
      } else {
        return _rx_buffer[_rx_buffer_tail];
    6114:	80 89       	ldd	r24, Z+16	; 0x10
    6116:	e8 0f       	add	r30, r24
    6118:	f1 1d       	adc	r31, r1
    611a:	83 89       	ldd	r24, Z+19	; 0x13
    611c:	90 e0       	ldi	r25, 0x00	; 0
    611e:	08 95       	ret
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:705
      return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) & (SERIAL_RX_BUFFER_SIZE - 1);   //% SERIAL_RX_BUFFER_SIZE;
    }

    int HardwareSerial::peek(void) {
      if (_rx_buffer_head == _rx_buffer_tail) {
        return -1;
    6120:	8f ef       	ldi	r24, 0xFF	; 255
    6122:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:709
      } else {
        return _rx_buffer[_rx_buffer_tail];
      }
    }
    6124:	08 95       	ret

00006126 <HardwareSerial::available()>:
_ZN14HardwareSerial9availableEv():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:699
      // Note: Does not change output pins
      // though the datasheetsays turning the TX module sets it to input.
      _state = 0;
    }

    int HardwareSerial::available(void) {
    6126:	fc 01       	movw	r30, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:700
      return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) & (SERIAL_RX_BUFFER_SIZE - 1);   //% SERIAL_RX_BUFFER_SIZE;
    6128:	97 85       	ldd	r25, Z+15	; 0x0f
    612a:	20 89       	ldd	r18, Z+16	; 0x10
    612c:	89 2f       	mov	r24, r25
    612e:	90 e0       	ldi	r25, 0x00	; 0
    6130:	80 5c       	subi	r24, 0xC0	; 192
    6132:	9f 4f       	sbci	r25, 0xFF	; 255
    6134:	82 1b       	sub	r24, r18
    6136:	91 09       	sbc	r25, r1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:701
    }
    6138:	8f 73       	andi	r24, 0x3F	; 63
    613a:	99 27       	eor	r25, r25
    613c:	08 95       	ret

0000613e <HardwareSerial::_poll_tx_data_empty()>:
_ZN14HardwareSerial19_poll_tx_data_emptyEv():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:426
        HardwareSerial._tx_buffer_tail = txTail;
      }
    #endif

    // To invoke data empty "interrupt" via a call, use this method
    void HardwareSerial::_poll_tx_data_empty(void) {
    613e:	fc 01       	movw	r30, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:427
      if ((!(SREG & CPU_I_bm)) ||  CPUINT.STATUS) {
    6140:	0f b6       	in	r0, 0x3f	; 63
    6142:	07 fe       	sbrs	r0, 7
    6144:	04 c0       	rjmp	.+8      	; 0x614e <HardwareSerial::_poll_tx_data_empty()+0x10>
    6146:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7e0111>
    614a:	88 23       	and	r24, r24
    614c:	a9 f0       	breq	.+42     	; 0x6178 <_poll_dre_done>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:444
        // so we'll have to poll the "data register empty" flag ourselves.
        // If it is set, pretend an interrupt has happened and call the handler
        // to free up space for us.
        // -Spence 10/23/20
        // Invoke interrupt handler only if conditions data register is empty
        if ((*_hwserial_module).STATUS & USART_DREIF_bm) {
    614e:	a0 85       	ldd	r26, Z+8	; 0x08
    6150:	b1 85       	ldd	r27, Z+9	; 0x09
    6152:	14 96       	adiw	r26, 0x04	; 4
    6154:	8c 91       	ld	r24, X
    6156:	14 97       	sbiw	r26, 0x04	; 4
    6158:	85 ff       	sbrs	r24, 5
    615a:	0e c0       	rjmp	.+28     	; 0x6178 <_poll_dre_done>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:445
          if (_tx_buffer_head == _tx_buffer_tail) {
    615c:	91 89       	ldd	r25, Z+17	; 0x11
    615e:	82 89       	ldd	r24, Z+18	; 0x12
    6160:	98 13       	cpse	r25, r24
    6162:	07 c0       	rjmp	.+14     	; 0x6172 <HardwareSerial::_poll_tx_data_empty()+0x34>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:447
            // Buffer empty, so disable "data register empty" interrupt
            (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
    6164:	15 96       	adiw	r26, 0x05	; 5
    6166:	8c 91       	ld	r24, X
    6168:	15 97       	sbiw	r26, 0x05	; 5
    616a:	8f 7d       	andi	r24, 0xDF	; 223
    616c:	15 96       	adiw	r26, 0x05	; 5
    616e:	8c 93       	st	X, r24
    6170:	08 95       	ret
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:465
      #else
                    "rjmp _poll_dre"    "\n\t"
      #endif
                    "_poll_dre_done:"    "\n"
                    ::"z"((uint16_t)thisSerial)
                    : "r18","r19","r24","r25","r26","r27"); // these got saved and restored in the ISR context, but here we don't need top and in many cases no action is needed.
    6172:	e8 94       	clt
    6174:	0c 94 80 56 	jmp	0xad00	; 0xad00 <_poll_dre>

00006178 <_poll_dre_done>:
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:474
        }
      }
      // In case interrupts are enabled, the interrupt routine will be invoked by itself
      // Note that this currently does not handle cases where the DRE interruopt becomes
      // disabled, yet you are actually attempting to send. I don't think it can happen.
    }
    6178:	08 95       	ret

0000617a <HardwareSerial::write(unsigned char)>:
_ZN14HardwareSerial5writeEh():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:767
        // When we get here, nothing is queued anymore (DREIE is disabled) and
        // the hardware finished transmission (TXCIF is set).
      }


      size_t HardwareSerial::write(uint8_t c) {
    617a:	0f 93       	push	r16
    617c:	1f 93       	push	r17
    617e:	cf 93       	push	r28
    6180:	df 93       	push	r29
    6182:	ec 01       	movw	r28, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:768
        _state |= 1; // Record that we have written to serial since it was begun.
    6184:	8e 85       	ldd	r24, Y+14	; 0x0e
    6186:	81 60       	ori	r24, 0x01	; 1
    6188:	8e 87       	std	Y+14, r24	; 0x0e
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:773
        // If the buffer and the data register is empty, just write the byte
        // to the data register and be done. This shortcut helps
        // significantly improve the effective data rate at high (>
        // 500kbit/s) bit rates, where interrupt overhead becomes a slowdown.
        if ((_tx_buffer_head == _tx_buffer_tail) && ((*_hwserial_module).STATUS & USART_DREIF_bm)) {
    618a:	99 89       	ldd	r25, Y+17	; 0x11
    618c:	8a 89       	ldd	r24, Y+18	; 0x12
    618e:	98 13       	cpse	r25, r24
    6190:	0b c0       	rjmp	.+22     	; 0x61a8 <HardwareSerial::write(unsigned char)+0x2e>
    6192:	e8 85       	ldd	r30, Y+8	; 0x08
    6194:	f9 85       	ldd	r31, Y+9	; 0x09
    6196:	84 81       	ldd	r24, Z+4	; 0x04
    6198:	85 ff       	sbrs	r24, 5
    619a:	06 c0       	rjmp	.+12     	; 0x61a8 <HardwareSerial::write(unsigned char)+0x2e>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:774
          if (_state & 2) { // in half duplex mode, we turn off RXC interrupt
    619c:	8e 85       	ldd	r24, Y+14	; 0x0e
    619e:	81 fd       	sbrc	r24, 1
    61a0:	0d c0       	rjmp	.+26     	; 0x61bc <HardwareSerial::write(unsigned char)+0x42>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:781
            ctrla &= ~USART_RXCIE_bm;
            ctrla |=  USART_TXCIE_bm;
            (*_hwserial_module).STATUS = USART_TXCIF_bm;
            (*_hwserial_module).CTRLA = ctrla;
          } else {
            (*_hwserial_module).STATUS = USART_TXCIF_bm;
    61a2:	80 e4       	ldi	r24, 0x40	; 64
    61a4:	84 83       	std	Z+4, r24	; 0x04
    61a6:	12 c0       	rjmp	.+36     	; 0x61cc <HardwareSerial::write(unsigned char)+0x52>
    61a8:	06 2f       	mov	r16, r22
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:802
           * // that the interrupt handler is called in this situation
           * (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
           */
          return 1;
        }
        tx_buffer_index_t i = (_tx_buffer_head + 1) & (SERIAL_TX_BUFFER_SIZE - 1);  // % SERIAL_TX_BUFFER_SIZE;
    61aa:	19 89       	ldd	r17, Y+17	; 0x11
    61ac:	1f 5f       	subi	r17, 0xFF	; 255
    61ae:	1f 73       	andi	r17, 0x3F	; 63
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:806

        // If the output buffer is full, there's nothing we can do other than to
        // wait for the interrupt handler to empty it a bit (or emulate interrupts)
        while (i == _tx_buffer_tail) {
    61b0:	8a 89       	ldd	r24, Y+18	; 0x12
    61b2:	81 13       	cpse	r24, r17
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:807
          _poll_tx_data_empty();
    61b4:	15 c0       	rjmp	.+42     	; 0x61e0 <HardwareSerial::write(unsigned char)+0x66>
    61b6:	ce 01       	movw	r24, r28
    61b8:	c2 df       	rcall	.-124    	; 0x613e <HardwareSerial::_poll_tx_data_empty()>
    61ba:	fa cf       	rjmp	.-12     	; 0x61b0 <HardwareSerial::write(unsigned char)+0x36>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:775
        // to the data register and be done. This shortcut helps
        // significantly improve the effective data rate at high (>
        // 500kbit/s) bit rates, where interrupt overhead becomes a slowdown.
        if ((_tx_buffer_head == _tx_buffer_tail) && ((*_hwserial_module).STATUS & USART_DREIF_bm)) {
          if (_state & 2) { // in half duplex mode, we turn off RXC interrupt
            uint8_t ctrla = (*_hwserial_module).CTRLA;
    61bc:	85 81       	ldd	r24, Z+5	; 0x05
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:776
            ctrla &= ~USART_RXCIE_bm;
    61be:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:777
            ctrla |=  USART_TXCIE_bm;
    61c0:	80 64       	ori	r24, 0x40	; 64
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:778
            (*_hwserial_module).STATUS = USART_TXCIF_bm;
    61c2:	90 e4       	ldi	r25, 0x40	; 64
    61c4:	94 83       	std	Z+4, r25	; 0x04
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:779
            (*_hwserial_module).CTRLA = ctrla;
    61c6:	e8 85       	ldd	r30, Y+8	; 0x08
    61c8:	f9 85       	ldd	r31, Y+9	; 0x09
    61ca:	85 83       	std	Z+5, r24	; 0x05
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:784
          } else {
            (*_hwserial_module).STATUS = USART_TXCIF_bm;
          }
          // MUST clear TXCIF **before** writing new char, otherwise ill-timed interrupt can cause it to erase the flag after the new charchter has been sent!
          (*_hwserial_module).TXDATAL = c;
    61cc:	e8 85       	ldd	r30, Y+8	; 0x08
    61ce:	f9 85       	ldd	r31, Y+9	; 0x09
    61d0:	62 83       	std	Z+2, r22	; 0x02
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:822
        } else {
          // Enable "data register empty interrupt"
          (*_hwserial_module).CTRLA |= USART_DREIE_bm;
        }
        return 1;
      }
    61d2:	81 e0       	ldi	r24, 0x01	; 1
    61d4:	90 e0       	ldi	r25, 0x00	; 0
    61d6:	df 91       	pop	r29
    61d8:	cf 91       	pop	r28
    61da:	1f 91       	pop	r17
    61dc:	0f 91       	pop	r16
    61de:	08 95       	ret
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:809
        // If the output buffer is full, there's nothing we can do other than to
        // wait for the interrupt handler to empty it a bit (or emulate interrupts)
        while (i == _tx_buffer_tail) {
          _poll_tx_data_empty();
        }
        _tx_buffer[_tx_buffer_head] = c;
    61e0:	e9 89       	ldd	r30, Y+17	; 0x11
    61e2:	ec 0f       	add	r30, r28
    61e4:	fd 2f       	mov	r31, r29
    61e6:	f1 1d       	adc	r31, r1
    61e8:	ed 5a       	subi	r30, 0xAD	; 173
    61ea:	ff 4f       	sbci	r31, 0xFF	; 255
    61ec:	00 83       	st	Z, r16
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:810
        _tx_buffer_head = i;
    61ee:	19 8b       	std	Y+17, r17	; 0x11
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:811
        if (_state & 2) { // in half duplex mode, we turn off RXC interrupt
    61f0:	8e 85       	ldd	r24, Y+14	; 0x0e
    61f2:	e8 85       	ldd	r30, Y+8	; 0x08
    61f4:	f9 85       	ldd	r31, Y+9	; 0x09
    61f6:	81 ff       	sbrs	r24, 1
    61f8:	09 c0       	rjmp	.+18     	; 0x620c <HardwareSerial::write(unsigned char)+0x92>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:812
          uint8_t ctrla = (*_hwserial_module).CTRLA;
    61fa:	85 81       	ldd	r24, Z+5	; 0x05
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:813
          ctrla &= ~USART_RXCIE_bm;
    61fc:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:814
          ctrla |= USART_TXCIE_bm | USART_DREIE_bm;
    61fe:	80 66       	ori	r24, 0x60	; 96
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:815
          (*_hwserial_module).STATUS = USART_TXCIF_bm;
    6200:	90 e4       	ldi	r25, 0x40	; 64
    6202:	94 83       	std	Z+4, r25	; 0x04
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:816
          (*_hwserial_module).CTRLA = ctrla;
    6204:	e8 85       	ldd	r30, Y+8	; 0x08
    6206:	f9 85       	ldd	r31, Y+9	; 0x09
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:819
        } else {
          // Enable "data register empty interrupt"
          (*_hwserial_module).CTRLA |= USART_DREIE_bm;
    6208:	85 83       	std	Z+5, r24	; 0x05
    620a:	e3 cf       	rjmp	.-58     	; 0x61d2 <HardwareSerial::write(unsigned char)+0x58>
    620c:	85 81       	ldd	r24, Z+5	; 0x05
    620e:	80 62       	ori	r24, 0x20	; 32
    6210:	fb cf       	rjmp	.-10     	; 0x6208 <HardwareSerial::write(unsigned char)+0x8e>

00006212 <HardwareSerial::flush()>:
_ZN14HardwareSerial5flushEv():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:736
          return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
        }
        return tail - head - 1;
      }

      void HardwareSerial::flush() {
    6212:	cf 93       	push	r28
    6214:	df 93       	push	r29
    6216:	ec 01       	movw	r28, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:740
        // If we have never written a byte, no need to flush. This special
        // case is needed since there is no way to force the TXCIF (transmit
        // complete) bit to 1 during initialization
        if (!_state & 1) {
    6218:	8e 85       	ldd	r24, Y+14	; 0x0e
    621a:	88 23       	and	r24, r24
    621c:	59 f0       	breq	.+22     	; 0x6234 <HardwareSerial::flush()+0x22>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:755
        // it's appropriate to use for applications where it has only very small benefits, and significant risk of surprising the user and causing
        // breakage of code that would otherwise work. Finally, the previous implementation didn't check if it was called from the current lvl1 ISR
        // and in that case flush(), and write() with full buffer would just straight up hang...

        // Spin until the data-register-empty-interrupt is disabled and TX complete interrupt flag is raised
        while (((*_hwserial_module).CTRLA & USART_DREIE_bm) || (!((*_hwserial_module).STATUS & USART_TXCIF_bm))) {
    621e:	e8 85       	ldd	r30, Y+8	; 0x08
    6220:	f9 85       	ldd	r31, Y+9	; 0x09
    6222:	85 81       	ldd	r24, Z+5	; 0x05
    6224:	85 fd       	sbrc	r24, 5
    6226:	03 c0       	rjmp	.+6      	; 0x622e <HardwareSerial::flush()+0x1c>
    6228:	84 81       	ldd	r24, Z+4	; 0x04
    622a:	86 fd       	sbrc	r24, 6
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:760

          // If interrupts are globally disabled or the and DR empty interrupt is disabled,
          // poll the "data register empty" interrupt flag to prevent deadlock

          _poll_tx_data_empty();
    622c:	03 c0       	rjmp	.+6      	; 0x6234 <HardwareSerial::flush()+0x22>
    622e:	ce 01       	movw	r24, r28
    6230:	86 df       	rcall	.-244    	; 0x613e <HardwareSerial::_poll_tx_data_empty()>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:764
        }
        // When we get here, nothing is queued anymore (DREIE is disabled) and
        // the hardware finished transmission (TXCIF is set).
      }
    6232:	f5 cf       	rjmp	.-22     	; 0x621e <HardwareSerial::flush()+0xc>
    6234:	df 91       	pop	r29
    6236:	cf 91       	pop	r28
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:684
        return NOT_A_MUX; // At this point, we have checked all group codes for this peripheral. It ain't there. Return NOT_A_MUX.
      }
    }
    void HardwareSerial::end() {
      // wait for transmission of outgoing data
      flush();
    6238:	08 95       	ret

0000623a <HardwareSerial::end() [clone .constprop.171]>:
_ZN14HardwareSerial3endEv.constprop.171():
    623a:	87 ec       	ldi	r24, 0xC7	; 199
    623c:	95 e4       	ldi	r25, 0x45	; 69
    623e:	e9 df       	rcall	.-46     	; 0x6212 <HardwareSerial::flush()>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:687
      // Disable receiver and transmitter as well as the RX complete and the data register empty interrupts.
      // TXCIE only used in half duplex - we can just turn the damned thing off yo!
      volatile USART_t * temp = _hwserial_module; /* compiler does a slightly better job with this. */
    6240:	a7 ec       	ldi	r26, 0xC7	; 199
    6242:	b5 e4       	ldi	r27, 0x45	; 69
    6244:	18 96       	adiw	r26, 0x08	; 8
    6246:	ed 91       	ld	r30, X+
    6248:	fc 91       	ld	r31, X
    624a:	19 97       	sbiw	r26, 0x09	; 9
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:688
      temp -> CTRLB &= 0; //~(USART_RXEN_bm | USART_TXEN_bm);
    624c:	86 81       	ldd	r24, Z+6	; 0x06
    624e:	16 82       	std	Z+6, r1	; 0x06
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:689
      temp -> CTRLA &= 0; //~(USART_RXCIE_bm | USART_DREIE_bm | USART_TXCIE_bm);
    6250:	85 81       	ldd	r24, Z+5	; 0x05
    6252:	15 82       	std	Z+5, r1	; 0x05
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:690
      temp -> STATUS =  USART_TXCIF_bm; // want to make sure no chanceofthat firing in error. TXCIE only used in half duplex
    6254:	80 e4       	ldi	r24, 0x40	; 64
    6256:	84 83       	std	Z+4, r24	; 0x04
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:692
      // clear any received data
      _rx_buffer_head = _rx_buffer_tail;
    6258:	50 96       	adiw	r26, 0x10	; 16
    625a:	8c 91       	ld	r24, X
    625c:	50 97       	sbiw	r26, 0x10	; 16
    625e:	1f 96       	adiw	r26, 0x0f	; 15
    6260:	8c 93       	st	X, r24
    6262:	1f 97       	sbiw	r26, 0x0f	; 15
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:696

      // Note: Does not change output pins
      // though the datasheetsays turning the TX module sets it to input.
      _state = 0;
    6264:	1e 96       	adiw	r26, 0x0e	; 14
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:697
    }
    6266:	1c 92       	st	X, r1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:537
        _pin_set = 0;
      }
      return false;
    }

    void HardwareSerial::begin(unsigned long baud, uint16_t options) {
    6268:	08 95       	ret

0000626a <HardwareSerial::begin(unsigned long, unsigned int) [clone .constprop.170]>:
_ZN14HardwareSerial5beginEmj.constprop.170():
    626a:	cf 93       	push	r28
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:540
      // Make sure no transmissions are ongoing and USART is disabled in case begin() is called by accident
      // without first calling end()
      if (_state & 1) {
    626c:	df 93       	push	r29
    626e:	80 91 d5 45 	lds	r24, 0x45D5	; 0x8045d5 <Serial0+0xe>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:541
        this->end();
    6272:	80 fd       	sbrc	r24, 0
    6274:	e2 df       	rcall	.-60     	; 0x623a <HardwareSerial::end() [clone .constprop.171]>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:579
        setpinmask             |= 0x10;         // this tells _set_pins not to disturb the configuration on the RX pin.
      }
      if (ctrla & USART_RS485_bm) {             // RS485 mode recorded here too... because we need to set
        setpinmask             |= 0x01;         // set pin output if we need to do that. Datasheet isn't clear
      }
      uint8_t oldSREG = SREG;
    6276:	6f b7       	in	r22, 0x3f	; 63
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:580
      cli();
    6278:	f8 94       	cli
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:581
      volatile USART_t* MyUSART = _hwserial_module;
    627a:	e0 91 cf 45 	lds	r30, 0x45CF	; 0x8045cf <Serial0+0x8>
    627e:	f0 91 d0 45 	lds	r31, 0x45D0	; 0x8045d0 <Serial0+0x9>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:582
      (*MyUSART).CTRLB          = 0;            // gotta disable first - some things are enable-locked.
    6282:	16 82       	std	Z+6, r1	; 0x06
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:583
      (*MyUSART).CTRLC          = ctrlc;        // No reason not to set first.
    6284:	33 e0       	ldi	r19, 0x03	; 3
    6286:	37 83       	std	Z+7, r19	; 0x07
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:584
      (*MyUSART).BAUD           = baud_setting; // Wish I could have set it long ago
    6288:	81 e4       	ldi	r24, 0x41	; 65
    628a:	93 e0       	ldi	r25, 0x03	; 3
    628c:	80 87       	std	Z+8, r24	; 0x08
    628e:	91 87       	std	Z+9, r25	; 0x09
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:590
      if (ctrla & 0x20) {                       // Now we have to do a bit of work
        setpinmask             &= 0x7F;         // Remove the RX pin in this case because we get the input from elsewhere.
        (*MyUSART).EVCTRL       = 1;            // enable event input - not clear from datasheet what's needed to
        (*MyUSART).TXPLCTRL     = 0xFF;         // Disable pulse length encoding.
      } else {
        (*MyUSART).EVCTRL       = 0;            // This needs to be turned off when not in use.
    6290:	14 86       	std	Z+12, r1	; 0x0c
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:592
      }                                         // finally strip out the SERIAL_EVENT_RX bit which is in the DREIE
      (*MyUSART).CTRLA          = ctrla & 0xDF; // position, which we never set in begin.
    6292:	80 e8       	ldi	r24, 0x80	; 128
    6294:	85 83       	std	Z+5, r24	; 0x05
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:593
      (*MyUSART).CTRLB          = ctrlb;        // Set the all important CTRLB...
    6296:	80 ec       	ldi	r24, 0xC0	; 192
    6298:	86 83       	std	Z+6, r24	; 0x06
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:594
        _set_pins(_usart_pins, _mux_count, _pin_set, setpinmask); // set up the pin(s)
    629a:	20 91 d4 45 	lds	r18, 0x45D4	; 0x8045d4 <Serial0+0xd>
    629e:	70 91 d3 45 	lds	r23, 0x45D3	; 0x8045d3 <Serial0+0xc>
    62a2:	80 91 d1 45 	lds	r24, 0x45D1	; 0x8045d1 <Serial0+0xa>
    62a6:	90 91 d2 45 	lds	r25, 0x45D2	; 0x8045d2 <Serial0+0xb>
_set_pins():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:641
    //  1  1  1  0      TX set output, RX not changed. Loopback mode: you can only see what you send since TX is OUTPUT and that's what's connected to RX.
    //  1  1  1  1      TX set input pullup. Half-duplex mode.
    // * indicates that RS485 mode if requested will be enabled, even though it is inappropriate. These configurations are documented unsupported.
    // Static
    void HardwareSerial::_set_pins(uint8_t* mux_table_ptr, uint8_t mux_count, uint8_t mux_setting, uint8_t enmask) {
      uint8_t* mux_row_ptr   = mux_table_ptr + (mux_setting * USART_PINS_WIDTH);
    62aa:	fc 01       	movw	r30, r24
    62ac:	23 9f       	mul	r18, r19
    62ae:	e0 0d       	add	r30, r0
    62b0:	f1 1d       	adc	r31, r1
    62b2:	11 24       	eor	r1, r1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:642
      uint16_t mux_row_gc_tx = pgm_read_word_near(mux_row_ptr); // Clever trick for faster PGM reads of consecutive bytes!
    62b4:	45 91       	lpm	r20, Z+
    62b6:	54 91       	lpm	r21, Z
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:644
      uint8_t mux_group_code = (uint8_t) (mux_row_gc_tx);       // this is the mux
      if (mux_setting < mux_count) {              // if false, pinmux none was selected, and we skip the pin configuration.
    62b8:	27 17       	cp	r18, r23
    62ba:	08 f0       	brcs	.+2      	; 0x62be <HardwareSerial::begin(unsigned long, unsigned int) [clone .constprop.170]+0x54>
    62bc:	3e c0       	rjmp	.+124    	; 0x633a <HardwareSerial::begin(unsigned long, unsigned int) [clone .constprop.170]+0xd0>
_pinMode():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:79
    }
  #endif
  _pinMode(pin, mode);
}
void _pinMode(uint8_t pin, uint8_t mode) {
  uint8_t bit_mask = digitalPinToBitMask(pin);
    62be:	59 32       	cpi	r21, 0x29	; 41
    62c0:	90 f4       	brcc	.+36     	; 0x62e6 <HardwareSerial::begin(unsigned long, unsigned int) [clone .constprop.170]+0x7c>
check_valid_digital_pin():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/Arduino.h:712
  #if !defined(NUM_TOTAL_PINS)
    #define NUM_TOTAL_PINS                (NUM_DIGITAL_PINS) /* Used the same way as NUM_DIGITAL_PINS. so it doesn't mean what it's named  - I didn't make the convention*/
  #endif

inline __attribute__((always_inline)) void check_valid_digital_pin(pin_size_t pin) {
  if (__builtin_constant_p(pin)) {
    62c2:	25 2f       	mov	r18, r21
    62c4:	30 e0       	ldi	r19, 0x00	; 0
_pinMode():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:79
    62c6:	f9 01       	movw	r30, r18
    62c8:	ec 50       	subi	r30, 0x0C	; 12
    62ca:	fe 4b       	sbci	r31, 0xBE	; 190
    62cc:	a0 81       	ld	r26, Z
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:80
  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP)) {
    62ce:	af 3f       	cpi	r26, 0xFF	; 255
    62d0:	51 f0       	breq	.+20     	; 0x62e6 <HardwareSerial::begin(unsigned long, unsigned int) [clone .constprop.170]+0x7c>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:83
    return;                             /* ignore invalid pins passed at runtime */
  }
  PORT_t *port = digitalPinToPortStruct(pin);
    62d2:	25 53       	subi	r18, 0x35	; 53
    62d4:	3e 4b       	sbci	r19, 0xBE	; 190
    62d6:	e9 01       	movw	r28, r18
    62d8:	e8 81       	ld	r30, Y
    62da:	d0 e2       	ldi	r29, 0x20	; 32
    62dc:	ed 9f       	mul	r30, r29
    62de:	f0 01       	movw	r30, r0
    62e0:	11 24       	eor	r1, r1
    62e2:	fc 5f       	subi	r31, 0xFC	; 252
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:86
  // if (port == NULL) return;           /* skip this test; if bit_mask isn't NOT_A_PIN, port won't be null - if it is, pins_arduino.h contains errors and we can't expect any digital I/O to work correctly.
  if (mode == OUTPUT) {
    port->DIRSET = bit_mask;            /* Configure direction as output and done*/
    62e4:	a1 83       	std	Z+1, r26	; 0x01
_set_pins():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:653
          pinMode(mux_pin_tx, OUTPUT);            // If and only if TX is enabled and open drain isn't should the TX pin be output.
        } else if (enmask & 0x50) {               // if it is enabled but is in open drain mode, or is disabled, but loopback is enabled
          pinMode(mux_pin_tx, INPUT_PULLUP);      // TX should be INPUT_PULLUP.
        }
        if (enmask & 0x80 && !(enmask & 0x10)) {  // Likewise if RX is enabled, unless loopback mode is too
          pinMode(mux_pin_tx + 1, INPUT_PULLUP);  // (in which case we caught it above), it should be pulled up
    62e6:	21 e0       	ldi	r18, 0x01	; 1
    62e8:	25 0f       	add	r18, r21
_pinMode():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:79
    }
  #endif
  _pinMode(pin, mode);
}
void _pinMode(uint8_t pin, uint8_t mode) {
  uint8_t bit_mask = digitalPinToBitMask(pin);
    62ea:	29 32       	cpi	r18, 0x29	; 41
    62ec:	30 f5       	brcc	.+76     	; 0x633a <HardwareSerial::begin(unsigned long, unsigned int) [clone .constprop.170]+0xd0>
check_valid_digital_pin():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/Arduino.h:712
    62ee:	30 e0       	ldi	r19, 0x00	; 0
_pinMode():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:79
    62f0:	f9 01       	movw	r30, r18
    62f2:	ec 50       	subi	r30, 0x0C	; 12
    62f4:	fe 4b       	sbci	r31, 0xBE	; 190
    62f6:	c0 81       	ld	r28, Z
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:80
  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP)) {
    62f8:	cf 3f       	cpi	r28, 0xFF	; 255
    62fa:	f9 f0       	breq	.+62     	; 0x633a <HardwareSerial::begin(unsigned long, unsigned int) [clone .constprop.170]+0xd0>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:83
    return;                             /* ignore invalid pins passed at runtime */
  }
  PORT_t *port = digitalPinToPortStruct(pin);
    62fc:	f9 01       	movw	r30, r18
    62fe:	e5 53       	subi	r30, 0x35	; 53
    6300:	fe 4b       	sbci	r31, 0xBE	; 190
    6302:	a0 81       	ld	r26, Z
    6304:	e0 e2       	ldi	r30, 0x20	; 32
    6306:	ae 9f       	mul	r26, r30
    6308:	d0 01       	movw	r26, r0
    630a:	11 24       	eor	r1, r1
    630c:	bc 5f       	subi	r27, 0xFC	; 252
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:89
  // if (port == NULL) return;           /* skip this test; if bit_mask isn't NOT_A_PIN, port won't be null - if it is, pins_arduino.h contains errors and we can't expect any digital I/O to work correctly.
  if (mode == OUTPUT) {
    port->DIRSET = bit_mask;            /* Configure direction as output and done*/
  } else {                              /* mode == INPUT or INPUT_PULLUP - more complicated */
                                        /* Calculate where pin control register is */
    uint8_t bit_pos = digitalPinToBitPosition(pin);
    630e:	2e 55       	subi	r18, 0x5E	; 94
    6310:	3e 4b       	sbci	r19, 0xBE	; 190
    6312:	f9 01       	movw	r30, r18
    6314:	d0 81       	ld	r29, Z
_ZN14HardwareSerial5beginEmj.constprop.170():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:90
    volatile uint8_t *pin_ctrl = getPINnCTRLregister(port, bit_pos);
    6316:	f0 e0       	ldi	r31, 0x00	; 0
    6318:	e0 e0       	ldi	r30, 0x00	; 0
_pinMode():
    631a:	d8 30       	cpi	r29, 0x08	; 8
    631c:	30 f4       	brcc	.+12     	; 0x632a <HardwareSerial::begin(unsigned long, unsigned int) [clone .constprop.170]+0xc0>
    631e:	9d 01       	movw	r18, r26
    6320:	20 5f       	subi	r18, 0xF0	; 240
    6322:	3f 4f       	sbci	r19, 0xFF	; 255
    6324:	f9 01       	movw	r30, r18
    6326:	ed 0f       	add	r30, r29
    6328:	f1 1d       	adc	r31, r1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:91
    uint8_t status = SREG;              /* Save state */
    632a:	3f b7       	in	r19, 0x3f	; 63
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:92
    cli();                              /* Interrupts off for PINnCTRL stuff */
    632c:	f8 94       	cli
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:93
    port->DIRCLR = bit_mask;            /* Configure direction as input */
    632e:	12 96       	adiw	r26, 0x02	; 2
    6330:	cc 93       	st	X, r28
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:95
    if (mode == INPUT_PULLUP) {         /* Configure pull-up resistor */
      *pin_ctrl |= PORT_PULLUPEN_bm;    /* Enable pull-up */
    6332:	20 81       	ld	r18, Z
    6334:	28 60       	ori	r18, 0x08	; 8
    6336:	20 83       	st	Z, r18
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:99
    } else {                            /* mode == INPUT (no pullup) */
      *pin_ctrl &= ~(PORT_PULLUPEN_bm); /* Disable pull-up */
    }
    SREG = status;                      /* Restore state */
    6338:	3f bf       	out	0x3f, r19	; 63
_mux_set():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:601
    }

// Static
    void HardwareSerial::_mux_set(uint8_t* mux_table_ptr, uint8_t mux_count, uint8_t mux_code) {
    #if HWSERIAL_MUX_REG_COUNT > 1  // for big pincount devices that have more then one USART PORTMUX register
      uint8_t* mux_info_ptr = mux_table_ptr + (mux_count * USART_PINS_WIDTH) + 1;
    633a:	fc 01       	movw	r30, r24
    633c:	23 e0       	ldi	r18, 0x03	; 3
    633e:	72 9f       	mul	r23, r18
    6340:	e0 0d       	add	r30, r0
    6342:	f1 1d       	adc	r31, r1
    6344:	11 24       	eor	r1, r1
    6346:	31 96       	adiw	r30, 0x01	; 1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:602
      uint16_t mux_options_off_gm = pgm_read_word_near(mux_info_ptr);  /* pointer offset to the second columun
    6348:	25 91       	lpm	r18, Z+
    634a:	34 91       	lpm	r19, Z
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:605
      at the end bottom row of the table, with info about the mux options, rather than a specific option
      Low byte is the offset from USARTROUTEA, second byte is the group mask. */
      volatile uint8_t* portmux  = (uint8_t*)(HWSERIAL_MUX_REGISTER_BASE + (uint8_t)mux_options_off_gm); // offset
    634c:	f9 01       	movw	r30, r18
    634e:	ff 27       	eor	r31, r31
    6350:	ee 51       	subi	r30, 0x1E	; 30
    6352:	fa 4f       	sbci	r31, 0xFA	; 250
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:606
      uint8_t temp   = *portmux;
    6354:	90 81       	ld	r25, Z
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:607
      temp          &= ~((uint8_t) (mux_options_off_gm >> 8)); // Group Mask
    6356:	83 2f       	mov	r24, r19
    6358:	80 95       	com	r24
    635a:	89 23       	and	r24, r25
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:608
      temp          |= mux_code;
    635c:	48 2b       	or	r20, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:609
      *portmux       = temp;
    635e:	40 83       	st	Z, r20
_ZN14HardwareSerial5beginEmj.constprop.170():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:595
        (*MyUSART).EVCTRL       = 0;            // This needs to be turned off when not in use.
      }                                         // finally strip out the SERIAL_EVENT_RX bit which is in the DREIE
      (*MyUSART).CTRLA          = ctrla & 0xDF; // position, which we never set in begin.
      (*MyUSART).CTRLB          = ctrlb;        // Set the all important CTRLB...
        _set_pins(_usart_pins, _mux_count, _pin_set, setpinmask); // set up the pin(s)
      SREG = oldSREG;                             // re-enable interrupts, and we're done.
    6360:	6f bf       	out	0x3f, r22	; 63
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/UART.cpp:596
    }
    6362:	df 91       	pop	r29
    6364:	cf 91       	pop	r28
    6366:	08 95       	ret

00006368 <_delayMicroseconds>:
_delayMicroseconds():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:1180
  us -= 3; // 2 cycles


#elif F_CPU >= 24000000L
  // for a one-microsecond delay, burn 8 cycles and return
  __asm__ __volatile__ (
    6368:	01 c0       	rjmp	.+2      	; 0x636c <_delayMicroseconds+0x4>
    636a:	08 95       	ret
    636c:	fe df       	rcall	.-4      	; 0x636a <_delayMicroseconds+0x2>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:1189
                          // wait 8 cycles with 3 words
  if (us <= 1) return; //  = 3 cycles, (4 when true)

  // the loop takes 1/3 of a microsecond (8 cycles) per iteration
  // so execute it three times for each microsecond of delay requested.
  us = (us << 1) + us; // x3 us, = 5 cycles
    636e:	9c 01       	movw	r18, r24
    6370:	22 0f       	add	r18, r18
    6372:	33 1f       	adc	r19, r19
    6374:	03 97       	sbiw	r24, 0x03	; 3
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:1191
  // we just burned 24 (22) cycles above, remove 3
  us -= 3; // 2 cycles
    6376:	82 0f       	add	r24, r18
    6378:	93 1f       	adc	r25, r19
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:1323
    "rjmp .+0"      "\n\t"            // 2 cycles
    "nop"           "\n\t"
    "brne 1b" : "=w" (us) : "0" (us)  // 2 cycles
  );
#elif defined(DELAYMICROS_EIGHT)
  __asm__ __volatile__ (
    637a:	01 97       	sbiw	r24, 0x01	; 1
    637c:	00 c0       	rjmp	.+0      	; 0x637e <_delayMicroseconds+0x16>
    637e:	00 c0       	rjmp	.+0      	; 0x6380 <_delayMicroseconds+0x18>
    6380:	e1 f7       	brne	.-8      	; 0x637a <_delayMicroseconds+0x12>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:1349
    "1: sbiw %0, 1" "\n\t"            // 2 cycles
    "brne 1b" : "=w" (us) : "0" (us)  // 2 cycles
  );
#endif
  // return = 4 cycles
}
    6382:	08 95       	ret

00006384 <micros>:
micros():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:482
      #else /* TCA */
        uint8_t ticks;
      #endif
      uint8_t flags;
      /* Save current state and disable interrupts */
      uint8_t oldSREG = SREG;
    6384:	9f b7       	in	r25, 0x3f	; 63
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:483
      cli(); /* INTERRUPTS OFF */
    6386:	f8 94       	cli
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:499
        while (!(TCD0.STATUS & TCD_CMDRDY_bm)); // wait for sync - should be only one iteration of this loop
        flags = TCD0.INTFLAGS;
        ticks = TCD0.CAPTUREA;
        */
      #else /* = defined(MILLIS_USE_TCB) */
        ticks = _timer->CNT;
    6388:	e0 91 2a 0b 	lds	r30, 0x0B2A	; 0x800b2a <__TEXT_REGION_LENGTH__+0x7e0b2a>
    638c:	f0 91 2b 0b 	lds	r31, 0x0B2B	; 0x800b2b <__TEXT_REGION_LENGTH__+0x7e0b2b>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:500
        flags = _timer->INTFLAGS;
    6390:	80 91 26 0b 	lds	r24, 0x0B26	; 0x800b26 <__TEXT_REGION_LENGTH__+0x7e0b26>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:508
       * ISR has not fired. If we already read a high value of ticks, either we read it just before the overflow,
       * so we shouldn't increment overflows, or interrupts are disabled and micros isn't expected to work so it
       * doesn't matter.
       * Get current number of overflows and timer count */
      #if defined(MILLIS_USE_TCB)
        overflows = timingStruct.timer_millis;
    6394:	20 91 bb 45 	lds	r18, 0x45BB	; 0x8045bb <timingStruct>
    6398:	30 91 bc 45 	lds	r19, 0x45BC	; 0x8045bc <timingStruct+0x1>
    639c:	40 91 bd 45 	lds	r20, 0x45BD	; 0x8045bd <timingStruct+0x2>
    63a0:	50 91 be 45 	lds	r21, 0x45BE	; 0x8045be <timingStruct+0x3>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:513
      #else
        overflows = timingStruct.timer_overflow_count;
      #endif
      /* Turn interrupts back on, assuming they were on when micros was called. */
      SREG = oldSREG; /* INTERRUPTS ON */
    63a4:	9f bf       	out	0x3f, r25	; 63
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:523
      */
      #if defined(MILLIS_USE_TCA)
        ticks = (TIME_TRACKING_TIMER_PERIOD) - ticks;
        if ((flags & TCA_SPLIT_HUNF_bm) && (ticks < 0x03)) {
      #else /* = defined(MILLIS_USE_TCB) */
        if ((flags & TCB_CAPT_bm) && !(ticks & 0xFF00)) {
    63a6:	80 ff       	sbrs	r24, 0
    63a8:	08 c0       	rjmp	.+16     	; 0x63ba <micros+0x36>
    63aa:	cf 01       	movw	r24, r30
    63ac:	88 27       	eor	r24, r24
    63ae:	89 2b       	or	r24, r25
    63b0:	21 f4       	brne	.+8      	; 0x63ba <micros+0x36>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:528
      #endif
      #if (defined(MILLIS_USE_TCB) && (F_CPU <= 2000000UL))
        overflows += 2;
      #else
        overflows++;
    63b2:	2f 5f       	subi	r18, 0xFF	; 255
    63b4:	3f 4f       	sbci	r19, 0xFF	; 255
    63b6:	4f 4f       	sbci	r20, 0xFF	; 255
    63b8:	5f 4f       	sbci	r21, 0xFF	; 255
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:677
         * 57 replaced with 30 save 27 clocks @ 12 = 2 us saved
         * 67 replaced with 32 save 35 clocks @ 24 = 1.5us saved
         * 77 replaced with 34 save 43 clocks @ 48 = 1 us saved
         */
        #elif (F_CPU == 48000000UL || F_CPU == 24000000UL || F_CPU == 12000000UL || F_CPU == 6000000UL || F_CPU == 3000000UL)
          __asm__ __volatile__(
    63ba:	0f 01       	movw	r0, r30
    63bc:	16 94       	lsr	r1
    63be:	07 94       	ror	r0
    63c0:	16 94       	lsr	r1
    63c2:	07 94       	ror	r0
    63c4:	16 94       	lsr	r1
    63c6:	07 94       	ror	r0
    63c8:	16 94       	lsr	r1
    63ca:	07 94       	ror	r0
    63cc:	f0 01       	movw	r30, r0
    63ce:	16 94       	lsr	r1
    63d0:	07 94       	ror	r0
    63d2:	e0 0d       	add	r30, r0
    63d4:	f1 1d       	adc	r31, r1
    63d6:	16 94       	lsr	r1
    63d8:	07 94       	ror	r0
    63da:	10 2c       	mov	r1, r0
    63dc:	16 94       	lsr	r1
    63de:	01 18       	sub	r0, r1
    63e0:	16 94       	lsr	r1
    63e2:	01 0c       	add	r0, r1
    63e4:	16 94       	lsr	r1
    63e6:	01 18       	sub	r0, r1
    63e8:	16 94       	lsr	r1
    63ea:	01 0c       	add	r0, r1
    63ec:	16 94       	lsr	r1
    63ee:	01 18       	sub	r0, r1
    63f0:	16 94       	lsr	r1
    63f2:	16 94       	lsr	r1
    63f4:	01 0c       	add	r0, r1
    63f6:	11 24       	eor	r1, r1
    63f8:	e0 19       	sub	r30, r0
    63fa:	f1 09       	sbc	r31, r1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:722
            "add r0,r1"     "\n\t"  // + ticks >> 9
            "eor r1,r1"     "\n\t"  // clear out r1
            "sub %A0,r0"    "\n\t"  // Add the sum of terms that fit in a byte to what was ticks in old code.
            "sbc %B0,r1"    "\n"    // carry - see,this is why AVR needs a known zero.
            : "+r" (ticks));        // Do the rest in C. ticks is a read/write operand.
          microseconds = overflows * 1000 + ticks; // nice and clean.
    63fc:	a8 ee       	ldi	r26, 0xE8	; 232
    63fe:	b3 e0       	ldi	r27, 0x03	; 3
    6400:	0e 94 00 77 	call	0xee00	; 0xee00 <__muluhisi3>
    6404:	6e 0f       	add	r22, r30
    6406:	7f 1f       	adc	r23, r31
    6408:	81 1d       	adc	r24, r1
    640a:	91 1d       	adc	r25, r1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:892
          microseconds = ((overflows * millisClockCyclesToMicroseconds(TIME_TRACKING_CYCLES_PER_OVF))
                        + (ticks * (millisClockCyclesToMicroseconds(TIME_TRACKING_CYCLES_PER_OVF) / TIME_TRACKING_TIMER_PERIOD)));
        #endif
      #endif // end of timer-specific part of micros calculations
      return microseconds;
    }
    640c:	08 95       	ret

0000640e <delay>:
delay():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:954

#if (!(defined(MILLIS_USE_TIMERNONE) || defined(MILLIS_USE_TIMERRTC) || (F_CPU == 7000000L || F_CPU == 14000000)))
  // delay implementation when we do have micros() - we know it won't work at 7 or 14, and those can be generated
  // from internal, and switch logic is in even though micros isn't.
  void delay(unsigned long ms)
  {
    640e:	cf 92       	push	r12
    6410:	df 92       	push	r13
    6412:	ef 92       	push	r14
    6414:	ff 92       	push	r15
    6416:	cf 93       	push	r28
    6418:	df 93       	push	r29
    641a:	6b 01       	movw	r12, r22
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:955
    uint16_t start = (uint16_t)micros();
    641c:	7c 01       	movw	r14, r24
    641e:	b2 df       	rcall	.-156    	; 0x6384 <micros>
    6420:	eb 01       	movw	r28, r22
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:957
    while (true) {
      if (ms == 0) break;
    6422:	c1 14       	cp	r12, r1
    6424:	d1 04       	cpc	r13, r1
    6426:	e1 04       	cpc	r14, r1
    6428:	f1 04       	cpc	r15, r1
    642a:	71 f0       	breq	.+28     	; 0x6448 <delay+0x3a>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:959
      yield();
      uint16_t us_passed = (uint16_t)micros() - start;
    642c:	ab df       	rcall	.-170    	; 0x6384 <micros>
    642e:	6c 1b       	sub	r22, r28
    6430:	7d 0b       	sbc	r23, r29
    6432:	68 3e       	cpi	r22, 0xE8	; 232
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:960
      if (us_passed >= 1000) {
    6434:	73 40       	sbci	r23, 0x03	; 3
    6436:	a8 f3       	brcs	.-22     	; 0x6422 <delay+0x14>
    6438:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:961
        ms--;
    643a:	c8 1a       	sub	r12, r24
    643c:	d1 08       	sbc	r13, r1
    643e:	e1 08       	sbc	r14, r1
    6440:	f1 08       	sbc	r15, r1
    6442:	c8 51       	subi	r28, 0x18	; 24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:962
        start += 1000;
    6444:	dc 4f       	sbci	r29, 0xFC	; 252
    6446:	ed cf       	rjmp	.-38     	; 0x6422 <delay+0x14>
    6448:	df 91       	pop	r29
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:965
      }
    }
  }
    644a:	cf 91       	pop	r28
    644c:	ff 90       	pop	r15
    644e:	ef 90       	pop	r14
    6450:	df 90       	pop	r13
    6452:	cf 90       	pop	r12
    6454:	08 95       	ret

00006456 <TwoWire::flush()>:
_ZN7TwoWire5flushEv():
    6456:	dc 01       	movw	r26, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/twi.c:130
 */
void TWI_Flush(struct twiData *_data) {
  #if defined(ERRATA_TWI_FLUSH)
    // badCall("The AVR DA-series parts are impacted by an errata that leaves the TWI peripheral in a non-functioning state when using flush.");
    // restarting TWI hardware by hand. Extra size shouldn't matter on DA series
    uint8_t temp_MCTRLA     = _data->_module->MCTRLA;
    6458:	18 96       	adiw	r26, 0x08	; 8
    645a:	ed 91       	ld	r30, X+
    645c:	fc 91       	ld	r31, X
    645e:	93 81       	ldd	r25, Z+3	; 0x03
    6460:	81 85       	ldd	r24, Z+9	; 0x09
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/twi.c:131
    uint8_t temp_SCTRLA     = _data->_module->SCTRLA;
    6462:	13 82       	std	Z+3, r1	; 0x03
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/twi.c:132
    _data->_module->MCTRLA  = 0x00;
    6464:	11 86       	std	Z+9, r1	; 0x09
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/twi.c:133
    _data->_module->SCTRLA  = 0x00;
    6466:	93 83       	std	Z+3, r25	; 0x03
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/twi.c:134
    _data->_module->MCTRLA  = temp_MCTRLA;
    6468:	91 e0       	ldi	r25, 0x01	; 1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/twi.c:135
    _data->_module->MSTATUS = 0x01;  // force TWI state machine into idle state
    646a:	95 83       	std	Z+5, r25	; 0x05
    646c:	81 87       	std	Z+9, r24	; 0x09
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/twi.c:136
    _data->_module->SCTRLA  = temp_SCTRLA;
    646e:	08 95       	ret

00006470 <TwoWire::peek()>:
_ZN7TwoWire4peekEv():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:748
 *@return     void
 */
void TwoWire::flush(void) {
  /* Turn off and on TWI module */
  TWI_Flush(&vars);
}
    6470:	9c 01       	movw	r18, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:726
      rxTail   = &(vars._bytesReadWritten);
      rxBuffer =   vars._trBuffer;
    #else                                        // Separate tx/rx Buffers
      rxHead   = &(vars._bytesToRead);
      rxTail   = &(vars._bytesRead);
      rxBuffer =   vars._rxBuffer;
    6472:	29 56       	subi	r18, 0x69	; 105
    6474:	3f 4f       	sbci	r19, 0xFF	; 255
    6476:	dc 01       	movw	r26, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:730
    #endif
  }

  if ((*rxTail) < (*rxHead)) {   // if there are bytes to read
    6478:	1f 96       	adiw	r26, 0x0f	; 15
    647a:	ec 91       	ld	r30, X
    647c:	1f 97       	sbiw	r26, 0x0f	; 15
    647e:	1e 96       	adiw	r26, 0x0e	; 14
    6480:	8c 91       	ld	r24, X
    6482:	e8 17       	cp	r30, r24
    6484:	30 f4       	brcc	.+12     	; 0x6492 <TwoWire::peek()+0x22>
    6486:	e2 0f       	add	r30, r18
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:731
    return rxBuffer[(*rxTail)];
    6488:	f3 2f       	mov	r31, r19
    648a:	f1 1d       	adc	r31, r1
    648c:	80 81       	ld	r24, Z
    648e:	90 e0       	ldi	r25, 0x00	; 0
    6490:	08 95       	ret
    6492:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:733
  } else {      // No bytes to read
    return -1;
    6494:	9f ef       	ldi	r25, 0xFF	; 255
    6496:	08 95       	ret

00006498 <TwoWire::read()>:
_ZN7TwoWire4readEv():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:735
  }
}
    6498:	fc 01       	movw	r30, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:635
 *@param      void
 *
 *@return     int
 *@retval     byte in the buffer or -1 if buffer is empty
 */
int TwoWire::read(void) {
    649a:	dc 01       	movw	r26, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:653
      rxTail   = &(vars._bytesReadWritten);
      rxBuffer =   vars._trBuffer;
    #else                                        // Separate tx/rx Buffers
      rxHead   = &(vars._bytesToRead);
      rxTail   = &(vars._bytesRead);
      rxBuffer =   vars._rxBuffer;
    649c:	a9 56       	subi	r26, 0x69	; 105
    649e:	bf 4f       	sbci	r27, 0xFF	; 255
    64a0:	97 85       	ldd	r25, Z+15	; 0x0f
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:658
    #endif
  }


  if ((*rxTail) < (*rxHead)) {   // if there are bytes to read
    64a2:	86 85       	ldd	r24, Z+14	; 0x0e
    64a4:	98 17       	cp	r25, r24
    64a6:	40 f4       	brcc	.+16     	; 0x64b8 <TwoWire::read()+0x20>
    64a8:	a9 0f       	add	r26, r25
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:659
    uint8_t c = rxBuffer[(*rxTail)];
    64aa:	b1 1d       	adc	r27, r1
    64ac:	2c 91       	ld	r18, X
    64ae:	9f 5f       	subi	r25, 0xFF	; 255
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:660
    (*rxTail)++;
    64b0:	97 87       	std	Z+15, r25	; 0x0f
    64b2:	82 2f       	mov	r24, r18
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:661
    return c;
    64b4:	90 e0       	ldi	r25, 0x00	; 0
    64b6:	08 95       	ret
    64b8:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:663
  } else {                      // No bytes to read. At this point, rxTail moved up to
    return -1;                  // rxHead. To reset both to 0, a MasterRead or AddrWrite has to be called
    64ba:	9f ef       	ldi	r25, 0xFF	; 255
    64bc:	08 95       	ret

000064be <TwoWire::available()>:
_ZN7TwoWire9availableEv():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:665
  }
}
    64be:	fc 01       	movw	r30, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:603
 *@param      void
 *
 *@return     int
 *@retval     amount of bytes available to read from the host buffer
 */
int TwoWire::available(void) {
    64c0:	86 85       	ldd	r24, Z+14	; 0x0e
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:614
  #endif
  {
    #if defined(TWI_MERGE_BUFFERS)                // Same Buffers for tx/rx
      rxHead  = vars._bytesToReadWrite - vars._bytesReadWritten;
    #else                                         // Separate tx/rx Buffers
      rxHead  = vars._bytesToRead - vars._bytesRead;
    64c2:	97 85       	ldd	r25, Z+15	; 0x0f
    64c4:	89 1b       	sub	r24, r25
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:618
    #endif
  }
  return rxHead;
}
    64c6:	99 0b       	sbc	r25, r25
    64c8:	08 95       	ret

000064ca <TwoWire::write(unsigned char)>:
_ZN7TwoWire5writeEh():
    64ca:	fc 01       	movw	r30, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:536
 *
 *
 *@return     uint8_t
 *@retval     1 if successful, 0 if the buffer is full
 */
size_t TwoWire::write(uint8_t data) {
    64cc:	a5 85       	ldd	r26, Z+13	; 0x0d
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:557
    #endif
  }

  /* Put byte in txBuffer */

  if ((*txHead) < BUFFER_LENGTH) {      // while buffer not full, write to it
    64ce:	a2 38       	cpi	r26, 0x82	; 130
    64d0:	58 f4       	brcc	.+22     	; 0x64e8 <TwoWire::write(unsigned char)+0x1e>
    64d2:	a8 0f       	add	r26, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:558
    txBuffer[(*txHead)] = data;             // Load data into the buffer
    64d4:	b9 2f       	mov	r27, r25
    64d6:	b1 1d       	adc	r27, r1
    64d8:	55 96       	adiw	r26, 0x15	; 21
    64da:	6c 93       	st	X, r22
    64dc:	85 85       	ldd	r24, Z+13	; 0x0d
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:559
    (*txHead)++;                            // advancing the head
    64de:	8f 5f       	subi	r24, 0xFF	; 255
    64e0:	85 87       	std	Z+13, r24	; 0x0d
    64e2:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:560
    return 1;
    64e4:	90 e0       	ldi	r25, 0x00	; 0
    64e6:	08 95       	ret
    64e8:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:562
  } else {
    return 0;
    64ea:	80 e0       	ldi	r24, 0x00	; 0
    64ec:	08 95       	ret

000064ee <TwoWire::write(unsigned char const*, unsigned int)>:
_ZN7TwoWire5writeEPKhj():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:564
  }
}
    64ee:	bf 92       	push	r11
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:579
 *
 *
 *@return     uint8_t
 *@retval     amount of bytes copied
 */
size_t TwoWire::write(const uint8_t *data, size_t quantity) {
    64f0:	cf 92       	push	r12
    64f2:	df 92       	push	r13
    64f4:	ef 92       	push	r14
    64f6:	ff 92       	push	r15
    64f8:	0f 93       	push	r16
    64fa:	1f 93       	push	r17
    64fc:	cf 93       	push	r28
    64fe:	df 93       	push	r29
    6500:	7c 01       	movw	r14, r24
    6502:	6a 01       	movw	r12, r20
    6504:	b6 2e       	mov	r11, r22
    6506:	eb 01       	movw	r28, r22
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:581
  twi_buffer_index_t i = 0;
  for (; i < quantity; i++) {
    6508:	0c 2f       	mov	r16, r28
    650a:	0b 19       	sub	r16, r11
    650c:	10 e0       	ldi	r17, 0x00	; 0
    650e:	0c 15       	cp	r16, r12
    6510:	1d 05       	cpc	r17, r13
    6512:	28 f4       	brcc	.+10     	; 0x651e <TwoWire::write(unsigned char const*, unsigned int)+0x30>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:582
    if (TwoWire::write(*(data++)) == 0)
    6514:	69 91       	ld	r22, Y+
    6516:	c7 01       	movw	r24, r14
    6518:	d8 df       	rcall	.-80     	; 0x64ca <TwoWire::write(unsigned char)>
    651a:	89 2b       	or	r24, r25
    651c:	a9 f7       	brne	.-22     	; 0x6508 <TwoWire::write(unsigned char const*, unsigned int)+0x1a>
    651e:	c8 01       	movw	r24, r16
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Wire\src/Wire.cpp:587
      break;   // break if buffer full
  }

  return i;
}
    6520:	df 91       	pop	r29
    6522:	cf 91       	pop	r28
    6524:	1f 91       	pop	r17
    6526:	0f 91       	pop	r16
    6528:	ff 90       	pop	r15
    652a:	ef 90       	pop	r14
    652c:	df 90       	pop	r13
    652e:	cf 90       	pop	r12
    6530:	bf 90       	pop	r11
    6532:	08 95       	ret

00006534 <Event::set_generator(unsigned char)>:
_ZN5Event13set_generatorEh():
    6534:	fc 01       	movw	r30, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Event\src/Event.cpp:373
 *        A different approach is to use Event::assign_generator_pin(), which
 *        automatically picks the correct event channel for you.
 *
 * @param pin_number Arduino pin number to use as event generator
 */
void Event::set_generator(uint8_t pin_number) {
    6536:	70 e0       	ldi	r23, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Event\src/Event.cpp:374
  uint8_t port = digitalPinToPort(pin_number);
    6538:	db 01       	movw	r26, r22
    653a:	a5 53       	subi	r26, 0x35	; 53
    653c:	be 4b       	sbci	r27, 0xBE	; 190
    653e:	2c 91       	ld	r18, X
    6540:	2f 3f       	cpi	r18, 0xFF	; 255
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Event\src/Event.cpp:379
  uint8_t port_pin = digitalPinToBitPosition(pin_number);

  // Store event generator setting for use in start() and stop()

  if (port != NOT_A_PIN && port_pin != NOT_A_PIN) {
    6542:	79 f0       	breq	.+30     	; 0x6562 <Event::set_generator(unsigned char)+0x2e>
    6544:	6e 55       	subi	r22, 0x5E	; 94
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Event\src/Event.cpp:375
 *
 * @param pin_number Arduino pin number to use as event generator
 */
void Event::set_generator(uint8_t pin_number) {
  uint8_t port = digitalPinToPort(pin_number);
  uint8_t port_pin = digitalPinToBitPosition(pin_number);
    6546:	7e 4b       	sbci	r23, 0xBE	; 190
    6548:	db 01       	movw	r26, r22
    654a:	9c 91       	ld	r25, X
    654c:	9f 3f       	cpi	r25, 0xFF	; 255
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Event\src/Event.cpp:379

  // Store event generator setting for use in start() and stop()

  if (port != NOT_A_PIN && port_pin != NOT_A_PIN) {
    654e:	49 f0       	breq	.+18     	; 0x6562 <Event::set_generator(unsigned char)+0x2e>
    6550:	b8 e0       	ldi	r27, 0x08	; 8
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Event\src/Event.cpp:380
    generator_type = 0x40 | (port & 0x01) << 3 | port_pin;
    6552:	2b 9f       	mul	r18, r27
    6554:	90 01       	movw	r18, r0
    6556:	11 24       	eor	r1, r1
    6558:	28 70       	andi	r18, 0x08	; 8
    655a:	90 64       	ori	r25, 0x40	; 64
    655c:	29 2b       	or	r18, r25
    655e:	23 83       	std	Z+3, r18	; 0x03
    6560:	08 95       	ret
    6562:	13 82       	std	Z+3, r1	; 0x03
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Event\src/Event.cpp:382
  } else {
    generator_type = event::gen::disable;
    6564:	08 95       	ret

00006566 <u8x8_gpio_call>:
u8x8_gpio_call():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\Event\src/Event.cpp:384
  }
}
    6566:	dc 01       	movw	r26, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_gpio.c:42
#include "u8x8.h"


void u8x8_gpio_call(u8x8_t *u8x8, uint8_t msg, uint8_t arg)
{
  u8x8->gpio_and_delay_cb(u8x8, msg, arg, NULL);
    6568:	1a 96       	adiw	r26, 0x0a	; 10
    656a:	ed 91       	ld	r30, X+
    656c:	fc 91       	ld	r31, X
    656e:	30 e0       	ldi	r19, 0x00	; 0
    6570:	20 e0       	ldi	r18, 0x00	; 0
    6572:	09 94       	ijmp

00006574 <u8x8_RefreshDisplay>:
u8x8_RefreshDisplay():
    6574:	dc 01       	movw	r26, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:158
}

void u8x8_RefreshDisplay(u8x8_t *u8x8)
{
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_REFRESH, 0, NULL);  
    6576:	14 96       	adiw	r26, 0x04	; 4
    6578:	ed 91       	ld	r30, X+
    657a:	fc 91       	ld	r31, X
    657c:	30 e0       	ldi	r19, 0x00	; 0
    657e:	20 e0       	ldi	r18, 0x00	; 0
    6580:	40 e0       	ldi	r20, 0x00	; 0
    6582:	60 e1       	ldi	r22, 0x10	; 16
    6584:	09 94       	ijmp

00006586 <u8x8_cad_EndTransfer>:
u8x8_cad_EndTransfer():
    6586:	dc 01       	movw	r26, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:120
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_START_TRANSFER, 0, NULL);
}

uint8_t u8x8_cad_EndTransfer(u8x8_t *u8x8)
{
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_END_TRANSFER, 0, NULL);
    6588:	16 96       	adiw	r26, 0x06	; 6
    658a:	ed 91       	ld	r30, X+
    658c:	fc 91       	ld	r31, X
    658e:	30 e0       	ldi	r19, 0x00	; 0
    6590:	20 e0       	ldi	r18, 0x00	; 0
    6592:	40 e0       	ldi	r20, 0x00	; 0
    6594:	69 e1       	ldi	r22, 0x19	; 25
    6596:	09 94       	ijmp

00006598 <u8x8_cad_StartTransfer>:
u8x8_cad_StartTransfer():
    6598:	dc 01       	movw	r26, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:115
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, cnt, data);
}

uint8_t u8x8_cad_StartTransfer(u8x8_t *u8x8)
{
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_START_TRANSFER, 0, NULL);
    659a:	16 96       	adiw	r26, 0x06	; 6
    659c:	ed 91       	ld	r30, X+
    659e:	fc 91       	ld	r31, X
    65a0:	30 e0       	ldi	r19, 0x00	; 0
    65a2:	20 e0       	ldi	r18, 0x00	; 0
    65a4:	40 e0       	ldi	r20, 0x00	; 0
    65a6:	68 e1       	ldi	r22, 0x18	; 24
    65a8:	09 94       	ijmp

000065aa <u8x8_cad_SendData>:
u8x8_cad_SendData():
    65aa:	9a 01       	movw	r18, r20
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:109
  }
  return 1;
}

uint8_t u8x8_cad_SendData(u8x8_t *u8x8, uint8_t cnt, uint8_t *data)
{
    65ac:	dc 01       	movw	r26, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:110
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, cnt, data);
    65ae:	16 96       	adiw	r26, 0x06	; 6
    65b0:	ed 91       	ld	r30, X+
    65b2:	fc 91       	ld	r31, X
    65b4:	46 2f       	mov	r20, r22
    65b6:	67 e1       	ldi	r22, 0x17	; 23
    65b8:	09 94       	ijmp

000065ba <u8x8_cad_SendSequence>:
u8x8_cad_SendSequence():
    65ba:	ef 92       	push	r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:160
  254 milli	delay by milliseconds
  255		end of sequence
*/

void u8x8_cad_SendSequence(u8x8_t *u8x8, uint8_t const *data)
{
    65bc:	ff 92       	push	r15
    65be:	0f 93       	push	r16
    65c0:	1f 93       	push	r17
    65c2:	cf 93       	push	r28
    65c4:	df 93       	push	r29
    65c6:	1f 92       	push	r1
    65c8:	cd b7       	in	r28, 0x3d	; 61
    65ca:	de b7       	in	r29, 0x3e	; 62
    65cc:	7c 01       	movw	r14, r24
    65ce:	8b 01       	movw	r16, r22
    65d0:	d8 01       	movw	r26, r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:166
  uint8_t cmd;
  uint8_t v;

  for(;;)
  {
    cmd = *data;
    65d2:	6c 91       	ld	r22, X
    65d4:	67 31       	cpi	r22, 0x17	; 23
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:168
    data++;
    switch( cmd )
    65d6:	21 f1       	breq	.+72     	; 0x6620 <u8x8_cad_SendSequence+0x66>
    65d8:	50 f4       	brcc	.+20     	; 0x65ee <u8x8_cad_SendSequence+0x34>
    65da:	65 31       	cpi	r22, 0x15	; 21
    65dc:	98 f4       	brcc	.+38     	; 0x6604 <u8x8_cad_SendSequence+0x4a>
    65de:	0f 90       	pop	r0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:194
	  break;
      default:
	return;
    }
  }
}
    65e0:	df 91       	pop	r29
    65e2:	cf 91       	pop	r28
    65e4:	1f 91       	pop	r17
    65e6:	0f 91       	pop	r16
    65e8:	ff 90       	pop	r15
    65ea:	ef 90       	pop	r14
    65ec:	08 95       	ret
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:168

  for(;;)
  {
    cmd = *data;
    data++;
    switch( cmd )
    65ee:	6a 31       	cpi	r22, 0x1A	; 26
    65f0:	08 f1       	brcs	.+66     	; 0x6634 <u8x8_cad_SendSequence+0x7a>
    65f2:	6e 3f       	cpi	r22, 0xFE	; 254
    65f4:	a1 f7       	brne	.-24     	; 0x65de <u8x8_cad_SendSequence+0x24>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:186
      case U8X8_MSG_CAD_START_TRANSFER:
      case U8X8_MSG_CAD_END_TRANSFER:
	  u8x8->cad_cb(u8x8, cmd, 0, NULL);
	  break;
      case 0x0fe:
	  v = *data;
    65f6:	f8 01       	movw	r30, r16
    65f8:	41 81       	ldd	r20, Z+1	; 0x01
    65fa:	49 83       	std	Y+1, r20	; 0x01
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:187
	  u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, v);	    
    65fc:	69 e2       	ldi	r22, 0x29	; 41
    65fe:	c7 01       	movw	r24, r14
    6600:	b2 df       	rcall	.-156    	; 0x6566 <u8x8_gpio_call>
    6602:	0b c0       	rjmp	.+22     	; 0x661a <u8x8_cad_SendSequence+0x60>
    6604:	f8 01       	movw	r30, r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:172
    data++;
    switch( cmd )
    {
      case U8X8_MSG_CAD_SEND_CMD:
      case U8X8_MSG_CAD_SEND_ARG:
	  v = *data;
    6606:	41 81       	ldd	r20, Z+1	; 0x01
    6608:	49 83       	std	Y+1, r20	; 0x01
    660a:	d7 01       	movw	r26, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:173
	  u8x8->cad_cb(u8x8, cmd, v, NULL);
    660c:	16 96       	adiw	r26, 0x06	; 6
    660e:	ed 91       	ld	r30, X+
    6610:	fc 91       	ld	r31, X
    6612:	30 e0       	ldi	r19, 0x00	; 0
    6614:	20 e0       	ldi	r18, 0x00	; 0
    6616:	c7 01       	movw	r24, r14
    6618:	09 95       	icall
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:188
	  u8x8->cad_cb(u8x8, cmd, 0, NULL);
	  break;
      case 0x0fe:
	  v = *data;
	  u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, v);	    
	  data++;
    661a:	0e 5f       	subi	r16, 0xFE	; 254
    661c:	1f 4f       	sbci	r17, 0xFF	; 255
    661e:	d8 cf       	rjmp	.-80     	; 0x65d0 <u8x8_cad_SendSequence+0x16>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:177
	  v = *data;
	  u8x8->cad_cb(u8x8, cmd, v, NULL);
	  data++;
	  break;
      case U8X8_MSG_CAD_SEND_DATA:
	  v = *data;
    6620:	f8 01       	movw	r30, r16
    6622:	81 81       	ldd	r24, Z+1	; 0x01
    6624:	89 83       	std	Y+1, r24	; 0x01
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:178
	  u8x8_cad_SendData(u8x8, 1, &v);
    6626:	ae 01       	movw	r20, r28
    6628:	4f 5f       	subi	r20, 0xFF	; 255
    662a:	5f 4f       	sbci	r21, 0xFF	; 255
    662c:	61 e0       	ldi	r22, 0x01	; 1
    662e:	c7 01       	movw	r24, r14
    6630:	bc df       	rcall	.-136    	; 0x65aa <u8x8_cad_SendData>
    6632:	f3 cf       	rjmp	.-26     	; 0x661a <u8x8_cad_SendSequence+0x60>
    6634:	0f 5f       	subi	r16, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:167
  uint8_t v;

  for(;;)
  {
    cmd = *data;
    data++;
    6636:	1f 4f       	sbci	r17, 0xFF	; 255
    6638:	d7 01       	movw	r26, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:183
	  u8x8_cad_SendData(u8x8, 1, &v);
	  data++;
	  break;
      case U8X8_MSG_CAD_START_TRANSFER:
      case U8X8_MSG_CAD_END_TRANSFER:
	  u8x8->cad_cb(u8x8, cmd, 0, NULL);
    663a:	16 96       	adiw	r26, 0x06	; 6
    663c:	ed 91       	ld	r30, X+
    663e:	fc 91       	ld	r31, X
    6640:	30 e0       	ldi	r19, 0x00	; 0
    6642:	20 e0       	ldi	r18, 0x00	; 0
    6644:	40 e0       	ldi	r20, 0x00	; 0
    6646:	c7 01       	movw	r24, r14
    6648:	09 95       	icall
    664a:	c2 cf       	rjmp	.-124    	; 0x65d0 <u8x8_cad_SendSequence+0x16>

0000664c <u8x8_cad_SendArg>:
u8x8_cad_SendArg():
    664c:	46 2f       	mov	r20, r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:94
{
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_CMD, cmd, NULL);
}

uint8_t u8x8_cad_SendArg(u8x8_t *u8x8, uint8_t arg)
{
    664e:	dc 01       	movw	r26, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:95
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_ARG, arg, NULL);
    6650:	16 96       	adiw	r26, 0x06	; 6
    6652:	ed 91       	ld	r30, X+
    6654:	fc 91       	ld	r31, X
    6656:	30 e0       	ldi	r19, 0x00	; 0
    6658:	20 e0       	ldi	r18, 0x00	; 0
    665a:	66 e1       	ldi	r22, 0x16	; 22
    665c:	09 94       	ijmp

0000665e <u8x8_cad_SendCmd>:
u8x8_cad_SendCmd():
    665e:	46 2f       	mov	r20, r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:89
*/

#include "u8x8.h"

uint8_t u8x8_cad_SendCmd(u8x8_t *u8x8, uint8_t cmd)
{
    6660:	dc 01       	movw	r26, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:90
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_CMD, cmd, NULL);
    6662:	16 96       	adiw	r26, 0x06	; 6
    6664:	ed 91       	ld	r30, X+
    6666:	fc 91       	ld	r31, X
    6668:	30 e0       	ldi	r19, 0x00	; 0
    666a:	20 e0       	ldi	r18, 0x00	; 0
    666c:	65 e1       	ldi	r22, 0x15	; 21
    666e:	09 94       	ijmp

00006670 <u8x8_d_ssd1322_nhd_256x64>:
u8x8_d_ssd1322_nhd_256x64():
    6670:	7f 92       	push	r7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:304
  U8X8_END()             			/* end of sequence */
};


uint8_t u8x8_d_ssd1322_nhd_256x64(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    6672:	8f 92       	push	r8
    6674:	9f 92       	push	r9
    6676:	af 92       	push	r10
    6678:	bf 92       	push	r11
    667a:	cf 92       	push	r12
    667c:	df 92       	push	r13
    667e:	ef 92       	push	r14
    6680:	ff 92       	push	r15
    6682:	0f 93       	push	r16
    6684:	1f 93       	push	r17
    6686:	cf 93       	push	r28
    6688:	df 93       	push	r29
    668a:	ec 01       	movw	r28, r24
    668c:	b4 2e       	mov	r11, r20
    668e:	79 01       	movw	r14, r18
    6690:	6a 30       	cpi	r22, 0x0A	; 10
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:305
  switch(msg)
    6692:	d9 f0       	breq	.+54     	; 0x66ca <u8x8_d_ssd1322_nhd_256x64+0x5a>
    6694:	6d 30       	cpi	r22, 0x0D	; 13
    6696:	09 f4       	brne	.+2      	; 0x669a <u8x8_d_ssd1322_nhd_256x64+0x2a>
    6698:	4a c0       	rjmp	.+148    	; 0x672e <u8x8_d_ssd1322_nhd_256x64+0xbe>
    669a:	69 30       	cpi	r22, 0x09	; 9
    669c:	09 f0       	breq	.+2      	; 0x66a0 <u8x8_d_ssd1322_nhd_256x64+0x30>
    669e:	57 c0       	rjmp	.+174    	; 0x674e <u8x8_d_ssd1322_nhd_256x64+0xde>
u8x8_d_helper_display_setup_memory():
    66a0:	86 ed       	ldi	r24, 0xD6	; 214
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:55
  
*/
void u8x8_d_helper_display_setup_memory(u8x8_t *u8x8, const u8x8_display_info_t *display_info)
{
      /* 1) set display info struct */
      u8x8->display_info = display_info;
    66a2:	90 e4       	ldi	r25, 0x40	; 64
    66a4:	88 83       	st	Y, r24
    66a6:	99 83       	std	Y+1, r25	; 0x01
    66a8:	8c e1       	ldi	r24, 0x1C	; 28
u8x8_d_ssd1322_nhd_256x64():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:56
      u8x8->x_offset = u8x8->display_info->default_x_offset;
    66aa:	8c 8b       	std	Y+20, r24	; 0x14
u8x8_d_ssd1322_common():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:323
	u8x8->x_offset = u8x8->display_info->default_x_offset;
      }
      else
      {
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1322_256x64_flip1_seq);
	u8x8->x_offset = u8x8->display_info->flipmode_x_offset;
    66ac:	81 e0       	ldi	r24, 0x01	; 1
u8x8_d_ssd1322_nhd_256x64():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:218
	
	//x += 2;
	arg_int--;
      } while( arg_int > 0 );
      
      u8x8_cad_EndTransfer(u8x8);
    66ae:	df 91       	pop	r29
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:331
    
    default:
      return u8x8_d_ssd1322_common(u8x8, msg, arg_int, arg_ptr);
  }
  return 1;
}
    66b0:	cf 91       	pop	r28
    66b2:	1f 91       	pop	r17
    66b4:	0f 91       	pop	r16
    66b6:	ff 90       	pop	r15
    66b8:	ef 90       	pop	r14
    66ba:	df 90       	pop	r13
    66bc:	cf 90       	pop	r12
    66be:	bf 90       	pop	r11
    66c0:	af 90       	pop	r10
    66c2:	9f 90       	pop	r9
    66c4:	8f 90       	pop	r8
    66c6:	7f 90       	pop	r7
    66c8:	08 95       	ret
u8x8_d_helper_display_init():
    66ca:	ea 85       	ldd	r30, Y+10	; 0x0a
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:67
  
*/
void u8x8_d_helper_display_init(u8x8_t *u8x8)
{
      /* 2) apply port directions to the GPIO lines and apply default values for the IO lines*/
      u8x8_gpio_Init(u8x8);
    66cc:	fb 85       	ldd	r31, Y+11	; 0x0b
    66ce:	30 e0       	ldi	r19, 0x00	; 0
    66d0:	20 e0       	ldi	r18, 0x00	; 0
    66d2:	40 e0       	ldi	r20, 0x00	; 0
    66d4:	68 e2       	ldi	r22, 0x28	; 40
    66d6:	09 95       	icall
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:68
      u8x8_cad_Init(u8x8);              /* this will also call U8X8_MSG_BYTE_INIT, byte init will NOT call GPIO_INIT */
    66d8:	ee 81       	ldd	r30, Y+6	; 0x06
    66da:	ff 81       	ldd	r31, Y+7	; 0x07
    66dc:	30 e0       	ldi	r19, 0x00	; 0
    66de:	20 e0       	ldi	r18, 0x00	; 0
    66e0:	40 e0       	ldi	r20, 0x00	; 0
    66e2:	64 e1       	ldi	r22, 0x14	; 20
    66e4:	ce 01       	movw	r24, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:71

      /* 3) do reset */
      u8x8_gpio_SetReset(u8x8, 1);
    66e6:	09 95       	icall
    66e8:	41 e0       	ldi	r20, 0x01	; 1
    66ea:	6b e4       	ldi	r22, 0x4B	; 75
    66ec:	ce 01       	movw	r24, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:72
      u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->reset_pulse_width_ms);
    66ee:	3b df       	rcall	.-394    	; 0x6566 <u8x8_gpio_call>
    66f0:	e8 81       	ld	r30, Y
    66f2:	f9 81       	ldd	r31, Y+1	; 0x01
    66f4:	44 81       	ldd	r20, Z+4	; 0x04
    66f6:	69 e2       	ldi	r22, 0x29	; 41
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:73
      u8x8_gpio_SetReset(u8x8, 0);
    66f8:	ce 01       	movw	r24, r28
    66fa:	35 df       	rcall	.-406    	; 0x6566 <u8x8_gpio_call>
    66fc:	40 e0       	ldi	r20, 0x00	; 0
    66fe:	6b e4       	ldi	r22, 0x4B	; 75
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:74
      u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->reset_pulse_width_ms);
    6700:	ce 01       	movw	r24, r28
    6702:	31 df       	rcall	.-414    	; 0x6566 <u8x8_gpio_call>
    6704:	e8 81       	ld	r30, Y
    6706:	f9 81       	ldd	r31, Y+1	; 0x01
    6708:	44 81       	ldd	r20, Z+4	; 0x04
    670a:	69 e2       	ldi	r22, 0x29	; 41
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:75
      u8x8_gpio_SetReset(u8x8, 1);
    670c:	ce 01       	movw	r24, r28
    670e:	2b df       	rcall	.-426    	; 0x6566 <u8x8_gpio_call>
    6710:	41 e0       	ldi	r20, 0x01	; 1
    6712:	6b e4       	ldi	r22, 0x4B	; 75
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:76
      u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->post_reset_wait_ms);
    6714:	ce 01       	movw	r24, r28
    6716:	27 df       	rcall	.-434    	; 0x6566 <u8x8_gpio_call>
    6718:	e8 81       	ld	r30, Y
    671a:	f9 81       	ldd	r31, Y+1	; 0x01
    671c:	45 81       	ldd	r20, Z+5	; 0x05
    671e:	69 e2       	ldi	r22, 0x29	; 41
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:312
    case U8X8_MSG_DISPLAY_SETUP_MEMORY:
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_ssd1322_256x64_display_info);
      break;
    case U8X8_MSG_DISPLAY_INIT:
      u8x8_d_helper_display_init(u8x8);
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1322_256x64_init_seq);
    6720:	ce 01       	movw	r24, r28
    6722:	21 df       	rcall	.-446    	; 0x6566 <u8x8_gpio_call>
u8x8_d_ssd1322_nhd_256x64():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:170
    */
    case U8X8_MSG_DISPLAY_SET_POWER_SAVE:
      if ( arg_int == 0 )
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1322_powersave0_seq);
      else
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1322_powersave1_seq);
    6724:	63 e8       	ldi	r22, 0x83	; 131
    6726:	70 e4       	ldi	r23, 0x40	; 64
u8x8_d_ssd1322_common():
    6728:	ce 01       	movw	r24, r28
    672a:	47 df       	rcall	.-370    	; 0x65ba <u8x8_cad_SendSequence>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:315
    case U8X8_MSG_DISPLAY_INIT:
      u8x8_d_helper_display_init(u8x8);
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1322_256x64_init_seq);
      break;
    case U8X8_MSG_DISPLAY_SET_FLIP_MODE:
      if ( arg_int == 0 )
    672c:	bf cf       	rjmp	.-130    	; 0x66ac <u8x8_d_ssd1322_nhd_256x64+0x3c>
u8x8_d_ssd1322_nhd_256x64():
    672e:	41 11       	cpse	r20, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:317
      {
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1322_256x64_flip0_seq);
    6730:	07 c0       	rjmp	.+14     	; 0x6740 <u8x8_d_ssd1322_nhd_256x64+0xd0>
    6732:	67 e6       	ldi	r22, 0x67	; 103
    6734:	70 e4       	ldi	r23, 0x40	; 64
    6736:	41 df       	rcall	.-382    	; 0x65ba <u8x8_cad_SendSequence>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:318
	u8x8->x_offset = u8x8->display_info->default_x_offset;
    6738:	e8 81       	ld	r30, Y
    673a:	f9 81       	ldd	r31, Y+1	; 0x01
    673c:	82 89       	ldd	r24, Z+18	; 0x12
    673e:	b5 cf       	rjmp	.-150    	; 0x66aa <u8x8_d_ssd1322_nhd_256x64+0x3a>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:322
      }
      else
      {
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1322_256x64_flip1_seq);
    6740:	6a e7       	ldi	r22, 0x7A	; 122
    6742:	70 e4       	ldi	r23, 0x40	; 64
    6744:	3a df       	rcall	.-396    	; 0x65ba <u8x8_cad_SendSequence>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:323
	u8x8->x_offset = u8x8->display_info->flipmode_x_offset;
    6746:	e8 81       	ld	r30, Y
    6748:	f9 81       	ldd	r31, Y+1	; 0x01
    674a:	83 89       	ldd	r24, Z+19	; 0x13
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:155
uint8_t u8x8_d_ssd1322_common(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
  uint8_t x; 
  uint8_t y, c;
  uint8_t *ptr;
  switch(msg)
    674c:	ae cf       	rjmp	.-164    	; 0x66aa <u8x8_d_ssd1322_nhd_256x64+0x3a>
u8x8_d_ssd1322_common():
    674e:	6e 30       	cpi	r22, 0x0E	; 14
    6750:	69 f0       	breq	.+26     	; 0x676c <u8x8_d_ssd1322_nhd_256x64+0xfc>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:221
      } while( arg_int > 0 );
      
      u8x8_cad_EndTransfer(u8x8);
      break;
    default:
      return 0;
    6752:	6f 30       	cpi	r22, 0x0F	; 15
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:155
uint8_t u8x8_d_ssd1322_common(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
  uint8_t x; 
  uint8_t y, c;
  uint8_t *ptr;
  switch(msg)
    6754:	a9 f0       	breq	.+42     	; 0x6780 <u8x8_d_ssd1322_nhd_256x64+0x110>
u8x8_d_ssd1322_nhd_256x64():
    6756:	80 e0       	ldi	r24, 0x00	; 0
u8x8_d_ssd1322_common():
    6758:	6b 30       	cpi	r22, 0x0B	; 11
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:168
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1322_256x64_init_seq);
      break;
    */
    case U8X8_MSG_DISPLAY_SET_POWER_SAVE:
      if ( arg_int == 0 )
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1322_powersave0_seq);
    675a:	09 f0       	breq	.+2      	; 0x675e <u8x8_d_ssd1322_nhd_256x64+0xee>
    675c:	a8 cf       	rjmp	.-176    	; 0x66ae <u8x8_d_ssd1322_nhd_256x64+0x3e>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:167
      u8x8_d_helper_display_init(u8x8);
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1322_256x64_init_seq);
      break;
    */
    case U8X8_MSG_DISPLAY_SET_POWER_SAVE:
      if ( arg_int == 0 )
    675e:	65 e7       	ldi	r22, 0x75	; 117
    6760:	70 e4       	ldi	r23, 0x40	; 64
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:170
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1322_powersave0_seq);
      else
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1322_powersave1_seq);
    6762:	44 23       	and	r20, r20
    6764:	09 f3       	breq	.-62     	; 0x6728 <u8x8_d_ssd1322_nhd_256x64+0xb8>
    6766:	60 e7       	ldi	r22, 0x70	; 112
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:174
      break;
#ifdef U8X8_WITH_SET_CONTRAST
    case U8X8_MSG_DISPLAY_SET_CONTRAST:
      u8x8_cad_StartTransfer(u8x8);
    6768:	70 e4       	ldi	r23, 0x40	; 64
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:175
      u8x8_cad_SendCmd(u8x8, 0x0C1 );
    676a:	de cf       	rjmp	.-68     	; 0x6728 <u8x8_d_ssd1322_nhd_256x64+0xb8>
    676c:	15 df       	rcall	.-470    	; 0x6598 <u8x8_cad_StartTransfer>
    676e:	61 ec       	ldi	r22, 0xC1	; 193
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:176
      u8x8_cad_SendArg(u8x8, arg_int );	/* ssd1322 has range from 0 to 255 */
    6770:	ce 01       	movw	r24, r28
    6772:	75 df       	rcall	.-278    	; 0x665e <u8x8_cad_SendCmd>
    6774:	6b 2d       	mov	r22, r11
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:218
	
	//x += 2;
	arg_int--;
      } while( arg_int > 0 );
      
      u8x8_cad_EndTransfer(u8x8);
    6776:	ce 01       	movw	r24, r28
    6778:	69 df       	rcall	.-302    	; 0x664c <u8x8_cad_SendArg>
    677a:	ce 01       	movw	r24, r28
    677c:	04 df       	rcall	.-504    	; 0x6586 <u8x8_cad_EndTransfer>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:181
      u8x8_cad_SendArg(u8x8, arg_int );	/* ssd1322 has range from 0 to 255 */
      u8x8_cad_EndTransfer(u8x8);
      break;
#endif
    case U8X8_MSG_DISPLAY_DRAW_TILE:
      u8x8_cad_StartTransfer(u8x8);
    677e:	96 cf       	rjmp	.-212    	; 0x66ac <u8x8_d_ssd1322_nhd_256x64+0x3c>
    6780:	0b df       	rcall	.-490    	; 0x6598 <u8x8_cad_StartTransfer>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:182
      x = ((u8x8_tile_t *)arg_ptr)->x_pos;    
    6782:	f7 01       	movw	r30, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:183
      x *= 2;		// only every 4th col can be addressed
    6784:	13 81       	ldd	r17, Z+3	; 0x03
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:184
      x += u8x8->x_offset;		
    6786:	11 0f       	add	r17, r17
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:186
    
      y = (((u8x8_tile_t *)arg_ptr)->y_pos);
    6788:	8c 89       	ldd	r24, Y+20	; 0x14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:187
      y *= 8;
    678a:	18 0f       	add	r17, r24
    678c:	04 81       	ldd	r16, Z+4	; 0x04
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:190
    
      
      u8x8_cad_SendCmd(u8x8, 0x075 );	/* set row address, moved out of the loop (issue 302) */
    678e:	00 0f       	add	r16, r16
    6790:	00 0f       	add	r16, r16
    6792:	00 0f       	add	r16, r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:191
      u8x8_cad_SendArg(u8x8, y);
    6794:	65 e7       	ldi	r22, 0x75	; 117
    6796:	ce 01       	movw	r24, r28
    6798:	62 df       	rcall	.-316    	; 0x665e <u8x8_cad_SendCmd>
    679a:	60 2f       	mov	r22, r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:192
      u8x8_cad_SendArg(u8x8, y+7);
    679c:	ce 01       	movw	r24, r28
    679e:	56 df       	rcall	.-340    	; 0x664c <u8x8_cad_SendArg>
    67a0:	67 e0       	ldi	r22, 0x07	; 7
    67a2:	60 0f       	add	r22, r16
    67a4:	ce 01       	movw	r24, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:196
      
      do
      {
	c = ((u8x8_tile_t *)arg_ptr)->cnt;
    67a6:	52 df       	rcall	.-348    	; 0x664c <u8x8_cad_SendArg>
    67a8:	f7 01       	movw	r30, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:197
	ptr = ((u8x8_tile_t *)arg_ptr)->tile_ptr;
    67aa:	02 81       	ldd	r16, Z+2	; 0x02
    67ac:	c0 80       	ld	r12, Z
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:196
      u8x8_cad_SendArg(u8x8, y);
      u8x8_cad_SendArg(u8x8, y+7);
      
      do
      {
	c = ((u8x8_tile_t *)arg_ptr)->cnt;
    67ae:	d1 80       	ldd	r13, Z+1	; 0x01
u8x8_d_ssd1322_nhd_256x64():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:197
	ptr = ((u8x8_tile_t *)arg_ptr)->tile_ptr;
    67b0:	70 2e       	mov	r7, r16
u8x8_d_ssd1322_common():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:201

	do
	{
	  u8x8_cad_SendCmd(u8x8, 0x015 );	/* set column address */
    67b2:	a1 2e       	mov	r10, r17
    67b4:	65 e1       	ldi	r22, 0x15	; 21
    67b6:	ce 01       	movw	r24, r28
    67b8:	52 df       	rcall	.-348    	; 0x665e <u8x8_cad_SendCmd>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:202
	  u8x8_cad_SendArg(u8x8, x );	/* start */
    67ba:	6a 2d       	mov	r22, r10
    67bc:	ce 01       	movw	r24, r28
    67be:	46 df       	rcall	.-372    	; 0x664c <u8x8_cad_SendArg>
    67c0:	61 e0       	ldi	r22, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:203
	  u8x8_cad_SendArg(u8x8, x+1 );	/* end */
    67c2:	6a 0d       	add	r22, r10
    67c4:	ce 01       	movw	r24, r28
    67c6:	42 df       	rcall	.-380    	; 0x664c <u8x8_cad_SendArg>
    67c8:	6c e5       	ldi	r22, 0x5C	; 92
    67ca:	ce 01       	movw	r24, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:205

	  u8x8_cad_SendCmd(u8x8, 0x05c );	/* write to ram */
    67cc:	48 df       	rcall	.-368    	; 0x665e <u8x8_cad_SendCmd>
    67ce:	82 ee       	ldi	r24, 0xE2	; 226
    67d0:	94 e4       	ldi	r25, 0x44	; 68
    67d2:	46 01       	movw	r8, r12
    67d4:	f8 e0       	ldi	r31, 0x08	; 8
    67d6:	8f 0e       	add	r8, r31
    67d8:	91 1c       	adc	r9, r1
    67da:	f6 01       	movw	r30, r12
u8x8_ssd1322_8to32.isra.0():
    67dc:	dc 01       	movw	r26, r24
    67de:	60 81       	ld	r22, Z
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:103
  uint8_t *dest;
  
  for( j = 0; j < 4; j++ )
  {
    dest = u8x8_ssd1322_to32_dest_buf;
    dest += j;
    67e0:	51 81       	ldd	r21, Z+1	; 0x01
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:104
    a =*ptr;
    67e2:	32 96       	adiw	r30, 0x02	; 2
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:106
    ptr++;
    b = *ptr;
    67e4:	9c 01       	movw	r18, r24
    67e6:	20 5e       	subi	r18, 0xE0	; 224
    67e8:	3f 4f       	sbci	r19, 0xFF	; 255
u8x8_d_ssd1322_nhd_256x64():
    67ea:	40 ef       	ldi	r20, 0xF0	; 240
u8x8_ssd1322_8to32.isra.0():
    67ec:	60 ff       	sbrs	r22, 0
u8x8_d_ssd1322_nhd_256x64():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:111
    ptr++;
    for( i = 0; i < 8; i++ )
    {
      v = 0;
      if ( a&1 ) v |= 0xf0;
    67ee:	40 e0       	ldi	r20, 0x00	; 0
u8x8_ssd1322_8to32.isra.0():
    67f0:	50 fd       	sbrc	r21, 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:110
    ptr++;
    b = *ptr;
    ptr++;
    for( i = 0; i < 8; i++ )
    {
      v = 0;
    67f2:	4f 60       	ori	r20, 0x0F	; 15
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:112
      if ( a&1 ) v |= 0xf0;
      if ( b&1 ) v |= 0x0f;
    67f4:	4c 93       	st	X, r20
    67f6:	14 96       	adiw	r26, 0x04	; 4
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:113
      *dest = v;
    67f8:	66 95       	lsr	r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:114
      dest+=4;
    67fa:	56 95       	lsr	r21
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:115
      a >>= 1;
    67fc:	2a 17       	cp	r18, r26
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:108
    dest += j;
    a =*ptr;
    ptr++;
    b = *ptr;
    ptr++;
    for( i = 0; i < 8; i++ )
    67fe:	3b 07       	cpc	r19, r27
    6800:	a1 f7       	brne	.-24     	; 0x67ea <u8x8_d_ssd1322_nhd_256x64+0x17a>
    6802:	01 96       	adiw	r24, 0x01	; 1
    6804:	8e 16       	cp	r8, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:100
  uint8_t v;
  uint8_t a,b;
  uint8_t i, j;
  uint8_t *dest;
  
  for( j = 0; j < 4; j++ )
    6806:	9f 06       	cpc	r9, r31
    6808:	49 f7       	brne	.-46     	; 0x67dc <u8x8_d_ssd1322_nhd_256x64+0x16c>
u8x8_d_ssd1322_common():
    680a:	42 ee       	ldi	r20, 0xE2	; 226
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:207
	  u8x8_cad_SendArg(u8x8, x );	/* start */
	  u8x8_cad_SendArg(u8x8, x+1 );	/* end */

	  u8x8_cad_SendCmd(u8x8, 0x05c );	/* write to ram */
	  
	  u8x8_cad_SendData(u8x8, 32, u8x8_ssd1322_8to32(u8x8, ptr));
    680c:	54 e4       	ldi	r21, 0x44	; 68
    680e:	60 e2       	ldi	r22, 0x20	; 32
    6810:	ce 01       	movw	r24, r28
    6812:	cb de       	rcall	.-618    	; 0x65aa <u8x8_cad_SendData>
    6814:	64 01       	movw	r12, r8
    6816:	a3 94       	inc	r10
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:209
	  
	  ptr += 8;
    6818:	a3 94       	inc	r10
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:210
	  x += 2;
    681a:	7a 94       	dec	r7
    681c:	71 10       	cpse	r7, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:211
	  c--;
    681e:	ca cf       	rjmp	.-108    	; 0x67b4 <u8x8_d_ssd1322_nhd_256x64+0x144>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:212
	} while( c > 0 );
    6820:	00 0f       	add	r16, r16
    6822:	10 0f       	add	r17, r16
    6824:	ba 94       	dec	r11
    6826:	b1 10       	cpse	r11, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:215
	
	//x += 2;
	arg_int--;
    6828:	bf cf       	rjmp	.-130    	; 0x67a8 <u8x8_d_ssd1322_nhd_256x64+0x138>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_d_ssd1322.c:216
      } while( arg_int > 0 );
    682a:	a7 cf       	rjmp	.-178    	; 0x677a <u8x8_d_ssd1322_nhd_256x64+0x10a>

0000682c <u8x8_byte_SendByte>:
u8x8_byte_SendByte():
    682c:	cf 93       	push	r28
    682e:	df 93       	push	r29
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_byte.c:50
}

uint8_t u8x8_byte_SendByte(u8x8_t *u8x8, uint8_t byte)
{
    6830:	1f 92       	push	r1
    6832:	cd b7       	in	r28, 0x3d	; 61
    6834:	de b7       	in	r29, 0x3e	; 62
    6836:	69 83       	std	Y+1, r22	; 0x01
    6838:	be 01       	movw	r22, r28
    683a:	6f 5f       	subi	r22, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_byte.c:51
  return u8x8_byte_SendBytes(u8x8, 1, &byte);
    683c:	7f 4f       	sbci	r23, 0xFF	; 255
    683e:	95 db       	rcall	.-2262   	; 0x5f6a <u8x8_byte_SendBytes.constprop.21>
    6840:	0f 90       	pop	r0
    6842:	df 91       	pop	r29
    6844:	cf 91       	pop	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_byte.c:52
}
    6846:	08 95       	ret

00006848 <u8x8_byte_SetDC>:
u8x8_byte_SetDC():
    6848:	46 2f       	mov	r20, r22
    684a:	dc 01       	movw	r26, r24
    684c:	18 96       	adiw	r26, 0x08	; 8
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_byte.c:40
*/

#include "u8x8.h"

uint8_t u8x8_byte_SetDC(u8x8_t *u8x8, uint8_t dc)
{
    684e:	ed 91       	ld	r30, X+
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_byte.c:41
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SET_DC, dc, NULL);
    6850:	fc 91       	ld	r31, X
    6852:	30 e0       	ldi	r19, 0x00	; 0
    6854:	20 e0       	ldi	r18, 0x00	; 0
    6856:	60 e2       	ldi	r22, 0x20	; 32
    6858:	09 94       	ijmp

0000685a <u8x8_cad_011>:
u8x8_cad_011():
    685a:	ef 92       	push	r14
    685c:	ff 92       	push	r15
    685e:	0f 93       	push	r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:368
  convert to bytes by using 
    dc = 0 for commands 
    dc = 1 for args and data
*/
uint8_t u8x8_cad_011(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    6860:	1f 93       	push	r17
    6862:	cf 93       	push	r28
    6864:	df 93       	push	r29
    6866:	ec 01       	movw	r28, r24
    6868:	16 2f       	mov	r17, r22
    686a:	04 2f       	mov	r16, r20
    686c:	79 01       	movw	r14, r18
    686e:	66 31       	cpi	r22, 0x16	; 22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:369
  switch(msg)
    6870:	c9 f0       	breq	.+50     	; 0x68a4 <u8x8_cad_011+0x4a>
    6872:	38 f4       	brcc	.+14     	; 0x6882 <u8x8_cad_011+0x28>
    6874:	64 31       	cpi	r22, 0x14	; 20
    6876:	49 f0       	breq	.+18     	; 0x688a <u8x8_cad_011+0x30>
    6878:	60 e0       	ldi	r22, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:372
  {
    case U8X8_MSG_CAD_SEND_CMD:
      u8x8_byte_SetDC(u8x8, 0);
    687a:	15 31       	cpi	r17, 0x15	; 21
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:369
    dc = 0 for commands 
    dc = 1 for args and data
*/
uint8_t u8x8_cad_011(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
  switch(msg)
    687c:	a1 f0       	breq	.+40     	; 0x68a6 <u8x8_cad_011+0x4c>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:389
    case U8X8_MSG_CAD_INIT:
    case U8X8_MSG_CAD_START_TRANSFER:
    case U8X8_MSG_CAD_END_TRANSFER:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    default:
      return 0;
    687e:	80 e0       	ldi	r24, 0x00	; 0
    6880:	18 c0       	rjmp	.+48     	; 0x68b2 <u8x8_cad_011+0x58>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:369
    dc = 0 for commands 
    dc = 1 for args and data
*/
uint8_t u8x8_cad_011(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
  switch(msg)
    6882:	67 31       	cpi	r22, 0x17	; 23
    6884:	e9 f0       	breq	.+58     	; 0x68c0 <u8x8_cad_011+0x66>
    6886:	6a 31       	cpi	r22, 0x1A	; 26
    6888:	d0 f7       	brcc	.-12     	; 0x687e <u8x8_cad_011+0x24>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:387
      //break;
      /* fall through */
    case U8X8_MSG_CAD_INIT:
    case U8X8_MSG_CAD_START_TRANSFER:
    case U8X8_MSG_CAD_END_TRANSFER:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    688a:	e8 85       	ldd	r30, Y+8	; 0x08
    688c:	f9 85       	ldd	r31, Y+9	; 0x09
    688e:	97 01       	movw	r18, r14
    6890:	40 2f       	mov	r20, r16
    6892:	61 2f       	mov	r22, r17
    6894:	ce 01       	movw	r24, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:392
    default:
      return 0;
  }
  return 1;
}
    6896:	df 91       	pop	r29
    6898:	cf 91       	pop	r28
    689a:	1f 91       	pop	r17
    689c:	0f 91       	pop	r16
    689e:	ff 90       	pop	r15
    68a0:	ef 90       	pop	r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:387
      //break;
      /* fall through */
    case U8X8_MSG_CAD_INIT:
    case U8X8_MSG_CAD_START_TRANSFER:
    case U8X8_MSG_CAD_END_TRANSFER:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    68a2:	09 94       	ijmp
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:376
    case U8X8_MSG_CAD_SEND_CMD:
      u8x8_byte_SetDC(u8x8, 0);
      u8x8_byte_SendByte(u8x8, arg_int);
      break;
    case U8X8_MSG_CAD_SEND_ARG:
      u8x8_byte_SetDC(u8x8, 1);
    68a4:	61 e0       	ldi	r22, 0x01	; 1
    68a6:	ce 01       	movw	r24, r28
    68a8:	cf df       	rcall	.-98     	; 0x6848 <u8x8_byte_SetDC>
    68aa:	60 2f       	mov	r22, r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:377
      u8x8_byte_SendByte(u8x8, arg_int);
    68ac:	ce 01       	movw	r24, r28
    68ae:	be df       	rcall	.-132    	; 0x682c <u8x8_byte_SendByte>
    68b0:	81 e0       	ldi	r24, 0x01	; 1
    68b2:	df 91       	pop	r29
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:391
    case U8X8_MSG_CAD_END_TRANSFER:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    default:
      return 0;
  }
  return 1;
    68b4:	cf 91       	pop	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:392
}
    68b6:	1f 91       	pop	r17
    68b8:	0f 91       	pop	r16
    68ba:	ff 90       	pop	r15
    68bc:	ef 90       	pop	r14
    68be:	08 95       	ret
    68c0:	61 e0       	ldi	r22, 0x01	; 1
    68c2:	c2 df       	rcall	.-124    	; 0x6848 <u8x8_byte_SetDC>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_cad.c:380
    case U8X8_MSG_CAD_SEND_ARG:
      u8x8_byte_SetDC(u8x8, 1);
      u8x8_byte_SendByte(u8x8, arg_int);
      break;
    case U8X8_MSG_CAD_SEND_DATA:
      u8x8_byte_SetDC(u8x8, 1);
    68c4:	e2 cf       	rjmp	.-60     	; 0x688a <u8x8_cad_011+0x30>

000068c6 <u8x8_utf8_next>:
u8x8_utf8_next():
    68c6:	fc 01       	movw	r30, r24
    68c8:	66 23       	and	r22, r22
    68ca:	d9 f1       	breq	.+118    	; 0x6942 <u8x8_utf8_next+0x7c>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:305
    0x0fffe: no glyph, just continue
    0x0ffff: end of string
    anything else: The decoded encoding
*/
uint16_t u8x8_utf8_next(u8x8_t *u8x8, uint8_t b)
{
    68cc:	6a 30       	cpi	r22, 0x0A	; 10
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:306
  if ( b == 0 || b == '\n' )	/* '\n' terminates the string to support the string list procedures */
    68ce:	c9 f1       	breq	.+114    	; 0x6942 <u8x8_utf8_next+0x7c>
    68d0:	80 8d       	ldd	r24, Z+24	; 0x18
    68d2:	81 11       	cpse	r24, r1
    68d4:	25 c0       	rjmp	.+74     	; 0x6920 <u8x8_utf8_next+0x5a>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:308
    return 0x0ffff;	/* end of string detected, pending UTF8 is discarded */
  if ( u8x8->utf8_state == 0 )
    68d6:	6c 3f       	cpi	r22, 0xFC	; 252
    68d8:	48 f0       	brcs	.+18     	; 0x68ec <u8x8_utf8_next+0x26>
    68da:	85 e0       	ldi	r24, 0x05	; 5
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:310
  {
    if ( b >= 0xfc )	/* 6 byte sequence */
    68dc:	80 8f       	std	Z+24, r24	; 0x18
    68de:	61 70       	andi	r22, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:312
    {
      u8x8->utf8_state = 5;
    68e0:	70 e0       	ldi	r23, 0x00	; 0
    68e2:	62 8b       	std	Z+18, r22	; 0x12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:313
      b &= 1;
    68e4:	73 8b       	std	Z+19, r23	; 0x13
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:340
    else
    {
      /* do nothing, just use the value as encoding */
      return b;
    }
    u8x8->encoding = b;
    68e6:	2e ef       	ldi	r18, 0xFE	; 254
    68e8:	3f ef       	ldi	r19, 0xFF	; 255
    68ea:	29 c0       	rjmp	.+82     	; 0x693e <u8x8_utf8_next+0x78>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:351
    /* The case b < 0x080 (an illegal UTF8 encoding) is not checked here. */
    u8x8->encoding<<=6;
    b &= 0x03f;
    u8x8->encoding |= b;
    if ( u8x8->utf8_state != 0 )
      return 0x0fffe;	/* nothing to do yet */
    68ec:	68 3f       	cpi	r22, 0xF8	; 248
    68ee:	20 f0       	brcs	.+8      	; 0x68f8 <u8x8_utf8_next+0x32>
    68f0:	84 e0       	ldi	r24, 0x04	; 4
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:315
    if ( b >= 0xfc )	/* 6 byte sequence */
    {
      u8x8->utf8_state = 5;
      b &= 1;
    }
    else if ( b >= 0xf8 )
    68f2:	80 8f       	std	Z+24, r24	; 0x18
    68f4:	63 70       	andi	r22, 0x03	; 3
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:317
    {
      u8x8->utf8_state = 4;
    68f6:	f4 cf       	rjmp	.-24     	; 0x68e0 <u8x8_utf8_next+0x1a>
    68f8:	60 3f       	cpi	r22, 0xF0	; 240
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:318
      b &= 3;
    68fa:	20 f0       	brcs	.+8      	; 0x6904 <u8x8_utf8_next+0x3e>
    68fc:	83 e0       	ldi	r24, 0x03	; 3
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:320
    }
    else if ( b >= 0xf0 )
    68fe:	80 8f       	std	Z+24, r24	; 0x18
    6900:	67 70       	andi	r22, 0x07	; 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:322
    {
      u8x8->utf8_state = 3;
    6902:	ee cf       	rjmp	.-36     	; 0x68e0 <u8x8_utf8_next+0x1a>
    6904:	60 3e       	cpi	r22, 0xE0	; 224
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:323
      b &= 7;      
    6906:	20 f0       	brcs	.+8      	; 0x6910 <u8x8_utf8_next+0x4a>
    6908:	82 e0       	ldi	r24, 0x02	; 2
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:325
    }
    else if ( b >= 0xe0 )
    690a:	80 8f       	std	Z+24, r24	; 0x18
    690c:	6f 70       	andi	r22, 0x0F	; 15
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:327
    {
      u8x8->utf8_state = 2;
    690e:	e8 cf       	rjmp	.-48     	; 0x68e0 <u8x8_utf8_next+0x1a>
    6910:	26 2f       	mov	r18, r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:328
      b &= 15;
    6912:	30 e0       	ldi	r19, 0x00	; 0
    6914:	60 3c       	cpi	r22, 0xC0	; 192
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:338
      b &= 0x01f;
    }
    else
    {
      /* do nothing, just use the value as encoding */
      return b;
    6916:	98 f0       	brcs	.+38     	; 0x693e <u8x8_utf8_next+0x78>
    6918:	81 e0       	ldi	r24, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:330
    else if ( b >= 0xe0 )
    {
      u8x8->utf8_state = 2;
      b &= 15;
    }
    else if ( b >= 0xc0 )
    691a:	80 8f       	std	Z+24, r24	; 0x18
    691c:	6f 71       	andi	r22, 0x1F	; 31
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:332
    {
      u8x8->utf8_state = 1;
    691e:	e0 cf       	rjmp	.-64     	; 0x68e0 <u8x8_utf8_next+0x1a>
    6920:	81 50       	subi	r24, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:333
      b &= 0x01f;
    6922:	80 8f       	std	Z+24, r24	; 0x18
    6924:	22 89       	ldd	r18, Z+18	; 0x12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:345
    u8x8->encoding = b;
    return 0x0fffe;
  }
  else
  {
    u8x8->utf8_state--;
    6926:	33 89       	ldd	r19, Z+19	; 0x13
    6928:	96 e0       	ldi	r25, 0x06	; 6
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:347
    /* The case b < 0x080 (an illegal UTF8 encoding) is not checked here. */
    u8x8->encoding<<=6;
    692a:	22 0f       	add	r18, r18
    692c:	33 1f       	adc	r19, r19
    692e:	9a 95       	dec	r25
    6930:	e1 f7       	brne	.-8      	; 0x692a <u8x8_utf8_next+0x64>
    6932:	6f 73       	andi	r22, 0x3F	; 63
    6934:	26 2b       	or	r18, r22
    6936:	22 8b       	std	Z+18, r18	; 0x12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:348
    b &= 0x03f;
    6938:	33 8b       	std	Z+19, r19	; 0x13
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:349
    u8x8->encoding |= b;
    693a:	81 11       	cpse	r24, r1
    693c:	d4 cf       	rjmp	.-88     	; 0x68e6 <u8x8_utf8_next+0x20>
    693e:	c9 01       	movw	r24, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:350
    if ( u8x8->utf8_state != 0 )
    6940:	08 95       	ret
    6942:	2f ef       	ldi	r18, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:354
      return 0x0fffe;	/* nothing to do yet */
  }
  return u8x8->encoding;
}
    6944:	3f ef       	ldi	r19, 0xFF	; 255
    6946:	fb cf       	rjmp	.-10     	; 0x693e <u8x8_utf8_next+0x78>

00006948 <u8log_WriteChar>:
u8log_WriteChar():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:307
    anything else: The decoded encoding
*/
uint16_t u8x8_utf8_next(u8x8_t *u8x8, uint8_t b)
{
  if ( b == 0 || b == '\n' )	/* '\n' terminates the string to support the string list procedures */
    return 0x0ffff;	/* end of string detected, pending UTF8 is discarded */
    6948:	0f 93       	push	r16
    694a:	1f 93       	push	r17
    694c:	cf 93       	push	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:200
}



void u8log_WriteChar(u8log_t *u8log, uint8_t c)
{
    694e:	df 93       	push	r29
    6950:	fc 01       	movw	r30, r24
u8log_write_char():
    6952:	6a 30       	cpi	r22, 0x0A	; 10
    6954:	99 f1       	breq	.+102    	; 0x69bc <u8log_WriteChar+0x74>
    6956:	48 f5       	brcc	.+82     	; 0x69aa <u8log_WriteChar+0x62>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:140
    any other char	Write char to screen. Line redraw mark depends on 
				is_redraw_line_for_each_char flag.
*/
void u8log_write_char(u8log_t *u8log, uint8_t c)
{
  switch(c)
    6958:	69 30       	cpi	r22, 0x09	; 9
    695a:	09 f4       	brne	.+2      	; 0x695e <u8log_WriteChar+0x16>
    695c:	4f c0       	rjmp	.+158    	; 0x69fc <u8log_WriteChar+0xb4>
u8log_cursor_on_screen():
    695e:	92 85       	ldd	r25, Z+10	; 0x0a
    6960:	82 81       	ldd	r24, Z+2	; 0x02
    6962:	98 17       	cp	r25, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:99
  Place the cursor on the screen. This will also scroll, if required 
*/
static void u8log_cursor_on_screen(u8log_t *u8log)
{
  //printf("u8log_cursor_on_screen, cursor_y=%d\n", u8log->cursor_y);
  if ( u8log->cursor_x >= u8log->width )
    6964:	20 f0       	brcs	.+8      	; 0x696e <u8log_WriteChar+0x26>
    6966:	83 85       	ldd	r24, Z+11	; 0x0b
    6968:	12 86       	std	Z+10, r1	; 0x0a
    696a:	8f 5f       	subi	r24, 0xFF	; 255
    696c:	83 87       	std	Z+11, r24	; 0x0b
u8log_scroll_up():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:101
  {
    u8log->cursor_x = 0;
    696e:	10 e2       	ldi	r17, 0x20	; 32
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:102
    u8log->cursor_y++;
    6970:	71 e0       	ldi	r23, 0x01	; 1
u8log_cursor_on_screen():
    6972:	33 85       	ldd	r19, Z+11	; 0x0b
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:83
    cnt--;
  } while( cnt > 0 );
  cnt = u8log->width;
  do
  {
    *dest++ = ' ';
    6974:	23 81       	ldd	r18, Z+3	; 0x03
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:90
  } while(cnt > 0);
  
  if ( u8log->is_redraw_line_for_each_char )
    u8log->is_redraw_all = 1;
  else
    u8log->is_redraw_all_required_for_next_nl = 1;
    6976:	86 81       	ldd	r24, Z+6	; 0x06
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:104
  if ( u8log->cursor_x >= u8log->width )
  {
    u8log->cursor_x = 0;
    u8log->cursor_y++;
  }
  while ( u8log->cursor_y >= u8log->height )
    6978:	97 81       	ldd	r25, Z+7	; 0x07
    697a:	a2 81       	ldd	r26, Z+2	; 0x02
    697c:	32 17       	cp	r19, r18
    697e:	08 f0       	brcs	.+2      	; 0x6982 <u8log_WriteChar+0x3a>
    6980:	56 c0       	rjmp	.+172    	; 0x6a2e <u8log_WriteChar+0xe6>
u8log_write_to_screen():
    6982:	22 85       	ldd	r18, Z+10	; 0x0a
    6984:	3a 9f       	mul	r19, r26
    6986:	80 0d       	add	r24, r0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:117
  Write a printable, single char on the screen, do any kind of scrolling
*/
static void u8log_write_to_screen(u8log_t *u8log, uint8_t c)
{
  u8log_cursor_on_screen(u8log);
  u8log->screen_buffer[u8log->cursor_y * u8log->width + u8log->cursor_x] = c;
    6988:	91 1d       	adc	r25, r1
    698a:	11 24       	eor	r1, r1
    698c:	82 0f       	add	r24, r18
    698e:	91 1d       	adc	r25, r1
    6990:	dc 01       	movw	r26, r24
    6992:	6c 93       	st	X, r22
    6994:	82 85       	ldd	r24, Z+10	; 0x0a
    6996:	8f 5f       	subi	r24, 0xFF	; 255
    6998:	82 87       	std	Z+10, r24	; 0x0a
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:118
  u8log->cursor_x++;
    699a:	80 85       	ldd	r24, Z+8	; 0x08
    699c:	88 23       	and	r24, r24
    699e:	c9 f0       	breq	.+50     	; 0x69d2 <u8log_WriteChar+0x8a>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:120
  
  if ( u8log->is_redraw_line_for_each_char )
    69a0:	81 e0       	ldi	r24, 0x01	; 1
    69a2:	85 87       	std	Z+13, r24	; 0x0d
    69a4:	83 85       	ldd	r24, Z+11	; 0x0b
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:122
  {
    u8log->is_redraw_line = 1;
    69a6:	84 87       	std	Z+12, r24	; 0x0c
    69a8:	14 c0       	rjmp	.+40     	; 0x69d2 <u8log_WriteChar+0x8a>
u8log_write_char():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:123
    u8log->redraw_line = u8log->cursor_y;
    69aa:	6c 30       	cpi	r22, 0x0C	; 12
    69ac:	61 f1       	breq	.+88     	; 0x6a06 <u8log_WriteChar+0xbe>
    69ae:	6d 30       	cpi	r22, 0x0D	; 13
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:140
    any other char	Write char to screen. Line redraw mark depends on 
				is_redraw_line_for_each_char flag.
*/
void u8log_write_char(u8log_t *u8log, uint8_t c)
{
  switch(c)
    69b0:	b1 f6       	brne	.-84     	; 0x695e <u8log_WriteChar+0x16>
    69b2:	81 e0       	ldi	r24, 0x01	; 1
    69b4:	85 87       	std	Z+13, r24	; 0x0d
    69b6:	83 85       	ldd	r24, Z+11	; 0x0b
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:152
      u8log->is_redraw_all_required_for_next_nl = 0;
      u8log->cursor_y++;
      u8log->cursor_x = 0;
      break;	
    case '\r':	// 13
      u8log->is_redraw_line = 1;
    69b8:	84 87       	std	Z+12, r24	; 0x0c
    69ba:	0a c0       	rjmp	.+20     	; 0x69d0 <u8log_WriteChar+0x88>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:153
      u8log->redraw_line = u8log->cursor_y;
    69bc:	91 e0       	ldi	r25, 0x01	; 1
    69be:	95 87       	std	Z+13, r25	; 0x0d
    69c0:	83 85       	ldd	r24, Z+11	; 0x0b
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:143
void u8log_write_char(u8log_t *u8log, uint8_t c)
{
  switch(c)
  {
    case '\n':	// 10
      u8log->is_redraw_line = 1;
    69c2:	84 87       	std	Z+12, r24	; 0x0c
    69c4:	27 85       	ldd	r18, Z+15	; 0x0f
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:144
      u8log->redraw_line = u8log->cursor_y;
    69c6:	21 11       	cpse	r18, r1
    69c8:	96 87       	std	Z+14, r25	; 0x0e
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:145
      if ( u8log->is_redraw_all_required_for_next_nl )
    69ca:	17 86       	std	Z+15, r1	; 0x0f
    69cc:	8f 5f       	subi	r24, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:146
	u8log->is_redraw_all = 1;
    69ce:	83 87       	std	Z+11, r24	; 0x0b
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:147
      u8log->is_redraw_all_required_for_next_nl = 0;
    69d0:	12 86       	std	Z+10, r1	; 0x0a
u8log_WriteChar():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:148
      u8log->cursor_y++;
    69d2:	85 85       	ldd	r24, Z+13	; 0x0d
    69d4:	81 11       	cpse	r24, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:154
      u8log->cursor_x = 0;
      break;	
    case '\r':	// 13
      u8log->is_redraw_line = 1;
      u8log->redraw_line = u8log->cursor_y;
      u8log->cursor_x = 0;
    69d6:	03 c0       	rjmp	.+6      	; 0x69de <u8log_WriteChar+0x96>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:202


void u8log_WriteChar(u8log_t *u8log, uint8_t c)
{
  u8log_write_char(u8log, c);
  if ( u8log->is_redraw_line || u8log->is_redraw_all )
    69d8:	86 85       	ldd	r24, Z+14	; 0x0e
    69da:	88 23       	and	r24, r24
    69dc:	51 f0       	breq	.+20     	; 0x69f2 <u8log_WriteChar+0xaa>
    69de:	ef 01       	movw	r28, r30
    69e0:	04 80       	ldd	r0, Z+4	; 0x04
    69e2:	f5 81       	ldd	r31, Z+5	; 0x05
    69e4:	e0 2d       	mov	r30, r0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:204
  {
    if ( u8log->cb != 0 )
    69e6:	30 97       	sbiw	r30, 0x00	; 0
    69e8:	11 f0       	breq	.+4      	; 0x69ee <u8log_WriteChar+0xa6>
    69ea:	ce 01       	movw	r24, r28
    69ec:	09 95       	icall
    69ee:	1d 86       	std	Y+13, r1	; 0x0d
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:206
    {
      u8log->cb(u8log);
    69f0:	1e 86       	std	Y+14, r1	; 0x0e
    69f2:	df 91       	pop	r29
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:208
    }
    u8log->is_redraw_line = 0;
    69f4:	cf 91       	pop	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:209
    u8log->is_redraw_all = 0;
    69f6:	1f 91       	pop	r17
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:211
  }
}
    69f8:	0f 91       	pop	r16
    69fa:	08 95       	ret
u8log_write_char():
    69fc:	82 85       	ldd	r24, Z+10	; 0x0a
    69fe:	88 5f       	subi	r24, 0xF8	; 248
    6a00:	88 7f       	andi	r24, 0xF8	; 248
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:157
      u8log->is_redraw_line = 1;
      u8log->redraw_line = u8log->cursor_y;
      u8log->cursor_x = 0;
      break;
    case '\t':	// 9
      u8log->cursor_x = (u8log->cursor_x + 8) & 0xf8;
    6a02:	82 87       	std	Z+10, r24	; 0x0a
    6a04:	e6 cf       	rjmp	.-52     	; 0x69d2 <u8log_WriteChar+0x8a>
    6a06:	a6 81       	ldd	r26, Z+6	; 0x06
    6a08:	b7 81       	ldd	r27, Z+7	; 0x07
u8log_clear_screen():
    6a0a:	93 81       	ldd	r25, Z+3	; 0x03
    6a0c:	82 81       	ldd	r24, Z+2	; 0x02
    6a0e:	9d 01       	movw	r18, r26
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:57

static void u8log_clear_screen(u8log_t *u8log)
{
  uint8_t *dest = u8log->screen_buffer;
  uint16_t cnt = u8log->height;
  cnt *= u8log->width;
    6a10:	98 9f       	mul	r25, r24
    6a12:	20 0d       	add	r18, r0
    6a14:	31 1d       	adc	r19, r1
    6a16:	11 24       	eor	r1, r1
    6a18:	c9 01       	movw	r24, r18
    6a1a:	20 e2       	ldi	r18, 0x20	; 32
    6a1c:	2d 93       	st	X+, r18
    6a1e:	8a 17       	cp	r24, r26
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:60
  do
  {
    *dest++ = ' ';
    6a20:	9b 07       	cpc	r25, r27
    6a22:	e1 f7       	brne	.-8      	; 0x6a1c <u8log_WriteChar+0xd4>
u8log_write_char():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:62
    cnt--;
  } while( cnt > 0 );
    6a24:	81 e0       	ldi	r24, 0x01	; 1
    6a26:	86 87       	std	Z+14, r24	; 0x0e
    6a28:	12 86       	std	Z+10, r1	; 0x0a
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:161
    case '\t':	// 9
      u8log->cursor_x = (u8log->cursor_x + 8) & 0xf8;
      break;
    case '\f':	// 12
      u8log_clear_screen(u8log);
      u8log->is_redraw_all = 1;
    6a2a:	13 86       	std	Z+11, r1	; 0x0b
    6a2c:	d2 cf       	rjmp	.-92     	; 0x69d2 <u8log_WriteChar+0x8a>
u8log_scroll_up():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:162
      u8log->cursor_x = 0;
    6a2e:	b0 e0       	ldi	r27, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:163
      u8log->cursor_y = 0;
    6a30:	21 50       	subi	r18, 0x01	; 1
    6a32:	33 0b       	sbc	r19, r19
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:71

/* scroll the content of the complete buffer, set redraw_line to 255 */
static void u8log_scroll_up(u8log_t *u8log)
{
  uint8_t *dest = u8log->screen_buffer;
  uint8_t *src = dest+u8log->width;
    6a34:	a2 9f       	mul	r26, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:73
  uint16_t cnt = u8log->height;
  cnt--;
    6a36:	a0 01       	movw	r20, r0
    6a38:	a3 9f       	mul	r26, r19
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:74
  cnt *= u8log->width;
    6a3a:	50 0d       	add	r21, r0
    6a3c:	b2 9f       	mul	r27, r18
    6a3e:	50 0d       	add	r21, r0
    6a40:	11 24       	eor	r1, r1
    6a42:	a8 0f       	add	r26, r24
    6a44:	b9 1f       	adc	r27, r25
    6a46:	ec 01       	movw	r28, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:71

/* scroll the content of the complete buffer, set redraw_line to 255 */
static void u8log_scroll_up(u8log_t *u8log)
{
  uint8_t *dest = u8log->screen_buffer;
  uint8_t *src = dest+u8log->width;
    6a48:	9a 01       	movw	r18, r20
    6a4a:	2a 0f       	add	r18, r26
    6a4c:	3b 1f       	adc	r19, r27
    6a4e:	0d 91       	ld	r16, X+
    6a50:	09 93       	st	Y+, r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:77
  uint16_t cnt = u8log->height;
  cnt--;
  cnt *= u8log->width;
  do
  {
    *dest++ = *src++;
    6a52:	2a 17       	cp	r18, r26
    6a54:	3b 07       	cpc	r19, r27
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:79
    cnt--;
  } while( cnt > 0 );
    6a56:	d9 f7       	brne	.-10     	; 0x6a4e <u8log_WriteChar+0x106>
    6a58:	22 81       	ldd	r18, Z+2	; 0x02
    6a5a:	30 e0       	ldi	r19, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:80
  cnt = u8log->width;
    6a5c:	dc 01       	movw	r26, r24
    6a5e:	a4 0f       	add	r26, r20
    6a60:	b5 1f       	adc	r27, r21
    6a62:	1d 93       	st	X+, r17
    6a64:	21 50       	subi	r18, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:83
  do
  {
    *dest++ = ' ';
    6a66:	31 09       	sbc	r19, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:84
    cnt--;
    6a68:	e1 f7       	brne	.-8      	; 0x6a62 <u8log_WriteChar+0x11a>
    6a6a:	80 85       	ldd	r24, Z+8	; 0x08
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:85
  } while(cnt > 0);
    6a6c:	88 23       	and	r24, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:87
  
  if ( u8log->is_redraw_line_for_each_char )
    6a6e:	29 f0       	breq	.+10     	; 0x6a7a <u8log_WriteChar+0x132>
    6a70:	76 87       	std	Z+14, r23	; 0x0e
u8log_cursor_on_screen():
    6a72:	83 85       	ldd	r24, Z+11	; 0x0b
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:88
    u8log->is_redraw_all = 1;
    6a74:	81 50       	subi	r24, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:107
    u8log->cursor_y++;
  }
  while ( u8log->cursor_y >= u8log->height )
  {
    u8log_scroll_up(u8log);
    u8log->cursor_y--;
    6a76:	83 87       	std	Z+11, r24	; 0x0b
    6a78:	7c cf       	rjmp	.-264    	; 0x6972 <u8log_WriteChar+0x2a>
u8log_scroll_up():
    6a7a:	77 87       	std	Z+15, r23	; 0x0f
    6a7c:	fa cf       	rjmp	.-12     	; 0x6a72 <u8log_WriteChar+0x12a>

00006a7e <u8log_WriteString.constprop.31>:
u8log_WriteString.constprop.31():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:90
  } while(cnt > 0);
  
  if ( u8log->is_redraw_line_for_each_char )
    u8log->is_redraw_all = 1;
  else
    u8log->is_redraw_all_required_for_next_nl = 1;
    6a7e:	cf 93       	push	r28
    6a80:	df 93       	push	r29
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:213
    u8log->is_redraw_line = 0;
    u8log->is_redraw_all = 0;
  }
}

void u8log_WriteString(u8log_t *u8log, const char *s)
    6a82:	ec 01       	movw	r28, r24
    6a84:	69 91       	ld	r22, Y+
    6a86:	61 11       	cpse	r22, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:215
{
  while( *s != '\0' )
    6a88:	03 c0       	rjmp	.+6      	; 0x6a90 <u8log_WriteString.constprop.31+0x12>
    6a8a:	df 91       	pop	r29
    6a8c:	cf 91       	pop	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:220
  {
    u8log_WriteChar(u8log, *s);
    s++;
  }
}
    6a8e:	08 95       	ret
    6a90:	83 e9       	ldi	r24, 0x93	; 147
    6a92:	91 e5       	ldi	r25, 0x51	; 81
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8log.c:217

void u8log_WriteString(u8log_t *u8log, const char *s)
{
  while( *s != '\0' )
  {
    u8log_WriteChar(u8log, *s);
    6a94:	59 df       	rcall	.-334    	; 0x6948 <u8log_WriteChar>
    6a96:	f6 cf       	rjmp	.-20     	; 0x6a84 <u8log_WriteString.constprop.31+0x6>

00006a98 <u8g2_draw_l90_r0>:
u8g2_draw_l90_r0():
    6a98:	0f 93       	push	r16
u8g2_draw_hv_line_2dir():
    6a9a:	fc 01       	movw	r30, r24
    6a9c:	e0 5c       	subi	r30, 0xC0	; 192
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:308
/*============================================*/
extern void u8g2_draw_hv_line_2dir(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir);


void u8g2_draw_l90_r0(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    6a9e:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:138
{

  /* clipping happens before the display rotation */

  /* transform to pixel buffer coordinates */
  y -= u8g2->pixel_curr_row;
    6aa0:	01 90       	ld	r0, Z+
    6aa2:	f0 81       	ld	r31, Z
    6aa4:	e0 2d       	mov	r30, r0
    6aa6:	4e 1b       	sub	r20, r30
    6aa8:	5f 0b       	sbc	r21, r31
    6aaa:	dc 01       	movw	r26, r24
    6aac:	d4 96       	adiw	r26, 0x34	; 52
    6aae:	ed 91       	ld	r30, X+
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:140
  
  u8g2->ll_hvline(u8g2, x, y, len, dir);
    6ab0:	fc 91       	ld	r31, X
    6ab2:	09 95       	icall
u8g2_draw_l90_r0():
    6ab4:	0f 91       	pop	r16
    6ab6:	08 95       	ret

00006ab8 <u8g2_update_dimension_r0>:
u8g2_update_dimension_r0():
    6ab8:	cf 93       	push	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:313
#ifdef __unix
  assert( dir <= 1 );
#endif
  u8g2_draw_hv_line_2dir(u8g2, x, y, len, dir);
}
    6aba:	df 93       	push	r29
    6abc:	fc 01       	movw	r30, r24
u8g2_update_dimension_common():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:213

/*==========================================================*/


void u8g2_update_dimension_r0(u8g2_t *u8g2)
{
    6abe:	a0 81       	ld	r26, Z
    6ac0:	b1 81       	ldd	r27, Z+1	; 0x01
    6ac2:	82 ad       	ldd	r24, Z+58	; 0x3a
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:140
    u8g2_uint_t buf_y1; 	
*/

static void u8g2_update_dimension_common(u8g2_t *u8g2)
{
  const u8x8_display_info_t *display_info = u8g2_GetU8x8(u8g2)->display_info;
    6ac4:	90 e0       	ldi	r25, 0x00	; 0
    6ac6:	9c 01       	movw	r18, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:143
  u8g2_uint_t t;
  
  t = u8g2->tile_buf_height;
    6ac8:	43 e0       	ldi	r20, 0x03	; 3
    6aca:	22 0f       	add	r18, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:144
  t *= 8;
    6acc:	33 1f       	adc	r19, r19
    6ace:	4a 95       	dec	r20
    6ad0:	e1 f7       	brne	.-8      	; 0x6aca <u8g2_update_dimension_r0+0x12>
    6ad2:	26 af       	std	Z+62, r18	; 0x3e
    6ad4:	37 af       	std	Z+63, r19	; 0x3f
    6ad6:	50 96       	adiw	r26, 0x10	; 16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:145
  u8g2->pixel_buf_height = t;
    6ad8:	2c 91       	ld	r18, X
    6ada:	50 97       	sbiw	r26, 0x10	; 16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:152
  t = display_info->tile_width;
#ifndef U8G2_16BIT
  if ( t >= 32 )
    t = 31;
#endif
  t *= 8;
    6adc:	48 e0       	ldi	r20, 0x08	; 8
    6ade:	24 9f       	mul	r18, r20
    6ae0:	90 01       	movw	r18, r0
    6ae2:	11 24       	eor	r1, r1
    6ae4:	24 af       	std	Z+60, r18	; 0x3c
    6ae6:	35 af       	std	Z+61, r19	; 0x3d
    6ae8:	23 ad       	ldd	r18, Z+59	; 0x3b
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:153
  u8g2->pixel_buf_width = t;
    6aea:	30 e0       	ldi	r19, 0x00	; 0
    6aec:	b9 01       	movw	r22, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:155
  
  t = u8g2->tile_curr_row;
    6aee:	53 e0       	ldi	r21, 0x03	; 3
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:156
  t *= 8;
    6af0:	66 0f       	add	r22, r22
    6af2:	77 1f       	adc	r23, r23
    6af4:	5a 95       	dec	r21
    6af6:	e1 f7       	brne	.-8      	; 0x6af0 <u8g2_update_dimension_r0+0x38>
    6af8:	ef 01       	movw	r28, r30
    6afa:	c0 5c       	subi	r28, 0xC0	; 192
    6afc:	df 4f       	sbci	r29, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:157
  u8g2->pixel_curr_row = t;
    6afe:	68 83       	st	Y, r22
    6b00:	79 83       	std	Y+1, r23	; 0x01
    6b02:	51 96       	adiw	r26, 0x11	; 17
    6b04:	4c 91       	ld	r20, X
    6b06:	51 97       	sbiw	r26, 0x11	; 17
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:161
  
  t = u8g2->tile_buf_height;
  /* handle the case, where the buffer is larger than the (remaining) part of the display */
  if ( t + u8g2->tile_curr_row > display_info->tile_height )
    6b08:	e9 01       	movw	r28, r18
    6b0a:	c8 0f       	add	r28, r24
    6b0c:	d9 1f       	adc	r29, r25
    6b0e:	50 e0       	ldi	r21, 0x00	; 0
    6b10:	4c 17       	cp	r20, r28
    6b12:	5d 07       	cpc	r21, r29
    6b14:	18 f4       	brcc	.+6      	; 0x6b1c <u8g2_update_dimension_r0+0x64>
    6b16:	ca 01       	movw	r24, r20
    6b18:	82 1b       	sub	r24, r18
    6b1a:	93 0b       	sbc	r25, r19
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:162
    t = display_info->tile_height - u8g2->tile_curr_row;
    6b1c:	ef 01       	movw	r28, r30
    6b1e:	ce 5b       	subi	r28, 0xBE	; 190
    6b20:	df 4f       	sbci	r29, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:165
  t *= 8;
  
  u8g2->buf_y0 = u8g2->pixel_curr_row;   
    6b22:	68 83       	st	Y, r22
    6b24:	79 83       	std	Y+1, r23	; 0x01
    6b26:	22 96       	adiw	r28, 0x02	; 2
    6b28:	23 e0       	ldi	r18, 0x03	; 3
    6b2a:	88 0f       	add	r24, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:167
  u8g2->buf_y1 = u8g2->buf_y0;
  u8g2->buf_y1 += t;
    6b2c:	99 1f       	adc	r25, r25
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:163
  
  t = u8g2->tile_buf_height;
  /* handle the case, where the buffer is larger than the (remaining) part of the display */
  if ( t + u8g2->tile_curr_row > display_info->tile_height )
    t = display_info->tile_height - u8g2->tile_curr_row;
  t *= 8;
    6b2e:	2a 95       	dec	r18
    6b30:	e1 f7       	brne	.-8      	; 0x6b2a <u8g2_update_dimension_r0+0x72>
    6b32:	86 0f       	add	r24, r22
    6b34:	97 1f       	adc	r25, r23
    6b36:	88 83       	st	Y, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:167
  
  u8g2->buf_y0 = u8g2->pixel_curr_row;   
  u8g2->buf_y1 = u8g2->buf_y0;
  u8g2->buf_y1 += t;
    6b38:	99 83       	std	Y+1, r25	; 0x01
    6b3a:	22 96       	adiw	r28, 0x02	; 2
    6b3c:	54 96       	adiw	r26, 0x14	; 20
    6b3e:	8d 91       	ld	r24, X+
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:171

  
#ifdef U8G2_16BIT
  u8g2->width = display_info->pixel_width;
    6b40:	9c 91       	ld	r25, X
    6b42:	55 97       	sbiw	r26, 0x15	; 21
    6b44:	88 83       	st	Y, r24
    6b46:	99 83       	std	Y+1, r25	; 0x01
    6b48:	e8 5b       	subi	r30, 0xB8	; 184
    6b4a:	ff 4f       	sbci	r31, 0xFF	; 255
    6b4c:	56 96       	adiw	r26, 0x16	; 22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:172
  u8g2->height = display_info->pixel_height;
    6b4e:	8d 91       	ld	r24, X+
    6b50:	9c 91       	ld	r25, X
    6b52:	80 83       	st	Z, r24
    6b54:	91 83       	std	Z+1, r25	; 0x01
u8g2_update_dimension_r0():
    6b56:	df 91       	pop	r29
    6b58:	cf 91       	pop	r28
    6b5a:	08 95       	ret

00006b5c <u8g2_IsIntersection>:
u8g2_IsIntersection():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:215


void u8g2_update_dimension_r0(u8g2_t *u8g2)
{
  u8g2_update_dimension_common(u8g2);  
}
    6b5c:	0f 93       	push	r16
    6b5e:	1f 93       	push	r17
    6b60:	fc 01       	movw	r30, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_intersection.c:167



/* upper limits are not included (asymetric boundaries) */
uint8_t u8g2_IsIntersection(u8g2_t *u8g2, u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t x1, u8g2_uint_t y1)
{
    6b62:	e2 5b       	subi	r30, 0xB2	; 178
    6b64:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_intersection.c:168
  if ( u8g2_is_intersection_decision_tree(u8g2->user_y0, u8g2->user_y1, y0, y1) == 0 )
    6b66:	01 90       	ld	r0, Z+
    6b68:	f0 81       	ld	r31, Z
    6b6a:	e0 2d       	mov	r30, r0
    6b6c:	dc 01       	movw	r26, r24
    6b6e:	a0 5b       	subi	r26, 0xB0	; 176
    6b70:	bf 4f       	sbci	r27, 0xFF	; 255
u8g2_is_intersection_decision_tree():
    6b72:	0d 90       	ld	r0, X+
    6b74:	bc 91       	ld	r27, X
    6b76:	a0 2d       	mov	r26, r0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_intersection.c:125
  a1 and v1 are excluded
  v0 == v1 is not support end return 1
*/
uint8_t u8g2_is_intersection_decision_tree(u8g2_uint_t a0, u8g2_uint_t a1, u8g2_uint_t v0, u8g2_uint_t v1)
{
  if ( v0 < a1 )		// v0 <= a1
    6b78:	4a 17       	cp	r20, r26
    6b7a:	5b 07       	cpc	r21, r27
    6b7c:	40 f4       	brcc	.+16     	; 0x6b8e <u8g2_IsIntersection+0x32>
    6b7e:	e0 17       	cp	r30, r16
    6b80:	f1 07       	cpc	r31, r17
    6b82:	48 f0       	brcs	.+18     	; 0x6b96 <u8g2_IsIntersection+0x3a>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_intersection.c:127
  {
    if ( v1 > a0 )	// v1 >= a0
    6b84:	04 17       	cp	r16, r20
    6b86:	15 07       	cpc	r17, r21
    6b88:	30 f0       	brcs	.+12     	; 0x6b96 <u8g2_IsIntersection+0x3a>
u8g2_IsIntersection():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_intersection.c:133
    {
      return 1;
    }
    else
    {
      if ( v0 > v1 )	// v0 > v1
    6b8a:	80 e0       	ldi	r24, 0x00	; 0
    6b8c:	19 c0       	rjmp	.+50     	; 0x6bc0 <u8g2_IsIntersection+0x64>
u8g2_is_intersection_decision_tree():
    6b8e:	e0 17       	cp	r30, r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_intersection.c:169

/* upper limits are not included (asymetric boundaries) */
uint8_t u8g2_IsIntersection(u8g2_t *u8g2, u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t x1, u8g2_uint_t y1)
{
  if ( u8g2_is_intersection_decision_tree(u8g2->user_y0, u8g2->user_y1, y0, y1) == 0 )
    return 0; 
    6b90:	f1 07       	cpc	r31, r17
    6b92:	c0 f3       	brcs	.-16     	; 0x6b84 <u8g2_IsIntersection+0x28>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_intersection.c:145
      }
    }
  }
  else
  {
    if ( v1 > a0 )	// v1 >= a0
    6b94:	fa cf       	rjmp	.-12     	; 0x6b8a <u8g2_IsIntersection+0x2e>
u8g2_IsIntersection():
    6b96:	fc 01       	movw	r30, r24
    6b98:	e6 5b       	subi	r30, 0xB6	; 182
    6b9a:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_intersection.c:171
uint8_t u8g2_IsIntersection(u8g2_t *u8g2, u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t x1, u8g2_uint_t y1)
{
  if ( u8g2_is_intersection_decision_tree(u8g2->user_y0, u8g2->user_y1, y0, y1) == 0 )
    return 0; 
  
  return u8g2_is_intersection_decision_tree(u8g2->user_x0, u8g2->user_x1, x0, x1);
    6b9c:	40 81       	ld	r20, Z
    6b9e:	51 81       	ldd	r21, Z+1	; 0x01
    6ba0:	84 5b       	subi	r24, 0xB4	; 180
    6ba2:	9f 4f       	sbci	r25, 0xFF	; 255
u8g2_is_intersection_decision_tree():
    6ba4:	fc 01       	movw	r30, r24
    6ba6:	80 81       	ld	r24, Z
    6ba8:	91 81       	ldd	r25, Z+1	; 0x01
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_intersection.c:125
  a1 and v1 are excluded
  v0 == v1 is not support end return 1
*/
uint8_t u8g2_is_intersection_decision_tree(u8g2_uint_t a0, u8g2_uint_t a1, u8g2_uint_t v0, u8g2_uint_t v1)
{
  if ( v0 < a1 )		// v0 <= a1
    6baa:	68 17       	cp	r22, r24
    6bac:	79 07       	cpc	r23, r25
    6bae:	58 f4       	brcc	.+22     	; 0x6bc6 <u8g2_IsIntersection+0x6a>
u8g2_IsIntersection():
    6bb0:	81 e0       	ldi	r24, 0x01	; 1
u8g2_is_intersection_decision_tree():
    6bb2:	42 17       	cp	r20, r18
    6bb4:	53 07       	cpc	r21, r19
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_intersection.c:129
  {
    if ( v1 > a0 )	// v1 >= a0
    {
      return 1;
    6bb6:	20 f0       	brcs	.+8      	; 0x6bc0 <u8g2_IsIntersection+0x64>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_intersection.c:127
*/
uint8_t u8g2_is_intersection_decision_tree(u8g2_uint_t a0, u8g2_uint_t a1, u8g2_uint_t v0, u8g2_uint_t v1)
{
  if ( v0 < a1 )		// v0 <= a1
  {
    if ( v1 > a0 )	// v1 >= a0
    6bb8:	81 e0       	ldi	r24, 0x01	; 1
    6bba:	26 17       	cp	r18, r22
    6bbc:	37 07       	cpc	r19, r23
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_intersection.c:133
    {
      return 1;
    }
    else
    {
      if ( v0 > v1 )	// v0 > v1
    6bbe:	28 f7       	brcc	.-54     	; 0x6b8a <u8g2_IsIntersection+0x2e>
u8g2_IsIntersection():
    6bc0:	1f 91       	pop	r17
    6bc2:	0f 91       	pop	r16
    6bc4:	08 95       	ret
u8g2_is_intersection_decision_tree():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_intersection.c:172
{
  if ( u8g2_is_intersection_decision_tree(u8g2->user_y0, u8g2->user_y1, y0, y1) == 0 )
    return 0; 
  
  return u8g2_is_intersection_decision_tree(u8g2->user_x0, u8g2->user_x1, x0, x1);
}
    6bc6:	42 17       	cp	r20, r18
    6bc8:	53 07       	cpc	r21, r19
    6bca:	b0 f3       	brcs	.-20     	; 0x6bb8 <u8g2_IsIntersection+0x5c>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_intersection.c:145
      }
    }
  }
  else
  {
    if ( v1 > a0 )	// v1 >= a0
    6bcc:	de cf       	rjmp	.-68     	; 0x6b8a <u8g2_IsIntersection+0x2e>

00006bce <u8g2_update_page_win_r0>:
u8g2_update_page_win_r0():
    6bce:	2f 92       	push	r2
    6bd0:	3f 92       	push	r3
    6bd2:	4f 92       	push	r4
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:218

void u8g2_update_page_win_r0(u8g2_t *u8g2)
{
    6bd4:	5f 92       	push	r5
    6bd6:	6f 92       	push	r6
    6bd8:	7f 92       	push	r7
    6bda:	8f 92       	push	r8
    6bdc:	9f 92       	push	r9
    6bde:	af 92       	push	r10
    6be0:	bf 92       	push	r11
    6be2:	cf 92       	push	r12
    6be4:	df 92       	push	r13
    6be6:	ef 92       	push	r14
    6be8:	ff 92       	push	r15
    6bea:	0f 93       	push	r16
    6bec:	1f 93       	push	r17
    6bee:	cf 93       	push	r28
    6bf0:	df 93       	push	r29
    6bf2:	cd b7       	in	r28, 0x3d	; 61
    6bf4:	de b7       	in	r29, 0x3e	; 62
    6bf6:	2a 97       	sbiw	r28, 0x0a	; 10
    6bf8:	cd bf       	out	0x3d, r28	; 61
    6bfa:	de bf       	out	0x3e, r29	; 62
    6bfc:	89 87       	std	Y+9, r24	; 0x09
    6bfe:	9a 87       	std	Y+10, r25	; 0x0a
    6c00:	86 5b       	subi	r24, 0xB6	; 182
    6c02:	9f 4f       	sbci	r25, 0xFF	; 255
    6c04:	89 83       	std	Y+1, r24	; 0x01
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:219
  u8g2->user_x0 = 0;
    6c06:	9a 83       	std	Y+2, r25	; 0x02
    6c08:	fc 01       	movw	r30, r24
    6c0a:	10 82       	st	Z, r1
    6c0c:	11 82       	std	Z+1, r1	; 0x01
    6c0e:	e9 85       	ldd	r30, Y+9	; 0x09
    6c10:	fa 85       	ldd	r31, Y+10	; 0x0a
    6c12:	ea 5b       	subi	r30, 0xBA	; 186
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:220
  u8g2->user_x1 = u8g2->width;			/* pixel_buf_width replaced with width */
    6c14:	ff 4f       	sbci	r31, 0xFF	; 255
    6c16:	40 80       	ld	r4, Z
    6c18:	51 80       	ldd	r5, Z+1	; 0x01
    6c1a:	29 85       	ldd	r18, Y+9	; 0x09
    6c1c:	3a 85       	ldd	r19, Y+10	; 0x0a
    6c1e:	24 5b       	subi	r18, 0xB4	; 180
    6c20:	3f 4f       	sbci	r19, 0xFF	; 255
    6c22:	2b 83       	std	Y+3, r18	; 0x03
    6c24:	3c 83       	std	Y+4, r19	; 0x04
    6c26:	f9 01       	movw	r30, r18
    6c28:	40 82       	st	Z, r4
    6c2a:	51 82       	std	Z+1, r5	; 0x01
    6c2c:	e9 85       	ldd	r30, Y+9	; 0x09
    6c2e:	fa 85       	ldd	r31, Y+10	; 0x0a
    6c30:	ee 5b       	subi	r30, 0xBE	; 190
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:222
  
  u8g2->user_y0 = u8g2->buf_y0;
    6c32:	ff 4f       	sbci	r31, 0xFF	; 255
    6c34:	20 80       	ld	r2, Z
    6c36:	31 80       	ldd	r3, Z+1	; 0x01
    6c38:	29 85       	ldd	r18, Y+9	; 0x09
    6c3a:	3a 85       	ldd	r19, Y+10	; 0x0a
    6c3c:	22 5b       	subi	r18, 0xB2	; 178
    6c3e:	3f 4f       	sbci	r19, 0xFF	; 255
    6c40:	2d 83       	std	Y+5, r18	; 0x05
    6c42:	3e 83       	std	Y+6, r19	; 0x06
    6c44:	f9 01       	movw	r30, r18
    6c46:	20 82       	st	Z, r2
    6c48:	31 82       	std	Z+1, r3	; 0x01
    6c4a:	e9 85       	ldd	r30, Y+9	; 0x09
    6c4c:	fa 85       	ldd	r31, Y+10	; 0x0a
    6c4e:	ec 5b       	subi	r30, 0xBC	; 188
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:223
  u8g2->user_y1 = u8g2->buf_y1;
    6c50:	ff 4f       	sbci	r31, 0xFF	; 255
    6c52:	60 80       	ld	r6, Z
    6c54:	71 80       	ldd	r7, Z+1	; 0x01
    6c56:	29 85       	ldd	r18, Y+9	; 0x09
    6c58:	3a 85       	ldd	r19, Y+10	; 0x0a
    6c5a:	20 5b       	subi	r18, 0xB0	; 176
    6c5c:	3f 4f       	sbci	r19, 0xFF	; 255
    6c5e:	2f 83       	std	Y+7, r18	; 0x07
    6c60:	38 87       	std	Y+8, r19	; 0x08
    6c62:	f9 01       	movw	r30, r18
    6c64:	60 82       	st	Z, r6
    6c66:	71 82       	std	Z+1, r7	; 0x01
u8g2_apply_clip_window():
    6c68:	e9 85       	ldd	r30, Y+9	; 0x09
    6c6a:	fa 85       	ldd	r31, Y+10	; 0x0a
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:189

#ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
static void u8g2_apply_clip_window(u8g2_t *u8g2)
{
  /* check aganst the current user_??? window */
  if ( u8g2_IsIntersection(u8g2, u8g2->clip_x0, u8g2->clip_y0, u8g2->clip_x1, u8g2->clip_y1) == 0 ) 
    6c6c:	e8 5a       	subi	r30, 0xA8	; 168
    6c6e:	ff 4f       	sbci	r31, 0xFF	; 255
    6c70:	e0 80       	ld	r14, Z
    6c72:	f1 80       	ldd	r15, Z+1	; 0x01
    6c74:	e9 85       	ldd	r30, Y+9	; 0x09
    6c76:	fa 85       	ldd	r31, Y+10	; 0x0a
    6c78:	ec 5a       	subi	r30, 0xAC	; 172
    6c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    6c7c:	a0 80       	ld	r10, Z
    6c7e:	b1 80       	ldd	r11, Z+1	; 0x01
    6c80:	e9 85       	ldd	r30, Y+9	; 0x09
    6c82:	fa 85       	ldd	r31, Y+10	; 0x0a
    6c84:	ea 5a       	subi	r30, 0xAA	; 170
    6c86:	ff 4f       	sbci	r31, 0xFF	; 255
    6c88:	c0 80       	ld	r12, Z
    6c8a:	d1 80       	ldd	r13, Z+1	; 0x01
    6c8c:	e9 85       	ldd	r30, Y+9	; 0x09
    6c8e:	fa 85       	ldd	r31, Y+10	; 0x0a
    6c90:	ee 5a       	subi	r30, 0xAE	; 174
    6c92:	ff 4f       	sbci	r31, 0xFF	; 255
    6c94:	80 80       	ld	r8, Z
    6c96:	91 80       	ldd	r9, Z+1	; 0x01
    6c98:	87 01       	movw	r16, r14
    6c9a:	95 01       	movw	r18, r10
    6c9c:	a6 01       	movw	r20, r12
    6c9e:	b4 01       	movw	r22, r8
    6ca0:	89 85       	ldd	r24, Y+9	; 0x09
    6ca2:	9a 85       	ldd	r25, Y+10	; 0x0a
    6ca4:	5b df       	rcall	.-330    	; 0x6b5c <u8g2_IsIntersection>
    6ca6:	29 85       	ldd	r18, Y+9	; 0x09
    6ca8:	3a 85       	ldd	r19, Y+10	; 0x0a
    6caa:	2c 57       	subi	r18, 0x7C	; 124
    6cac:	3f 4f       	sbci	r19, 0xFF	; 255
    6cae:	29 87       	std	Y+9, r18	; 0x09
    6cb0:	3a 87       	std	Y+10, r19	; 0x0a
    6cb2:	81 11       	cpse	r24, r1
    6cb4:	18 c0       	rjmp	.+48     	; 0x6ce6 <u8g2_update_page_win_r0+0x118>
    6cb6:	f9 01       	movw	r30, r18
    6cb8:	10 82       	st	Z, r1
u8g2_update_page_win_r0():
    6cba:	2a 96       	adiw	r28, 0x0a	; 10
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:191
  {
    u8g2->is_page_clip_window_intersection = 0;
    6cbc:	cd bf       	out	0x3d, r28	; 61
    6cbe:	de bf       	out	0x3e, r29	; 62
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:228
  u8g2->user_y1 = u8g2->buf_y1;
  
#ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
  u8g2_apply_clip_window(u8g2);
#endif /* U8G2_WITH_CLIP_WINDOW_SUPPORT */
}
    6cc0:	df 91       	pop	r29
    6cc2:	cf 91       	pop	r28
    6cc4:	1f 91       	pop	r17
    6cc6:	0f 91       	pop	r16
    6cc8:	ff 90       	pop	r15
    6cca:	ef 90       	pop	r14
    6ccc:	df 90       	pop	r13
    6cce:	cf 90       	pop	r12
    6cd0:	bf 90       	pop	r11
    6cd2:	af 90       	pop	r10
    6cd4:	9f 90       	pop	r9
    6cd6:	8f 90       	pop	r8
    6cd8:	7f 90       	pop	r7
    6cda:	6f 90       	pop	r6
    6cdc:	5f 90       	pop	r5
    6cde:	4f 90       	pop	r4
    6ce0:	3f 90       	pop	r3
    6ce2:	2f 90       	pop	r2
    6ce4:	08 95       	ret
u8g2_apply_clip_window():
    6ce6:	81 e0       	ldi	r24, 0x01	; 1
    6ce8:	e9 85       	ldd	r30, Y+9	; 0x09
    6cea:	fa 85       	ldd	r31, Y+10	; 0x0a
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:195
  {
    u8g2->is_page_clip_window_intersection = 0;
  }
  else
  {
    u8g2->is_page_clip_window_intersection = 1;
    6cec:	80 83       	st	Z, r24
    6cee:	81 14       	cp	r8, r1
    6cf0:	91 04       	cpc	r9, r1
    6cf2:	21 f0       	breq	.+8      	; 0x6cfc <u8g2_update_page_win_r0+0x12e>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:197

    if ( u8g2->user_x0 < u8g2->clip_x0 )
    6cf4:	e9 81       	ldd	r30, Y+1	; 0x01
    6cf6:	fa 81       	ldd	r31, Y+2	; 0x02
    6cf8:	80 82       	st	Z, r8
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:198
      u8g2->user_x0 = u8g2->clip_x0;
    6cfa:	91 82       	std	Z+1, r9	; 0x01
    6cfc:	a4 14       	cp	r10, r4
    6cfe:	b5 04       	cpc	r11, r5
    6d00:	20 f4       	brcc	.+8      	; 0x6d0a <u8g2_update_page_win_r0+0x13c>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:199
    if ( u8g2->user_x1 > u8g2->clip_x1 )
    6d02:	eb 81       	ldd	r30, Y+3	; 0x03
    6d04:	fc 81       	ldd	r31, Y+4	; 0x04
    6d06:	a0 82       	st	Z, r10
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:200
      u8g2->user_x1 = u8g2->clip_x1;
    6d08:	b1 82       	std	Z+1, r11	; 0x01
    6d0a:	2c 14       	cp	r2, r12
    6d0c:	3d 04       	cpc	r3, r13
    6d0e:	20 f4       	brcc	.+8      	; 0x6d18 <u8g2_update_page_win_r0+0x14a>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:201
    if ( u8g2->user_y0 < u8g2->clip_y0 )
    6d10:	ed 81       	ldd	r30, Y+5	; 0x05
    6d12:	fe 81       	ldd	r31, Y+6	; 0x06
    6d14:	c0 82       	st	Z, r12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:202
      u8g2->user_y0 = u8g2->clip_y0;
    6d16:	d1 82       	std	Z+1, r13	; 0x01
    6d18:	e6 14       	cp	r14, r6
    6d1a:	f7 04       	cpc	r15, r7
    6d1c:	70 f6       	brcc	.-100    	; 0x6cba <u8g2_update_page_win_r0+0xec>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:203
    if ( u8g2->user_y1 > u8g2->clip_y1 )
    6d1e:	ef 81       	ldd	r30, Y+7	; 0x07
    6d20:	f8 85       	ldd	r31, Y+8	; 0x08
    6d22:	e0 82       	st	Z, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_setup.c:204
      u8g2->user_y1 = u8g2->clip_y1;
    6d24:	f1 82       	std	Z+1, r15	; 0x01
    6d26:	c9 cf       	rjmp	.-110    	; 0x6cba <u8g2_update_page_win_r0+0xec>

00006d28 <u8g2_SetDrawColor>:
u8g2_SetDrawColor():
    6d28:	86 57       	subi	r24, 0x76	; 118
    6d2a:	9f 4f       	sbci	r25, 0xFF	; 255
    6d2c:	fc 01       	movw	r30, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:251
  7 Jan 2017: Allow color value 2 for XOR operation.
  
*/
void u8g2_SetDrawColor(u8g2_t *u8g2, uint8_t color)
{
  u8g2->draw_color = color;	/* u8g2_SetDrawColor: just assign the argument */ 
    6d2e:	60 83       	st	Z, r22
    6d30:	08 95       	ret

00006d32 <u8g2_DrawHVLine>:
u8g2_DrawHVLine():
    6d32:	0f 93       	push	r16
    6d34:	cf 93       	push	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:254
  if ( color >= 3 )
    u8g2->draw_color = 1;	/* u8g2_SetDrawColor: make color as one if arg is invalid */
}
    6d36:	df 93       	push	r29
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:151
  This function should be called by the user.
  
  "dir" may have 4 directions: 0 (left to right), 1, 2, 3 (down up)
*/
void u8g2_DrawHVLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    6d38:	e0 2f       	mov	r30, r16
    6d3a:	dc 01       	movw	r26, r24
    6d3c:	ac 57       	subi	r26, 0x7C	; 124
    6d3e:	bf 4f       	sbci	r27, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:157
  /* Make a call to the callback function (e.g. u8g2_draw_l90_r0). */
  /* The callback may rotate the hv line */
  /* after rotation this will call u8g2_draw_hv_line_4dir() */
  
#ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
  if ( u8g2->is_page_clip_window_intersection != 0 )
    6d40:	fc 91       	ld	r31, X
    6d42:	ff 23       	and	r31, r31
    6d44:	09 f4       	brne	.+2      	; 0x6d48 <u8g2_DrawHVLine+0x16>
    6d46:	60 c0       	rjmp	.+192    	; 0x6e08 <u8g2_DrawHVLine+0xd6>
    6d48:	21 15       	cp	r18, r1
    6d4a:	31 05       	cpc	r19, r1
    6d4c:	09 f4       	brne	.+2      	; 0x6d50 <u8g2_DrawHVLine+0x1e>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:159
#endif /* U8G2_WITH_CLIP_WINDOW_SUPPORT */
    if ( len != 0 )
    6d4e:	5c c0       	rjmp	.+184    	; 0x6e08 <u8g2_DrawHVLine+0xd6>
    6d50:	22 30       	cpi	r18, 0x02	; 2
    6d52:	31 05       	cpc	r19, r1
    6d54:	38 f0       	brcs	.+14     	; 0x6d64 <u8g2_DrawHVLine+0x32>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:163
    {
    
      /* convert to two directions */    
      if ( len > 1 )
    6d56:	02 30       	cpi	r16, 0x02	; 2
    6d58:	09 f0       	breq	.+2      	; 0x6d5c <u8g2_DrawHVLine+0x2a>
    6d5a:	4a c0       	rjmp	.+148    	; 0x6df0 <u8g2_DrawHVLine+0xbe>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:165
      {
	if ( dir == 2 )
    6d5c:	6f 5f       	subi	r22, 0xFF	; 255
    6d5e:	7f 4f       	sbci	r23, 0xFF	; 255
    6d60:	62 1b       	sub	r22, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:168
	{
	  x -= len;
	  x++;
    6d62:	73 0b       	sbc	r23, r19
    6d64:	0e 2f       	mov	r16, r30
    6d66:	01 70       	andi	r16, 0x01	; 1
    6d68:	e0 fd       	sbrc	r30, 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:179
	}
      }
      dir &= 1;  
      
      /* clip against the user window */
      if ( dir == 0 )
    6d6a:	52 c0       	rjmp	.+164    	; 0x6e10 <u8g2_DrawHVLine+0xde>
    6d6c:	fc 01       	movw	r30, r24
    6d6e:	e2 5b       	subi	r30, 0xB2	; 178
    6d70:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:181
      {
	if ( y < u8g2->user_y0 )
    6d72:	01 90       	ld	r0, Z+
    6d74:	f0 81       	ld	r31, Z
    6d76:	e0 2d       	mov	r30, r0
    6d78:	4e 17       	cp	r20, r30
    6d7a:	5f 07       	cpc	r21, r31
    6d7c:	08 f4       	brcc	.+2      	; 0x6d80 <u8g2_DrawHVLine+0x4e>
    6d7e:	44 c0       	rjmp	.+136    	; 0x6e08 <u8g2_DrawHVLine+0xd6>
    6d80:	fc 01       	movw	r30, r24
    6d82:	e0 5b       	subi	r30, 0xB0	; 176
    6d84:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:183
	  return;
	if ( y >= u8g2->user_y1 )
    6d86:	01 90       	ld	r0, Z+
    6d88:	f0 81       	ld	r31, Z
    6d8a:	e0 2d       	mov	r30, r0
    6d8c:	4e 17       	cp	r20, r30
    6d8e:	5f 07       	cpc	r21, r31
    6d90:	d8 f5       	brcc	.+118    	; 0x6e08 <u8g2_DrawHVLine+0xd6>
    6d92:	fc 01       	movw	r30, r24
    6d94:	e4 5b       	subi	r30, 0xB4	; 180
    6d96:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:185
	  return;
	if ( u8g2_clip_intersection2(&x, &len, u8g2->user_x0, u8g2->user_x1) == 0 )
    6d98:	01 90       	ld	r0, Z+
    6d9a:	f0 81       	ld	r31, Z
    6d9c:	e0 2d       	mov	r30, r0
    6d9e:	dc 01       	movw	r26, r24
    6da0:	a6 5b       	subi	r26, 0xB6	; 182
    6da2:	bf 4f       	sbci	r27, 0xFF	; 255
    6da4:	0d 90       	ld	r0, X+
    6da6:	bc 91       	ld	r27, X
    6da8:	a0 2d       	mov	r26, r0
u8g2_clip_intersection2():
    6daa:	26 0f       	add	r18, r22
    6dac:	37 1f       	adc	r19, r23
    6dae:	26 17       	cp	r18, r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:66
static uint8_t u8g2_clip_intersection2(u8g2_uint_t *ap, u8g2_uint_t *len, u8g2_uint_t c, u8g2_uint_t d)
{
  u8g2_uint_t a = *ap;
  u8g2_uint_t b;
  b  = a;
  b += *len;
    6db0:	37 07       	cpc	r19, r23
    6db2:	38 f5       	brcc	.+78     	; 0x6e02 <u8g2_DrawHVLine+0xd0>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:87
  /* be removed completly (be aware about memory curruption for wrong */
  /* arguments) or return 0 for a>b (will lead to skipped lines for wrong */
  /* arguments) */  
  
  /* removing the following if clause completly may lead to memory corruption of a>b */
  if ( a > b )
    6db4:	6e 17       	cp	r22, r30
    6db6:	7f 07       	cpc	r23, r31
    6db8:	18 f5       	brcc	.+70     	; 0x6e00 <u8g2_DrawHVLine+0xce>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:90
  {    
    /* replacing this if with a simple "return 0;" will not handle the case with negative a */    
    if ( a < d )
    6dba:	9f 01       	movw	r18, r30
    6dbc:	21 50       	subi	r18, 0x01	; 1
    6dbe:	31 09       	sbc	r19, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:93
    {
      b = d;
      b--;
    6dc0:	a2 17       	cp	r26, r18
    6dc2:	b3 07       	cpc	r27, r19
    6dc4:	08 f5       	brcc	.+66     	; 0x6e08 <u8g2_DrawHVLine+0xd6>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:105
  
  /* from now on, the asumption a <= b is ok */
  
  if ( a >= d )
    return 0;
  if ( b <= c )
    6dc6:	6a 17       	cp	r22, r26
    6dc8:	7b 07       	cpc	r23, r27
    6dca:	08 f4       	brcc	.+2      	; 0x6dce <u8g2_DrawHVLine+0x9c>
    6dcc:	bd 01       	movw	r22, r26
    6dce:	2e 17       	cp	r18, r30
    6dd0:	3f 07       	cpc	r19, r31
    6dd2:	08 f4       	brcc	.+2      	; 0x6dd6 <u8g2_DrawHVLine+0xa4>
    6dd4:	f9 01       	movw	r30, r18
    6dd6:	e6 1b       	sub	r30, r22
    6dd8:	f7 0b       	sbc	r31, r23
u8g2_DrawHVLine():
    6dda:	ec 01       	movw	r28, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:113
    a = c;
  if ( b > d )
    b = d;
  
  *ap = a;
  b -= a;
    6ddc:	ae a9       	ldd	r26, Y+54	; 0x36
    6dde:	bf a9       	ldd	r27, Y+55	; 0x37
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:199
	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
	  return;
      }
      
      
      u8g2->cb->draw_l90(u8g2, x, y, len, dir);
    6de0:	14 96       	adiw	r26, 0x04	; 4
    6de2:	0d 90       	ld	r0, X+
    6de4:	bc 91       	ld	r27, X
    6de6:	a0 2d       	mov	r26, r0
    6de8:	9f 01       	movw	r18, r30
    6dea:	fd 01       	movw	r30, r26
    6dec:	09 95       	icall
    6dee:	0c c0       	rjmp	.+24     	; 0x6e08 <u8g2_DrawHVLine+0xd6>
    6df0:	03 30       	cpi	r16, 0x03	; 3
    6df2:	09 f0       	breq	.+2      	; 0x6df6 <u8g2_DrawHVLine+0xc4>
    6df4:	b7 cf       	rjmp	.-146    	; 0x6d64 <u8g2_DrawHVLine+0x32>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:170
	if ( dir == 2 )
	{
	  x -= len;
	  x++;
	}
	else if ( dir == 3 )
    6df6:	4f 5f       	subi	r20, 0xFF	; 255
    6df8:	5f 4f       	sbci	r21, 0xFF	; 255
    6dfa:	42 1b       	sub	r20, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:173
	{
	  y -= len;
	  y++;
    6dfc:	53 0b       	sbc	r21, r19
    6dfe:	b2 cf       	rjmp	.-156    	; 0x6d64 <u8g2_DrawHVLine+0x32>
    6e00:	bd 01       	movw	r22, r26
u8g2_clip_intersection2():
    6e02:	6e 17       	cp	r22, r30
    6e04:	7f 07       	cpc	r23, r31
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:185
      {
	if ( y < u8g2->user_y0 )
	  return;
	if ( y >= u8g2->user_y1 )
	  return;
	if ( u8g2_clip_intersection2(&x, &len, u8g2->user_x0, u8g2->user_x1) == 0 )
    6e06:	e0 f2       	brcs	.-72     	; 0x6dc0 <u8g2_DrawHVLine+0x8e>
u8g2_DrawHVLine():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:103
    }
  }
  
  /* from now on, the asumption a <= b is ok */
  
  if ( a >= d )
    6e08:	df 91       	pop	r29
    6e0a:	cf 91       	pop	r28
    6e0c:	0f 91       	pop	r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:201
      }
      
      
      u8g2->cb->draw_l90(u8g2, x, y, len, dir);
    }
}
    6e0e:	08 95       	ret
    6e10:	fc 01       	movw	r30, r24
    6e12:	e6 5b       	subi	r30, 0xB6	; 182
    6e14:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:190
	if ( u8g2_clip_intersection2(&x, &len, u8g2->user_x0, u8g2->user_x1) == 0 )
	  return;
      }
      else
      {
	if ( x < u8g2->user_x0 )
    6e16:	01 90       	ld	r0, Z+
    6e18:	f0 81       	ld	r31, Z
    6e1a:	e0 2d       	mov	r30, r0
    6e1c:	6e 17       	cp	r22, r30
    6e1e:	7f 07       	cpc	r23, r31
    6e20:	98 f3       	brcs	.-26     	; 0x6e08 <u8g2_DrawHVLine+0xd6>
    6e22:	fc 01       	movw	r30, r24
    6e24:	e4 5b       	subi	r30, 0xB4	; 180
    6e26:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:192
	  return;
	if ( x >= u8g2->user_x1 )
    6e28:	01 90       	ld	r0, Z+
    6e2a:	f0 81       	ld	r31, Z
    6e2c:	e0 2d       	mov	r30, r0
    6e2e:	6e 17       	cp	r22, r30
    6e30:	7f 07       	cpc	r23, r31
    6e32:	50 f7       	brcc	.-44     	; 0x6e08 <u8g2_DrawHVLine+0xd6>
    6e34:	fc 01       	movw	r30, r24
    6e36:	e0 5b       	subi	r30, 0xB0	; 176
    6e38:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:194
	  return;
	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
    6e3a:	01 90       	ld	r0, Z+
    6e3c:	f0 81       	ld	r31, Z
    6e3e:	e0 2d       	mov	r30, r0
    6e40:	dc 01       	movw	r26, r24
    6e42:	a2 5b       	subi	r26, 0xB2	; 178
    6e44:	bf 4f       	sbci	r27, 0xFF	; 255
    6e46:	0d 90       	ld	r0, X+
    6e48:	bc 91       	ld	r27, X
    6e4a:	a0 2d       	mov	r26, r0
u8g2_clip_intersection2():
    6e4c:	24 0f       	add	r18, r20
    6e4e:	35 1f       	adc	r19, r21
    6e50:	24 17       	cp	r18, r20
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:66
static uint8_t u8g2_clip_intersection2(u8g2_uint_t *ap, u8g2_uint_t *len, u8g2_uint_t c, u8g2_uint_t d)
{
  u8g2_uint_t a = *ap;
  u8g2_uint_t b;
  b  = a;
  b += *len;
    6e52:	35 07       	cpc	r19, r21
    6e54:	a8 f4       	brcc	.+42     	; 0x6e80 <u8g2_DrawHVLine+0x14e>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:87
  /* be removed completly (be aware about memory curruption for wrong */
  /* arguments) or return 0 for a>b (will lead to skipped lines for wrong */
  /* arguments) */  
  
  /* removing the following if clause completly may lead to memory corruption of a>b */
  if ( a > b )
    6e56:	4e 17       	cp	r20, r30
    6e58:	5f 07       	cpc	r21, r31
    6e5a:	88 f4       	brcc	.+34     	; 0x6e7e <u8g2_DrawHVLine+0x14c>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:90
  {    
    /* replacing this if with a simple "return 0;" will not handle the case with negative a */    
    if ( a < d )
    6e5c:	9f 01       	movw	r18, r30
    6e5e:	21 50       	subi	r18, 0x01	; 1
    6e60:	31 09       	sbc	r19, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:93
    {
      b = d;
      b--;
    6e62:	a2 17       	cp	r26, r18
    6e64:	b3 07       	cpc	r27, r19
    6e66:	80 f6       	brcc	.-96     	; 0x6e08 <u8g2_DrawHVLine+0xd6>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:105
  
  /* from now on, the asumption a <= b is ok */
  
  if ( a >= d )
    return 0;
  if ( b <= c )
    6e68:	4a 17       	cp	r20, r26
    6e6a:	5b 07       	cpc	r21, r27
    6e6c:	08 f4       	brcc	.+2      	; 0x6e70 <u8g2_DrawHVLine+0x13e>
    6e6e:	ad 01       	movw	r20, r26
    6e70:	2e 17       	cp	r18, r30
    6e72:	3f 07       	cpc	r19, r31
    6e74:	08 f4       	brcc	.+2      	; 0x6e78 <u8g2_DrawHVLine+0x146>
    6e76:	f9 01       	movw	r30, r18
    6e78:	e4 1b       	sub	r30, r20
    6e7a:	f5 0b       	sbc	r31, r21
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:113
    a = c;
  if ( b > d )
    b = d;
  
  *ap = a;
  b -= a;
    6e7c:	ae cf       	rjmp	.-164    	; 0x6dda <u8g2_DrawHVLine+0xa8>
u8g2_DrawHVLine():
    6e7e:	ad 01       	movw	r20, r26
u8g2_clip_intersection2():
    6e80:	4e 17       	cp	r20, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:194
      {
	if ( x < u8g2->user_x0 )
	  return;
	if ( x >= u8g2->user_x1 )
	  return;
	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
    6e82:	5f 07       	cpc	r21, r31
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:103
    }
  }
  
  /* from now on, the asumption a <= b is ok */
  
  if ( a >= d )
    6e84:	08 f6       	brcc	.-126    	; 0x6e08 <u8g2_DrawHVLine+0xd6>
    6e86:	ed cf       	rjmp	.-38     	; 0x6e62 <u8g2_DrawHVLine+0x130>

00006e88 <u8g2_DrawPixel>:
u8g2_DrawPixel():
    6e88:	0f 93       	push	r16
    6e8a:	fc 01       	movw	r30, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:222
// #endif /* U8G2_WITH_INTERSECTION */
  u8g2_DrawHVLine(u8g2, x, y, len, 1);
}

void u8g2_DrawPixel(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y)
{
    6e8c:	e2 5b       	subi	r30, 0xB2	; 178
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:224
#ifdef U8G2_WITH_INTERSECTION
  if ( y < u8g2->user_y0 )
    6e8e:	ff 4f       	sbci	r31, 0xFF	; 255
    6e90:	20 81       	ld	r18, Z
    6e92:	31 81       	ldd	r19, Z+1	; 0x01
    6e94:	42 17       	cp	r20, r18
    6e96:	53 07       	cpc	r21, r19
    6e98:	b0 f0       	brcs	.+44     	; 0x6ec6 <u8g2_DrawPixel+0x3e>
    6e9a:	32 96       	adiw	r30, 0x02	; 2
    6e9c:	20 81       	ld	r18, Z
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:226
    return;
  if ( y >= u8g2->user_y1 )
    6e9e:	31 81       	ldd	r19, Z+1	; 0x01
    6ea0:	42 17       	cp	r20, r18
    6ea2:	53 07       	cpc	r21, r19
    6ea4:	80 f4       	brcc	.+32     	; 0x6ec6 <u8g2_DrawPixel+0x3e>
    6ea6:	36 97       	sbiw	r30, 0x06	; 6
    6ea8:	20 81       	ld	r18, Z
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:228
    return;
  if ( x < u8g2->user_x0 )
    6eaa:	31 81       	ldd	r19, Z+1	; 0x01
    6eac:	62 17       	cp	r22, r18
    6eae:	73 07       	cpc	r23, r19
    6eb0:	50 f0       	brcs	.+20     	; 0x6ec6 <u8g2_DrawPixel+0x3e>
    6eb2:	32 96       	adiw	r30, 0x02	; 2
    6eb4:	20 81       	ld	r18, Z
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:230
    return;
  if ( x >= u8g2->user_x1 )
    6eb6:	31 81       	ldd	r19, Z+1	; 0x01
    6eb8:	62 17       	cp	r22, r18
    6eba:	73 07       	cpc	r23, r19
    6ebc:	20 f4       	brcc	.+8      	; 0x6ec6 <u8g2_DrawPixel+0x3e>
    6ebe:	00 e0       	ldi	r16, 0x00	; 0
    6ec0:	21 e0       	ldi	r18, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:233
    return;
#endif /* U8G2_WITH_INTERSECTION */
  u8g2_DrawHVLine(u8g2, x, y, 1, 0);
    6ec2:	30 e0       	ldi	r19, 0x00	; 0
    6ec4:	36 df       	rcall	.-404    	; 0x6d32 <u8g2_DrawHVLine>
    6ec6:	0f 91       	pop	r16
    6ec8:	08 95       	ret

00006eca <u8g2_DrawLine>:
u8g2_DrawLine():
    6eca:	3f 92       	push	r3
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_hvline.c:234
}
    6ecc:	4f 92       	push	r4
    6ece:	5f 92       	push	r5
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:40

#include "u8g2.h"


void u8g2_DrawLine(u8g2_t *u8g2, u8g2_uint_t x1, u8g2_uint_t y1, u8g2_uint_t x2, u8g2_uint_t y2)
{
    6ed0:	6f 92       	push	r6
    6ed2:	7f 92       	push	r7
    6ed4:	8f 92       	push	r8
    6ed6:	9f 92       	push	r9
    6ed8:	af 92       	push	r10
    6eda:	bf 92       	push	r11
    6edc:	cf 92       	push	r12
    6ede:	df 92       	push	r13
    6ee0:	ef 92       	push	r14
    6ee2:	ff 92       	push	r15
    6ee4:	0f 93       	push	r16
    6ee6:	1f 93       	push	r17
    6ee8:	cf 93       	push	r28
    6eea:	df 93       	push	r29
    6eec:	2c 01       	movw	r4, r24
    6eee:	7b 01       	movw	r14, r22
    6ef0:	6a 01       	movw	r12, r20
    6ef2:	e9 01       	movw	r28, r18
    6ef4:	5b 01       	movw	r10, r22
    6ef6:	a2 1a       	sub	r10, r18
    6ef8:	b3 0a       	sbc	r11, r19
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:51

  uint8_t swapxy = 0;
  
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
    6efa:	26 17       	cp	r18, r22
    6efc:	37 07       	cpc	r19, r23
    6efe:	18 f0       	brcs	.+6      	; 0x6f06 <u8g2_DrawLine+0x3c>
    6f00:	59 01       	movw	r10, r18
    6f02:	a6 1a       	sub	r10, r22
    6f04:	b7 0a       	sbc	r11, r23
    6f06:	0c 15       	cp	r16, r12
    6f08:	1d 05       	cpc	r17, r13
    6f0a:	60 f4       	brcc	.+24     	; 0x6f24 <u8g2_DrawLine+0x5a>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:52
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;
    6f0c:	c6 01       	movw	r24, r12
    6f0e:	80 1b       	sub	r24, r16
    6f10:	91 0b       	sbc	r25, r17
    6f12:	a8 16       	cp	r10, r24
    6f14:	b9 06       	cpc	r11, r25
    6f16:	40 f1       	brcs	.+80     	; 0x6f68 <u8g2_DrawLine+0x9e>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:54

  if ( dy > dx ) 
    6f18:	ce 15       	cp	r28, r14
    6f1a:	df 05       	cpc	r29, r15
    6f1c:	08 f4       	brcc	.+2      	; 0x6f20 <u8g2_DrawLine+0x56>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:61
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    tmp = x2; x2 =y2; y2 = tmp;
  }
  if ( x1 > x2 ) 
    6f1e:	48 c0       	rjmp	.+144    	; 0x6fb0 <u8g2_DrawLine+0xe6>
    6f20:	31 2c       	mov	r3, r1
    6f22:	18 c0       	rjmp	.+48     	; 0x6f54 <u8g2_DrawLine+0x8a>
    6f24:	c8 01       	movw	r24, r16
    6f26:	8c 19       	sub	r24, r12
    6f28:	9d 09       	sbc	r25, r13
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:52
  uint8_t swapxy = 0;
  
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;
    6f2a:	a8 16       	cp	r10, r24
    6f2c:	b9 06       	cpc	r11, r25
    6f2e:	08 f0       	brcs	.+2      	; 0x6f32 <u8g2_DrawLine+0x68>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:54

  if ( dy > dx ) 
    6f30:	68 c0       	rjmp	.+208    	; 0x7002 <u8g2_DrawLine+0x138>
    6f32:	3a 2d       	mov	r19, r10
    6f34:	2b 2d       	mov	r18, r11
    6f36:	5c 01       	movw	r10, r24
    6f38:	83 2f       	mov	r24, r19
    6f3a:	92 2f       	mov	r25, r18
    6f3c:	3c 2f       	mov	r19, r28
    6f3e:	2d 2f       	mov	r18, r29
    6f40:	e8 01       	movw	r28, r16
    6f42:	03 2f       	mov	r16, r19
    6f44:	12 2f       	mov	r17, r18
    6f46:	3e 2d       	mov	r19, r14
    6f48:	2f 2d       	mov	r18, r15
    6f4a:	76 01       	movw	r14, r12
    6f4c:	c3 2e       	mov	r12, r19
    6f4e:	d2 2e       	mov	r13, r18
    6f50:	33 24       	eor	r3, r3
    6f52:	33 94       	inc	r3
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:56
  {
    swapxy = 1;
    6f54:	45 01       	movw	r8, r10
    6f56:	96 94       	lsr	r9
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:66
  if ( x1 > x2 ) 
  {
    tmp = x1; x1 =x2; x2 = tmp;
    tmp = y1; y1 =y2; y2 = tmp;
  }
  err = dx >> 1;
    6f58:	87 94       	ror	r8
    6f5a:	c0 16       	cp	r12, r16
    6f5c:	d1 06       	cpc	r13, r17
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:67
  if ( y2 > y1 ) ystep = 1; else ystep = -1;
    6f5e:	90 f1       	brcs	.+100    	; 0x6fc4 <u8g2_DrawLine+0xfa>
    6f60:	66 24       	eor	r6, r6
    6f62:	6a 94       	dec	r6
    6f64:	76 2c       	mov	r7, r6
    6f66:	31 c0       	rjmp	.+98     	; 0x6fca <u8g2_DrawLine+0x100>
    6f68:	3a 2d       	mov	r19, r10
    6f6a:	2b 2d       	mov	r18, r11
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:54
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;

  if ( dy > dx ) 
    6f6c:	5c 01       	movw	r10, r24
    6f6e:	83 2f       	mov	r24, r19
    6f70:	92 2f       	mov	r25, r18
    6f72:	3c 2d       	mov	r19, r12
    6f74:	2d 2d       	mov	r18, r13
    6f76:	6e 01       	movw	r12, r28
    6f78:	c3 2f       	mov	r28, r19
    6f7a:	d2 2f       	mov	r29, r18
    6f7c:	3e 2d       	mov	r19, r14
    6f7e:	2f 2d       	mov	r18, r15
    6f80:	78 01       	movw	r14, r16
    6f82:	03 2f       	mov	r16, r19
    6f84:	12 2f       	mov	r17, r18
    6f86:	e4 cf       	rjmp	.-56     	; 0x6f50 <u8g2_DrawLine+0x86>
    6f88:	a6 01       	movw	r20, r12
    6f8a:	b7 01       	movw	r22, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:81
#endif

  for( x = x1; x <= x2; x++ )
  {
    if ( swapxy == 0 ) 
      u8g2_DrawPixel(u8g2, x, y); 
    6f8c:	33 20       	and	r3, r3
    6f8e:	11 f0       	breq	.+4      	; 0x6f94 <u8g2_DrawLine+0xca>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:80
    x2--;
#endif

  for( x = x1; x <= x2; x++ )
  {
    if ( swapxy == 0 ) 
    6f90:	a7 01       	movw	r20, r14
    6f92:	b6 01       	movw	r22, r12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:83
      u8g2_DrawPixel(u8g2, x, y); 
    else 
      u8g2_DrawPixel(u8g2, y, x); 
    6f94:	c2 01       	movw	r24, r4
    6f96:	78 df       	rcall	.-272    	; 0x6e88 <u8g2_DrawPixel>
    6f98:	80 1a       	sub	r8, r16
    6f9a:	91 0a       	sbc	r9, r17
    6f9c:	97 fe       	sbrs	r9, 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:84
    err -= (uint8_t)dy;
    6f9e:	04 c0       	rjmp	.+8      	; 0x6fa8 <u8g2_DrawLine+0xde>
    6fa0:	c6 0c       	add	r12, r6
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:85
    if ( err < 0 ) 
    6fa2:	d7 1c       	adc	r13, r7
    6fa4:	8a 0c       	add	r8, r10
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:87
    {
      y += (u8g2_uint_t)ystep;
    6fa6:	9b 1c       	adc	r9, r11
    6fa8:	8f ef       	ldi	r24, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:88
      err += (u8g2_uint_t)dx;
    6faa:	e8 1a       	sub	r14, r24
    6fac:	f8 0a       	sbc	r15, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:78
#else
  if ( x2 == 0xffff )
    x2--;
#endif

  for( x = x1; x <= x2; x++ )
    6fae:	14 c0       	rjmp	.+40     	; 0x6fd8 <u8g2_DrawLine+0x10e>
    6fb0:	45 01       	movw	r8, r10
    6fb2:	96 94       	lsr	r9
    6fb4:	87 94       	ror	r8
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:66
  if ( x1 > x2 ) 
  {
    tmp = x1; x1 =x2; x2 = tmp;
    tmp = y1; y1 =y2; y2 = tmp;
  }
  err = dx >> 1;
    6fb6:	68 01       	movw	r12, r16
    6fb8:	3e 2d       	mov	r19, r14
    6fba:	2f 2d       	mov	r18, r15
    6fbc:	7e 01       	movw	r14, r28
    6fbe:	c3 2f       	mov	r28, r19
    6fc0:	d2 2f       	mov	r29, r18
    6fc2:	31 2c       	mov	r3, r1
    6fc4:	66 24       	eor	r6, r6
    6fc6:	63 94       	inc	r6
    6fc8:	71 2c       	mov	r7, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:67
  if ( y2 > y1 ) ystep = 1; else ystep = -1;
    6fca:	cf 3f       	cpi	r28, 0xFF	; 255
    6fcc:	dc 07       	cpc	r29, r28
    6fce:	11 f4       	brne	.+4      	; 0x6fd4 <u8g2_DrawLine+0x10a>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:74

#ifndef  U8G2_16BIT
  if ( x2 == 255 )
    x2--;
#else
  if ( x2 == 0xffff )
    6fd0:	ce ef       	ldi	r28, 0xFE	; 254
    6fd2:	df ef       	ldi	r29, 0xFF	; 255
    6fd4:	8c 01       	movw	r16, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:75
    x2--;
    6fd6:	11 27       	eor	r17, r17
    6fd8:	ce 15       	cp	r28, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:84
  {
    if ( swapxy == 0 ) 
      u8g2_DrawPixel(u8g2, x, y); 
    else 
      u8g2_DrawPixel(u8g2, y, x); 
    err -= (uint8_t)dy;
    6fda:	df 05       	cpc	r29, r15
    6fdc:	a8 f6       	brcc	.-86     	; 0x6f88 <u8g2_DrawLine+0xbe>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:78
#else
  if ( x2 == 0xffff )
    x2--;
#endif

  for( x = x1; x <= x2; x++ )
    6fde:	df 91       	pop	r29
    6fe0:	cf 91       	pop	r28
    6fe2:	1f 91       	pop	r17
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:91
    {
      y += (u8g2_uint_t)ystep;
      err += (u8g2_uint_t)dx;
    }
  }
}
    6fe4:	0f 91       	pop	r16
    6fe6:	ff 90       	pop	r15
    6fe8:	ef 90       	pop	r14
    6fea:	df 90       	pop	r13
    6fec:	cf 90       	pop	r12
    6fee:	bf 90       	pop	r11
    6ff0:	af 90       	pop	r10
    6ff2:	9f 90       	pop	r9
    6ff4:	8f 90       	pop	r8
    6ff6:	7f 90       	pop	r7
    6ff8:	6f 90       	pop	r6
    6ffa:	5f 90       	pop	r5
    6ffc:	4f 90       	pop	r4
    6ffe:	3f 90       	pop	r3
    7000:	08 95       	ret
    7002:	ce 15       	cp	r28, r14
    7004:	df 05       	cpc	r29, r15
    7006:	08 f0       	brcs	.+2      	; 0x700a <u8g2_DrawLine+0x140>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:61
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    tmp = x2; x2 =y2; y2 = tmp;
  }
  if ( x1 > x2 ) 
    7008:	8b cf       	rjmp	.-234    	; 0x6f20 <u8g2_DrawLine+0x56>
    700a:	45 01       	movw	r8, r10
    700c:	96 94       	lsr	r9
    700e:	87 94       	ror	r8
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_line.c:66
  {
    tmp = x1; x1 =x2; x2 = tmp;
    tmp = y1; y1 =y2; y2 = tmp;
  }
  err = dx >> 1;
    7010:	68 01       	movw	r12, r16
    7012:	3e 2d       	mov	r19, r14
    7014:	2f 2d       	mov	r18, r15
    7016:	7e 01       	movw	r14, r28
    7018:	c3 2f       	mov	r28, r19
    701a:	d2 2f       	mov	r29, r18
    701c:	31 2c       	mov	r3, r1
    701e:	a0 cf       	rjmp	.-192    	; 0x6f60 <u8g2_DrawLine+0x96>

00007020 <u8g2_font_calc_vref_top>:
u8g2_font_calc_vref_top():
    7020:	8a 57       	subi	r24, 0x7A	; 122
    7022:	9f 4f       	sbci	r25, 0xFF	; 255
    7024:	fc 01       	movw	r30, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1252

u8g2_uint_t u8g2_font_calc_vref_top(u8g2_t *u8g2)
{
  u8g2_uint_t tmp;
  /* reference pos is one pixel above the upper edge of the reference glyph */
  tmp = (u8g2_uint_t)(u8g2->font_ref_ascent);
    7026:	80 81       	ld	r24, Z
    7028:	08 2e       	mov	r0, r24
    702a:	00 0c       	add	r0, r0
    702c:	99 0b       	sbc	r25, r25
    702e:	01 96       	adiw	r24, 0x01	; 1
    7030:	08 95       	ret

00007032 <u8g2_UpdateRefHeight>:
u8g2_UpdateRefHeight():
    7032:	cf 93       	push	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1255
  tmp++;
  return tmp;
}
    7034:	df 93       	push	r29
    7036:	fc 01       	movw	r30, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1182
/*===============================================*/

/* set ascent/descent for reference point calculation */

void u8g2_UpdateRefHeight(u8g2_t *u8g2)
{
    7038:	e6 5a       	subi	r30, 0xA6	; 166
    703a:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1183
  if ( u8g2->font == NULL )
    703c:	20 81       	ld	r18, Z
    703e:	31 81       	ldd	r19, Z+1	; 0x01
    7040:	23 2b       	or	r18, r19
    7042:	f1 f0       	breq	.+60     	; 0x7080 <u8g2_UpdateRefHeight+0x4e>
    7044:	b0 96       	adiw	r30, 0x20	; 32
    7046:	20 81       	ld	r18, Z
    7048:	dc 01       	movw	r26, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1185
    return;
  u8g2->font_ref_ascent = u8g2->font_info.ascent_A;
    704a:	aa 57       	subi	r26, 0x7A	; 122
    704c:	bf 4f       	sbci	r27, 0xFF	; 255
    704e:	2c 93       	st	X, r18
    7050:	31 96       	adiw	r30, 0x01	; 1
    7052:	50 81       	ld	r21, Z
    7054:	3c 96       	adiw	r30, 0x0c	; 12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1186
  u8g2->font_ref_descent = u8g2->font_info.descent_g;
    7056:	50 83       	st	Z, r21
    7058:	ec 01       	movw	r28, r24
    705a:	cb 57       	subi	r28, 0x7B	; 123
    705c:	df 4f       	sbci	r29, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1187
  if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_TEXT )
    705e:	38 81       	ld	r19, Y
    7060:	33 23       	and	r19, r19
    7062:	71 f0       	breq	.+28     	; 0x7080 <u8g2_UpdateRefHeight+0x4e>
    7064:	31 30       	cpi	r19, 0x01	; 1
    7066:	79 f4       	brne	.+30     	; 0x7086 <u8g2_UpdateRefHeight+0x54>
    7068:	29 97       	sbiw	r28, 0x09	; 9
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1190
  {
  }
  else if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_XTEXT )
    706a:	38 81       	ld	r19, Y
    706c:	23 17       	cp	r18, r19
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1192
  {
    if ( u8g2->font_ref_ascent < u8g2->font_info.ascent_para )
    706e:	0c f4       	brge	.+2      	; 0x7072 <u8g2_UpdateRefHeight+0x40>
    7070:	3c 93       	st	X, r19
    7072:	83 58       	subi	r24, 0x83	; 131
    7074:	9f 4f       	sbci	r25, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1193
      u8g2->font_ref_ascent = u8g2->font_info.ascent_para;
    7076:	dc 01       	movw	r26, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1194
    if ( u8g2->font_ref_descent > u8g2->font_info.descent_para )
    7078:	8c 91       	ld	r24, X
    707a:	85 17       	cp	r24, r21
    707c:	0c f4       	brge	.+2      	; 0x7080 <u8g2_UpdateRefHeight+0x4e>
    707e:	80 83       	st	Z, r24
    7080:	df 91       	pop	r29
    7082:	cf 91       	pop	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1195
      u8g2->font_ref_descent = u8g2->font_info.descent_para;
    7084:	08 95       	ret
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1204
    if ( u8g2->font_ref_ascent < u8g2->font_info.max_char_height+u8g2->font_info.y_offset )
      u8g2->font_ref_ascent = u8g2->font_info.max_char_height+u8g2->font_info.y_offset;
    if ( u8g2->font_ref_descent > u8g2->font_info.y_offset )
      u8g2->font_ref_descent = u8g2->font_info.y_offset;
  }  
}
    7086:	ec 01       	movw	r28, r24
    7088:	c9 58       	subi	r28, 0x89	; 137
    708a:	df 4f       	sbci	r29, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1199
    if ( u8g2->font_ref_descent > u8g2->font_info.descent_para )
      u8g2->font_ref_descent = u8g2->font_info.descent_para;
  }
  else
  {
    if ( u8g2->font_ref_ascent < u8g2->font_info.max_char_height+u8g2->font_info.y_offset )
    708c:	48 81       	ld	r20, Y
    708e:	87 58       	subi	r24, 0x87	; 135
    7090:	9f 4f       	sbci	r25, 0xFF	; 255
    7092:	ec 01       	movw	r28, r24
    7094:	38 81       	ld	r19, Y
    7096:	82 2f       	mov	r24, r18
    7098:	22 0f       	add	r18, r18
    709a:	99 0b       	sbc	r25, r25
    709c:	63 2f       	mov	r22, r19
    709e:	03 2e       	mov	r0, r19
    70a0:	00 0c       	add	r0, r0
    70a2:	77 0b       	sbc	r23, r23
    70a4:	64 0f       	add	r22, r20
    70a6:	71 1d       	adc	r23, r1
    70a8:	47 fd       	sbrc	r20, 7
    70aa:	7a 95       	dec	r23
    70ac:	86 17       	cp	r24, r22
    70ae:	97 07       	cpc	r25, r23
    70b0:	14 f4       	brge	.+4      	; 0x70b6 <u8g2_UpdateRefHeight+0x84>
    70b2:	43 0f       	add	r20, r19
    70b4:	4c 93       	st	X, r20
    70b6:	35 17       	cp	r19, r21
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1200
      u8g2->font_ref_ascent = u8g2->font_info.max_char_height+u8g2->font_info.y_offset;
    70b8:	1c f7       	brge	.-58     	; 0x7080 <u8g2_UpdateRefHeight+0x4e>
    70ba:	30 83       	st	Z, r19
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1201
    if ( u8g2->font_ref_descent > u8g2->font_info.y_offset )
    70bc:	e1 cf       	rjmp	.-62     	; 0x7080 <u8g2_UpdateRefHeight+0x4e>

000070be <u8g2_add_vector_x>:
u8g2_add_vector_x():
    70be:	21 30       	cpi	r18, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1202
      u8g2->font_ref_descent = u8g2->font_info.y_offset;
    70c0:	69 f0       	breq	.+26     	; 0x70dc <u8g2_add_vector_x+0x1e>
    70c2:	38 f0       	brcs	.+14     	; 0x70d2 <u8g2_add_vector_x+0x14>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:318
  return dy;
}

u8g2_uint_t u8g2_add_vector_x(u8g2_uint_t dx, int8_t x, int8_t y, uint8_t dir)
{
  switch(dir)
    70c4:	22 30       	cpi	r18, 0x02	; 2
    70c6:	79 f0       	breq	.+30     	; 0x70e6 <u8g2_add_vector_x+0x28>
    70c8:	84 0f       	add	r24, r20
    70ca:	91 1d       	adc	r25, r1
    70cc:	47 fd       	sbrc	r20, 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:330
      break;
    case 2:
      dx -= x;
      break;
    default:
      dx += y;
    70ce:	9a 95       	dec	r25
    70d0:	08 95       	ret
    70d2:	86 0f       	add	r24, r22
    70d4:	91 1d       	adc	r25, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:334
      break;      
  }
  return dx;
}
    70d6:	67 fd       	sbrc	r22, 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:321
u8g2_uint_t u8g2_add_vector_x(u8g2_uint_t dx, int8_t x, int8_t y, uint8_t dir)
{
  switch(dir)
  {
    case 0:
      dx += x;
    70d8:	9a 95       	dec	r25
    70da:	08 95       	ret
    70dc:	84 1b       	sub	r24, r20
    70de:	91 09       	sbc	r25, r1
    70e0:	47 fd       	sbrc	r20, 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:324
      break;
    case 1:
      dx -= y;
    70e2:	93 95       	inc	r25
    70e4:	08 95       	ret
    70e6:	86 1b       	sub	r24, r22
    70e8:	91 09       	sbc	r25, r1
    70ea:	67 fd       	sbrc	r22, 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:327
      break;
    case 2:
      dx -= x;
    70ec:	93 95       	inc	r25
    70ee:	08 95       	ret

000070f0 <u8g2_add_vector_y>:
u8g2_add_vector_y():
    70f0:	21 30       	cpi	r18, 0x01	; 1
    70f2:	69 f0       	breq	.+26     	; 0x710e <u8g2_add_vector_y+0x1e>
    70f4:	38 f0       	brcs	.+14     	; 0x7104 <u8g2_add_vector_y+0x14>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:298


#ifdef U8G2_WITH_FONT_ROTATION
u8g2_uint_t u8g2_add_vector_y(u8g2_uint_t dy, int8_t x, int8_t y, uint8_t dir)
{
  switch(dir)
    70f6:	22 30       	cpi	r18, 0x02	; 2
    70f8:	79 f0       	breq	.+30     	; 0x7118 <u8g2_add_vector_y+0x28>
    70fa:	86 1b       	sub	r24, r22
    70fc:	91 09       	sbc	r25, r1
    70fe:	67 fd       	sbrc	r22, 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:310
      break;
    case 2:
      dy -= y;
      break;
    default:
      dy -= x;
    7100:	93 95       	inc	r25
    7102:	08 95       	ret
    7104:	84 0f       	add	r24, r20
    7106:	91 1d       	adc	r25, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:314
      break;      
  }
  return dy;
}
    7108:	47 fd       	sbrc	r20, 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:301
u8g2_uint_t u8g2_add_vector_y(u8g2_uint_t dy, int8_t x, int8_t y, uint8_t dir)
{
  switch(dir)
  {
    case 0:
      dy += y;
    710a:	9a 95       	dec	r25
    710c:	08 95       	ret
    710e:	86 0f       	add	r24, r22
    7110:	91 1d       	adc	r25, r1
    7112:	67 fd       	sbrc	r22, 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:304
      break;
    case 1:
      dy += x;
    7114:	9a 95       	dec	r25
    7116:	08 95       	ret
    7118:	84 1b       	sub	r24, r20
    711a:	91 09       	sbc	r25, r1
    711c:	47 fd       	sbrc	r20, 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:307
      break;
    case 2:
      dy -= y;
    711e:	93 95       	inc	r25
    7120:	08 95       	ret

00007122 <u8g2_font_decode_len>:
u8g2_font_decode_len():
    7122:	3f 92       	push	r3
    7124:	4f 92       	push	r4
    7126:	5f 92       	push	r5
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:388
  Called by:
    u8g2_font_decode_glyph()
*/
/* optimized */
void u8g2_font_decode_len(u8g2_t *u8g2, uint8_t len, uint8_t is_foreground)
{
    7128:	6f 92       	push	r6
    712a:	7f 92       	push	r7
    712c:	8f 92       	push	r8
    712e:	9f 92       	push	r9
    7130:	af 92       	push	r10
    7132:	bf 92       	push	r11
    7134:	cf 92       	push	r12
    7136:	df 92       	push	r13
    7138:	ef 92       	push	r14
    713a:	ff 92       	push	r15
    713c:	0f 93       	push	r16
    713e:	1f 93       	push	r17
    7140:	cf 93       	push	r28
    7142:	df 93       	push	r29
    7144:	7c 01       	movw	r14, r24
    7146:	16 2f       	mov	r17, r22
    7148:	44 2e       	mov	r4, r20
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:405
  u8g2_font_decode_t *decode = &(u8g2->font_decode);
  
  cnt = len;
  
  /* get the local position */
  lx = decode->x;
    714a:	ec 01       	movw	r28, r24
    714c:	c2 5a       	subi	r28, 0xA2	; 162
    714e:	df 4f       	sbci	r29, 0xFF	; 255
    7150:	5e 80       	ldd	r5, Y+6	; 0x06
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:406
  ly = decode->y;
    7152:	6f 80       	ldd	r6, Y+7	; 0x07
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:458
#endif
      );
    }
    else if ( decode->is_transparent == 0 )    
    {
      u8g2->draw_color = decode->bg_color;			/* draw_color will be restored later */
    7154:	6c 01       	movw	r12, r24
    7156:	8a e8       	ldi	r24, 0x8A	; 138
    7158:	c8 0e       	add	r12, r24
    715a:	d1 1c       	adc	r13, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:411
  ly = decode->y;
  
  for(;;)
  {
    /* calculate the number of pixel to the right edge of the glyph */
    rem = decode->glyph_width;
    715c:	78 84       	ldd	r7, Y+8	; 0x08
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:412
    rem -= lx;
    715e:	75 18       	sub	r7, r5
    7160:	31 2e       	mov	r3, r17
    7162:	71 16       	cp	r7, r17
    7164:	08 f4       	brcc	.+2      	; 0x7168 <u8g2_font_decode_len+0x46>
    7166:	37 2c       	mov	r3, r7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:426
    /* now draw the line, but apply the rotation around the glyph target position */
    //u8g2_font_decode_draw_pixel(u8g2, lx,ly,current, is_foreground);

    /* get target position */
    x = decode->target_x;
    y = decode->target_y;
    7168:	8c 80       	ldd	r8, Y+4	; 0x04
    716a:	9d 80       	ldd	r9, Y+5	; 0x05
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:431

    /* apply rotation */
#ifdef U8G2_WITH_FONT_ROTATION
    
    x = u8g2_add_vector_x(x, lx, ly, decode->dir);
    716c:	0e 85       	ldd	r16, Y+14	; 0x0e
    716e:	20 2f       	mov	r18, r16
    7170:	46 2d       	mov	r20, r6
    7172:	65 2d       	mov	r22, r5
    7174:	8a 81       	ldd	r24, Y+2	; 0x02
    7176:	9b 81       	ldd	r25, Y+3	; 0x03
    7178:	a2 df       	rcall	.-188    	; 0x70be <u8g2_add_vector_x>
    717a:	5c 01       	movw	r10, r24
    717c:	20 2f       	mov	r18, r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:432
    y = u8g2_add_vector_y(y, lx, ly, decode->dir);
    717e:	46 2d       	mov	r20, r6
    7180:	65 2d       	mov	r22, r5
    7182:	c4 01       	movw	r24, r8
    7184:	b5 df       	rcall	.-150    	; 0x70f0 <u8g2_add_vector_y>
    7186:	ac 01       	movw	r20, r24
    7188:	44 20       	and	r4, r4
    718a:	71 f0       	breq	.+28     	; 0x71a8 <u8g2_font_decode_len+0x86>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:442
    x += lx;
    y += ly;
#endif
    
    /* draw foreground and background (if required) */
    if ( is_foreground )
    718c:	8c 85       	ldd	r24, Y+12	; 0x0c
    718e:	f6 01       	movw	r30, r12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:444
    {
      u8g2->draw_color = decode->fg_color;			/* draw_color will be restored later */
    7190:	80 83       	st	Z, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:458
#endif
      );
    }
    else if ( decode->is_transparent == 0 )    
    {
      u8g2->draw_color = decode->bg_color;			/* draw_color will be restored later */
    7192:	23 2d       	mov	r18, r3
    7194:	30 e0       	ldi	r19, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:459
      u8g2_DrawHVLine(u8g2, 
    7196:	b5 01       	movw	r22, r10
    7198:	c7 01       	movw	r24, r14
    719a:	cb dd       	rcall	.-1130   	; 0x6d32 <u8g2_DrawHVLine>
    719c:	17 15       	cp	r17, r7
    719e:	48 f0       	brcs	.+18     	; 0x71b2 <u8g2_font_decode_len+0x90>
    71a0:	17 19       	sub	r17, r7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:472
#endif
      );   
    }
    
    /* check, whether the end of the run length code has been reached */
    if ( cnt < rem )
    71a2:	63 94       	inc	r6
    71a4:	51 2c       	mov	r5, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:474
      break;
    cnt -= rem;
    71a6:	da cf       	rjmp	.-76     	; 0x715c <u8g2_font_decode_len+0x3a>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:476
    lx = 0;
    ly++;
    71a8:	8b 85       	ldd	r24, Y+11	; 0x0b
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:475
    
    /* check, whether the end of the run length code has been reached */
    if ( cnt < rem )
      break;
    cnt -= rem;
    lx = 0;
    71aa:	81 11       	cpse	r24, r1
    71ac:	f7 cf       	rjmp	.-18     	; 0x719c <u8g2_font_decode_len+0x7a>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:456
#else
	0
#endif
      );
    }
    else if ( decode->is_transparent == 0 )    
    71ae:	8d 85       	ldd	r24, Y+13	; 0x0d
    71b0:	ee cf       	rjmp	.-36     	; 0x718e <u8g2_font_decode_len+0x6c>
    71b2:	15 0d       	add	r17, r5
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:458
    {
      u8g2->draw_color = decode->bg_color;			/* draw_color will be restored later */
    71b4:	1e 83       	std	Y+6, r17	; 0x06
    71b6:	6f 82       	std	Y+7, r6	; 0x07
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:478
      break;
    cnt -= rem;
    lx = 0;
    ly++;
  }
  lx += cnt;
    71b8:	df 91       	pop	r29
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:480
  
  decode->x = lx;
    71ba:	cf 91       	pop	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:481
  decode->y = ly;  
    71bc:	1f 91       	pop	r17
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:482
}
    71be:	0f 91       	pop	r16
    71c0:	ff 90       	pop	r15
    71c2:	ef 90       	pop	r14
    71c4:	df 90       	pop	r13
    71c6:	cf 90       	pop	r12
    71c8:	bf 90       	pop	r11
    71ca:	af 90       	pop	r10
    71cc:	9f 90       	pop	r9
    71ce:	8f 90       	pop	r8
    71d0:	7f 90       	pop	r7
    71d2:	6f 90       	pop	r6
    71d4:	5f 90       	pop	r5
    71d6:	4f 90       	pop	r4
    71d8:	3f 90       	pop	r3
    71da:	08 95       	ret

000071dc <u8g2_font_decode_get_unsigned_bits>:
u8g2_font_decode_get_unsigned_bits():
    71dc:	dc 01       	movw	r26, r24
    71de:	1a 96       	adiw	r26, 0x0a	; 10
    71e0:	4c 91       	ld	r20, X
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:238
/*========================================================================*/
/* glyph handling */

/* optimized */
uint8_t u8g2_font_decode_get_unsigned_bits(u8g2_font_decode_t *f, uint8_t cnt) 
{
    71e2:	1a 97       	sbiw	r26, 0x0a	; 10
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:240
  uint8_t val;
  uint8_t bit_pos = f->decode_bit_pos;
    71e4:	ed 91       	ld	r30, X+
    71e6:	fc 91       	ld	r31, X
    71e8:	11 97       	sbiw	r26, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:244
  uint8_t bit_pos_plus_cnt;
  
  //val = *(f->decode_ptr);
  val = u8x8_pgm_read( f->decode_ptr );  
    71ea:	24 91       	lpm	r18, Z
    71ec:	30 e0       	ldi	r19, 0x00	; 0
    71ee:	04 2e       	mov	r0, r20
    71f0:	02 c0       	rjmp	.+4      	; 0x71f6 <u8g2_font_decode_get_unsigned_bits+0x1a>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:246
  
  val >>= bit_pos;
    71f2:	35 95       	asr	r19
    71f4:	27 95       	ror	r18
    71f6:	0a 94       	dec	r0
    71f8:	e2 f7       	brpl	.-8      	; 0x71f2 <u8g2_font_decode_get_unsigned_bits+0x16>
    71fa:	84 2f       	mov	r24, r20
    71fc:	86 0f       	add	r24, r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:248
  bit_pos_plus_cnt = bit_pos;
  bit_pos_plus_cnt += cnt;
    71fe:	88 30       	cpi	r24, 0x08	; 8
    7200:	68 f0       	brcs	.+26     	; 0x721c <u8g2_font_decode_get_unsigned_bits+0x40>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:249
  if ( bit_pos_plus_cnt >= 8 )
    7202:	31 96       	adiw	r30, 0x01	; 1
    7204:	ed 93       	st	X+, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:253
  {
    uint8_t s = 8;
    s -= bit_pos;
    f->decode_ptr++;
    7206:	fc 93       	st	X, r31
    7208:	11 97       	sbiw	r26, 0x01	; 1
    720a:	e4 91       	lpm	r30, Z
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:255
    //val |= *(f->decode_ptr) << (8-bit_pos);
    val |= u8x8_pgm_read( f->decode_ptr ) << (s);
    720c:	98 e0       	ldi	r25, 0x08	; 8
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:252
  bit_pos_plus_cnt = bit_pos;
  bit_pos_plus_cnt += cnt;
  if ( bit_pos_plus_cnt >= 8 )
  {
    uint8_t s = 8;
    s -= bit_pos;
    720e:	94 1b       	sub	r25, r20
    7210:	01 c0       	rjmp	.+2      	; 0x7214 <u8g2_font_decode_get_unsigned_bits+0x38>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:255
    f->decode_ptr++;
    //val |= *(f->decode_ptr) << (8-bit_pos);
    val |= u8x8_pgm_read( f->decode_ptr ) << (s);
    7212:	ee 0f       	add	r30, r30
    7214:	9a 95       	dec	r25
    7216:	ea f7       	brpl	.-6      	; 0x7212 <u8g2_font_decode_get_unsigned_bits+0x36>
    7218:	2e 2b       	or	r18, r30
    721a:	88 50       	subi	r24, 0x08	; 8
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:257
    //bit_pos -= 8;
    bit_pos_plus_cnt -= 8;
    721c:	1a 96       	adiw	r26, 0x0a	; 10
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:262
  }
  val &= (1U<<cnt)-1;
  //bit_pos += cnt;
  
  f->decode_bit_pos = bit_pos_plus_cnt;
    721e:	8c 93       	st	X, r24
    7220:	8f ef       	ldi	r24, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:259
    //val |= *(f->decode_ptr) << (8-bit_pos);
    val |= u8x8_pgm_read( f->decode_ptr ) << (s);
    //bit_pos -= 8;
    bit_pos_plus_cnt -= 8;
  }
  val &= (1U<<cnt)-1;
    7222:	9f ef       	ldi	r25, 0xFF	; 255
    7224:	01 c0       	rjmp	.+2      	; 0x7228 <u8g2_font_decode_get_unsigned_bits+0x4c>
    7226:	88 0f       	add	r24, r24
    7228:	6a 95       	dec	r22
    722a:	ea f7       	brpl	.-6      	; 0x7226 <u8g2_font_decode_get_unsigned_bits+0x4a>
    722c:	80 95       	com	r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:264
  //bit_pos += cnt;
  
  f->decode_bit_pos = bit_pos_plus_cnt;
  return val;
}
    722e:	82 23       	and	r24, r18
    7230:	08 95       	ret

00007232 <u8g2_font_setup_decode>:
u8g2_font_setup_decode():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:579
  
}


static void u8g2_font_setup_decode(u8g2_t *u8g2, const uint8_t *glyph_data)
{
    7232:	0f 93       	push	r16
    7234:	1f 93       	push	r17
    7236:	cf 93       	push	r28
    7238:	df 93       	push	r29
    723a:	8c 01       	movw	r16, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:580
  u8g2_font_decode_t *decode = &(u8g2->font_decode);
    723c:	ec 01       	movw	r28, r24
    723e:	c2 5a       	subi	r28, 0xA2	; 162
    7240:	df 4f       	sbci	r29, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:581
  decode->decode_ptr = glyph_data;
    7242:	68 83       	st	Y, r22
    7244:	79 83       	std	Y+1, r23	; 0x01
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:582
  decode->decode_bit_pos = 0;
    7246:	1a 86       	std	Y+10, r1	; 0x0a
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:590
  /*
  decode->decode_ptr += 1;
  decode->decode_ptr += 1;
  */
  
  decode->glyph_width = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_char_width);
    7248:	fc 01       	movw	r30, r24
    724a:	ef 58       	subi	r30, 0x8F	; 143
    724c:	ff 4f       	sbci	r31, 0xFF	; 255
    724e:	60 81       	ld	r22, Z
    7250:	ce 01       	movw	r24, r28
    7252:	c4 df       	rcall	.-120    	; 0x71dc <u8g2_font_decode_get_unsigned_bits>
    7254:	88 87       	std	Y+8, r24	; 0x08
    7256:	f8 01       	movw	r30, r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:591
  decode->glyph_height = u8g2_font_decode_get_unsigned_bits(decode,u8g2->font_info.bits_per_char_height);
    7258:	ee 58       	subi	r30, 0x8E	; 142
    725a:	ff 4f       	sbci	r31, 0xFF	; 255
    725c:	60 81       	ld	r22, Z
    725e:	ce 01       	movw	r24, r28
    7260:	bd df       	rcall	.-134    	; 0x71dc <u8g2_font_decode_get_unsigned_bits>
    7262:	89 87       	std	Y+9, r24	; 0x09
    7264:	f8 01       	movw	r30, r16
    7266:	e6 57       	subi	r30, 0x76	; 118
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:593
  
  decode->fg_color = u8g2->draw_color;
    7268:	ff 4f       	sbci	r31, 0xFF	; 255
    726a:	90 81       	ld	r25, Z
    726c:	9c 87       	std	Y+12, r25	; 0x0c
    726e:	81 e0       	ldi	r24, 0x01	; 1
    7270:	91 11       	cpse	r25, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:594
  decode->bg_color = (decode->fg_color == 0 ? 1 : 0);
    7272:	80 e0       	ldi	r24, 0x00	; 0
    7274:	8d 87       	std	Y+13, r24	; 0x0d
    7276:	df 91       	pop	r29
    7278:	cf 91       	pop	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:595
}
    727a:	1f 91       	pop	r17
    727c:	0f 91       	pop	r16
    727e:	08 95       	ret

00007280 <u8g2_font_decode_get_signed_bits>:
u8g2_font_decode_get_signed_bits():
    7280:	cf 93       	push	r28
    7282:	c6 2f       	mov	r28, r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:283
	r = bits(x)+1;

*/
/* optimized */
int8_t u8g2_font_decode_get_signed_bits(u8g2_font_decode_t *f, uint8_t cnt)
{
    7284:	ab df       	rcall	.-170    	; 0x71dc <u8g2_font_decode_get_unsigned_bits>
    7286:	c1 50       	subi	r28, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:285
  int8_t v, d;
  v = (int8_t)u8g2_font_decode_get_unsigned_bits(f, cnt);
    7288:	21 e0       	ldi	r18, 0x01	; 1
    728a:	30 e0       	ldi	r19, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:287
  d = 1;
  cnt--;
    728c:	01 c0       	rjmp	.+2      	; 0x7290 <u8g2_font_decode_get_signed_bits+0x10>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:288
  d <<= cnt;
    728e:	22 0f       	add	r18, r18
    7290:	ca 95       	dec	r28
    7292:	ea f7       	brpl	.-6      	; 0x728e <u8g2_font_decode_get_signed_bits+0xe>
    7294:	82 1b       	sub	r24, r18
    7296:	cf 91       	pop	r28
    7298:	08 95       	ret

0000729a <u8g2_font_get_word>:
u8g2_font_get_word():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:292
  v -= d;
  return v;
  //return (int8_t)u8g2_font_decode_get_unsigned_bits(f, cnt) - ((1<<cnt)>>1);
}
    729a:	fc 01       	movw	r30, r24
    729c:	e6 0f       	add	r30, r22
    729e:	f1 1d       	adc	r31, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:121

static uint16_t u8g2_font_get_word(const uint8_t *font, uint8_t offset) U8G2_NOINLINE; 
static uint16_t u8g2_font_get_word(const uint8_t *font, uint8_t offset)
{
    uint16_t pos;
    font += offset;
    72a0:	84 91       	lpm	r24, Z
    72a2:	90 e0       	ldi	r25, 0x00	; 0
    72a4:	98 2f       	mov	r25, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:122
    pos = u8x8_pgm_read( font );
    72a6:	88 27       	eor	r24, r24
    72a8:	31 96       	adiw	r30, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:124
    font++;
    pos <<= 8;
    72aa:	e4 91       	lpm	r30, Z
    72ac:	8e 0f       	add	r24, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:123
static uint16_t u8g2_font_get_word(const uint8_t *font, uint8_t offset)
{
    uint16_t pos;
    font += offset;
    pos = u8x8_pgm_read( font );
    font++;
    72ae:	91 1d       	adc	r25, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:125
    pos <<= 8;
    pos += u8x8_pgm_read( font);
    72b0:	08 95       	ret

000072b2 <u8g2_SetFont>:
u8g2_SetFont():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:127
    return pos;
}
    72b2:	ef 92       	push	r14
    72b4:	ff 92       	push	r15
    72b6:	0f 93       	push	r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1280
}

/*===============================================*/

void u8g2_SetFont(u8g2_t *u8g2, const uint8_t  *font)
{
    72b8:	1f 93       	push	r17
    72ba:	cf 93       	push	r28
    72bc:	df 93       	push	r29
    72be:	fc 01       	movw	r30, r24
    72c0:	e6 5a       	subi	r30, 0xA6	; 166
    72c2:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1281
  if ( u8g2->font != font )
    72c4:	20 81       	ld	r18, Z
    72c6:	31 81       	ldd	r19, Z+1	; 0x01
    72c8:	26 17       	cp	r18, r22
    72ca:	37 07       	cpc	r19, r23
    72cc:	09 f4       	brne	.+2      	; 0x72d0 <u8g2_SetFont+0x1e>
    72ce:	85 c0       	rjmp	.+266    	; 0x73da <u8g2_SetFont+0x128>
    72d0:	eb 01       	movw	r28, r22
    72d2:	7c 01       	movw	r14, r24
    72d4:	60 83       	st	Z, r22
    72d6:	71 83       	std	Z+1, r23	; 0x01
u8g2_font_get_byte():
    72d8:	fb 01       	movw	r30, r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1287
  {
//#ifdef  __unix__
//	u8g2->last_font_data = NULL;
//	u8g2->last_unicode = 0x0ffff;
//#endif 
    u8g2->font = font;
    72da:	84 91       	lpm	r24, Z
u8g2_read_font_info():
    72dc:	87 01       	movw	r16, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
  return u8x8_pgm_read( font );  
    72de:	03 59       	subi	r16, 0x93	; 147
    72e0:	1f 4f       	sbci	r17, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:134
/*========================================================================*/
/* new font format */
void u8g2_read_font_info(u8g2_font_info_t *font_info, const uint8_t *font)
{
  /* offset 0 */
  font_info->glyph_cnt = u8g2_font_get_byte(font, 0);
    72e2:	d8 01       	movw	r26, r16
    72e4:	8c 93       	st	X, r24
u8g2_font_get_byte():
    72e6:	31 96       	adiw	r30, 0x01	; 1
    72e8:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
    72ea:	11 96       	adiw	r26, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    72ec:	ec 93       	st	X, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    72ee:	11 97       	sbiw	r26, 0x01	; 1
u8g2_font_get_byte():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:135
/* new font format */
void u8g2_read_font_info(u8g2_font_info_t *font_info, const uint8_t *font)
{
  /* offset 0 */
  font_info->glyph_cnt = u8g2_font_get_byte(font, 0);
  font_info->bbx_mode = u8g2_font_get_byte(font, 1);
    72f0:	fb 01       	movw	r30, r22
    72f2:	32 96       	adiw	r30, 0x02	; 2
    72f4:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    72f6:	12 96       	adiw	r26, 0x02	; 2
    72f8:	ec 93       	st	X, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    72fa:	12 97       	sbiw	r26, 0x02	; 2
u8g2_font_get_byte():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:136
void u8g2_read_font_info(u8g2_font_info_t *font_info, const uint8_t *font)
{
  /* offset 0 */
  font_info->glyph_cnt = u8g2_font_get_byte(font, 0);
  font_info->bbx_mode = u8g2_font_get_byte(font, 1);
  font_info->bits_per_0 = u8g2_font_get_byte(font, 2);
    72fc:	fb 01       	movw	r30, r22
    72fe:	33 96       	adiw	r30, 0x03	; 3
    7300:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    7302:	13 96       	adiw	r26, 0x03	; 3
    7304:	ec 93       	st	X, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    7306:	13 97       	sbiw	r26, 0x03	; 3
u8g2_font_get_byte():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:137
{
  /* offset 0 */
  font_info->glyph_cnt = u8g2_font_get_byte(font, 0);
  font_info->bbx_mode = u8g2_font_get_byte(font, 1);
  font_info->bits_per_0 = u8g2_font_get_byte(font, 2);
  font_info->bits_per_1 = u8g2_font_get_byte(font, 3);
    7308:	fb 01       	movw	r30, r22
    730a:	34 96       	adiw	r30, 0x04	; 4
    730c:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    730e:	14 96       	adiw	r26, 0x04	; 4
    7310:	ec 93       	st	X, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    7312:	14 97       	sbiw	r26, 0x04	; 4
u8g2_font_get_byte():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:140
  font_info->bbx_mode = u8g2_font_get_byte(font, 1);
  font_info->bits_per_0 = u8g2_font_get_byte(font, 2);
  font_info->bits_per_1 = u8g2_font_get_byte(font, 3);
  
  /* offset 4 */
  font_info->bits_per_char_width = u8g2_font_get_byte(font, 4);
    7314:	fb 01       	movw	r30, r22
    7316:	35 96       	adiw	r30, 0x05	; 5
    7318:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    731a:	15 96       	adiw	r26, 0x05	; 5
    731c:	ec 93       	st	X, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    731e:	15 97       	sbiw	r26, 0x05	; 5
u8g2_font_get_byte():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:141
  font_info->bits_per_0 = u8g2_font_get_byte(font, 2);
  font_info->bits_per_1 = u8g2_font_get_byte(font, 3);
  
  /* offset 4 */
  font_info->bits_per_char_width = u8g2_font_get_byte(font, 4);
  font_info->bits_per_char_height = u8g2_font_get_byte(font, 5);
    7320:	fb 01       	movw	r30, r22
    7322:	36 96       	adiw	r30, 0x06	; 6
    7324:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    7326:	16 96       	adiw	r26, 0x06	; 6
    7328:	ec 93       	st	X, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    732a:	16 97       	sbiw	r26, 0x06	; 6
u8g2_font_get_byte():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:142
  font_info->bits_per_1 = u8g2_font_get_byte(font, 3);
  
  /* offset 4 */
  font_info->bits_per_char_width = u8g2_font_get_byte(font, 4);
  font_info->bits_per_char_height = u8g2_font_get_byte(font, 5);
  font_info->bits_per_char_x = u8g2_font_get_byte(font, 6);
    732c:	fb 01       	movw	r30, r22
    732e:	37 96       	adiw	r30, 0x07	; 7
    7330:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    7332:	17 96       	adiw	r26, 0x07	; 7
    7334:	ec 93       	st	X, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    7336:	17 97       	sbiw	r26, 0x07	; 7
u8g2_font_get_byte():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:143
  
  /* offset 4 */
  font_info->bits_per_char_width = u8g2_font_get_byte(font, 4);
  font_info->bits_per_char_height = u8g2_font_get_byte(font, 5);
  font_info->bits_per_char_x = u8g2_font_get_byte(font, 6);
  font_info->bits_per_char_y = u8g2_font_get_byte(font, 7);
    7338:	fb 01       	movw	r30, r22
    733a:	38 96       	adiw	r30, 0x08	; 8
    733c:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    733e:	18 96       	adiw	r26, 0x08	; 8
    7340:	ec 93       	st	X, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    7342:	18 97       	sbiw	r26, 0x08	; 8
u8g2_font_get_byte():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:144
  /* offset 4 */
  font_info->bits_per_char_width = u8g2_font_get_byte(font, 4);
  font_info->bits_per_char_height = u8g2_font_get_byte(font, 5);
  font_info->bits_per_char_x = u8g2_font_get_byte(font, 6);
  font_info->bits_per_char_y = u8g2_font_get_byte(font, 7);
  font_info->bits_per_delta_x = u8g2_font_get_byte(font, 8);
    7344:	fb 01       	movw	r30, r22
    7346:	39 96       	adiw	r30, 0x09	; 9
    7348:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    734a:	19 96       	adiw	r26, 0x09	; 9
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    734c:	ec 93       	st	X, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:147
  font_info->bits_per_char_x = u8g2_font_get_byte(font, 6);
  font_info->bits_per_char_y = u8g2_font_get_byte(font, 7);
  font_info->bits_per_delta_x = u8g2_font_get_byte(font, 8);
  
  /* offset 9 */
  font_info->max_char_width = u8g2_font_get_byte(font, 9);
    734e:	19 97       	sbiw	r26, 0x09	; 9
u8g2_font_get_byte():
    7350:	fb 01       	movw	r30, r22
    7352:	3a 96       	adiw	r30, 0x0a	; 10
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    7354:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    7356:	1a 96       	adiw	r26, 0x0a	; 10
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:148
  font_info->bits_per_char_y = u8g2_font_get_byte(font, 7);
  font_info->bits_per_delta_x = u8g2_font_get_byte(font, 8);
  
  /* offset 9 */
  font_info->max_char_width = u8g2_font_get_byte(font, 9);
  font_info->max_char_height = u8g2_font_get_byte(font, 10);
    7358:	ec 93       	st	X, r30
    735a:	1a 97       	sbiw	r26, 0x0a	; 10
u8g2_font_get_byte():
    735c:	fb 01       	movw	r30, r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    735e:	3b 96       	adiw	r30, 0x0b	; 11
    7360:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:149
  font_info->bits_per_delta_x = u8g2_font_get_byte(font, 8);
  
  /* offset 9 */
  font_info->max_char_width = u8g2_font_get_byte(font, 9);
  font_info->max_char_height = u8g2_font_get_byte(font, 10);
  font_info->x_offset = u8g2_font_get_byte(font, 11);
    7362:	1b 96       	adiw	r26, 0x0b	; 11
    7364:	ec 93       	st	X, r30
    7366:	1b 97       	sbiw	r26, 0x0b	; 11
u8g2_font_get_byte():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    7368:	fb 01       	movw	r30, r22
    736a:	3c 96       	adiw	r30, 0x0c	; 12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    736c:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:150
  
  /* offset 9 */
  font_info->max_char_width = u8g2_font_get_byte(font, 9);
  font_info->max_char_height = u8g2_font_get_byte(font, 10);
  font_info->x_offset = u8g2_font_get_byte(font, 11);
  font_info->y_offset = u8g2_font_get_byte(font, 12);
    736e:	1c 96       	adiw	r26, 0x0c	; 12
    7370:	ec 93       	st	X, r30
    7372:	1c 97       	sbiw	r26, 0x0c	; 12
u8g2_font_get_byte():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    7374:	fb 01       	movw	r30, r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    7376:	3d 96       	adiw	r30, 0x0d	; 13
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:153
  font_info->max_char_height = u8g2_font_get_byte(font, 10);
  font_info->x_offset = u8g2_font_get_byte(font, 11);
  font_info->y_offset = u8g2_font_get_byte(font, 12);
  
  /* offset 13 */
  font_info->ascent_A = u8g2_font_get_byte(font, 13);
    7378:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
    737a:	1d 96       	adiw	r26, 0x0d	; 13
    737c:	ec 93       	st	X, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    737e:	1d 97       	sbiw	r26, 0x0d	; 13
u8g2_font_get_byte():
    7380:	fb 01       	movw	r30, r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    7382:	3e 96       	adiw	r30, 0x0e	; 14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:154
  font_info->x_offset = u8g2_font_get_byte(font, 11);
  font_info->y_offset = u8g2_font_get_byte(font, 12);
  
  /* offset 13 */
  font_info->ascent_A = u8g2_font_get_byte(font, 13);
  font_info->descent_g = u8g2_font_get_byte(font, 14);
    7384:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
    7386:	1e 96       	adiw	r26, 0x0e	; 14
    7388:	ec 93       	st	X, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    738a:	1e 97       	sbiw	r26, 0x0e	; 14
u8g2_font_get_byte():
    738c:	fb 01       	movw	r30, r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    738e:	3f 96       	adiw	r30, 0x0f	; 15
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:155
  font_info->y_offset = u8g2_font_get_byte(font, 12);
  
  /* offset 13 */
  font_info->ascent_A = u8g2_font_get_byte(font, 13);
  font_info->descent_g = u8g2_font_get_byte(font, 14);
  font_info->ascent_para = u8g2_font_get_byte(font, 15);
    7390:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
    7392:	1f 96       	adiw	r26, 0x0f	; 15
    7394:	ec 93       	st	X, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    7396:	1f 97       	sbiw	r26, 0x0f	; 15
u8g2_font_get_byte():
    7398:	fb 01       	movw	r30, r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    739a:	70 96       	adiw	r30, 0x10	; 16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:156
  
  /* offset 13 */
  font_info->ascent_A = u8g2_font_get_byte(font, 13);
  font_info->descent_g = u8g2_font_get_byte(font, 14);
  font_info->ascent_para = u8g2_font_get_byte(font, 15);
  font_info->descent_para = u8g2_font_get_byte(font, 16);
    739c:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
    739e:	50 96       	adiw	r26, 0x10	; 16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:159
  
  /* offset 17 */
  font_info->start_pos_upper_A = u8g2_font_get_word(font, 17);
    73a0:	ec 93       	st	X, r30
    73a2:	61 e1       	ldi	r22, 0x11	; 17
    73a4:	ce 01       	movw	r24, r28
    73a6:	79 df       	rcall	.-270    	; 0x729a <u8g2_font_get_word>
    73a8:	f8 01       	movw	r30, r16
    73aa:	81 8b       	std	Z+17, r24	; 0x11
    73ac:	92 8b       	std	Z+18, r25	; 0x12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:160
  font_info->start_pos_lower_a = u8g2_font_get_word(font, 19); 
    73ae:	63 e1       	ldi	r22, 0x13	; 19
    73b0:	ce 01       	movw	r24, r28
    73b2:	73 df       	rcall	.-282    	; 0x729a <u8g2_font_get_word>
    73b4:	d8 01       	movw	r26, r16
    73b6:	53 96       	adiw	r26, 0x13	; 19
    73b8:	8d 93       	st	X+, r24
    73ba:	9c 93       	st	X, r25
    73bc:	54 97       	sbiw	r26, 0x14	; 20
    73be:	65 e1       	ldi	r22, 0x15	; 21
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:164
  
  /* offset 21 */
#ifdef U8G2_WITH_UNICODE
  font_info->start_pos_unicode = u8g2_font_get_word(font, 21); 
    73c0:	ce 01       	movw	r24, r28
    73c2:	6b df       	rcall	.-298    	; 0x729a <u8g2_font_get_word>
    73c4:	f8 01       	movw	r30, r16
    73c6:	85 8b       	std	Z+21, r24	; 0x15
    73c8:	96 8b       	std	Z+22, r25	; 0x16
u8g2_SetFont():
    73ca:	c7 01       	movw	r24, r14
    73cc:	df 91       	pop	r29
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1289
//	u8g2->last_font_data = NULL;
//	u8g2->last_unicode = 0x0ffff;
//#endif 
    u8g2->font = font;
    u8g2_read_font_info(&(u8g2->font_info), font);
    u8g2_UpdateRefHeight(u8g2);
    73ce:	cf 91       	pop	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1292
    /* u8g2_SetFontPosBaseline(u8g2); */ /* removed with issue 195 */
  }
}
    73d0:	1f 91       	pop	r17
    73d2:	0f 91       	pop	r16
    73d4:	ff 90       	pop	r15
    73d6:	ef 90       	pop	r14
    73d8:	2c ce       	rjmp	.-936    	; 0x7032 <u8g2_UpdateRefHeight>
    73da:	df 91       	pop	r29
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1289
//	u8g2->last_font_data = NULL;
//	u8g2->last_unicode = 0x0ffff;
//#endif 
    u8g2->font = font;
    u8g2_read_font_info(&(u8g2->font_info), font);
    u8g2_UpdateRefHeight(u8g2);
    73dc:	cf 91       	pop	r28
    73de:	1f 91       	pop	r17
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1292
    /* u8g2_SetFontPosBaseline(u8g2); */ /* removed with issue 195 */
  }
}
    73e0:	0f 91       	pop	r16
    73e2:	ff 90       	pop	r15
    73e4:	ef 90       	pop	r14
    73e6:	08 95       	ret

000073e8 <u8g2_font_get_glyph_data>:
u8g2_font_get_glyph_data():
    73e8:	ef 92       	push	r14
    73ea:	ff 92       	push	r15
    73ec:	0f 93       	push	r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:783
    encoding: Encoding (ASCII or Unicode) of the glyph
  Return:
    Address of the glyph data or NULL, if the encoding is not avialable in the font.
*/
const uint8_t *u8g2_font_get_glyph_data(u8g2_t *u8g2, uint16_t encoding)
{
    73ee:	1f 93       	push	r17
    73f0:	cf 93       	push	r28
    73f2:	df 93       	push	r29
    73f4:	fc 01       	movw	r30, r24
    73f6:	e6 5a       	subi	r30, 0xA6	; 166
    73f8:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:784
  const uint8_t *font = u8g2->font;
    73fa:	20 81       	ld	r18, Z
    73fc:	31 81       	ldd	r19, Z+1	; 0x01
    73fe:	29 5e       	subi	r18, 0xE9	; 233
    7400:	3f 4f       	sbci	r19, 0xFF	; 255
    7402:	6f 3f       	cpi	r22, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:785
  font += U8G2_FONT_DATA_STRUCT_SIZE;
    7404:	71 05       	cpc	r23, r1
    7406:	09 f0       	breq	.+2      	; 0x740a <u8g2_font_get_glyph_data+0x22>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:788

  
  if ( encoding <= 255 )
    7408:	48 f5       	brcc	.+82     	; 0x745c <u8g2_font_get_glyph_data+0x74>
    740a:	61 36       	cpi	r22, 0x61	; 97
    740c:	71 05       	cpc	r23, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:790
  {
    if ( encoding >= 'a' )
    740e:	d8 f0       	brcs	.+54     	; 0x7446 <u8g2_font_get_glyph_data+0x5e>
    7410:	80 58       	subi	r24, 0x80	; 128
    7412:	9f 4f       	sbci	r25, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:792
    {
      font += u8g2->font_info.start_pos_lower_a;
    7414:	fc 01       	movw	r30, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:796
    }
    else if ( encoding >= 'A' )
    {
      font += u8g2->font_info.start_pos_upper_A;
    7416:	80 81       	ld	r24, Z
    7418:	91 81       	ldd	r25, Z+1	; 0x01
    741a:	28 0f       	add	r18, r24
    741c:	39 1f       	adc	r19, r25
    741e:	c9 01       	movw	r24, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:801
    }
    
    for(;;)
    {
      if ( u8x8_pgm_read( font + 1 ) == 0 )
    7420:	01 96       	adiw	r24, 0x01	; 1
    7422:	fc 01       	movw	r30, r24
    7424:	44 91       	lpm	r20, Z
    7426:	44 23       	and	r20, r20
    7428:	09 f4       	brne	.+2      	; 0x742c <u8g2_font_get_glyph_data+0x44>
    742a:	45 c0       	rjmp	.+138    	; 0x74b6 <u8g2_font_get_glyph_data+0xce>
    742c:	f9 01       	movw	r30, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:803
	break;
      if ( u8x8_pgm_read( font ) == encoding )
    742e:	44 91       	lpm	r20, Z
    7430:	46 17       	cp	r20, r22
    7432:	17 06       	cpc	r1, r23
    7434:	71 f4       	brne	.+28     	; 0x7452 <u8g2_font_get_glyph_data+0x6a>
    7436:	01 96       	adiw	r24, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:805
      {
	return font+2;	/* skip encoding and glyph size */
    7438:	df 91       	pop	r29
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:867
    }  
  }
#endif
  
  return NULL;
}
    743a:	cf 91       	pop	r28
    743c:	1f 91       	pop	r17
    743e:	0f 91       	pop	r16
    7440:	ff 90       	pop	r15
    7442:	ef 90       	pop	r14
    7444:	08 95       	ret
    7446:	61 34       	cpi	r22, 0x41	; 65
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:794
  {
    if ( encoding >= 'a' )
    {
      font += u8g2->font_info.start_pos_lower_a;
    }
    else if ( encoding >= 'A' )
    7448:	71 05       	cpc	r23, r1
    744a:	48 f3       	brcs	.-46     	; 0x741e <u8g2_font_get_glyph_data+0x36>
    744c:	82 58       	subi	r24, 0x82	; 130
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:796
    {
      font += u8g2->font_info.start_pos_upper_A;
    744e:	9f 4f       	sbci	r25, 0xFF	; 255
    7450:	e1 cf       	rjmp	.-62     	; 0x7414 <u8g2_font_get_glyph_data+0x2c>
    7452:	fc 01       	movw	r30, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:807
	break;
      if ( u8x8_pgm_read( font ) == encoding )
      {
	return font+2;	/* skip encoding and glyph size */
      }
      font += u8x8_pgm_read( font + 1 );
    7454:	84 91       	lpm	r24, Z
    7456:	28 0f       	add	r18, r24
    7458:	31 1d       	adc	r19, r1
    745a:	e1 cf       	rjmp	.-62     	; 0x741e <u8g2_font_get_glyph_data+0x36>
    745c:	8b 01       	movw	r16, r22
    745e:	fc 01       	movw	r30, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:825
//	font = u8g2->last_font_data;
//    }
//    else
//#endif 

    font += u8g2->font_info.start_pos_unicode;
    7460:	ee 57       	subi	r30, 0x7E	; 126
    7462:	ff 4f       	sbci	r31, 0xFF	; 255
    7464:	c0 81       	ld	r28, Z
    7466:	d1 81       	ldd	r29, Z+1	; 0x01
    7468:	c2 0f       	add	r28, r18
    746a:	d3 1f       	adc	r29, r19
    746c:	7e 01       	movw	r14, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:826
    unicode_lookup_table = font; 
    746e:	60 e0       	ldi	r22, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:831
  
    /* issue 596: search for the glyph start in the unicode lookup table */
    do
    {
      font += u8g2_font_get_word(unicode_lookup_table, 0);
    7470:	c7 01       	movw	r24, r14
    7472:	13 df       	rcall	.-474    	; 0x729a <u8g2_font_get_word>
    7474:	c8 0f       	add	r28, r24
    7476:	d9 1f       	adc	r29, r25
    7478:	62 e0       	ldi	r22, 0x02	; 2
    747a:	c7 01       	movw	r24, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:832
      e = u8g2_font_get_word(unicode_lookup_table, 2);
    747c:	0e df       	rcall	.-484    	; 0x729a <u8g2_font_get_word>
    747e:	f4 e0       	ldi	r31, 0x04	; 4
    7480:	ef 0e       	add	r14, r31
    7482:	f1 1c       	adc	r15, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:833
      unicode_lookup_table+=4;
    7484:	80 17       	cp	r24, r16
    7486:	91 07       	cpc	r25, r17
    7488:	90 f3       	brcs	.-28     	; 0x746e <u8g2_font_get_glyph_data+0x86>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:834
    } while( e < encoding );
    748a:	fe 01       	movw	r30, r28
    748c:	84 91       	lpm	r24, Z
    748e:	90 e0       	ldi	r25, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:839
    
  
    for(;;)
    {
      e = u8x8_pgm_read( font );
    7490:	98 2f       	mov	r25, r24
    7492:	88 27       	eor	r24, r24
    7494:	31 96       	adiw	r30, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:840
      e <<= 8;
    7496:	e4 91       	lpm	r30, Z
    7498:	8e 2b       	or	r24, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:841
      e |= u8x8_pgm_read( font + 1 );
    749a:	00 97       	sbiw	r24, 0x00	; 0
    749c:	61 f0       	breq	.+24     	; 0x74b6 <u8g2_font_get_glyph_data+0xce>
    749e:	08 17       	cp	r16, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:849
//#ifdef  __unix__
//      if ( encoding < e )
//        break;
//#endif 

      if ( e == 0 )
    74a0:	19 07       	cpc	r17, r25
    74a2:	19 f4       	brne	.+6      	; 0x74aa <u8g2_font_get_glyph_data+0xc2>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:852
	break;
  
      if ( e == encoding )
    74a4:	ce 01       	movw	r24, r28
    74a6:	03 96       	adiw	r24, 0x03	; 3
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:859
// removed, there is now the new index table
//#ifdef  __unix__
//	u8g2->last_font_data = font;
//	u8g2->last_unicode = encoding;
//#endif 
	return font+3;	/* skip encoding and glyph size */
    74a8:	c7 cf       	rjmp	.-114    	; 0x7438 <u8g2_font_get_glyph_data+0x50>
    74aa:	fe 01       	movw	r30, r28
    74ac:	32 96       	adiw	r30, 0x02	; 2
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:861
      }
      font += u8x8_pgm_read( font + 2 );
    74ae:	e4 91       	lpm	r30, Z
    74b0:	ce 0f       	add	r28, r30
    74b2:	d1 1d       	adc	r29, r1
    74b4:	ea cf       	rjmp	.-44     	; 0x748a <u8g2_font_get_glyph_data+0xa2>
    74b6:	90 e0       	ldi	r25, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:866
    }  
  }
#endif
  
  return NULL;
    74b8:	80 e0       	ldi	r24, 0x00	; 0
    74ba:	be cf       	rjmp	.-132    	; 0x7438 <u8g2_font_get_glyph_data+0x50>

000074bc <u8g2_string_width.constprop.103>:
u8g2_string_width.constprop.103():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1325
}


/* string calculation is stilll not 100% perfect as it addes the initial string offset to the overall size */
static u8g2_uint_t u8g2_string_width(u8g2_t *u8g2, const char *str) U8G2_NOINLINE;
static u8g2_uint_t u8g2_string_width(u8g2_t *u8g2, const char *str)
    74bc:	cf 92       	push	r12
    74be:	df 92       	push	r13
    74c0:	ff 92       	push	r15
    74c2:	0f 93       	push	r16
    74c4:	1f 93       	push	r17
    74c6:	cf 93       	push	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1333
  u8g2_uint_t  w, dx;
#ifdef U8G2_BALANCED_STR_WIDTH_CALCULATION
  int8_t initial_x_offset = -64;
#endif 
  
  u8g2->font_decode.glyph_width = 0;
    74c8:	df 93       	push	r29
    74ca:	10 92 0d 52 	sts	0x520D, r1	; 0x80520d <u8g2+0x6a>
u8x8_utf8_init():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:287
*/

/* reset the internal state machine */
void u8x8_utf8_init(u8x8_t *u8x8)
{
  u8x8->utf8_state = 0;	/* also reset during u8x8_SetupDefaults() */
    74ce:	10 92 bf 51 	sts	0x51BF, r1	; 0x8051bf <u8g2+0x1c>
    74d2:	87 e6       	ldi	r24, 0x67	; 103
    74d4:	c8 2e       	mov	r12, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1330
static u8g2_uint_t u8g2_string_width(u8g2_t *u8g2, const char *str)
{
  uint16_t e;
  u8g2_uint_t  w, dx;
#ifdef U8G2_BALANCED_STR_WIDTH_CALCULATION
  int8_t initial_x_offset = -64;
    74d6:	83 e4       	ldi	r24, 0x43	; 67
    74d8:	d8 2e       	mov	r13, r24
u8g2_string_width.constprop.103():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1338
  u8g2->font_decode.glyph_width = 0;
  u8x8_utf8_init(u8g2_GetU8x8(u8g2));
  
  /* reset the total width to zero, this will be expanded during calculation */
  w = 0;
  dx = 0;
    74da:	90 ec       	ldi	r25, 0xC0	; 192
    74dc:	f9 2e       	mov	r15, r25
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1337
  
  u8g2->font_decode.glyph_width = 0;
  u8x8_utf8_init(u8g2_GetU8x8(u8g2));
  
  /* reset the total width to zero, this will be expanded during calculation */
  w = 0;
    74de:	10 e0       	ldi	r17, 0x00	; 0
    74e0:	00 e0       	ldi	r16, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1344

  // printf("str=<%s>\n", str);
	
  for(;;)
  {
    e = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
    74e2:	d0 e0       	ldi	r29, 0x00	; 0
    74e4:	c0 e0       	ldi	r28, 0x00	; 0
    74e6:	f6 01       	movw	r30, r12
    74e8:	61 91       	ld	r22, Z+
    74ea:	6f 01       	movw	r12, r30
    74ec:	e0 91 a9 51 	lds	r30, 0x51A9	; 0x8051a9 <u8g2+0x6>
    74f0:	f0 91 aa 51 	lds	r31, 0x51AA	; 0x8051aa <u8g2+0x7>
    74f4:	87 ea       	ldi	r24, 0xA7	; 167
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1345
    if ( e == 0x0ffff )
    74f6:	91 e5       	ldi	r25, 0x51	; 81
    74f8:	09 95       	icall
    74fa:	8f 3f       	cpi	r24, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1348
      break;
    str++;
    if ( e != 0x0fffe )
    74fc:	98 07       	cpc	r25, r24
    74fe:	61 f1       	breq	.+88     	; 0x7558 <u8g2_string_width.constprop.103+0x9c>
    7500:	8e 3f       	cpi	r24, 0xFE	; 254
    7502:	2f ef       	ldi	r18, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:910
}

/* side effect: updates u8g2->font_decode and u8g2->glyph_x_offset */
int8_t u8g2_GetGlyphWidth(u8g2_t *u8g2, uint16_t requested_encoding)
{
  const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, requested_encoding);
    7504:	92 07       	cpc	r25, r18
    7506:	79 f3       	breq	.-34     	; 0x74e6 <u8g2_string_width.constprop.103+0x2a>
u8g2_GetGlyphWidth():
    7508:	bc 01       	movw	r22, r24
    750a:	87 ea       	ldi	r24, 0xA7	; 167
    750c:	91 e5       	ldi	r25, 0x51	; 81
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:911
  if ( glyph_data == NULL )
    750e:	6c df       	rcall	.-296    	; 0x73e8 <u8g2_font_get_glyph_data>
    7510:	00 97       	sbiw	r24, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:914
    return 0; 
  
  u8g2_font_setup_decode(u8g2, glyph_data);
    7512:	01 f1       	breq	.+64     	; 0x7554 <u8g2_string_width.constprop.103+0x98>
    7514:	bc 01       	movw	r22, r24
    7516:	87 ea       	ldi	r24, 0xA7	; 167
    7518:	91 e5       	ldi	r25, 0x51	; 81
    751a:	8b de       	rcall	.-746    	; 0x7232 <u8g2_font_setup_decode>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:915
  u8g2->glyph_x_offset = u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_char_x);
    751c:	60 91 1a 52 	lds	r22, 0x521A	; 0x80521a <u8g2+0x77>
    7520:	85 e0       	ldi	r24, 0x05	; 5
    7522:	92 e5       	ldi	r25, 0x52	; 82
    7524:	ad de       	rcall	.-678    	; 0x7280 <u8g2_font_decode_get_signed_bits>
    7526:	80 93 2f 52 	sts	0x522F, r24	; 0x80522f <u8g2+0x8c>
    752a:	60 91 1b 52 	lds	r22, 0x521B	; 0x80521b <u8g2+0x78>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:916
  u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_char_y);
    752e:	85 e0       	ldi	r24, 0x05	; 5
    7530:	92 e5       	ldi	r25, 0x52	; 82
    7532:	a6 de       	rcall	.-692    	; 0x7280 <u8g2_font_decode_get_signed_bits>
    7534:	60 91 1c 52 	lds	r22, 0x521C	; 0x80521c <u8g2+0x79>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:920
  
  /* glyph width is here: u8g2->font_decode.glyph_width */

  return u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_delta_x);
    7538:	85 e0       	ldi	r24, 0x05	; 5
    753a:	92 e5       	ldi	r25, 0x52	; 82
    753c:	a1 de       	rcall	.-702    	; 0x7280 <u8g2_font_decode_get_signed_bits>
u8g2_string_width.constprop.103():
    753e:	08 2f       	mov	r16, r24
    7540:	88 0f       	add	r24, r24
    7542:	11 0b       	sbc	r17, r17
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1350
    if ( e == 0x0ffff )
      break;
    str++;
    if ( e != 0x0fffe )
    {
      dx = u8g2_GetGlyphWidth(u8g2, e);		/* delta x value of the glyph */
    7544:	80 ec       	ldi	r24, 0xC0	; 192
    7546:	f8 12       	cpse	r15, r24
    7548:	02 c0       	rjmp	.+4      	; 0x754e <u8g2_string_width.constprop.103+0x92>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1352
#ifdef U8G2_BALANCED_STR_WIDTH_CALCULATION
      if ( initial_x_offset == -64 )
    754a:	f0 90 2f 52 	lds	r15, 0x522F	; 0x80522f <u8g2+0x8c>
    754e:	c0 0f       	add	r28, r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1353
        initial_x_offset = u8g2->glyph_x_offset;
    7550:	d1 1f       	adc	r29, r17
    7552:	c9 cf       	rjmp	.-110    	; 0x74e6 <u8g2_string_width.constprop.103+0x2a>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1356
#endif 
      //printf("'%c' x=%d dx=%d w=%d io=%d ", e, u8g2->glyph_x_offset, dx, u8g2->font_decode.glyph_width, initial_x_offset);
      w += dx;
    7554:	80 e0       	ldi	r24, 0x00	; 0
    7556:	f3 cf       	rjmp	.-26     	; 0x753e <u8g2_string_width.constprop.103+0x82>
    7558:	20 91 0d 52 	lds	r18, 0x520D	; 0x80520d <u8g2+0x6a>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:912
/* side effect: updates u8g2->font_decode and u8g2->glyph_x_offset */
int8_t u8g2_GetGlyphWidth(u8g2_t *u8g2, uint16_t requested_encoding)
{
  const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, requested_encoding);
  if ( glyph_data == NULL )
    return 0; 
    755c:	22 23       	and	r18, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1362
    }
  }
  //printf("\n");
  
  /* adjust the last glyph, check for issue #16: do not adjust if width is 0 */
  if ( u8g2->font_decode.glyph_width != 0 )
    755e:	99 f0       	breq	.+38     	; 0x7586 <u8g2_string_width.constprop.103+0xca>
    7560:	80 91 2f 52 	lds	r24, 0x522F	; 0x80522f <u8g2+0x8c>
    7564:	02 2e       	mov	r0, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1368
  {
    //printf("string width adjust dx=%d glyph_width=%d x-offset=%d\n", dx, u8g2->font_decode.glyph_width, u8g2->glyph_x_offset);
    w -= dx;
    w += u8g2->font_decode.glyph_width;  /* the real pixel width of the glyph, sideeffect of GetGlyphWidth */
    /* issue #46: we have to add the x offset also */
    w += u8g2->glyph_x_offset;	/* this value is set as a side effect of u8g2_GetGlyphWidth() */
    7566:	00 0c       	add	r0, r0
    7568:	33 0b       	sbc	r19, r19
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1366
  /* adjust the last glyph, check for issue #16: do not adjust if width is 0 */
  if ( u8g2->font_decode.glyph_width != 0 )
  {
    //printf("string width adjust dx=%d glyph_width=%d x-offset=%d\n", dx, u8g2->font_decode.glyph_width, u8g2->glyph_x_offset);
    w -= dx;
    w += u8g2->font_decode.glyph_width;  /* the real pixel width of the glyph, sideeffect of GetGlyphWidth */
    756a:	28 0f       	add	r18, r24
    756c:	31 1d       	adc	r19, r1
    756e:	87 fd       	sbrc	r24, 7
    7570:	3a 95       	dec	r19
    7572:	c2 0f       	add	r28, r18
    7574:	d3 1f       	adc	r29, r19
    7576:	c0 1b       	sub	r28, r16
    7578:	d1 0b       	sbc	r29, r17
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1368
    /* issue #46: we have to add the x offset also */
    w += u8g2->glyph_x_offset;	/* this value is set as a side effect of u8g2_GetGlyphWidth() */
    757a:	1f 14       	cp	r1, r15
    757c:	24 f4       	brge	.+8      	; 0x7586 <u8g2_string_width.constprop.103+0xca>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1371
#ifdef U8G2_BALANCED_STR_WIDTH_CALCULATION
    /* https://github.com/olikraus/u8g2/issues/1561 */
    if ( initial_x_offset > 0 )
    757e:	cf 0d       	add	r28, r15
    7580:	d1 1d       	adc	r29, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1372
      w+=initial_x_offset;
    7582:	f7 fc       	sbrc	r15, 7
    7584:	da 95       	dec	r29
    7586:	ce 01       	movw	r24, r28
    7588:	df 91       	pop	r29
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1378
#endif 
  }
  // printf("w=%d \n", w);
  
  return w;  
}
    758a:	cf 91       	pop	r28
    758c:	1f 91       	pop	r17
    758e:	0f 91       	pop	r16
    7590:	ff 90       	pop	r15
    7592:	df 90       	pop	r13
    7594:	cf 90       	pop	r12
    7596:	08 95       	ret

00007598 <u8g2_DrawGlyph>:
u8g2_DrawGlyph():
    7598:	8f 92       	push	r8
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:937
{
  u8g2->font_decode.is_transparent = is_transparent;		// new font procedures
}

u8g2_uint_t u8g2_DrawGlyph(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint16_t encoding)
{
    759a:	9f 92       	push	r9
    759c:	af 92       	push	r10
    759e:	bf 92       	push	r11
    75a0:	cf 92       	push	r12
    75a2:	df 92       	push	r13
    75a4:	ef 92       	push	r14
    75a6:	ff 92       	push	r15
    75a8:	0f 93       	push	r16
    75aa:	1f 93       	push	r17
    75ac:	cf 93       	push	r28
    75ae:	df 93       	push	r29
    75b0:	ec 01       	movw	r28, r24
    75b2:	7b 01       	movw	r14, r22
    75b4:	8a 01       	movw	r16, r20
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:939
#ifdef U8G2_WITH_FONT_ROTATION
  switch(u8g2->font_decode.dir)
    75b6:	69 01       	movw	r12, r18
    75b8:	fc 01       	movw	r30, r24
    75ba:	e4 59       	subi	r30, 0x94	; 148
    75bc:	ff 4f       	sbci	r31, 0xFF	; 255
    75be:	80 81       	ld	r24, Z
    75c0:	81 30       	cpi	r24, 0x01	; 1
    75c2:	09 f4       	brne	.+2      	; 0x75c6 <u8g2_DrawGlyph+0x2e>
    75c4:	68 c0       	rjmp	.+208    	; 0x7696 <u8g2_DrawGlyph+0xfe>
    75c6:	08 f4       	brcc	.+2      	; 0x75ca <u8g2_DrawGlyph+0x32>
    75c8:	5b c0       	rjmp	.+182    	; 0x7680 <u8g2_DrawGlyph+0xe8>
    75ca:	82 30       	cpi	r24, 0x02	; 2
    75cc:	09 f4       	brne	.+2      	; 0x75d0 <u8g2_DrawGlyph+0x38>
    75ce:	6e c0       	rjmp	.+220    	; 0x76ac <u8g2_DrawGlyph+0x114>
    75d0:	83 30       	cpi	r24, 0x03	; 3
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:872
}

static u8g2_uint_t u8g2_font_draw_glyph(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint16_t encoding)
{
  u8g2_uint_t dx = 0;
  u8g2->font_decode.target_x = x;
    75d2:	09 f4       	brne	.+2      	; 0x75d6 <u8g2_DrawGlyph+0x3e>
    75d4:	76 c0       	rjmp	.+236    	; 0x76c2 <u8g2_DrawGlyph+0x12a>
u8g2_font_draw_glyph():
    75d6:	fe 01       	movw	r30, r28
    75d8:	e0 5a       	subi	r30, 0xA0	; 160
    75da:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:873
  u8g2->font_decode.target_y = y;
    75dc:	e0 82       	st	Z, r14
    75de:	f1 82       	std	Z+1, r15	; 0x01
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:876
  //u8g2->font_decode.is_transparent = is_transparent; this is already set
  //u8g2->font_decode.dir = dir;
  const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, encoding);
    75e0:	32 96       	adiw	r30, 0x02	; 2
    75e2:	00 83       	st	Z, r16
    75e4:	11 83       	std	Z+1, r17	; 0x01
    75e6:	b6 01       	movw	r22, r12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:877
  if ( glyph_data != NULL )
    75e8:	ce 01       	movw	r24, r28
    75ea:	fe de       	rcall	.-516    	; 0x73e8 <u8g2_font_get_glyph_data>
    75ec:	00 97       	sbiw	r24, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:618
{
  uint8_t a, b;
  int8_t x, y;
  int8_t d;
  int8_t h;
  u8g2_font_decode_t *decode = &(u8g2->font_decode);
    75ee:	09 f4       	brne	.+2      	; 0x75f2 <u8g2_DrawGlyph+0x5a>
    75f0:	f3 c0       	rjmp	.+486    	; 0x77d8 <u8g2_DrawGlyph+0x240>
u8g2_font_decode_glyph():
    75f2:	7e 01       	movw	r14, r28
    75f4:	2e e5       	ldi	r18, 0x5E	; 94
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:620
    
  u8g2_font_setup_decode(u8g2, glyph_data);     /* set values in u8g2->font_decode data structure */
    75f6:	e2 0e       	add	r14, r18
    75f8:	f1 1c       	adc	r15, r1
    75fa:	bc 01       	movw	r22, r24
    75fc:	ce 01       	movw	r24, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:621
  h = u8g2->font_decode.glyph_height;
    75fe:	19 de       	rcall	.-974    	; 0x7232 <u8g2_font_setup_decode>
    7600:	fe 01       	movw	r30, r28
    7602:	e9 59       	subi	r30, 0x99	; 153
    7604:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:623
  
  x = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_x);
    7606:	b0 80       	ld	r11, Z
    7608:	3c 96       	adiw	r30, 0x0c	; 12
    760a:	60 81       	ld	r22, Z
    760c:	c7 01       	movw	r24, r14
    760e:	38 de       	rcall	.-912    	; 0x7280 <u8g2_font_decode_get_signed_bits>
    7610:	88 2e       	mov	r8, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:624
  y = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_y);
    7612:	fe 01       	movw	r30, r28
    7614:	ec 58       	subi	r30, 0x8C	; 140
    7616:	ff 4f       	sbci	r31, 0xFF	; 255
    7618:	60 81       	ld	r22, Z
    761a:	c7 01       	movw	r24, r14
    761c:	31 de       	rcall	.-926    	; 0x7280 <u8g2_font_decode_get_signed_bits>
    761e:	08 2f       	mov	r16, r24
    7620:	fe 01       	movw	r30, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:625
  d = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_delta_x);
    7622:	eb 58       	subi	r30, 0x8B	; 139
    7624:	ff 4f       	sbci	r31, 0xFF	; 255
    7626:	60 81       	ld	r22, Z
    7628:	c7 01       	movw	r24, r14
    762a:	2a de       	rcall	.-940    	; 0x7280 <u8g2_font_decode_get_signed_bits>
    762c:	a8 2e       	mov	r10, r24
    762e:	f7 01       	movw	r30, r14
    7630:	90 84       	ldd	r9, Z+8	; 0x08
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:627
  
  if ( decode->glyph_width > 0 )
    7632:	19 14       	cp	r1, r9
    7634:	0c f0       	brlt	.+2      	; 0x7638 <u8g2_DrawGlyph+0xa0>
    7636:	88 c0       	rjmp	.+272    	; 0x7748 <u8g2_DrawGlyph+0x1b0>
    7638:	16 85       	ldd	r17, Z+14	; 0x0e
    763a:	0b 0d       	add	r16, r11
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:630
  {
#ifdef U8G2_WITH_FONT_ROTATION
    decode->target_x = u8g2_add_vector_x(decode->target_x, x, -(h+y), decode->dir);
    763c:	01 95       	neg	r16
    763e:	21 2f       	mov	r18, r17
    7640:	40 2f       	mov	r20, r16
    7642:	68 2d       	mov	r22, r8
    7644:	82 81       	ldd	r24, Z+2	; 0x02
    7646:	93 81       	ldd	r25, Z+3	; 0x03
    7648:	3a dd       	rcall	.-1420   	; 0x70be <u8g2_add_vector_x>
    764a:	6c 01       	movw	r12, r24
    764c:	f7 01       	movw	r30, r14
    764e:	82 83       	std	Z+2, r24	; 0x02
    7650:	93 83       	std	Z+3, r25	; 0x03
    7652:	21 2f       	mov	r18, r17
    7654:	40 2f       	mov	r20, r16
    7656:	68 2d       	mov	r22, r8
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:631
    decode->target_y = u8g2_add_vector_y(decode->target_y, x, -(h+y), decode->dir);
    7658:	84 81       	ldd	r24, Z+4	; 0x04
    765a:	95 81       	ldd	r25, Z+5	; 0x05
    765c:	49 dd       	rcall	.-1390   	; 0x70f0 <u8g2_add_vector_y>
    765e:	ac 01       	movw	r20, r24
    7660:	f7 01       	movw	r30, r14
    7662:	84 83       	std	Z+4, r24	; 0x04
    7664:	95 83       	std	Z+5, r25	; 0x05
    7666:	11 30       	cpi	r17, 0x01	; 1
    7668:	09 f4       	brne	.+2      	; 0x766c <u8g2_DrawGlyph+0xd4>
    766a:	7e c0       	rjmp	.+252    	; 0x7768 <u8g2_DrawGlyph+0x1d0>
    766c:	a8 f1       	brcs	.+106    	; 0x76d8 <u8g2_DrawGlyph+0x140>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:650
      y0 = decode->target_y;
      x1 = x0;
      y1 = y0;
      
#ifdef U8G2_WITH_FONT_ROTATION
      switch(decode->dir)
    766e:	12 30       	cpi	r17, 0x02	; 2
    7670:	09 f4       	brne	.+2      	; 0x7674 <u8g2_DrawGlyph+0xdc>
    7672:	8b c0       	rjmp	.+278    	; 0x778a <u8g2_DrawGlyph+0x1f2>
    7674:	13 30       	cpi	r17, 0x03	; 3
    7676:	09 f4       	brne	.+2      	; 0x767a <u8g2_DrawGlyph+0xe2>
    7678:	9e c0       	rjmp	.+316    	; 0x77b6 <u8g2_DrawGlyph+0x21e>
u8g2_DrawGlyph():
    767a:	8c 01       	movw	r16, r24
    767c:	96 01       	movw	r18, r12
    767e:	36 c0       	rjmp	.+108    	; 0x76ec <u8g2_DrawGlyph+0x154>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:647
    {
      u8g2_uint_t x0, x1, y0, y1;
      x0 = decode->target_x;
      y0 = decode->target_y;
      x1 = x0;
      y1 = y0;
    7680:	fe 01       	movw	r30, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:646
#ifdef U8G2_WITH_INTERSECTION
    {
      u8g2_uint_t x0, x1, y0, y1;
      x0 = decode->target_x;
      y0 = decode->target_y;
      x1 = x0;
    7682:	e4 5a       	subi	r30, 0xA4	; 164
    7684:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:942
{
#ifdef U8G2_WITH_FONT_ROTATION
  switch(u8g2->font_decode.dir)
  {
    case 0:
      y += u8g2->font_calc_vref(u8g2);
    7686:	01 90       	ld	r0, Z+
    7688:	f0 81       	ld	r31, Z
    768a:	e0 2d       	mov	r30, r0
    768c:	ce 01       	movw	r24, r28
    768e:	09 95       	icall
    7690:	08 0f       	add	r16, r24
    7692:	19 1f       	adc	r17, r25
    7694:	a0 cf       	rjmp	.-192    	; 0x75d6 <u8g2_DrawGlyph+0x3e>
    7696:	fe 01       	movw	r30, r28
    7698:	e4 5a       	subi	r30, 0xA4	; 164
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:945
      break;
    case 1:
      x -= u8g2->font_calc_vref(u8g2);
    769a:	ff 4f       	sbci	r31, 0xFF	; 255
    769c:	01 90       	ld	r0, Z+
    769e:	f0 81       	ld	r31, Z
    76a0:	e0 2d       	mov	r30, r0
    76a2:	ce 01       	movw	r24, r28
    76a4:	09 95       	icall
    76a6:	e8 1a       	sub	r14, r24
    76a8:	f9 0a       	sbc	r15, r25
    76aa:	95 cf       	rjmp	.-214    	; 0x75d6 <u8g2_DrawGlyph+0x3e>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:948
      break;
    case 2:
      y -= u8g2->font_calc_vref(u8g2);
    76ac:	fe 01       	movw	r30, r28
    76ae:	e4 5a       	subi	r30, 0xA4	; 164
    76b0:	ff 4f       	sbci	r31, 0xFF	; 255
    76b2:	01 90       	ld	r0, Z+
    76b4:	f0 81       	ld	r31, Z
    76b6:	e0 2d       	mov	r30, r0
    76b8:	ce 01       	movw	r24, r28
    76ba:	09 95       	icall
    76bc:	08 1b       	sub	r16, r24
    76be:	19 0b       	sbc	r17, r25
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:951
      break;
    case 3:
      x += u8g2->font_calc_vref(u8g2);
    76c0:	8a cf       	rjmp	.-236    	; 0x75d6 <u8g2_DrawGlyph+0x3e>
    76c2:	fe 01       	movw	r30, r28
    76c4:	e4 5a       	subi	r30, 0xA4	; 164
    76c6:	ff 4f       	sbci	r31, 0xFF	; 255
    76c8:	01 90       	ld	r0, Z+
    76ca:	f0 81       	ld	r31, Z
    76cc:	e0 2d       	mov	r30, r0
    76ce:	ce 01       	movw	r24, r28
    76d0:	09 95       	icall
    76d2:	e8 0e       	add	r14, r24
    76d4:	f9 1e       	adc	r15, r25
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:653
      
#ifdef U8G2_WITH_FONT_ROTATION
      switch(decode->dir)
      {
	case 0:
	    x1 += decode->glyph_width;
    76d6:	7f cf       	rjmp	.-258    	; 0x75d6 <u8g2_DrawGlyph+0x3e>
u8g2_font_decode_glyph():
    76d8:	96 01       	movw	r18, r12
    76da:	29 0d       	add	r18, r9
    76dc:	31 1d       	adc	r19, r1
    76de:	97 fc       	sbrc	r9, 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:654
	    y1 += h;
    76e0:	3a 95       	dec	r19
    76e2:	8c 01       	movw	r16, r24
    76e4:	0b 0d       	add	r16, r11
    76e6:	11 1d       	adc	r17, r1
    76e8:	b7 fc       	sbrc	r11, 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:682
#else /* U8G2_WITH_FONT_ROTATION */
      x1 += decode->glyph_width;
      y1 += h;      
#endif
      
      if ( u8g2_IsIntersection(u8g2, x0, y0, x1, y1) == 0 ) 
    76ea:	1a 95       	dec	r17
    76ec:	b6 01       	movw	r22, r12
    76ee:	ce 01       	movw	r24, r28
    76f0:	35 da       	rcall	.-2966   	; 0x6b5c <u8g2_IsIntersection>
    76f2:	88 23       	and	r24, r24
    76f4:	49 f1       	breq	.+82     	; 0x7748 <u8g2_DrawGlyph+0x1b0>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:688
	return d;
    }
#endif /* U8G2_WITH_INTERSECTION */
   
    /* reset local x/y position */
    decode->x = 0;
    76f6:	f7 01       	movw	r30, r14
    76f8:	16 82       	std	Z+6, r1	; 0x06
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:689
    decode->y = 0;
    76fa:	17 82       	std	Z+7, r1	; 0x07
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:694
    
    /* decode glyph */
    for(;;)
    {
      a = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_0);
    76fc:	8e 01       	movw	r16, r28
    76fe:	01 59       	subi	r16, 0x91	; 145
    7700:	1f 4f       	sbci	r17, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:695
      b = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_1);
    7702:	6e 01       	movw	r12, r28
    7704:	f0 e7       	ldi	r31, 0x70	; 112
    7706:	cf 0e       	add	r12, r31
    7708:	d1 1c       	adc	r13, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:694
    decode->y = 0;
    
    /* decode glyph */
    for(;;)
    {
      a = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_0);
    770a:	f8 01       	movw	r30, r16
    770c:	60 81       	ld	r22, Z
    770e:	c7 01       	movw	r24, r14
    7710:	65 dd       	rcall	.-1334   	; 0x71dc <u8g2_font_decode_get_unsigned_bits>
    7712:	88 2e       	mov	r8, r24
    7714:	f6 01       	movw	r30, r12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:695
      b = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_1);
    7716:	60 81       	ld	r22, Z
    7718:	c7 01       	movw	r24, r14
    771a:	60 dd       	rcall	.-1344   	; 0x71dc <u8g2_font_decode_get_unsigned_bits>
    771c:	98 2e       	mov	r9, r24
    771e:	40 e0       	ldi	r20, 0x00	; 0
    7720:	68 2d       	mov	r22, r8
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:698
      do
      {
	u8g2_font_decode_len(u8g2, a, 0);
    7722:	ce 01       	movw	r24, r28
    7724:	fe dc       	rcall	.-1540   	; 0x7122 <u8g2_font_decode_len>
    7726:	41 e0       	ldi	r20, 0x01	; 1
    7728:	69 2d       	mov	r22, r9
    772a:	ce 01       	movw	r24, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:699
	u8g2_font_decode_len(u8g2, b, 1);
    772c:	fa dc       	rcall	.-1548   	; 0x7122 <u8g2_font_decode_len>
    772e:	61 e0       	ldi	r22, 0x01	; 1
    7730:	c7 01       	movw	r24, r14
    7732:	54 dd       	rcall	.-1368   	; 0x71dc <u8g2_font_decode_get_unsigned_bits>
    7734:	81 11       	cpse	r24, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:700
      } while( u8g2_font_decode_get_unsigned_bits(decode, 1) != 0 );
    7736:	f3 cf       	rjmp	.-26     	; 0x771e <u8g2_DrawGlyph+0x186>
    7738:	f7 01       	movw	r30, r14
    773a:	87 81       	ldd	r24, Z+7	; 0x07
    773c:	8b 15       	cp	r24, r11
    773e:	2c f3       	brlt	.-54     	; 0x770a <u8g2_DrawGlyph+0x172>
    7740:	c6 57       	subi	r28, 0x76	; 118
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:702

      if ( decode->y >= h )
    7742:	df 4f       	sbci	r29, 0xFF	; 255
    7744:	84 85       	ldd	r24, Z+12	; 0x0c
    7746:	88 83       	st	Y, r24
u8g2_font_draw_glyph():
    7748:	8a 2d       	mov	r24, r10
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:707
	break;
    }
    
    /* restore the u8g2 draw color, because this is modified by the decode algo */
    u8g2->draw_color = decode->fg_color;
    774a:	aa 0c       	add	r10, r10
    774c:	99 0b       	sbc	r25, r25
u8g2_DrawGlyph():
    774e:	df 91       	pop	r29
    7750:	cf 91       	pop	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:879
  //u8g2->font_decode.is_transparent = is_transparent; this is already set
  //u8g2->font_decode.dir = dir;
  const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, encoding);
  if ( glyph_data != NULL )
  {
    dx = u8g2_font_decode_glyph(u8g2, glyph_data);
    7752:	1f 91       	pop	r17
    7754:	0f 91       	pop	r16
    7756:	ff 90       	pop	r15
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:958
  }
#else
  y += u8g2->font_calc_vref(u8g2);
#endif
  return u8g2_font_draw_glyph(u8g2, x, y, encoding);
}
    7758:	ef 90       	pop	r14
    775a:	df 90       	pop	r13
    775c:	cf 90       	pop	r12
    775e:	bf 90       	pop	r11
    7760:	af 90       	pop	r10
    7762:	9f 90       	pop	r9
    7764:	8f 90       	pop	r8
    7766:	08 95       	ret
u8g2_font_decode_glyph():
    7768:	81 e0       	ldi	r24, 0x01	; 1
    776a:	90 e0       	ldi	r25, 0x00	; 0
    776c:	8b 19       	sub	r24, r11
    776e:	91 09       	sbc	r25, r1
    7770:	b7 fc       	sbrc	r11, 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:658
	    x1 += decode->glyph_width;
	    y1 += h;
	    break;
	case 1:
	    x0 -= h;
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    7772:	93 95       	inc	r25
    7774:	96 01       	movw	r18, r12
    7776:	2f 5f       	subi	r18, 0xFF	; 255
    7778:	3f 4f       	sbci	r19, 0xFF	; 255
    777a:	8a 01       	movw	r16, r20
    777c:	09 0d       	add	r16, r9
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:659
	    x1++;
    777e:	11 1d       	adc	r17, r1
    7780:	97 fc       	sbrc	r9, 7
    7782:	1a 95       	dec	r17
u8g2_DrawGlyph():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:660
	    y1 += decode->glyph_width;
    7784:	c8 0e       	add	r12, r24
    7786:	d9 1e       	adc	r13, r25
    7788:	b1 cf       	rjmp	.-158    	; 0x76ec <u8g2_DrawGlyph+0x154>
u8g2_font_decode_glyph():
    778a:	81 e0       	ldi	r24, 0x01	; 1
    778c:	90 e0       	ldi	r25, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:658
	    x1 += decode->glyph_width;
	    y1 += h;
	    break;
	case 1:
	    x0 -= h;
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    778e:	bc 01       	movw	r22, r24
    7790:	69 19       	sub	r22, r9
    7792:	71 09       	sbc	r23, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:664
	    x1++;
	    y1 += decode->glyph_width;
	    break;
	case 2:
	    x0 -= decode->glyph_width;
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    7794:	97 fc       	sbrc	r9, 7
    7796:	73 95       	inc	r23
    7798:	96 01       	movw	r18, r12
    779a:	2f 5f       	subi	r18, 0xFF	; 255
    779c:	3f 4f       	sbci	r19, 0xFF	; 255
    779e:	8b 19       	sub	r24, r11
    77a0:	91 09       	sbc	r25, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:665
	    x1++;
    77a2:	b7 fc       	sbrc	r11, 7
    77a4:	93 95       	inc	r25
    77a6:	8a 01       	movw	r16, r20
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:667
	    y0 -= h;
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    77a8:	0f 5f       	subi	r16, 0xFF	; 255
    77aa:	1f 4f       	sbci	r17, 0xFF	; 255
u8g2_DrawGlyph():
    77ac:	48 0f       	add	r20, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:668
	    y1++;
    77ae:	59 1f       	adc	r21, r25
    77b0:	c6 0e       	add	r12, r22
    77b2:	d7 1e       	adc	r13, r23
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:667
	case 2:
	    x0 -= decode->glyph_width;
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
	    x1++;
	    y0 -= h;
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    77b4:	9b cf       	rjmp	.-202    	; 0x76ec <u8g2_DrawGlyph+0x154>
u8g2_font_decode_glyph():
    77b6:	96 01       	movw	r18, r12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:664
	    x1++;
	    y1 += decode->glyph_width;
	    break;
	case 2:
	    x0 -= decode->glyph_width;
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    77b8:	2b 0d       	add	r18, r11
    77ba:	31 1d       	adc	r19, r1
    77bc:	b7 fc       	sbrc	r11, 7
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:671
	    y0 -= h;
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
	    y1++;
	    break;	  
	case 3:
	    x1 += h;
    77be:	3a 95       	dec	r19
    77c0:	81 e0       	ldi	r24, 0x01	; 1
    77c2:	90 e0       	ldi	r25, 0x00	; 0
    77c4:	89 19       	sub	r24, r9
    77c6:	91 09       	sbc	r25, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:673
	    y0 -= decode->glyph_width;
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    77c8:	97 fc       	sbrc	r9, 7
    77ca:	93 95       	inc	r25
    77cc:	8a 01       	movw	r16, r20
    77ce:	0f 5f       	subi	r16, 0xFF	; 255
    77d0:	1f 4f       	sbci	r17, 0xFF	; 255
u8g2_DrawGlyph():
    77d2:	48 0f       	add	r20, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:674
	    y1++;
    77d4:	59 1f       	adc	r21, r25
    77d6:	8a cf       	rjmp	.-236    	; 0x76ec <u8g2_DrawGlyph+0x154>
    77d8:	90 e0       	ldi	r25, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:673
	    y1++;
	    break;	  
	case 3:
	    x1 += h;
	    y0 -= decode->glyph_width;
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    77da:	80 e0       	ldi	r24, 0x00	; 0
    77dc:	b8 cf       	rjmp	.-144    	; 0x774e <u8g2_DrawGlyph+0x1b6>

000077de <u8g2_draw_string.constprop.83>:
u8g2_draw_string.constprop.83():
    77de:	cf 92       	push	r12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:871
  return NULL;
}

static u8g2_uint_t u8g2_font_draw_glyph(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint16_t encoding)
{
  u8g2_uint_t dx = 0;
    77e0:	df 92       	push	r13
    77e2:	ef 92       	push	r14
    77e4:	ff 92       	push	r15
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:967
  y += 2*u8g2->font_calc_vref(u8g2);
  return u8g2_font_2x_draw_glyph(u8g2, x, y, encoding);
}

static u8g2_uint_t u8g2_draw_string(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str) U8G2_NOINLINE;
static u8g2_uint_t u8g2_draw_string(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str)
    77e6:	0f 93       	push	r16
    77e8:	1f 93       	push	r17
    77ea:	cf 93       	push	r28
    77ec:	df 93       	push	r29
    77ee:	8c 01       	movw	r16, r24
u8x8_utf8_init():
    77f0:	10 92 bf 51 	sts	0x51BF, r1	; 0x8051bf <u8g2+0x1c>
    77f4:	86 e6       	ldi	r24, 0x66	; 102
    77f6:	c8 2e       	mov	r12, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:287
    77f8:	82 e5       	ldi	r24, 0x52	; 82
    77fa:	d8 2e       	mov	r13, r24
u8g2_draw_string.constprop.83():
    77fc:	f1 2c       	mov	r15, r1
    77fe:	e1 2c       	mov	r14, r1
u8x8_utf8_init():
    7800:	cf e0       	ldi	r28, 0x0F	; 15
    7802:	d0 e0       	ldi	r29, 0x00	; 0
u8g2_draw_string.constprop.83():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:972
{
  uint16_t e;
  u8g2_uint_t delta, sum;
  u8x8_utf8_init(u8g2_GetU8x8(u8g2));
  sum = 0;
    7804:	f6 01       	movw	r30, r12
    7806:	61 91       	ld	r22, Z+
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_8x8.c:287
    7808:	6f 01       	movw	r12, r30
    780a:	e0 91 a9 51 	lds	r30, 0x51A9	; 0x8051a9 <u8g2+0x6>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:975
  for(;;)
  {
    e = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
    780e:	f0 91 aa 51 	lds	r31, 0x51AA	; 0x8051aa <u8g2+0x7>
    7812:	87 ea       	ldi	r24, 0xA7	; 167
    7814:	91 e5       	ldi	r25, 0x51	; 81
    7816:	09 95       	icall
    7818:	8f 3f       	cpi	r24, 0xFF	; 255
    781a:	98 07       	cpc	r25, r24
    781c:	11 f1       	breq	.+68     	; 0x7862 <u8g2_draw_string.constprop.83+0x84>
    781e:	8e 3f       	cpi	r24, 0xFE	; 254
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:976
    if ( e == 0x0ffff )
    7820:	2f ef       	ldi	r18, 0xFF	; 255
    7822:	92 07       	cpc	r25, r18
    7824:	79 f3       	breq	.-34     	; 0x7804 <u8g2_draw_string.constprop.83+0x26>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:979
      break;
    str++;
    if ( e != 0x0fffe )
    7826:	9c 01       	movw	r18, r24
    7828:	ae 01       	movw	r20, r28
    782a:	b8 01       	movw	r22, r16
    782c:	87 ea       	ldi	r24, 0xA7	; 167
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:981
    {
      delta = u8g2_DrawGlyph(u8g2, x, y, e);
    782e:	91 e5       	ldi	r25, 0x51	; 81
    7830:	b3 de       	rcall	.-666    	; 0x7598 <u8g2_DrawGlyph>
    7832:	20 91 13 52 	lds	r18, 0x5213	; 0x805213 <u8g2+0x70>
    7836:	21 30       	cpi	r18, 0x01	; 1
    7838:	59 f0       	breq	.+22     	; 0x7850 <u8g2_draw_string.constprop.83+0x72>
    783a:	38 f0       	brcs	.+14     	; 0x784a <u8g2_draw_string.constprop.83+0x6c>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:984
    
#ifdef U8G2_WITH_FONT_ROTATION
      switch(u8g2->font_decode.dir)
    783c:	22 30       	cpi	r18, 0x02	; 2
    783e:	59 f0       	breq	.+22     	; 0x7856 <u8g2_draw_string.constprop.83+0x78>
    7840:	23 30       	cpi	r18, 0x03	; 3
    7842:	61 f0       	breq	.+24     	; 0x785c <u8g2_draw_string.constprop.83+0x7e>
    7844:	e8 0e       	add	r14, r24
    7846:	f9 1e       	adc	r15, r25
    7848:	dd cf       	rjmp	.-70     	; 0x7804 <u8g2_draw_string.constprop.83+0x26>
    784a:	08 0f       	add	r16, r24
    784c:	19 1f       	adc	r17, r25
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1010

#else
      x += delta;
#endif

      sum += delta;    
    784e:	fa cf       	rjmp	.-12     	; 0x7844 <u8g2_draw_string.constprop.83+0x66>
    7850:	c8 0f       	add	r28, r24
    7852:	d9 1f       	adc	r29, r25
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:987
    
#ifdef U8G2_WITH_FONT_ROTATION
      switch(u8g2->font_decode.dir)
      {
	case 0:
	  x += delta;
    7854:	f7 cf       	rjmp	.-18     	; 0x7844 <u8g2_draw_string.constprop.83+0x66>
    7856:	08 1b       	sub	r16, r24
    7858:	19 0b       	sbc	r17, r25
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:990
	  break;
	case 1:
	  y += delta;
    785a:	f4 cf       	rjmp	.-24     	; 0x7844 <u8g2_draw_string.constprop.83+0x66>
    785c:	c8 1b       	sub	r28, r24
    785e:	d9 0b       	sbc	r29, r25
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:993
	  break;
	case 2:
	  x -= delta;
    7860:	f1 cf       	rjmp	.-30     	; 0x7844 <u8g2_draw_string.constprop.83+0x66>
    7862:	c7 01       	movw	r24, r14
    7864:	df 91       	pop	r29
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:996
	  break;
	case 3:
	  y -= delta;
    7866:	cf 91       	pop	r28
    7868:	1f 91       	pop	r17
    786a:	0f 91       	pop	r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1014

      sum += delta;    
    }
  }
  return sum;
}
    786c:	ff 90       	pop	r15
    786e:	ef 90       	pop	r14
    7870:	df 90       	pop	r13
    7872:	cf 90       	pop	r12
    7874:	08 95       	ret

00007876 <u8g2_send_buffer>:
u8g2_send_buffer():
    7876:	af 92       	push	r10
    7878:	bf 92       	push	r11
    787a:	cf 92       	push	r12
    787c:	df 92       	push	r13
    787e:	ef 92       	push	r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:73
  For most displays, this will make the content visible to the user.
  Some displays (like the SSD1606) require a u8x8_RefreshDisplay()
*/
static void u8g2_send_buffer(u8g2_t *u8g2) U8X8_NOINLINE;
static void u8g2_send_buffer(u8g2_t *u8g2)
{
    7880:	ff 92       	push	r15
    7882:	0f 93       	push	r16
    7884:	1f 93       	push	r17
    7886:	cf 93       	push	r28
    7888:	df 93       	push	r29
    788a:	cd b7       	in	r28, 0x3d	; 61
    788c:	de b7       	in	r29, 0x3e	; 62
    788e:	25 97       	sbiw	r28, 0x05	; 5
    7890:	cd bf       	out	0x3d, r28	; 61
    7892:	de bf       	out	0x3e, r29	; 62
    7894:	8c 01       	movw	r16, r24
    7896:	dc 01       	movw	r26, r24
    7898:	da 96       	adiw	r26, 0x3a	; 58
    789a:	ac 90       	ld	r10, X
    789c:	da 97       	sbiw	r26, 0x3a	; 58
    789e:	db 96       	adiw	r26, 0x3b	; 59
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:80
  uint8_t src_max;
  uint8_t dest_row;
  uint8_t dest_max;

  src_row = 0;
  src_max = u8g2->tile_buf_height;
    78a0:	ec 90       	ld	r14, X
    78a2:	db 97       	sbiw	r26, 0x3b	; 59
    78a4:	ed 91       	ld	r30, X+
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:81
  dest_row = u8g2->tile_curr_row;
    78a6:	fc 91       	ld	r31, X
    78a8:	b1 88       	ldd	r11, Z+17	; 0x11
    78aa:	fe 2c       	mov	r15, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:82
  dest_max = u8g2_GetU8x8(u8g2)->display_info->tile_height;
    78ac:	d1 2c       	mov	r13, r1
    78ae:	c1 2c       	mov	r12, r1
u8g2_send_tile_row():
    78b0:	d8 01       	movw	r26, r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:81
  uint8_t dest_row;
  uint8_t dest_max;

  src_row = 0;
  src_max = u8g2->tile_buf_height;
  dest_row = u8g2->tile_curr_row;
    78b2:	ed 91       	ld	r30, X+
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:82
  dest_max = u8g2_GetU8x8(u8g2)->display_info->tile_height;
    78b4:	fc 91       	ld	r31, X
    78b6:	11 97       	sbiw	r26, 0x01	; 1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:57
{
  uint8_t *ptr;
  uint16_t offset;
  uint8_t w;
  
  w = u8g2_GetU8x8(u8g2)->display_info->tile_width;
    78b8:	80 89       	ldd	r24, Z+16	; 0x10
    78ba:	d8 96       	adiw	r26, 0x38	; 56
    78bc:	2d 91       	ld	r18, X+
    78be:	3c 91       	ld	r19, X
u8x8_DrawTile():
    78c0:	1c 82       	std	Y+4, r1	; 0x04
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:59
  offset = src_tile_row;
  ptr = u8g2->tile_buf_ptr;
    78c2:	fd 82       	std	Y+5, r15	; 0x05
    78c4:	8b 83       	std	Y+3, r24	; 0x03
u8g2_send_tile_row():
    78c6:	b8 e0       	ldi	r27, 0x08	; 8
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:85
/* official functions */

uint8_t u8x8_DrawTile(u8x8_t *u8x8, uint8_t x, uint8_t y, uint8_t cnt, uint8_t *tile_ptr)
{
  u8x8_tile_t tile;
  tile.x_pos = x;
    78c8:	8b 9f       	mul	r24, r27
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:86
  tile.y_pos = y;
    78ca:	c0 01       	movw	r24, r0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:87
  tile.cnt = cnt;
    78cc:	11 24       	eor	r1, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:61
  offset *= w;
  offset *= 8;
    78ce:	8c 9d       	mul	r24, r12
    78d0:	a0 01       	movw	r20, r0
    78d2:	8d 9d       	mul	r24, r13
    78d4:	50 0d       	add	r21, r0
    78d6:	9c 9d       	mul	r25, r12
    78d8:	50 0d       	add	r21, r0
    78da:	11 24       	eor	r1, r1
    78dc:	24 0f       	add	r18, r20
    78de:	35 1f       	adc	r19, r21
u8x8_DrawTile():
    78e0:	29 83       	std	Y+1, r18	; 0x01
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:62
  ptr += offset;
    78e2:	3a 83       	std	Y+2, r19	; 0x02
    78e4:	d8 01       	movw	r26, r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:88
  tile.tile_ptr = tile_ptr;
    78e6:	14 96       	adiw	r26, 0x04	; 4
    78e8:	ed 91       	ld	r30, X+
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8x8_display.c:89
  return u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_DRAW_TILE, 1, (void *)&tile);
    78ea:	fc 91       	ld	r31, X
    78ec:	9e 01       	movw	r18, r28
    78ee:	2f 5f       	subi	r18, 0xFF	; 255
    78f0:	3f 4f       	sbci	r19, 0xFF	; 255
    78f2:	41 e0       	ldi	r20, 0x01	; 1
    78f4:	6f e0       	ldi	r22, 0x0F	; 15
    78f6:	c8 01       	movw	r24, r16
    78f8:	09 95       	icall
u8g2_send_buffer():
    78fa:	f3 94       	inc	r15
    78fc:	8f 2d       	mov	r24, r15
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:88
  
  do
  {
    u8g2_send_tile_row(u8g2, src_row, dest_row);
    src_row++;
    dest_row++;
    78fe:	8e 19       	sub	r24, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:89
  } while( src_row < src_max && dest_row < dest_max );
    7900:	8a 15       	cp	r24, r10
    7902:	28 f4       	brcc	.+10     	; 0x790e <u8g2_send_buffer+0x98>
    7904:	bf ef       	ldi	r27, 0xFF	; 255
    7906:	cb 1a       	sub	r12, r27
    7908:	db 0a       	sbc	r13, r27
    790a:	fb 14       	cp	r15, r11
    790c:	88 f2       	brcs	.-94     	; 0x78b0 <u8g2_send_buffer+0x3a>
    790e:	25 96       	adiw	r28, 0x05	; 5
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:90
}
    7910:	cd bf       	out	0x3d, r28	; 61
    7912:	de bf       	out	0x3e, r29	; 62
    7914:	df 91       	pop	r29
    7916:	cf 91       	pop	r28
    7918:	1f 91       	pop	r17
    791a:	0f 91       	pop	r16
    791c:	ff 90       	pop	r15
    791e:	ef 90       	pop	r14
    7920:	df 90       	pop	r13
    7922:	cf 90       	pop	r12
    7924:	bf 90       	pop	r11
    7926:	af 90       	pop	r10
    7928:	08 95       	ret

0000792a <u8g2_SendBuffer.constprop.142>:
u8g2_SendBuffer.constprop.142():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:95

/* same as u8g2_send_buffer but also send the DISPLAY_REFRESH message (used by SSD1606) */
void u8g2_SendBuffer(u8g2_t *u8g2)
{
  u8g2_send_buffer(u8g2);
    792a:	87 ea       	ldi	r24, 0xA7	; 167
    792c:	91 e5       	ldi	r25, 0x51	; 81
    792e:	a3 df       	rcall	.-186    	; 0x7876 <u8g2_send_buffer>
    7930:	87 ea       	ldi	r24, 0xA7	; 167
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_buffer.c:96
  u8x8_RefreshDisplay( u8g2_GetU8x8(u8g2) );  
    7932:	91 e5       	ldi	r25, 0x51	; 81
    7934:	0c 94 ba 32 	jmp	0x6574	; 0x6574 <u8x8_RefreshDisplay>

00007938 <u8g2_DrawFrame>:
u8g2_DrawFrame():
    7938:	6f 92       	push	r6
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:62
/*
  draw a frame (empty box)
  restriction: does not work for w = 0 or h = 0
*/
void u8g2_DrawFrame(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h)
{
    793a:	7f 92       	push	r7
    793c:	8f 92       	push	r8
    793e:	9f 92       	push	r9
    7940:	af 92       	push	r10
    7942:	bf 92       	push	r11
    7944:	cf 92       	push	r12
    7946:	df 92       	push	r13
    7948:	ef 92       	push	r14
    794a:	ff 92       	push	r15
    794c:	0f 93       	push	r16
    794e:	1f 93       	push	r17
    7950:	cf 93       	push	r28
    7952:	df 93       	push	r29
    7954:	6c 01       	movw	r12, r24
    7956:	5b 01       	movw	r10, r22
    7958:	ea 01       	movw	r28, r20
    795a:	49 01       	movw	r8, r18
    795c:	78 01       	movw	r14, r16
    795e:	3b 01       	movw	r6, r22
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:66
  u8g2_uint_t xtmp = x;
  
#ifdef U8G2_WITH_INTERSECTION
  if ( u8g2_IsIntersection(u8g2, x, y, x+w, y+h) == 0 ) 
    7960:	62 0e       	add	r6, r18
    7962:	73 1e       	adc	r7, r19
    7964:	8a 01       	movw	r16, r20
    7966:	0e 0d       	add	r16, r14
    7968:	1f 1d       	adc	r17, r15
    796a:	93 01       	movw	r18, r6
    796c:	f7 d8       	rcall	.-3602   	; 0x6b5c <u8g2_IsIntersection>
    796e:	88 23       	and	r24, r24
    7970:	31 f1       	breq	.+76     	; 0x79be <u8g2_DrawFrame+0x86>
    7972:	00 e0       	ldi	r16, 0x00	; 0
    7974:	94 01       	movw	r18, r8
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:70
    return;
#endif /* U8G2_WITH_INTERSECTION */
  
  u8g2_DrawHVLine(u8g2, x, y, w, 0);
    7976:	ae 01       	movw	r20, r28
    7978:	b5 01       	movw	r22, r10
    797a:	c6 01       	movw	r24, r12
    797c:	da d9       	rcall	.-3148   	; 0x6d32 <u8g2_DrawHVLine>
    797e:	82 e0       	ldi	r24, 0x02	; 2
    7980:	e8 16       	cp	r14, r24
    7982:	f1 04       	cpc	r15, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:71
  if (h >= 2) {
    7984:	e0 f0       	brcs	.+56     	; 0x79be <u8g2_DrawFrame+0x86>
    7986:	82 e0       	ldi	r24, 0x02	; 2
    7988:	e8 1a       	sub	r14, r24
    798a:	f1 08       	sbc	r15, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:72
    h-=2;
    798c:	21 96       	adiw	r28, 0x01	; 1
    798e:	e1 14       	cp	r14, r1
    7990:	f1 04       	cpc	r15, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:73
    y++;
    7992:	79 f0       	breq	.+30     	; 0x79b2 <u8g2_DrawFrame+0x7a>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:74
    if (h > 0) {
    7994:	01 e0       	ldi	r16, 0x01	; 1
    7996:	97 01       	movw	r18, r14
    7998:	ae 01       	movw	r20, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:75
      u8g2_DrawHVLine(u8g2, x, y, h, 1);
    799a:	b5 01       	movw	r22, r10
    799c:	c6 01       	movw	r24, r12
    799e:	c9 d9       	rcall	.-3182   	; 0x6d32 <u8g2_DrawHVLine>
    79a0:	b3 01       	movw	r22, r6
    79a2:	61 50       	subi	r22, 0x01	; 1
    79a4:	71 09       	sbc	r23, r1
    79a6:	97 01       	movw	r18, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:77
      x+=w;
      x--;
    79a8:	ae 01       	movw	r20, r28
    79aa:	c6 01       	movw	r24, r12
    79ac:	c2 d9       	rcall	.-3196   	; 0x6d32 <u8g2_DrawHVLine>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:78
      u8g2_DrawHVLine(u8g2, x, y, h, 1);
    79ae:	ce 0d       	add	r28, r14
    79b0:	df 1d       	adc	r29, r15
    79b2:	00 e0       	ldi	r16, 0x00	; 0
    79b4:	94 01       	movw	r18, r8
    79b6:	ae 01       	movw	r20, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:79
      y+=h;
    79b8:	b5 01       	movw	r22, r10
    79ba:	c6 01       	movw	r24, r12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:81
    }
    u8g2_DrawHVLine(u8g2, xtmp, y, w, 0);
    79bc:	ba d9       	rcall	.-3212   	; 0x6d32 <u8g2_DrawHVLine>
    79be:	df 91       	pop	r29
    79c0:	cf 91       	pop	r28
    79c2:	1f 91       	pop	r17
    79c4:	0f 91       	pop	r16
    79c6:	ff 90       	pop	r15
    79c8:	ef 90       	pop	r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:83
  }
}
    79ca:	df 90       	pop	r13
    79cc:	cf 90       	pop	r12
    79ce:	bf 90       	pop	r11
    79d0:	af 90       	pop	r10
    79d2:	9f 90       	pop	r9
    79d4:	8f 90       	pop	r8
    79d6:	7f 90       	pop	r7
    79d8:	6f 90       	pop	r6
    79da:	08 95       	ret

000079dc <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]>:
_ZN9UImanager10drawMarkerEjjc.constprop.92():
    79dc:	5f 92       	push	r5
    79de:	6f 92       	push	r6
    79e0:	7f 92       	push	r7
    79e2:	8f 92       	push	r8
    79e4:	9f 92       	push	r9
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:903
    Note that the font used to print the identity of the cursor marker (A or B) must be set before calling this function
    @param x the x coordinate of the point where to place the mark
    @param y the y coordinate of the point where to place the mark
    @param marker_type market type
*/
void UImanager::drawMarker(u8g2_uint_t x, u8g2_uint_t y, char marker_type) {
    79e6:	af 92       	push	r10
    79e8:	bf 92       	push	r11
    79ea:	cf 92       	push	r12
    79ec:	df 92       	push	r13
    79ee:	ef 92       	push	r14
    79f0:	ff 92       	push	r15
    79f2:	0f 93       	push	r16
    79f4:	1f 93       	push	r17
    79f6:	cf 93       	push	r28
    79f8:	df 93       	push	r29
    79fa:	5c 01       	movw	r10, r24
    79fc:	4b 01       	movw	r8, r22
    79fe:	54 2e       	mov	r5, r20
    7a00:	87 30       	cpi	r24, 0x07	; 7
    7a02:	91 05       	cpc	r25, r1
    7a04:	10 f4       	brcc	.+4      	; 0x7a0a <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x2e>
    7a06:	87 e0       	ldi	r24, 0x07	; 7
    7a08:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:906
  static const u8g2_uint_t marker_size = 7;
  //k197graph_type::x_size
  u8g2_uint_t x0 = x < marker_size ? 0 : x -  marker_size;
    7a0a:	6c 01       	movw	r12, r24
    7a0c:	27 e0       	ldi	r18, 0x07	; 7
    7a0e:	c2 1a       	sub	r12, r18
    7a10:	d1 08       	sbc	r13, r1
    7a12:	e5 01       	movw	r28, r10
    7a14:	27 96       	adiw	r28, 0x07	; 7
    7a16:	c5 3b       	cpi	r28, 0xB5	; 181
    7a18:	d1 05       	cpc	r29, r1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:907
  u8g2_uint_t x1 = k197graph_type::x_size<(x+marker_size) ? k197graph_type::x_size : x+marker_size;
    7a1a:	10 f0       	brcs	.+4      	; 0x7a20 <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x44>
    7a1c:	c4 eb       	ldi	r28, 0xB4	; 180
    7a1e:	d0 e0       	ldi	r29, 0x00	; 0
    7a20:	c4 01       	movw	r24, r8
    7a22:	27 e0       	ldi	r18, 0x07	; 7
    7a24:	82 16       	cp	r8, r18
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:908
  u8g2_uint_t y0 = y < marker_size ? 0 : y -  marker_size;
    7a26:	91 04       	cpc	r9, r1
    7a28:	10 f4       	brcc	.+4      	; 0x7a2e <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x52>
    7a2a:	87 e0       	ldi	r24, 0x07	; 7
    7a2c:	90 e0       	ldi	r25, 0x00	; 0
    7a2e:	3c 01       	movw	r6, r24
    7a30:	27 e0       	ldi	r18, 0x07	; 7
    7a32:	62 1a       	sub	r6, r18
    7a34:	71 08       	sbc	r7, r1
    7a36:	74 01       	movw	r14, r8
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:909
  u8g2_uint_t y1 = k197graph_type::y_size<(y+marker_size) ? k197graph_type::y_size : y+marker_size;
    7a38:	87 e0       	ldi	r24, 0x07	; 7
    7a3a:	e8 0e       	add	r14, r24
    7a3c:	f1 1c       	adc	r15, r1
    7a3e:	20 e4       	ldi	r18, 0x40	; 64
    7a40:	e2 16       	cp	r14, r18
    7a42:	f1 04       	cpc	r15, r1
    7a44:	18 f0       	brcs	.+6      	; 0x7a4c <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x70>
    7a46:	9f e3       	ldi	r25, 0x3F	; 63
    7a48:	e9 2e       	mov	r14, r25
    7a4a:	f1 2c       	mov	r15, r1
    7a4c:	81 e4       	ldi	r24, 0x41	; 65
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:910
  switch(marker_type) {
    7a4e:	58 16       	cp	r5, r24
    7a50:	29 f1       	breq	.+74     	; 0x7a9c <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0xc0>
    7a52:	22 e4       	ldi	r18, 0x42	; 66
    7a54:	52 16       	cp	r5, r18
    7a56:	09 f4       	brne	.+2      	; 0x7a5a <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x7e>
    7a58:	63 c0       	rjmp	.+198    	; 0x7b20 <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x144>
    7a5a:	8b e2       	ldi	r24, 0x2B	; 43
    7a5c:	58 12       	cpse	r5, r24
    7a5e:	0e c0       	rjmp	.+28     	; 0x7a7c <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0xa0>
_ZN4U8G28drawLineEjjjj():
    7a60:	84 01       	movw	r16, r8
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:244
    void drawEllipse(u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t rx, u8g2_uint_t ry, uint8_t opt = U8G2_DRAW_ALL) { u8g2_DrawEllipse(&u8g2, x0, y0, rx, ry, opt); }
    void drawFilledEllipse(u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t rx, u8g2_uint_t ry, uint8_t opt = U8G2_DRAW_ALL) { u8g2_DrawFilledEllipse(&u8g2, x0, y0, rx, ry, opt); }    

    /* u8g2_line.c */
    void drawLine(u8g2_uint_t x1, u8g2_uint_t y1, u8g2_uint_t x2, u8g2_uint_t y2) 
      { u8g2_DrawLine(&u8g2, x1, y1, x2, y2); }
    7a62:	9e 01       	movw	r18, r28
    7a64:	a4 01       	movw	r20, r8
    7a66:	b6 01       	movw	r22, r12
    7a68:	87 ea       	ldi	r24, 0xA7	; 167
    7a6a:	91 e5       	ldi	r25, 0x51	; 81
    7a6c:	2e da       	rcall	.-2980   	; 0x6eca <u8g2_DrawLine>
    7a6e:	87 01       	movw	r16, r14
    7a70:	95 01       	movw	r18, r10
    7a72:	a3 01       	movw	r20, r6
    7a74:	b5 01       	movw	r22, r10
    7a76:	87 ea       	ldi	r24, 0xA7	; 167
    7a78:	91 e5       	ldi	r25, 0x51	; 81
    7a7a:	27 da       	rcall	.-2994   	; 0x6eca <u8g2_DrawLine>
_ZN9UImanager10drawMarkerEjjc.constprop.92():
    7a7c:	df 91       	pop	r29
    7a7e:	cf 91       	pop	r28
    7a80:	1f 91       	pop	r17
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:942
         }
         if (actv) u8g2.print('>');
         u8g2.print(marker_type);
         break;
  }
}
    7a82:	0f 91       	pop	r16
    7a84:	ff 90       	pop	r15
    7a86:	ef 90       	pop	r14
    7a88:	df 90       	pop	r13
    7a8a:	cf 90       	pop	r12
    7a8c:	bf 90       	pop	r11
    7a8e:	af 90       	pop	r10
    7a90:	9f 90       	pop	r9
    7a92:	8f 90       	pop	r8
    7a94:	7f 90       	pop	r7
    7a96:	6f 90       	pop	r6
    7a98:	5f 90       	pop	r5
    7a9a:	08 95       	ret
_ZN4U8G28drawLineEjjjj():
    7a9c:	84 01       	movw	r16, r8
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:244
    7a9e:	95 01       	movw	r18, r10
    7aa0:	a3 01       	movw	r20, r6
    7aa2:	b6 01       	movw	r22, r12
    7aa4:	87 ea       	ldi	r24, 0xA7	; 167
    7aa6:	91 e5       	ldi	r25, 0x51	; 81
    7aa8:	10 da       	rcall	.-3040   	; 0x6eca <u8g2_DrawLine>
    7aaa:	87 01       	movw	r16, r14
    7aac:	9e 01       	movw	r18, r28
    7aae:	a4 01       	movw	r20, r8
    7ab0:	b5 01       	movw	r22, r10
    7ab2:	87 ea       	ldi	r24, 0xA7	; 167
    7ab4:	91 e5       	ldi	r25, 0x51	; 81
    7ab6:	09 da       	rcall	.-3054   	; 0x6eca <u8g2_DrawLine>
    7ab8:	84 01       	movw	r16, r8
    7aba:	95 01       	movw	r18, r10
    7abc:	a7 01       	movw	r20, r14
    7abe:	b6 01       	movw	r22, r12
    7ac0:	87 ea       	ldi	r24, 0xA7	; 167
    7ac2:	91 e5       	ldi	r25, 0x51	; 81
    7ac4:	02 da       	rcall	.-3068   	; 0x6eca <u8g2_DrawLine>
    7ac6:	83 01       	movw	r16, r6
    7ac8:	9e 01       	movw	r18, r28
    7aca:	a4 01       	movw	r20, r8
    7acc:	b5 01       	movw	r22, r10
    7ace:	87 ea       	ldi	r24, 0xA7	; 167
    7ad0:	91 e5       	ldi	r25, 0x51	; 81
    7ad2:	fb d9       	rcall	.-3082   	; 0x6eca <u8g2_DrawLine>
    7ad4:	80 91 1e 52 	lds	r24, 0x521E	; 0x80521e <u8g2+0x7b>
_ZN9UImanager10drawMarkerEjjc.constprop.92():
    7ad8:	08 2e       	mov	r0, r24
    7ada:	00 0c       	add	r0, r0
    7adc:	99 0b       	sbc	r25, r25
    7ade:	2f e3       	ldi	r18, 0x3F	; 63
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:920
     case UImanager::CURSOR_A:
         u8g2.drawLine(x0, y0, x, y);
         u8g2.drawLine(x, y, x1, y1);
         u8g2.drawLine(x0, y1, x, y);
         u8g2.drawLine(x, y, x1, y0);
         if ( int(y1) > (k197graph_type::y_size-u8g2.getMaxCharHeight()) ) { 
    7ae0:	30 e0       	ldi	r19, 0x00	; 0
    7ae2:	28 1b       	sub	r18, r24
    7ae4:	39 0b       	sbc	r19, r25
_ZN4U8G29setCursorEjj():
    7ae6:	c0 92 35 52 	sts	0x5235, r12	; 0x805235 <u8g2+0x92>
    7aea:	d0 92 36 52 	sts	0x5236, r13	; 0x805236 <u8g2+0x93>
_ZN9UImanager10drawMarkerEjjc.constprop.92():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
     /* LiquidCrystal compatible functions */
    void home(void) { tx = 0; ty = 0;  u8x8_utf8_init(u8g2_GetU8x8(&u8g2)); }
    void clear(void) { home(); clearDisplay(); clearBuffer();  }
    void noDisplay(void) { u8g2_SetPowerSave(&u8g2, 1); }
    void display(void) { u8g2_SetPowerSave(&u8g2, 0); }
    void setCursor(u8g2_uint_t x, u8g2_uint_t y) { tx = x; ty = y; }
    7aee:	2e 15       	cp	r18, r14
    7af0:	3f 05       	cpc	r19, r15
    7af2:	8c f4       	brge	.+34     	; 0x7b16 <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x13a>
    7af4:	68 1a       	sub	r6, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:920
    7af6:	79 0a       	sbc	r7, r25
_ZN4U8G29setCursorEjj():
    7af8:	60 92 37 52 	sts	0x5237, r6	; 0x805237 <u8g2+0x94>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:921
             u8g2.setCursor(x0, y0-u8g2.getMaxCharHeight()); // Position above the marker
    7afc:	70 92 38 52 	sts	0x5238, r7	; 0x805238 <u8g2+0x95>
_ZN9UImanager10drawMarkerEjjc.constprop.92():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
    7b00:	61 e4       	ldi	r22, 0x41	; 65
    7b02:	83 ea       	ldi	r24, 0xA3	; 163
    7b04:	91 e5       	ldi	r25, 0x51	; 81
    7b06:	0e 94 bd 2f 	call	0x5f7a	; 0x5f7a <Print::print(char)>
_ZN9UImanager15getActiveCursorEv():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:925
         } else {
             u8g2.setCursor(x0, y1); // Position below the marker          
         }
         u8g2.print(marker_type);
    7b0a:	80 91 41 52 	lds	r24, 0x5241	; 0x805241 <uiman+0x8>
    7b0e:	87 fd       	sbrc	r24, 7
    7b10:	b5 cf       	rjmp	.-150    	; 0x7a7c <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0xa0>
_ZN9UImanager10drawMarkerEjjc.constprop.92():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.h:150
  /*!
     @brief  return the active cursor
     @return returns the active cursor (CURSOR_A or CURSOR_B)
  */
  char getActiveCursor() {
    if ( (screen_mode & K197sc_activeCursorBitMask) == 0x00) return CURSOR_A;
    7b12:	6c e3       	ldi	r22, 0x3C	; 60
    7b14:	55 c0       	rjmp	.+170    	; 0x7bc0 <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x1e4>
_ZN4U8G29setCursorEjj():
    7b16:	e0 92 37 52 	sts	0x5237, r14	; 0x805237 <u8g2+0x94>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:926
         if (getActiveCursor() == marker_type) u8g2.print('<');
    7b1a:	f0 92 38 52 	sts	0x5238, r15	; 0x805238 <u8g2+0x95>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
    7b1e:	f0 cf       	rjmp	.-32     	; 0x7b00 <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x124>
_ZN4U8G28drawLineEjjjj():
    7b20:	84 01       	movw	r16, r8
    7b22:	9e 01       	movw	r18, r28
    7b24:	a4 01       	movw	r20, r8
    7b26:	b6 01       	movw	r22, r12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:244
    void drawEllipse(u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t rx, u8g2_uint_t ry, uint8_t opt = U8G2_DRAW_ALL) { u8g2_DrawEllipse(&u8g2, x0, y0, rx, ry, opt); }
    void drawFilledEllipse(u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t rx, u8g2_uint_t ry, uint8_t opt = U8G2_DRAW_ALL) { u8g2_DrawFilledEllipse(&u8g2, x0, y0, rx, ry, opt); }    

    /* u8g2_line.c */
    void drawLine(u8g2_uint_t x1, u8g2_uint_t y1, u8g2_uint_t x2, u8g2_uint_t y2) 
      { u8g2_DrawLine(&u8g2, x1, y1, x2, y2); }
    7b28:	87 ea       	ldi	r24, 0xA7	; 167
    7b2a:	91 e5       	ldi	r25, 0x51	; 81
    7b2c:	ce d9       	rcall	.-3172   	; 0x6eca <u8g2_DrawLine>
    7b2e:	87 01       	movw	r16, r14
    7b30:	95 01       	movw	r18, r10
    7b32:	a3 01       	movw	r20, r6
    7b34:	b5 01       	movw	r22, r10
    7b36:	87 ea       	ldi	r24, 0xA7	; 167
    7b38:	91 e5       	ldi	r25, 0x51	; 81
    7b3a:	c7 d9       	rcall	.-3186   	; 0x6eca <u8g2_DrawLine>
_ZN9UImanager10drawMarkerEjjc.constprop.92():
    7b3c:	9e 01       	movw	r18, r28
    7b3e:	2c 19       	sub	r18, r12
    7b40:	3d 09       	sbc	r19, r13
_ZN4U8G29drawFrameEjjjj():
    7b42:	06 19       	sub	r16, r6
    7b44:	17 09       	sbc	r17, r7
    7b46:	a3 01       	movw	r20, r6
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:931
         break;
     case UImanager::CURSOR_B:
         u8g2.drawLine(x0, y, x1, y);
         u8g2.drawLine(x, y0, x, y1);
         u8g2.drawFrame(x0, y0, x1-x0, y1-y0);
    7b48:	b6 01       	movw	r22, r12
    7b4a:	87 ea       	ldi	r24, 0xA7	; 167
    7b4c:	91 e5       	ldi	r25, 0x51	; 81
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:227
    void drawVLine(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t h) { u8g2_DrawVLine(&u8g2, x, y, h); }
    void drawHVLine(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir) {
      u8g2_DrawHVLine(&u8g2, x, y, len, dir); }
    
    /* u8g2_box.c */
    void drawFrame(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h) { u8g2_DrawFrame(&u8g2, x, y, w, h); }
    7b4e:	f4 de       	rcall	.-536    	; 0x7938 <u8g2_DrawFrame>
_ZN9UImanager15getActiveCursorEv():
    7b50:	80 91 41 52 	lds	r24, 0x5241	; 0x805241 <uiman+0x8>
    7b54:	87 fd       	sbrc	r24, 7
    7b56:	02 c0       	rjmp	.+4      	; 0x7b5c <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x180>
_ZN9UImanager10drawMarkerEjjc.constprop.92():
    7b58:	81 e4       	ldi	r24, 0x41	; 65
    7b5a:	58 2e       	mov	r5, r24
    7b5c:	20 91 1e 52 	lds	r18, 0x521E	; 0x80521e <u8g2+0x7b>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.h:150
    7b60:	80 91 1d 52 	lds	r24, 0x521D	; 0x80521d <u8g2+0x7a>
    7b64:	02 2e       	mov	r0, r18
    7b66:	00 0c       	add	r0, r0
    7b68:	33 0b       	sbc	r19, r19
    7b6a:	4f e3       	ldi	r20, 0x3F	; 63
    7b6c:	50 e0       	ldi	r21, 0x00	; 0
    7b6e:	42 1b       	sub	r20, r18
    7b70:	53 0b       	sbc	r21, r19
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:933
         bool actv = getActiveCursor() == marker_type;
         if ( int(y1) > (k197graph_type::y_size-u8g2.getMaxCharHeight()) ) { 
    7b72:	08 2e       	mov	r0, r24
    7b74:	00 0c       	add	r0, r0
    7b76:	99 0b       	sbc	r25, r25
    7b78:	4e 15       	cp	r20, r14
    7b7a:	5f 05       	cpc	r21, r15
    7b7c:	bc f5       	brge	.+110    	; 0x7bec <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x210>
    7b7e:	62 1a       	sub	r6, r18
    7b80:	73 0a       	sbc	r7, r19
    7b82:	22 e4       	ldi	r18, 0x42	; 66
    7b84:	52 12       	cpse	r5, r18
    7b86:	2f c0       	rjmp	.+94     	; 0x7be6 <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x20a>
    7b88:	22 e0       	ldi	r18, 0x02	; 2
    7b8a:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:934
             u8g2.setCursor(x1-u8g2.getMaxCharWidth()*(actv ? 2 : 1), y0-u8g2.getMaxCharHeight()); // Position above the marker
    7b8c:	82 9f       	mul	r24, r18
    7b8e:	a0 01       	movw	r20, r0
    7b90:	83 9f       	mul	r24, r19
    7b92:	50 0d       	add	r21, r0
    7b94:	92 9f       	mul	r25, r18
    7b96:	50 0d       	add	r21, r0
    7b98:	11 24       	eor	r1, r1
    7b9a:	c4 1b       	sub	r28, r20
    7b9c:	d5 0b       	sbc	r29, r21
_ZN4U8G29setCursorEjj():
    7b9e:	c0 93 35 52 	sts	0x5235, r28	; 0x805235 <u8g2+0x92>
    7ba2:	d0 93 36 52 	sts	0x5236, r29	; 0x805236 <u8g2+0x93>
    7ba6:	60 92 37 52 	sts	0x5237, r6	; 0x805237 <u8g2+0x94>
    7baa:	70 92 38 52 	sts	0x5238, r7	; 0x805238 <u8g2+0x95>
_ZN9UImanager10drawMarkerEjjc.constprop.92():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
     /* LiquidCrystal compatible functions */
    void home(void) { tx = 0; ty = 0;  u8x8_utf8_init(u8g2_GetU8x8(&u8g2)); }
    void clear(void) { home(); clearDisplay(); clearBuffer();  }
    void noDisplay(void) { u8g2_SetPowerSave(&u8g2, 1); }
    void display(void) { u8g2_SetPowerSave(&u8g2, 0); }
    void setCursor(u8g2_uint_t x, u8g2_uint_t y) { tx = x; ty = y; }
    7bae:	82 e4       	ldi	r24, 0x42	; 66
    7bb0:	58 12       	cpse	r5, r24
    7bb2:	05 c0       	rjmp	.+10     	; 0x7bbe <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x1e2>
    7bb4:	6e e3       	ldi	r22, 0x3E	; 62
    7bb6:	83 ea       	ldi	r24, 0xA3	; 163
    7bb8:	91 e5       	ldi	r25, 0x51	; 81
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:938
         } else {
             u8g2.setCursor(x1-u8g2.getMaxCharWidth(), y1); // Position below the marker          
         }
         if (actv) u8g2.print('>');
    7bba:	0e 94 bd 2f 	call	0x5f7a	; 0x5f7a <Print::print(char)>
    7bbe:	62 e4       	ldi	r22, 0x42	; 66
    7bc0:	83 ea       	ldi	r24, 0xA3	; 163
    7bc2:	91 e5       	ldi	r25, 0x51	; 81
    7bc4:	df 91       	pop	r29
    7bc6:	cf 91       	pop	r28
    7bc8:	1f 91       	pop	r17
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:939
         u8g2.print(marker_type);
    7bca:	0f 91       	pop	r16
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:926
             u8g2.setCursor(x0, y0-u8g2.getMaxCharHeight()); // Position above the marker
         } else {
             u8g2.setCursor(x0, y1); // Position below the marker          
         }
         u8g2.print(marker_type);
         if (getActiveCursor() == marker_type) u8g2.print('<');
    7bcc:	ff 90       	pop	r15
    7bce:	ef 90       	pop	r14
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:942
         }
         if (actv) u8g2.print('>');
         u8g2.print(marker_type);
         break;
  }
}
    7bd0:	df 90       	pop	r13
    7bd2:	cf 90       	pop	r12
    7bd4:	bf 90       	pop	r11
    7bd6:	af 90       	pop	r10
    7bd8:	9f 90       	pop	r9
    7bda:	8f 90       	pop	r8
    7bdc:	7f 90       	pop	r7
    7bde:	6f 90       	pop	r6
    7be0:	5f 90       	pop	r5
    7be2:	0c 94 bd 2f 	jmp	0x5f7a	; 0x5f7a <Print::print(char)>
    7be6:	21 e0       	ldi	r18, 0x01	; 1
    7be8:	30 e0       	ldi	r19, 0x00	; 0
    7bea:	d0 cf       	rjmp	.-96     	; 0x7b8c <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x1b0>
    7bec:	c8 1b       	sub	r28, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:926
             u8g2.setCursor(x0, y0-u8g2.getMaxCharHeight()); // Position above the marker
         } else {
             u8g2.setCursor(x0, y1); // Position below the marker          
         }
         u8g2.print(marker_type);
         if (getActiveCursor() == marker_type) u8g2.print('<');
    7bee:	d9 0b       	sbc	r29, r25
_ZN4U8G29setCursorEjj():
    7bf0:	c0 93 35 52 	sts	0x5235, r28	; 0x805235 <u8g2+0x92>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:934
         u8g2.drawLine(x0, y, x1, y);
         u8g2.drawLine(x, y0, x, y1);
         u8g2.drawFrame(x0, y0, x1-x0, y1-y0);
         bool actv = getActiveCursor() == marker_type;
         if ( int(y1) > (k197graph_type::y_size-u8g2.getMaxCharHeight()) ) { 
             u8g2.setCursor(x1-u8g2.getMaxCharWidth()*(actv ? 2 : 1), y0-u8g2.getMaxCharHeight()); // Position above the marker
    7bf4:	d0 93 36 52 	sts	0x5236, r29	; 0x805236 <u8g2+0x93>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:936
         } else {
             u8g2.setCursor(x1-u8g2.getMaxCharWidth(), y1); // Position below the marker          
    7bf8:	e0 92 37 52 	sts	0x5237, r14	; 0x805237 <u8g2+0x94>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
    7bfc:	f0 92 38 52 	sts	0x5238, r15	; 0x805238 <u8g2+0x95>
    7c00:	d6 cf       	rjmp	.-84     	; 0x7bae <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]+0x1d2>

00007c02 <u8g2_DrawBox>:
u8g2_DrawBox():
    7c02:	8f 92       	push	r8
    7c04:	9f 92       	push	r9
    7c06:	af 92       	push	r10
    7c08:	bf 92       	push	r11
    7c0a:	cf 92       	push	r12
    7c0c:	df 92       	push	r13
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:43
/*
  draw a filled box
  restriction: does not work for w = 0 or h = 0
*/
void u8g2_DrawBox(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h)
{
    7c0e:	ef 92       	push	r14
    7c10:	ff 92       	push	r15
    7c12:	0f 93       	push	r16
    7c14:	1f 93       	push	r17
    7c16:	cf 93       	push	r28
    7c18:	df 93       	push	r29
    7c1a:	5c 01       	movw	r10, r24
    7c1c:	6b 01       	movw	r12, r22
    7c1e:	ea 01       	movw	r28, r20
    7c20:	49 01       	movw	r8, r18
    7c22:	7a 01       	movw	r14, r20
    7c24:	e0 0e       	add	r14, r16
    7c26:	f1 1e       	adc	r15, r17
    7c28:	9b 01       	movw	r18, r22
    7c2a:	28 0d       	add	r18, r8
    7c2c:	39 1d       	adc	r19, r9
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:45
#ifdef U8G2_WITH_INTERSECTION
  if ( u8g2_IsIntersection(u8g2, x, y, x+w, y+h) == 0 ) 
    7c2e:	87 01       	movw	r16, r14
    7c30:	0e 94 ae 35 	call	0x6b5c	; 0x6b5c <u8g2_IsIntersection>
    7c34:	81 11       	cpse	r24, r1
    7c36:	14 c0       	rjmp	.+40     	; 0x7c60 <u8g2_DrawBox+0x5e>
    7c38:	df 91       	pop	r29
    7c3a:	cf 91       	pop	r28
    7c3c:	1f 91       	pop	r17
    7c3e:	0f 91       	pop	r16
    7c40:	ff 90       	pop	r15
    7c42:	ef 90       	pop	r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:54
  { 
    u8g2_DrawHVLine(u8g2, x, y, w, 0);
    y++;    
    h--;
  }
}
    7c44:	df 90       	pop	r13
    7c46:	cf 90       	pop	r12
    7c48:	bf 90       	pop	r11
    7c4a:	af 90       	pop	r10
    7c4c:	9f 90       	pop	r9
    7c4e:	8f 90       	pop	r8
    7c50:	08 95       	ret
    7c52:	00 e0       	ldi	r16, 0x00	; 0
    7c54:	94 01       	movw	r18, r8
    7c56:	ae 01       	movw	r20, r28
    7c58:	b6 01       	movw	r22, r12
    7c5a:	c5 01       	movw	r24, r10
    7c5c:	6a d8       	rcall	.-3884   	; 0x6d32 <u8g2_DrawHVLine>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:50
  if ( u8g2_IsIntersection(u8g2, x, y, x+w, y+h) == 0 ) 
    return;
#endif /* U8G2_WITH_INTERSECTION */
  while( h != 0 )
  { 
    u8g2_DrawHVLine(u8g2, x, y, w, 0);
    7c5e:	21 96       	adiw	r28, 0x01	; 1
    7c60:	ec 16       	cp	r14, r28
    7c62:	fd 06       	cpc	r15, r29
    7c64:	b1 f7       	brne	.-20     	; 0x7c52 <u8g2_DrawBox+0x50>
    7c66:	e8 cf       	rjmp	.-48     	; 0x7c38 <u8g2_DrawBox+0x36>

00007c68 <arduino_hw_spi_3w_flush()>:
_ZL23arduino_hw_spi_3w_flushv():
    7c68:	80 e0       	ldi	r24, 0x00	; 0
    7c6a:	90 91 df 44 	lds	r25, 0x44DF	; 0x8044df <arduino_hw_spi_3w_bytepos>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_box.c:48
{
#ifdef U8G2_WITH_INTERSECTION
  if ( u8g2_IsIntersection(u8g2, x, y, x+w, y+h) == 0 ) 
    return;
#endif /* U8G2_WITH_INTERSECTION */
  while( h != 0 )
    7c6e:	98 17       	cp	r25, r24
    7c70:	88 f0       	brcs	.+34     	; 0x7c94 <arduino_hw_spi_3w_flush()+0x2c>
    7c72:	e8 2f       	mov	r30, r24
    7c74:	f0 e0       	ldi	r31, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:724

static void arduino_hw_spi_3w_flush(void) 
{
#ifdef U8X8_HAVE_HW_SPI  
  uint8_t i;
  for(i = 0; i <= arduino_hw_spi_3w_bytepos; i++) 
    7c76:	ea 52       	subi	r30, 0x2A	; 42
    7c78:	fb 4b       	sbci	r31, 0xBB	; 187
    7c7a:	90 81       	ld	r25, Z
transfer():
    7c7c:	00 00       	nop
    7c7e:	e0 91 73 47 	lds	r30, 0x4773	; 0x804773 <SPI>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:726
  {
      SPI.transfer(arduino_hw_spi_3w_buffer[i]);
    7c82:	f0 91 74 47 	lds	r31, 0x4774	; 0x804774 <SPI+0x1>
    7c86:	94 83       	std	Z+4, r25	; 0x04
    7c88:	93 81       	ldd	r25, Z+3	; 0x03
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\SPI\src/SPI.cpp:600
  * The following NOP introduces a small delay that can prevent the wait
  * loop from iterating when running at the maximum speed. This gives
  * about 10% more speed, even if it seems counter-intuitive. At lower
  * speeds it is unnoticed.
  */
  asm volatile("nop");
    7c8a:	97 ff       	sbrs	r25, 7
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\SPI\src/SPI.cpp:602

  SPI_MODULE.DATA = data;
    7c8c:	fd cf       	rjmp	.-6      	; 0x7c88 <arduino_hw_spi_3w_flush()+0x20>
    7c8e:	94 81       	ldd	r25, Z+4	; 0x04
_ZL23arduino_hw_spi_3w_flushv():
    7c90:	8f 5f       	subi	r24, 0xFF	; 255
    7c92:	eb cf       	rjmp	.-42     	; 0x7c6a <arduino_hw_spi_3w_flush()+0x2>
    7c94:	08 95       	ret

00007c96 <debugUtil::flush()>:
_ZN9debugUtil5flushEv():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\SPI\src/SPI.cpp:603
  while ((SPI_MODULE.INTFLAGS & SPI_RXCIF_bm) == 0);  // wait for complete send
    7c96:	fc 01       	movw	r30, r24
    7c98:	84 81       	ldd	r24, Z+4	; 0x04
    7c9a:	88 23       	and	r24, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\SPI\src/SPI.cpp:604
  return SPI_MODULE.DATA;                             // read data back
    7c9c:	21 f0       	breq	.+8      	; 0x7ca6 <debugUtil::flush()+0x10>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:724

static void arduino_hw_spi_3w_flush(void) 
{
#ifdef U8X8_HAVE_HW_SPI  
  uint8_t i;
  for(i = 0; i <= arduino_hw_spi_3w_bytepos; i++) 
    7c9e:	87 ec       	ldi	r24, 0xC7	; 199
    7ca0:	95 e4       	ldi	r25, 0x45	; 69
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:729
  {
      SPI.transfer(arduino_hw_spi_3w_buffer[i]);
  }
#endif
}
    7ca2:	0c 94 09 31 	jmp	0x6212	; 0x6212 <HardwareSerial::flush()>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:122

        If Serial is used, Serial.flush() is called. If the Oled is used,
   u8g2log.flush() is called (albeit this should have no effect)
*/
void debugUtil::flush() {
  if (use_serial) {
    7ca6:	08 95       	ret

00007ca8 <debugUtil::availableForWrite()>:
_ZN9debugUtil17availableForWriteEv():
    7ca8:	fc 01       	movw	r30, r24
    7caa:	84 81       	ldd	r24, Z+4	; 0x04
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:123
    Serial.flush();
    7cac:	88 23       	and	r24, r24
    7cae:	21 f0       	breq	.+8      	; 0x7cb8 <debugUtil::availableForWrite()+0x10>
    7cb0:	87 ec       	ldi	r24, 0xC7	; 199
    7cb2:	95 e4       	ldi	r25, 0x45	; 69
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:128
  }
  if (use_oled) {
    u8g2log.flush();
  }
}
    7cb4:	0c 94 15 30 	jmp	0x602a	; 0x602a <HardwareSerial::availableForWrite()>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:108

      @return the number of bytes that it is possible to write without blocking
   the write operation.
*/
int debugUtil::availableForWrite() {
  if (use_serial) {
    7cb8:	8f ef       	ldi	r24, 0xFF	; 255
    7cba:	9f e7       	ldi	r25, 0x7F	; 127
    7cbc:	08 95       	ret

00007cbe <debugUtil::write(unsigned char)>:
_ZN9debugUtil5writeEh():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:109
    return Serial.availableForWrite();
    7cbe:	ef 92       	push	r14
    7cc0:	ff 92       	push	r15
    7cc2:	1f 93       	push	r17
    7cc4:	cf 93       	push	r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:113
  } else {
    return INT_MAX;
  }
}
    7cc6:	df 93       	push	r29
    7cc8:	7c 01       	movw	r14, r24
    7cca:	16 2f       	mov	r17, r22
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:38
      @param  c the character to print

   @return return the result from the stream that has the best outcome (or zero
   if no output stream is enabled)
*/
size_t debugUtil::write(uint8_t c) {
    7ccc:	fc 01       	movw	r30, r24
    7cce:	84 81       	ldd	r24, Z+4	; 0x04
    7cd0:	d0 e0       	ldi	r29, 0x00	; 0
    7cd2:	c0 e0       	ldi	r28, 0x00	; 0
    7cd4:	88 23       	and	r24, r24
    7cd6:	31 f0       	breq	.+12     	; 0x7ce4 <debugUtil::write(unsigned char)+0x26>
    7cd8:	87 ec       	ldi	r24, 0xC7	; 199
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:40
  size_t b1 = 0, b2 = 0;
  if (use_serial)
    7cda:	95 e4       	ldi	r25, 0x45	; 69
    7cdc:	0e 94 bd 30 	call	0x617a	; 0x617a <HardwareSerial::write(unsigned char)>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:39

   @return return the result from the stream that has the best outcome (or zero
   if no output stream is enabled)
*/
size_t debugUtil::write(uint8_t c) {
  size_t b1 = 0, b2 = 0;
    7ce0:	d8 2f       	mov	r29, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:40
  if (use_serial)
    7ce2:	c9 2f       	mov	r28, r25
    7ce4:	f7 01       	movw	r30, r14
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:41
    b1 = Serial.write(c);
    7ce6:	85 81       	ldd	r24, Z+5	; 0x05
    7ce8:	30 e0       	ldi	r19, 0x00	; 0
    7cea:	20 e0       	ldi	r18, 0x00	; 0
    7cec:	88 23       	and	r24, r24
    7cee:	39 f0       	breq	.+14     	; 0x7cfe <debugUtil::write(unsigned char)+0x40>
write():
    7cf0:	61 2f       	mov	r22, r17
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:42
  if (use_oled)
    7cf2:	83 e9       	ldi	r24, 0x93	; 147
    7cf4:	91 e5       	ldi	r25, 0x51	; 81
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:39

   @return return the result from the stream that has the best outcome (or zero
   if no output stream is enabled)
*/
size_t debugUtil::write(uint8_t c) {
  size_t b1 = 0, b2 = 0;
    7cf6:	0e 94 a4 34 	call	0x6948	; 0x6948 <u8log_WriteChar>
_ZN9debugUtil5writeEh():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:42
  if (use_serial)
    b1 = Serial.write(c);
  if (use_oled)
    7cfa:	21 e0       	ldi	r18, 0x01	; 1
    7cfc:	30 e0       	ldi	r19, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:439
    void setRedrawMode(uint8_t is_redraw_line_for_each_char) {
      u8log_SetRedrawMode(&u8log, is_redraw_line_for_each_char); }
    
    /* virtual function for print base class */    
    size_t write(uint8_t v) {
      u8log_WriteChar(&u8log, v);
    7cfe:	8d 2f       	mov	r24, r29
    7d00:	9c 2f       	mov	r25, r28
    7d02:	82 17       	cp	r24, r18
    7d04:	93 07       	cpc	r25, r19
    7d06:	08 f4       	brcc	.+2      	; 0x7d0a <debugUtil::write(unsigned char)+0x4c>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:43
    b2 = u8g2log.write(c);
    7d08:	c9 01       	movw	r24, r18
    7d0a:	df 91       	pop	r29
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:44
  return b1 > b2 ? b1 : b2;
    7d0c:	cf 91       	pop	r28
    7d0e:	1f 91       	pop	r17
    7d10:	ff 90       	pop	r15
    7d12:	ef 90       	pop	r14
    7d14:	08 95       	ret

00007d16 <UImessageBox::handleUIEvent(K197UIeventsource, K197UIeventType)>:
_ZN12UImessageBox13handleUIEventE17K197UIeventsource15K197UIeventType():
    7d16:	41 30       	cpi	r20, 0x01	; 1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:45
}
    7d18:	51 05       	cpc	r21, r1
    7d1a:	61 f4       	brne	.+24     	; 0x7d34 <UImessageBox::handleUIEvent(K197UIeventsource, K197UIeventType)+0x1e>
_ZN8UIwindow11closeWindowEv.isra.9():
    7d1c:	fc 01       	movw	r30, r24
    7d1e:	24 81       	ldd	r18, Z+4	; 0x04
    7d20:	35 81       	ldd	r19, Z+5	; 0x05
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:509
#pragma GCC diagnostic ignored                                                 \
    "-Wunused-parameter" // A derived class may eturn a different valuse
                         // depending on being selected
bool UImessageBox::handleUIEvent(K197UIeventsource eventSource, K197UIeventType eventType) {
    // Click any button to dismiss this message box. Any other event is ignored.
    if (eventType == UIeventClick) {
    7d22:	21 15       	cp	r18, r1
    7d24:	31 05       	cpc	r19, r1
    7d26:	31 f0       	breq	.+12     	; 0x7d34 <UImessageBox::handleUIEvent(K197UIeventsource, K197UIeventType)+0x1e>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:225
         current menu, that is the object returned by getcurrentWindow(). trying to
         close the root menu has no effect (the root menu has the parent set to
         NULL).
      */
      void closeWindow() {
          if (parent == NULL) return;
    7d28:	20 93 e8 4f 	sts	0x4FE8, r18	; 0x804fe8 <UIwindow::currentWindow>
    7d2c:	30 93 e9 4f 	sts	0x4FE9, r19	; 0x804fe9 <UIwindow::currentWindow+0x1>
    7d30:	14 82       	std	Z+4, r1	; 0x04
    7d32:	15 82       	std	Z+5, r1	; 0x05
_ZN12UImessageBox13handleUIEventE17K197UIeventsource15K197UIeventType():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:226
          currentWindow = parent;
    7d34:	81 e0       	ldi	r24, 0x01	; 1
    7d36:	08 95       	ret

00007d38 <UImessageBox::draw(U8G2*, unsigned int, unsigned int)>:
_ZN12UImessageBox4drawEP4U8G2jj():
    7d38:	2f 92       	push	r2
    7d3a:	3f 92       	push	r3
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:227
          parent = NULL;
    7d3c:	4f 92       	push	r4
    7d3e:	5f 92       	push	r5
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:513
        closeWindow();
    }
    return true;
}
    7d40:	6f 92       	push	r6
    7d42:	7f 92       	push	r7
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:459
    return true;
  }
  return UIMenuButtonItem::handleUIEvent(eventSource, eventType);
}

void UImessageBox::draw(U8G2 *u8g2, u8g2_uint_t x, u8g2_uint_t y) {
    7d44:	8f 92       	push	r8
    7d46:	9f 92       	push	r9
    7d48:	af 92       	push	r10
    7d4a:	bf 92       	push	r11
    7d4c:	cf 92       	push	r12
    7d4e:	df 92       	push	r13
    7d50:	ef 92       	push	r14
    7d52:	ff 92       	push	r15
    7d54:	0f 93       	push	r16
    7d56:	1f 93       	push	r17
    7d58:	cf 93       	push	r28
    7d5a:	df 93       	push	r29
    7d5c:	5c 01       	movw	r10, r24
    7d5e:	eb 01       	movw	r28, r22
    7d60:	6a 01       	movw	r12, r20
    7d62:	39 01       	movw	r6, r18
    7d64:	dc 01       	movw	r26, r24
    7d66:	14 96       	adiw	r26, 0x04	; 4
    7d68:	8d 91       	ld	r24, X+
    7d6a:	9c 91       	ld	r25, X
    7d6c:	00 97       	sbiw	r24, 0x00	; 0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:462
    // draw parent and acquire its height
    u8g2_uint_t parent_width;
    if (parent!=NULL) {
    7d6e:	09 f4       	brne	.+2      	; 0x7d72 <UImessageBox::draw(U8G2*, unsigned int, unsigned int)+0x3a>
    7d70:	f4 c0       	rjmp	.+488    	; 0x7f5a <UImessageBox::draw(U8G2*, unsigned int, unsigned int)+0x222>
    7d72:	dc 01       	movw	r26, r24
    7d74:	ed 91       	ld	r30, X+
    7d76:	fc 91       	ld	r31, X
    7d78:	01 90       	ld	r0, Z+
    7d7a:	f0 81       	ld	r31, Z
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:463
        parent->draw(u8g2, x, y);
    7d7c:	e0 2d       	mov	r30, r0
    7d7e:	09 95       	icall
    7d80:	d5 01       	movw	r26, r10
    7d82:	14 96       	adiw	r26, 0x04	; 4
    7d84:	ed 91       	ld	r30, X+
    7d86:	fc 91       	ld	r31, X
    7d88:	e2 80       	ldd	r14, Z+2	; 0x02
    7d8a:	f3 80       	ldd	r15, Z+3	; 0x03
    7d8c:	f5 01       	movw	r30, r10
    7d8e:	22 81       	ldd	r18, Z+2	; 0x02
    7d90:	33 81       	ldd	r19, Z+3	; 0x03
    7d92:	e2 1a       	sub	r14, r18
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:469
        parent_width=parent->getWidth();
    } else {
        parent_width=u8g2->getDisplayWidth();
    }
    // Calc x and y for this window
    x = x + (parent_width-width)/2;
    7d94:	f3 0a       	sbc	r15, r19
    7d96:	f6 94       	lsr	r15
    7d98:	e7 94       	ror	r14
    7d9a:	ec 0c       	add	r14, r12
    7d9c:	fd 1c       	adc	r15, r13
    7d9e:	fa e2       	ldi	r31, 0x2A	; 42
    7da0:	6f 1a       	sub	r6, r31
    7da2:	71 08       	sbc	r7, r1
    7da4:	fe 01       	movw	r30, r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:470
    y = (u8g2->getDisplayHeight()+y-height)/2;
    7da6:	e4 5b       	subi	r30, 0xB4	; 180
    7da8:	ff 4f       	sbci	r31, 0xFF	; 255
    7daa:	80 81       	ld	r24, Z
    7dac:	91 81       	ldd	r25, Z+1	; 0x01
    7dae:	68 0e       	add	r6, r24
    7db0:	79 1e       	adc	r7, r25
    7db2:	76 94       	lsr	r7
    7db4:	67 94       	ror	r6
_ZN4U8G27setFontEPKh():
    7db6:	6c e1       	ldi	r22, 0x1C	; 28
    7db8:	77 e1       	ldi	r23, 0x17	; 23
    7dba:	6e 01       	movw	r12, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:266
    /* u8log_u8g2.c */
    void drawLog(u8g2_uint_t x, u8g2_uint_t y, class U8G2LOG &u8g2log);
    
    /* u8g2_font.c */

    void setFont(const uint8_t  *font) {u8g2_SetFont(&u8g2, font); }
    7dbc:	84 e0       	ldi	r24, 0x04	; 4
    7dbe:	c8 0e       	add	r12, r24
    7dc0:	d1 1c       	adc	r13, r1
    7dc2:	c6 01       	movw	r24, r12
    7dc4:	76 da       	rcall	.-2836   	; 0x72b2 <u8g2_SetFont>
_ZN4U8G29setCursorEjj():
    7dc6:	2e 01       	movw	r4, r28
    7dc8:	a2 e9       	ldi	r26, 0x92	; 146
    7dca:	4a 0e       	add	r4, r26
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
     /* LiquidCrystal compatible functions */
    void home(void) { tx = 0; ty = 0;  u8x8_utf8_init(u8g2_GetU8x8(&u8g2)); }
    void clear(void) { home(); clearDisplay(); clearBuffer();  }
    void noDisplay(void) { u8g2_SetPowerSave(&u8g2, 1); }
    void display(void) { u8g2_SetPowerSave(&u8g2, 0); }
    void setCursor(u8g2_uint_t x, u8g2_uint_t y) { tx = x; ty = y; }
    7dcc:	51 1c       	adc	r5, r1
    7dce:	f2 01       	movw	r30, r4
    7dd0:	e0 82       	st	Z, r14
    7dd2:	f1 82       	std	Z+1, r15	; 0x01
    7dd4:	1e 01       	movw	r2, r28
    7dd6:	f4 e9       	ldi	r31, 0x94	; 148
    7dd8:	2f 0e       	add	r2, r31
    7dda:	31 1c       	adc	r3, r1
    7ddc:	d1 01       	movw	r26, r2
    7dde:	6d 92       	st	X+, r6
    7de0:	7c 92       	st	X, r7
u8g2_SetFontMode():
    7de2:	4e 01       	movw	r8, r28
    7de4:	bd e6       	ldi	r27, 0x6D	; 109
    7de6:	8b 0e       	add	r8, r27
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:933
    U8G2_FONT_MODE_NONE
  This has been changed for the new font procedures  
*/
void u8g2_SetFontMode(u8g2_t *u8g2, uint8_t is_transparent)
{
  u8g2->font_decode.is_transparent = is_transparent;		// new font procedures
    7de8:	91 1c       	adc	r9, r1
    7dea:	f4 01       	movw	r30, r8
    7dec:	10 82       	st	Z, r1
_ZN4U8G212setDrawColorEh():
    7dee:	60 e0       	ldi	r22, 0x00	; 0
    7df0:	c6 01       	movw	r24, r12
    7df2:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
_ZN4U8G27drawBoxEjjjj():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:218
      { u8x8_RefreshDisplay(u8g2_GetU8x8(&u8g2)); }
    


    /* clib/u8g2.hvline.c */
    void setDrawColor(uint8_t color_index) { u8g2_SetDrawColor(&u8g2, color_index); }
    7df6:	d5 01       	movw	r26, r10
    7df8:	12 96       	adiw	r26, 0x02	; 2
    7dfa:	2d 91       	ld	r18, X+
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:229
      u8g2_DrawHVLine(&u8g2, x, y, len, dir); }
    
    /* u8g2_box.c */
    void drawFrame(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h) { u8g2_DrawFrame(&u8g2, x, y, w, h); }
    void drawRFrame(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h, u8g2_uint_t r) { u8g2_DrawRFrame(&u8g2, x, y, w, h,r); }
    void drawBox(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h) { u8g2_DrawBox(&u8g2, x, y, w, h); }
    7dfc:	3c 91       	ld	r19, X
    7dfe:	0a e2       	ldi	r16, 0x2A	; 42
    7e00:	10 e0       	ldi	r17, 0x00	; 0
    7e02:	a3 01       	movw	r20, r6
    7e04:	b7 01       	movw	r22, r14
    7e06:	c6 01       	movw	r24, r12
    7e08:	fc de       	rcall	.-520    	; 0x7c02 <u8g2_DrawBox>
_ZN4U8G212setDrawColorEh():
    7e0a:	61 e0       	ldi	r22, 0x01	; 1
    7e0c:	c6 01       	movw	r24, r12
    7e0e:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:218
      { u8x8_RefreshDisplay(u8g2_GetU8x8(&u8g2)); }
    


    /* clib/u8g2.hvline.c */
    void setDrawColor(uint8_t color_index) { u8g2_SetDrawColor(&u8g2, color_index); }
    7e12:	61 e0       	ldi	r22, 0x01	; 1
    7e14:	c6 01       	movw	r24, r12
    7e16:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
u8g2_SetFontMode():
    7e1a:	f4 01       	movw	r30, r8
    7e1c:	10 82       	st	Z, r1
_ZN4U8G29drawFrameEjjjj():
    7e1e:	d5 01       	movw	r26, r10
    7e20:	12 96       	adiw	r26, 0x02	; 2
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:933
    7e22:	2d 91       	ld	r18, X+
    7e24:	3c 91       	ld	r19, X
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:227
    void drawVLine(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t h) { u8g2_DrawVLine(&u8g2, x, y, h); }
    void drawHVLine(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir) {
      u8g2_DrawHVLine(&u8g2, x, y, len, dir); }
    
    /* u8g2_box.c */
    void drawFrame(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h) { u8g2_DrawFrame(&u8g2, x, y, w, h); }
    7e26:	a3 01       	movw	r20, r6
    7e28:	b7 01       	movw	r22, r14
    7e2a:	c6 01       	movw	r24, r12
    7e2c:	85 dd       	rcall	.-1270   	; 0x7938 <u8g2_DrawFrame>
_ZN12UImessageBox4drawEP4U8G2jj():
    7e2e:	43 01       	movw	r8, r6
    7e30:	b4 e1       	ldi	r27, 0x14	; 20
    7e32:	8b 0e       	add	r8, r27
    7e34:	91 1c       	adc	r9, r1
    7e36:	f5 01       	movw	r30, r10
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:484

    // Draw window frames
    u8g2->setDrawColor(1);
    u8g2->setFontMode(0);
    u8g2->drawFrame(x, y, width, height);
    u8g2->drawFrame(x+(width-btn_width)/2, y+btn_Offset, btn_width, btn_height);
    7e38:	62 81       	ldd	r22, Z+2	; 0x02
    7e3a:	73 81       	ldd	r23, Z+3	; 0x03
    7e3c:	63 52       	subi	r22, 0x23	; 35
    7e3e:	71 09       	sbc	r23, r1
    7e40:	76 95       	lsr	r23
    7e42:	67 95       	ror	r22
    7e44:	6e 0d       	add	r22, r14
    7e46:	7f 1d       	adc	r23, r15
_ZN4U8G29drawFrameEjjjj():
    7e48:	01 e1       	ldi	r16, 0x11	; 17
    7e4a:	10 e0       	ldi	r17, 0x00	; 0
    7e4c:	23 e2       	ldi	r18, 0x23	; 35
    7e4e:	30 e0       	ldi	r19, 0x00	; 0
    7e50:	a4 01       	movw	r20, r8
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:227
    7e52:	c6 01       	movw	r24, r12
    7e54:	71 dd       	rcall	.-1310   	; 0x7938 <u8g2_DrawFrame>
u8g2_SetFontPosTop():
    7e56:	80 e1       	ldi	r24, 0x10	; 16
    7e58:	98 e3       	ldi	r25, 0x38	; 56
    7e5a:	fe 01       	movw	r30, r28
    7e5c:	e0 5a       	subi	r30, 0xA0	; 160
    7e5e:	ff 4f       	sbci	r31, 0xFF	; 255
    7e60:	80 83       	st	Z, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1259
  return tmp;
}

void u8g2_SetFontPosTop(u8g2_t *u8g2)
{
  u8g2->font_calc_vref = u8g2_font_calc_vref_top;
    7e62:	91 83       	std	Z+1, r25	; 0x01
u8g2_SetFontRefHeightExtendedText():
    7e64:	81 e0       	ldi	r24, 0x01	; 1
    7e66:	b9 96       	adiw	r30, 0x29	; 41
    7e68:	80 83       	st	Z, r24
    7e6a:	c6 01       	movw	r24, r12
    7e6c:	e2 d8       	rcall	.-3644   	; 0x7032 <u8g2_UpdateRefHeight>
u8g2_SetFontDirection():
    7e6e:	fe 01       	movw	r30, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1214
  u8g2_UpdateRefHeight(u8g2);
}

void u8g2_SetFontRefHeightExtendedText(u8g2_t *u8g2)
{
  u8g2->font_height_mode = U8G2_FONT_HEIGHT_MODE_XTEXT;
    7e70:	e0 59       	subi	r30, 0x90	; 144
    7e72:	ff 4f       	sbci	r31, 0xFF	; 255
    7e74:	10 82       	st	Z, r1
_ZN12UImessageBox4drawEP4U8G2jj():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1215
  u8g2_UpdateRefHeight(u8g2);
    7e76:	6e 01       	movw	r12, r28
    7e78:	fa e7       	ldi	r31, 0x7A	; 122
    7e7a:	cf 0e       	add	r12, r31
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1537


void u8g2_SetFontDirection(u8g2_t *u8g2, uint8_t dir)
{
#ifdef U8G2_WITH_FONT_ROTATION  
  u8g2->font_decode.dir = dir;
    7e7c:	d1 1c       	adc	r13, r1
    7e7e:	d6 01       	movw	r26, r12
    7e80:	4c 91       	ld	r20, X
    7e82:	04 2e       	mov	r0, r20
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:492
    u8g2->setFontPosTop();
    u8g2->setFontRefHeightExtendedText();
    u8g2->setFontDirection(0);
    
    // print message
    u8g2_uint_t text_width = u8g2->getMaxCharWidth()*strlen(text); // monospace font
    7e84:	00 0c       	add	r0, r0
    7e86:	55 0b       	sbc	r21, r21
    7e88:	f5 01       	movw	r30, r10
    7e8a:	66 81       	ldd	r22, Z+6	; 0x06
    7e8c:	77 81       	ldd	r23, Z+7	; 0x07
    7e8e:	90 e0       	ldi	r25, 0x00	; 0
    7e90:	80 e0       	ldi	r24, 0x00	; 0
strlen():
    7e92:	fb 01       	movw	r30, r22
    7e94:	e8 0f       	add	r30, r24
    7e96:	f9 1f       	adc	r31, r25
    7e98:	e4 91       	lpm	r30, Z
    7e9a:	ee 23       	and	r30, r30
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:36
UIwindow *UIwindow::currentWindow = NULL;

size_t strlen(const __FlashStringHelper *ifsh, size_t max=100) {
  PGM_P p = reinterpret_cast<PGM_P>(ifsh);
  size_t n;
  for (n=0; n<=max; n++) {
    7e9c:	21 f0       	breq	.+8      	; 0x7ea6 <UImessageBox::draw(U8G2*, unsigned int, unsigned int)+0x16e>
    7e9e:	01 96       	adiw	r24, 0x01	; 1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:37
    if ( pgm_read_byte(p++) == 0 ) break;
    7ea0:	85 36       	cpi	r24, 0x65	; 101
    7ea2:	91 05       	cpc	r25, r1
    7ea4:	b1 f7       	brne	.-20     	; 0x7e92 <UImessageBox::draw(U8G2*, unsigned int, unsigned int)+0x15a>
_ZN12UImessageBox4drawEP4U8G2jj():
    7ea6:	48 9f       	mul	r20, r24
    7ea8:	90 01       	movw	r18, r0
    7eaa:	49 9f       	mul	r20, r25
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:36
UIwindow *UIwindow::currentWindow = NULL;

size_t strlen(const __FlashStringHelper *ifsh, size_t max=100) {
  PGM_P p = reinterpret_cast<PGM_P>(ifsh);
  size_t n;
  for (n=0; n<=max; n++) {
    7eac:	30 0d       	add	r19, r0
    7eae:	58 9f       	mul	r21, r24
    7eb0:	30 0d       	add	r19, r0
    7eb2:	11 24       	eor	r1, r1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:492
    u8g2->setFontPosTop();
    u8g2->setFontRefHeightExtendedText();
    u8g2->setFontDirection(0);
    
    // print message
    u8g2_uint_t text_width = u8g2->getMaxCharWidth()*strlen(text); // monospace font
    7eb4:	d5 01       	movw	r26, r10
    7eb6:	12 96       	adiw	r26, 0x02	; 2
    7eb8:	8d 91       	ld	r24, X+
    7eba:	9c 91       	ld	r25, X
    7ebc:	ac 01       	movw	r20, r24
    7ebe:	28 17       	cp	r18, r24
    7ec0:	39 07       	cpc	r19, r25
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:493
    if (text_width>width) text_width = width;
    7ec2:	08 f4       	brcc	.+2      	; 0x7ec6 <UImessageBox::draw(U8G2*, unsigned int, unsigned int)+0x18e>
    7ec4:	a9 01       	movw	r20, r18
    7ec6:	84 1b       	sub	r24, r20
    7ec8:	95 0b       	sbc	r25, r21
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:494
    u8g2->setCursor(x+(width-text_width)/2, y+text_offset_y);
    7eca:	96 95       	lsr	r25
    7ecc:	87 95       	ror	r24
    7ece:	8e 0d       	add	r24, r14
    7ed0:	9f 1d       	adc	r25, r15
_ZN4U8G29setCursorEjj():
    7ed2:	f2 01       	movw	r30, r4
    7ed4:	80 83       	st	Z, r24
    7ed6:	91 83       	std	Z+1, r25	; 0x01
_ZN12UImessageBox4drawEP4U8G2jj():
    7ed8:	f3 e0       	ldi	r31, 0x03	; 3
    7eda:	6f 0e       	add	r6, r31
    7edc:	71 1c       	adc	r7, r1
_ZN4U8G29setCursorEjj():
    7ede:	d1 01       	movw	r26, r2
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
     /* LiquidCrystal compatible functions */
    void home(void) { tx = 0; ty = 0;  u8x8_utf8_init(u8g2_GetU8x8(&u8g2)); }
    void clear(void) { home(); clearDisplay(); clearBuffer();  }
    void noDisplay(void) { u8g2_SetPowerSave(&u8g2, 1); }
    void display(void) { u8g2_SetPowerSave(&u8g2, 0); }
    void setCursor(u8g2_uint_t x, u8g2_uint_t y) { tx = x; ty = y; }
    7ee0:	6d 92       	st	X+, r6
    7ee2:	7c 92       	st	X, r7
_ZN12UImessageBox4drawEP4U8G2jj():
    7ee4:	ce 01       	movw	r24, r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:494
    7ee6:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    7eea:	fe 01       	movw	r30, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
    7eec:	e5 58       	subi	r30, 0x85	; 133
    7eee:	ff 4f       	sbci	r31, 0xFF	; 255
    7ef0:	20 81       	ld	r18, Z
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:495
    u8g2->print(text);
    7ef2:	81 e1       	ldi	r24, 0x11	; 17
    7ef4:	90 e0       	ldi	r25, 0x00	; 0
    7ef6:	82 1b       	sub	r24, r18
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:498

    // print "Ok" text
    u8g2->setCursor(x+width/2-u8g2->getMaxCharWidth(), y+btn_Offset+(btn_height-u8g2->getMaxCharHeight())/2);
    7ef8:	91 09       	sbc	r25, r1
    7efa:	27 fd       	sbrc	r18, 7
    7efc:	93 95       	inc	r25
    7efe:	96 95       	lsr	r25
    7f00:	87 95       	ror	r24
    7f02:	88 0e       	add	r8, r24
    7f04:	99 1e       	adc	r9, r25
    7f06:	f5 01       	movw	r30, r10
    7f08:	82 81       	ldd	r24, Z+2	; 0x02
    7f0a:	93 81       	ldd	r25, Z+3	; 0x03
    7f0c:	96 95       	lsr	r25
    7f0e:	87 95       	ror	r24
    7f10:	d6 01       	movw	r26, r12
    7f12:	2c 91       	ld	r18, X
    7f14:	82 1b       	sub	r24, r18
    7f16:	91 09       	sbc	r25, r1
    7f18:	27 fd       	sbrc	r18, 7
    7f1a:	93 95       	inc	r25
    7f1c:	e8 0e       	add	r14, r24
    7f1e:	f9 1e       	adc	r15, r25
_ZN4U8G29setCursorEjj():
    7f20:	f2 01       	movw	r30, r4
    7f22:	e0 82       	st	Z, r14
    7f24:	f1 82       	std	Z+1, r15	; 0x01
    7f26:	d1 01       	movw	r26, r2
    7f28:	8d 92       	st	X+, r8
    7f2a:	9c 92       	st	X, r9
_ZN12UImessageBox4drawEP4U8G2jj():
    7f2c:	64 ef       	ldi	r22, 0xF4	; 244
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
    7f2e:	77 e0       	ldi	r23, 0x07	; 7
    7f30:	ce 01       	movw	r24, r28
    7f32:	df 91       	pop	r29
    7f34:	cf 91       	pop	r28
    7f36:	1f 91       	pop	r17
    7f38:	0f 91       	pop	r16
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:499
    u8g2->print(F("Ok"));
    7f3a:	ff 90       	pop	r15
    7f3c:	ef 90       	pop	r14
    7f3e:	df 90       	pop	r13
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:500
}
    7f40:	cf 90       	pop	r12
    7f42:	bf 90       	pop	r11
    7f44:	af 90       	pop	r10
    7f46:	9f 90       	pop	r9
    7f48:	8f 90       	pop	r8
    7f4a:	7f 90       	pop	r7
    7f4c:	6f 90       	pop	r6
    7f4e:	5f 90       	pop	r5
    7f50:	4f 90       	pop	r4
    7f52:	3f 90       	pop	r3
    7f54:	2f 90       	pop	r2
    7f56:	0c 94 c4 2f 	jmp	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    7f5a:	fb 01       	movw	r30, r22
    7f5c:	e6 5b       	subi	r30, 0xB6	; 182
    7f5e:	ff 4f       	sbci	r31, 0xFF	; 255
    7f60:	e0 80       	ld	r14, Z
    7f62:	f1 80       	ldd	r15, Z+1	; 0x01
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:499
    u8g2->setCursor(x+(width-text_width)/2, y+text_offset_y);
    u8g2->print(text);

    // print "Ok" text
    u8g2->setCursor(x+width/2-u8g2->getMaxCharWidth(), y+btn_Offset+(btn_height-u8g2->getMaxCharHeight())/2);
    u8g2->print(F("Ok"));
    7f64:	13 cf       	rjmp	.-474    	; 0x7d8c <UImessageBox::draw(U8G2*, unsigned int, unsigned int)+0x54>

00007f66 <UImenu::handleUIEvent(K197UIeventsource, K197UIeventType)>:
_ZN6UImenu13handleUIEventE17K197UIeventsource15K197UIeventType():
    7f66:	cf 92       	push	r12
    7f68:	df 92       	push	r13
    7f6a:	ff 92       	push	r15
    7f6c:	0f 93       	push	r16
    7f6e:	1f 93       	push	r17
    7f70:	cf 93       	push	r28
    7f72:	df 93       	push	r29
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:218
     @param eventSource the source of the event (see K197UIeventsource)
     @param eventType the type of event (see K197UIeventType)
     @return true if the event has been entirely handled by this object
*/
bool UImenu::handleUIEvent(K197UIeventsource eventSource,
                           K197UIeventType eventType) {
    7f74:	ec 01       	movw	r28, r24
    7f76:	6b 01       	movw	r12, r22
    7f78:	8a 01       	movw	r16, r20
    7f7a:	8a 85       	ldd	r24, Y+10	; 0x0a
    7f7c:	90 e0       	ldi	r25, 0x00	; 0
    7f7e:	88 0f       	add	r24, r24
    7f80:	99 1f       	adc	r25, r25
    7f82:	2e 81       	ldd	r18, Y+6	; 0x06
    7f84:	3f 81       	ldd	r19, Y+7	; 0x07
    7f86:	82 0f       	add	r24, r18
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:219
  if (items[selectedItem]->handleUIEvent(eventSource, eventType))
    7f88:	93 1f       	adc	r25, r19
    7f8a:	dc 01       	movw	r26, r24
    7f8c:	8d 91       	ld	r24, X+
    7f8e:	9c 91       	ld	r25, X
    7f90:	dc 01       	movw	r26, r24
    7f92:	ed 91       	ld	r30, X+
    7f94:	fc 91       	ld	r31, X
    7f96:	04 80       	ldd	r0, Z+4	; 0x04
    7f98:	f5 81       	ldd	r31, Z+5	; 0x05
    7f9a:	e0 2d       	mov	r30, r0
    7f9c:	09 95       	icall
    7f9e:	f8 2e       	mov	r15, r24
    7fa0:	81 11       	cpse	r24, r1
    7fa2:	29 c0       	rjmp	.+82     	; 0x7ff6 <UImenu::handleUIEvent(K197UIeventsource, K197UIeventType)+0x90>
    7fa4:	b3 e2       	ldi	r27, 0x23	; 35
    7fa6:	cb 16       	cp	r12, r27
    7fa8:	d1 04       	cpc	r13, r1
    7faa:	71 f5       	brne	.+92     	; 0x8008 <__RODATA_PM_OFFSET__+0x8>
    7fac:	01 51       	subi	r16, 0x11	; 17
    7fae:	11 09       	sbc	r17, r1
    7fb0:	03 30       	cpi	r16, 0x03	; 3
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:221
    return true;
  if (eventSource == K197key_DB &&
    7fb2:	11 05       	cpc	r17, r1
    7fb4:	00 f5       	brcc	.+64     	; 0x7ff6 <UImenu::handleUIEvent(K197UIeventsource, K197UIeventType)+0x90>
    7fb6:	1a 85       	ldd	r17, Y+10	; 0x0a
    7fb8:	88 85       	ldd	r24, Y+8	; 0x08
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:222
      (eventType == UIeventPress || eventType == UIeventLongPress ||
    7fba:	81 50       	subi	r24, 0x01	; 1
    7fbc:	99 0b       	sbc	r25, r25
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:221
*/
bool UImenu::handleUIEvent(K197UIeventsource eventSource,
                           K197UIeventType eventType) {
  if (items[selectedItem]->handleUIEvent(eventSource, eventType))
    return true;
  if (eventSource == K197key_DB &&
    7fbe:	18 17       	cp	r17, r24
    7fc0:	19 06       	cpc	r1, r25
    7fc2:	cc f4       	brge	.+50     	; 0x7ff6 <UImenu::handleUIEvent(K197UIeventsource, K197UIeventType)+0x90>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:224
      (eventType == UIeventPress || eventType == UIeventLongPress ||
       eventType == UIeventHold)) { // down
    if (selectedItem >= (num_items - 1))
    7fc4:	1f 5f       	subi	r17, 0xFF	; 255
    7fc6:	88 85       	ldd	r24, Y+8	; 0x08
    7fc8:	18 17       	cp	r17, r24
    7fca:	a8 f4       	brcc	.+42     	; 0x7ff6 <UImenu::handleUIEvent(K197UIeventsource, K197UIeventType)+0x90>
    7fcc:	81 2f       	mov	r24, r17
    7fce:	90 e0       	ldi	r25, 0x00	; 0
    7fd0:	88 0f       	add	r24, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:226
      return false;
    for (byte i = selectedItem + 1; i < num_items; i++) {
    7fd2:	99 1f       	adc	r25, r25
    7fd4:	ee 81       	ldd	r30, Y+6	; 0x06
    7fd6:	ff 81       	ldd	r31, Y+7	; 0x07
    7fd8:	e8 0f       	add	r30, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:227
      if (items[i]->selectable()) {
    7fda:	f9 1f       	adc	r31, r25
    7fdc:	80 81       	ld	r24, Z
    7fde:	91 81       	ldd	r25, Z+1	; 0x01
    7fe0:	dc 01       	movw	r26, r24
    7fe2:	ed 91       	ld	r30, X+
    7fe4:	fc 91       	ld	r31, X
    7fe6:	06 80       	ldd	r0, Z+6	; 0x06
    7fe8:	f7 81       	ldd	r31, Z+7	; 0x07
    7fea:	e0 2d       	mov	r30, r0
    7fec:	09 95       	icall
    7fee:	88 23       	and	r24, r24
    7ff0:	49 f3       	breq	.-46     	; 0x7fc4 <UImenu::handleUIEvent(K197UIeventsource, K197UIeventType)+0x5e>
    7ff2:	1a 87       	std	Y+10, r17	; 0x0a
    7ff4:	f8 2e       	mov	r15, r24
    7ff6:	8f 2d       	mov	r24, r15
    7ff8:	df 91       	pop	r29
    7ffa:	cf 91       	pop	r28
    7ffc:	1f 91       	pop	r17
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:228
        selectedItem = i;
    7ffe:	0f 91       	pop	r16
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:241
    if (selectedItem == 0)
      return false;
    for (byte i = selectedItem; i > 0; i--) {
      if (items[i - 1]->selectable()) {
        selectedItem = i - 1;
        return true;
    8000:	ff 90       	pop	r15
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:246
      }
    }
  }
  return false;
}
    8002:	df 90       	pop	r13
    8004:	cf 90       	pop	r12
    8006:	08 95       	ret
    8008:	b2 e2       	ldi	r27, 0x22	; 34
    800a:	cb 16       	cp	r12, r27
    800c:	d1 04       	cpc	r13, r1
    800e:	99 f7       	brne	.-26     	; 0x7ff6 <UImenu::handleUIEvent(K197UIeventsource, K197UIeventType)+0x90>
    8010:	01 30       	cpi	r16, 0x01	; 1
    8012:	11 05       	cpc	r17, r1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:235
      }
    }
  }
  // In the following we use click events to be able to assign the LongPress to
  // other events
  if (eventSource == K197key_REL && eventType == UIeventClick) { // up
    8014:	81 f7       	brne	.-32     	; 0x7ff6 <UImenu::handleUIEvent(K197UIeventsource, K197UIeventType)+0x90>
    8016:	da 84       	ldd	r13, Y+10	; 0x0a
    8018:	dd 20       	and	r13, r13
    801a:	69 f3       	breq	.-38     	; 0x7ff6 <UImenu::handleUIEvent(K197UIeventsource, K197UIeventType)+0x90>
    801c:	8d 2d       	mov	r24, r13
    801e:	90 e0       	ldi	r25, 0x00	; 0
    8020:	81 50       	subi	r24, 0x01	; 1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:236
    if (selectedItem == 0)
    8022:	90 48       	sbci	r25, 0x80	; 128
    8024:	8c 01       	movw	r16, r24
    8026:	00 0f       	add	r16, r16
    8028:	11 1f       	adc	r17, r17
    802a:	ee 81       	ldd	r30, Y+6	; 0x06
    802c:	ff 81       	ldd	r31, Y+7	; 0x07
    802e:	e0 0f       	add	r30, r16
    8030:	f1 1f       	adc	r31, r17
    8032:	80 81       	ld	r24, Z
    8034:	91 81       	ldd	r25, Z+1	; 0x01
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:239
      return false;
    for (byte i = selectedItem; i > 0; i--) {
      if (items[i - 1]->selectable()) {
    8036:	dc 01       	movw	r26, r24
    8038:	ed 91       	ld	r30, X+
    803a:	fc 91       	ld	r31, X
    803c:	06 80       	ldd	r0, Z+6	; 0x06
    803e:	f7 81       	ldd	r31, Z+7	; 0x07
    8040:	e0 2d       	mov	r30, r0
    8042:	09 95       	icall
    8044:	da 94       	dec	r13
    8046:	88 23       	and	r24, r24
    8048:	11 f0       	breq	.+4      	; 0x804e <__RODATA_PM_OFFSET__+0x4e>
    804a:	da 86       	std	Y+10, r13	; 0x0a
    804c:	d3 cf       	rjmp	.-90     	; 0x7ff4 <UImenu::handleUIEvent(K197UIeventsource, K197UIeventType)+0x8e>
    804e:	02 50       	subi	r16, 0x02	; 2
    8050:	11 09       	sbc	r17, r1
    8052:	d1 10       	cpse	r13, r1
    8054:	ea cf       	rjmp	.-44     	; 0x802a <__RODATA_PM_OFFSET__+0x2a>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:240
        selectedItem = i - 1;
    8056:	cf cf       	rjmp	.-98     	; 0x7ff6 <UImenu::handleUIEvent(K197UIeventsource, K197UIeventType)+0x90>

00008058 <UImenu::draw(U8G2*, unsigned int, unsigned int)>:
_ZN6UImenu4drawEP4U8G2jj():
    8058:	2f 92       	push	r2
    805a:	3f 92       	push	r3
    805c:	4f 92       	push	r4
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:238
  // In the following we use click events to be able to assign the LongPress to
  // other events
  if (eventSource == K197key_REL && eventType == UIeventClick) { // up
    if (selectedItem == 0)
      return false;
    for (byte i = selectedItem; i > 0; i--) {
    805e:	5f 92       	push	r5
    8060:	6f 92       	push	r6
    8062:	7f 92       	push	r7
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:136
     @brief draw the menu
     @param u8g2 a poimnter to the u8g2 library object
     @param x the x coordinate of the top/left corner
     @param y the y coordinate of the top/left corner
*/
void UImenu::draw(U8G2 *u8g2, u8g2_uint_t x, u8g2_uint_t y) {
    8064:	8f 92       	push	r8
    8066:	9f 92       	push	r9
    8068:	af 92       	push	r10
    806a:	bf 92       	push	r11
    806c:	cf 92       	push	r12
    806e:	df 92       	push	r13
    8070:	ef 92       	push	r14
    8072:	ff 92       	push	r15
    8074:	0f 93       	push	r16
    8076:	1f 93       	push	r17
    8078:	cf 93       	push	r28
    807a:	df 93       	push	r29
    807c:	cd b7       	in	r28, 0x3d	; 61
    807e:	de b7       	in	r29, 0x3e	; 62
    8080:	26 97       	sbiw	r28, 0x06	; 6
    8082:	cd bf       	out	0x3d, r28	; 61
    8084:	de bf       	out	0x3e, r29	; 62
    8086:	8d 83       	std	Y+5, r24	; 0x05
    8088:	9e 83       	std	Y+6, r25	; 0x06
    808a:	6b 01       	movw	r12, r22
    808c:	2a 01       	movw	r4, r20
    808e:	59 01       	movw	r10, r18
_ZN4U8G27setFontEPKh():
    8090:	3b 01       	movw	r6, r22
    8092:	84 e0       	ldi	r24, 0x04	; 4
    8094:	68 0e       	add	r6, r24
    8096:	71 1c       	adc	r7, r1
    8098:	6c e1       	ldi	r22, 0x1C	; 28
    809a:	77 e1       	ldi	r23, 0x17	; 23
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:266
    /* u8log_u8g2.c */
    void drawLog(u8g2_uint_t x, u8g2_uint_t y, class U8G2LOG &u8g2log);
    
    /* u8g2_font.c */

    void setFont(const uint8_t  *font) {u8g2_SetFont(&u8g2, font); }
    809c:	c3 01       	movw	r24, r6
    809e:	09 d9       	rcall	.-3566   	; 0x72b2 <u8g2_SetFont>
_ZN4U8G29setCursorEjj():
    80a0:	f6 01       	movw	r30, r12
    80a2:	ee 56       	subi	r30, 0x6E	; 110
    80a4:	ff 4f       	sbci	r31, 0xFF	; 255
    80a6:	40 82       	st	Z, r4
    80a8:	51 82       	std	Z+1, r5	; 0x01
    80aa:	32 96       	adiw	r30, 0x02	; 2
    80ac:	a0 82       	st	Z, r10
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
     /* LiquidCrystal compatible functions */
    void home(void) { tx = 0; ty = 0;  u8x8_utf8_init(u8g2_GetU8x8(&u8g2)); }
    void clear(void) { home(); clearDisplay(); clearBuffer();  }
    void noDisplay(void) { u8g2_SetPowerSave(&u8g2, 1); }
    void display(void) { u8g2_SetPowerSave(&u8g2, 0); }
    void setCursor(u8g2_uint_t x, u8g2_uint_t y) { tx = x; ty = y; }
    80ae:	b1 82       	std	Z+1, r11	; 0x01
u8g2_SetFontMode():
    80b0:	d6 01       	movw	r26, r12
    80b2:	a3 59       	subi	r26, 0x93	; 147
    80b4:	bf 4f       	sbci	r27, 0xFF	; 255
    80b6:	ab 83       	std	Y+3, r26	; 0x03
    80b8:	bc 83       	std	Y+4, r27	; 0x04
    80ba:	1c 92       	st	X, r1
_ZN4U8G212setDrawColorEh():
    80bc:	60 e0       	ldi	r22, 0x00	; 0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:933
    U8G2_FONT_MODE_NONE
  This has been changed for the new font procedures  
*/
void u8g2_SetFontMode(u8g2_t *u8g2, uint8_t is_transparent)
{
  u8g2->font_decode.is_transparent = is_transparent;		// new font procedures
    80be:	c3 01       	movw	r24, r6
    80c0:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
    80c4:	f6 01       	movw	r30, r12
    80c6:	e4 5b       	subi	r30, 0xB4	; 180
    80c8:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:218
      { u8x8_RefreshDisplay(u8g2_GetU8x8(&u8g2)); }
    


    /* clib/u8g2.hvline.c */
    void setDrawColor(uint8_t color_index) { u8g2_SetDrawColor(&u8g2, color_index); }
    80ca:	80 81       	ld	r24, Z
    80cc:	91 81       	ldd	r25, Z+1	; 0x01
    80ce:	89 83       	std	Y+1, r24	; 0x01
    80d0:	9a 83       	std	Y+2, r25	; 0x02
makeSelectedItemVisible():
    80d2:	ad 81       	ldd	r26, Y+5	; 0x05
    80d4:	be 81       	ldd	r27, Y+6	; 0x06
    80d6:	1a 96       	adiw	r26, 0x0a	; 10
    80d8:	8c 91       	ld	r24, X
    80da:	1a 97       	sbiw	r26, 0x0a	; 10
    80dc:	19 96       	adiw	r26, 0x09	; 9
    80de:	9c 91       	ld	r25, X
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:187
     @param y0 the y coordinate of the top of the menu
     @param y1 the y coordinate of the menu bottom

*/
void UImenu::makeSelectedItemVisible(u8g2_uint_t y0, u8g2_uint_t y1) {
  if (selectedItem < firstVisibleItem) {
    80e0:	89 17       	cp	r24, r25
    80e2:	08 f4       	brcc	.+2      	; 0x80e6 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x8e>
    80e4:	4d c0       	rjmp	.+154    	; 0x8180 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x128>
selectedItemVisible():
    80e6:	ed 81       	ldd	r30, Y+5	; 0x05
    80e8:	fe 81       	ldd	r31, Y+6	; 0x06
    80ea:	82 85       	ldd	r24, Z+10	; 0x0a
    80ec:	01 85       	ldd	r16, Z+9	; 0x09
    80ee:	80 17       	cp	r24, r16
    80f0:	d8 f1       	brcs	.+118    	; 0x8168 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x110>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:166
     @param y1 the y coordinate of the menu bottom
     @return true if the selected menu item is visible given the
   firstVisibleItem and the menu window dimension specified by y0 and y1
*/
bool UImenu::selectedItemVisible(u8g2_uint_t y0, u8g2_uint_t y1) {
  if (selectedItem < firstVisibleItem)
    80f2:	80 17       	cp	r24, r16
    80f4:	09 f4       	brne	.+2      	; 0x80f8 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0xa0>
    80f6:	48 c0       	rjmp	.+144    	; 0x8188 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x130>
    80f8:	10 e0       	ldi	r17, 0x00	; 0
    80fa:	48 01       	movw	r8, r16
    80fc:	88 0c       	add	r8, r8
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:168
    return false;
  if (selectedItem == firstVisibleItem)
    80fe:	99 1c       	adc	r9, r9
    8100:	75 01       	movw	r14, r10
    8102:	ad 81       	ldd	r26, Y+5	; 0x05
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:170
    return true;
  for (int i = firstVisibleItem; i < num_items; i++) {
    8104:	be 81       	ldd	r27, Y+6	; 0x06
    8106:	18 96       	adiw	r26, 0x08	; 8
    8108:	8c 91       	ld	r24, X
    810a:	18 97       	sbiw	r26, 0x08	; 8
    810c:	80 17       	cp	r24, r16
    810e:	11 06       	cpc	r1, r17
    8110:	59 f1       	breq	.+86     	; 0x8168 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x110>
    8112:	54 f1       	brlt	.+84     	; 0x8168 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x110>
    8114:	16 96       	adiw	r26, 0x06	; 6
    8116:	ed 91       	ld	r30, X+
    8118:	fc 91       	ld	r31, X
    811a:	17 97       	sbiw	r26, 0x07	; 7
    811c:	e8 0d       	add	r30, r8
    811e:	f9 1d       	adc	r31, r9
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:171
    y0 += items[i]->getHeight(i == selectedItem ? true : false);
    8120:	80 81       	ld	r24, Z
    8122:	91 81       	ldd	r25, Z+1	; 0x01
    8124:	1a 96       	adiw	r26, 0x0a	; 10
    8126:	2c 91       	ld	r18, X
    8128:	61 e0       	ldi	r22, 0x01	; 1
    812a:	20 17       	cp	r18, r16
    812c:	11 06       	cpc	r1, r17
    812e:	09 f0       	breq	.+2      	; 0x8132 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0xda>
    8130:	60 e0       	ldi	r22, 0x00	; 0
    8132:	dc 01       	movw	r26, r24
    8134:	ed 91       	ld	r30, X+
    8136:	fc 91       	ld	r31, X
    8138:	01 90       	ld	r0, Z+
    813a:	f0 81       	ld	r31, Z
    813c:	e0 2d       	mov	r30, r0
    813e:	09 95       	icall
    8140:	e8 0e       	add	r14, r24
    8142:	f9 1e       	adc	r15, r25
    8144:	e9 81       	ldd	r30, Y+1	; 0x01
    8146:	fa 81       	ldd	r31, Y+2	; 0x02
    8148:	ee 15       	cp	r30, r14
    814a:	ff 05       	cpc	r31, r15
    814c:	68 f0       	brcs	.+26     	; 0x8168 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x110>
    814e:	f2 e0       	ldi	r31, 0x02	; 2
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:172
    if (y0 > y1)
    8150:	8f 0e       	add	r8, r31
    8152:	91 1c       	adc	r9, r1
    8154:	ad 81       	ldd	r26, Y+5	; 0x05
    8156:	be 81       	ldd	r27, Y+6	; 0x06
    8158:	1a 96       	adiw	r26, 0x0a	; 10
    815a:	8c 91       	ld	r24, X
    815c:	80 17       	cp	r24, r16
    815e:	11 06       	cpc	r1, r17
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:174
      break;
    if (selectedItem == i)
    8160:	99 f0       	breq	.+38     	; 0x8188 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x130>
    8162:	0f 5f       	subi	r16, 0xFF	; 255
    8164:	1f 4f       	sbci	r17, 0xFF	; 255
    8166:	cd cf       	rjmp	.-102    	; 0x8102 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0xaa>
makeSelectedItemVisible():
    8168:	ed 81       	ldd	r30, Y+5	; 0x05
    816a:	fe 81       	ldd	r31, Y+6	; 0x06
    816c:	81 85       	ldd	r24, Z+9	; 0x09
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:170
bool UImenu::selectedItemVisible(u8g2_uint_t y0, u8g2_uint_t y1) {
  if (selectedItem < firstVisibleItem)
    return false;
  if (selectedItem == firstVisibleItem)
    return true;
  for (int i = firstVisibleItem; i < num_items; i++) {
    816e:	20 85       	ldd	r18, Z+8	; 0x08
    8170:	21 50       	subi	r18, 0x01	; 1
    8172:	33 0b       	sbc	r19, r19
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:192
  if (selectedItem < firstVisibleItem) {
    firstVisibleItem = selectedItem;
    return;
  }
  while (!selectedItemVisible(y0, y1)) {
    if (firstVisibleItem >= (num_items - 1))
    8174:	82 17       	cp	r24, r18
    8176:	13 06       	cpc	r1, r19
    8178:	3c f4       	brge	.+14     	; 0x8188 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x130>
    817a:	8f 5f       	subi	r24, 0xFF	; 255
    817c:	81 87       	std	Z+9, r24	; 0x09
    817e:	b3 cf       	rjmp	.-154    	; 0x80e6 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x8e>
    8180:	ad 81       	ldd	r26, Y+5	; 0x05
    8182:	be 81       	ldd	r27, Y+6	; 0x06
    8184:	19 96       	adiw	r26, 0x09	; 9
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:194
      break;
    firstVisibleItem++;
    8186:	8c 93       	st	X, r24
_ZN4U8G27drawBoxEjjjj():
    8188:	ed 81       	ldd	r30, Y+5	; 0x05
    818a:	fe 81       	ldd	r31, Y+6	; 0x06
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:188
     @param y1 the y coordinate of the menu bottom

*/
void UImenu::makeSelectedItemVisible(u8g2_uint_t y0, u8g2_uint_t y1) {
  if (selectedItem < firstVisibleItem) {
    firstVisibleItem = selectedItem;
    818c:	22 81       	ldd	r18, Z+2	; 0x02
    818e:	33 81       	ldd	r19, Z+3	; 0x03
    8190:	09 81       	ldd	r16, Y+1	; 0x01
    8192:	1a 81       	ldd	r17, Y+2	; 0x02
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:229
      u8g2_DrawHVLine(&u8g2, x, y, len, dir); }
    
    /* u8g2_box.c */
    void drawFrame(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h) { u8g2_DrawFrame(&u8g2, x, y, w, h); }
    void drawRFrame(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h, u8g2_uint_t r) { u8g2_DrawRFrame(&u8g2, x, y, w, h,r); }
    void drawBox(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h) { u8g2_DrawBox(&u8g2, x, y, w, h); }
    8194:	0a 19       	sub	r16, r10
    8196:	1b 09       	sbc	r17, r11
    8198:	a5 01       	movw	r20, r10
    819a:	b2 01       	movw	r22, r4
    819c:	c3 01       	movw	r24, r6
    819e:	31 dd       	rcall	.-1438   	; 0x7c02 <u8g2_DrawBox>
_ZN4U8G212setDrawColorEh():
    81a0:	61 e0       	ldi	r22, 0x01	; 1
    81a2:	c3 01       	movw	r24, r6
    81a4:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
_ZN6UImenu4drawEP4U8G2jj():
    81a8:	ad 81       	ldd	r26, Y+5	; 0x05
    81aa:	be 81       	ldd	r27, Y+6	; 0x06
    81ac:	19 96       	adiw	r26, 0x09	; 9
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:218
      { u8x8_RefreshDisplay(u8g2_GetU8x8(&u8g2)); }
    


    /* clib/u8g2.hvline.c */
    void setDrawColor(uint8_t color_index) { u8g2_SetDrawColor(&u8g2, color_index); }
    81ae:	8c 90       	ld	r8, X
    81b0:	91 2c       	mov	r9, r1
    81b2:	14 01       	movw	r2, r8
    81b4:	22 0c       	add	r2, r2
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:145
  u8g2->setDrawColor(0);
  u8g2_uint_t ymax = u8g2->getDisplayHeight();
  makeSelectedItemVisible(y, ymax);
  u8g2->drawBox(x, y, width, ymax - y);
  u8g2->setDrawColor(1);
  for (int i = firstVisibleItem; i < num_items; i++) {
    81b6:	33 1c       	adc	r3, r3
    81b8:	ed 81       	ldd	r30, Y+5	; 0x05
    81ba:	fe 81       	ldd	r31, Y+6	; 0x06
    81bc:	80 85       	ldd	r24, Z+8	; 0x08
    81be:	88 15       	cp	r24, r8
    81c0:	19 04       	cpc	r1, r9
    81c2:	09 f0       	breq	.+2      	; 0x81c6 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x16e>
    81c4:	0c f4       	brge	.+2      	; 0x81c8 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x170>
    81c6:	45 c0       	rjmp	.+138    	; 0x8252 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x1fa>
    81c8:	06 80       	ldd	r0, Z+6	; 0x06
    81ca:	f7 81       	ldd	r31, Z+7	; 0x07
    81cc:	e0 2d       	mov	r30, r0
    81ce:	e2 0d       	add	r30, r2
    81d0:	f3 1d       	adc	r31, r3
    81d2:	80 81       	ld	r24, Z
    81d4:	91 81       	ldd	r25, Z+1	; 0x01
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:146
    items[i]->draw(u8g2, x, y, width, i == selectedItem ? true : false);
    81d6:	ad 81       	ldd	r26, Y+5	; 0x05
    81d8:	be 81       	ldd	r27, Y+6	; 0x06
    81da:	1a 96       	adiw	r26, 0x0a	; 10
    81dc:	2c 91       	ld	r18, X
    81de:	ee 24       	eor	r14, r14
    81e0:	e3 94       	inc	r14
    81e2:	28 15       	cp	r18, r8
    81e4:	19 04       	cpc	r1, r9
    81e6:	09 f0       	breq	.+2      	; 0x81ea <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x192>
    81e8:	e1 2c       	mov	r14, r1
    81ea:	ed 81       	ldd	r30, Y+5	; 0x05
    81ec:	fe 81       	ldd	r31, Y+6	; 0x06
    81ee:	02 81       	ldd	r16, Z+2	; 0x02
    81f0:	13 81       	ldd	r17, Z+3	; 0x03
    81f2:	dc 01       	movw	r26, r24
    81f4:	ed 91       	ld	r30, X+
    81f6:	fc 91       	ld	r31, X
    81f8:	02 80       	ldd	r0, Z+2	; 0x02
    81fa:	f3 81       	ldd	r31, Z+3	; 0x03
    81fc:	e0 2d       	mov	r30, r0
    81fe:	95 01       	movw	r18, r10
    8200:	a2 01       	movw	r20, r4
    8202:	b6 01       	movw	r22, r12
    8204:	09 95       	icall
    8206:	ad 81       	ldd	r26, Y+5	; 0x05
    8208:	be 81       	ldd	r27, Y+6	; 0x06
    820a:	16 96       	adiw	r26, 0x06	; 6
    820c:	ed 91       	ld	r30, X+
    820e:	fc 91       	ld	r31, X
    8210:	17 97       	sbiw	r26, 0x07	; 7
    8212:	e2 0d       	add	r30, r2
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:147
    y += items[i]->getHeight(i == selectedItem ? true : false);
    8214:	f3 1d       	adc	r31, r3
    8216:	80 81       	ld	r24, Z
    8218:	91 81       	ldd	r25, Z+1	; 0x01
    821a:	1a 96       	adiw	r26, 0x0a	; 10
    821c:	2c 91       	ld	r18, X
    821e:	61 e0       	ldi	r22, 0x01	; 1
    8220:	28 15       	cp	r18, r8
    8222:	19 04       	cpc	r1, r9
    8224:	09 f0       	breq	.+2      	; 0x8228 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x1d0>
    8226:	60 e0       	ldi	r22, 0x00	; 0
    8228:	dc 01       	movw	r26, r24
    822a:	ed 91       	ld	r30, X+
    822c:	fc 91       	ld	r31, X
    822e:	01 90       	ld	r0, Z+
    8230:	f0 81       	ld	r31, Z
    8232:	e0 2d       	mov	r30, r0
    8234:	09 95       	icall
    8236:	a8 0e       	add	r10, r24
    8238:	b9 1e       	adc	r11, r25
    823a:	b2 e0       	ldi	r27, 0x02	; 2
    823c:	2b 0e       	add	r2, r27
    823e:	31 1c       	adc	r3, r1
    8240:	e9 81       	ldd	r30, Y+1	; 0x01
    8242:	fa 81       	ldd	r31, Y+2	; 0x02
    8244:	ea 15       	cp	r30, r10
    8246:	fb 05       	cpc	r31, r11
    8248:	20 f0       	brcs	.+8      	; 0x8252 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x1fa>
    824a:	ff ef       	ldi	r31, 0xFF	; 255
    824c:	8f 1a       	sub	r8, r31
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:148
    if (y > ymax)
    824e:	9f 0a       	sbc	r9, r31
    8250:	b3 cf       	rjmp	.-154    	; 0x81b8 <UImenu::draw(U8G2*, unsigned int, unsigned int)+0x160>
u8g2_SetFontMode():
    8252:	ab 81       	ldd	r26, Y+3	; 0x03
    8254:	bc 81       	ldd	r27, Y+4	; 0x04
    8256:	1c 92       	st	X, r1
_ZN4U8G212setDrawColorEh():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:145
  u8g2->setDrawColor(0);
  u8g2_uint_t ymax = u8g2->getDisplayHeight();
  makeSelectedItemVisible(y, ymax);
  u8g2->drawBox(x, y, width, ymax - y);
  u8g2->setDrawColor(1);
  for (int i = firstVisibleItem; i < num_items; i++) {
    8258:	61 e0       	ldi	r22, 0x01	; 1
    825a:	c3 01       	movw	r24, r6
    825c:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
u8g2_SetFontPosTop():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:933
    8260:	f6 01       	movw	r30, r12
    8262:	e0 5a       	subi	r30, 0xA0	; 160
    8264:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:218
    8266:	80 e1       	ldi	r24, 0x10	; 16
    8268:	98 e3       	ldi	r25, 0x38	; 56
    826a:	80 83       	st	Z, r24
    826c:	91 83       	std	Z+1, r25	; 0x01
u8g2_SetFontRefHeightExtendedText():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1259
  return tmp;
}

void u8g2_SetFontPosTop(u8g2_t *u8g2)
{
  u8g2->font_calc_vref = u8g2_font_calc_vref_top;
    826e:	b9 96       	adiw	r30, 0x29	; 41
    8270:	81 e0       	ldi	r24, 0x01	; 1
    8272:	80 83       	st	Z, r24
    8274:	c3 01       	movw	r24, r6
    8276:	0e 94 19 38 	call	0x7032	; 0x7032 <u8g2_UpdateRefHeight>
u8g2_SetFontDirection():
    827a:	f6 01       	movw	r30, r12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1214
  u8g2_UpdateRefHeight(u8g2);
}

void u8g2_SetFontRefHeightExtendedText(u8g2_t *u8g2)
{
  u8g2->font_height_mode = U8G2_FONT_HEIGHT_MODE_XTEXT;
    827c:	e0 59       	subi	r30, 0x90	; 144
    827e:	ff 4f       	sbci	r31, 0xFF	; 255
    8280:	10 82       	st	Z, r1
_ZN6UImenu4drawEP4U8G2jj():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1215
  u8g2_UpdateRefHeight(u8g2);
    8282:	26 96       	adiw	r28, 0x06	; 6
    8284:	cd bf       	out	0x3d, r28	; 61
    8286:	de bf       	out	0x3e, r29	; 62
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:1537


void u8g2_SetFontDirection(u8g2_t *u8g2, uint8_t dir)
{
#ifdef U8G2_WITH_FONT_ROTATION  
  u8g2->font_decode.dir = dir;
    8288:	df 91       	pop	r29
    828a:	cf 91       	pop	r28
    828c:	1f 91       	pop	r17
    828e:	0f 91       	pop	r16
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:156
  u8g2->setFontMode(0);
  u8g2->setDrawColor(1);
  u8g2->setFontPosTop();
  u8g2->setFontRefHeightExtendedText();
  u8g2->setFontDirection(0);
}
    8290:	ff 90       	pop	r15
    8292:	ef 90       	pop	r14
    8294:	df 90       	pop	r13
    8296:	cf 90       	pop	r12
    8298:	bf 90       	pop	r11
    829a:	af 90       	pop	r10
    829c:	9f 90       	pop	r9
    829e:	8f 90       	pop	r8
    82a0:	7f 90       	pop	r7
    82a2:	6f 90       	pop	r6
    82a4:	5f 90       	pop	r5
    82a6:	4f 90       	pop	r4
    82a8:	3f 90       	pop	r3
    82aa:	2f 90       	pop	r2
    82ac:	08 95       	ret

000082ae <UIMenuButtonItem::handleUIEvent(K197UIeventsource, K197UIeventType)>:
_ZN16UIMenuButtonItem13handleUIEventE17K197UIeventsource15K197UIeventType():
    82ae:	cf 92       	push	r12
    82b0:	df 92       	push	r13
    82b2:	ef 92       	push	r14
    82b4:	ff 92       	push	r15
    82b6:	0f 93       	push	r16
    82b8:	1f 93       	push	r17
    82ba:	cf 93       	push	r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:120
   @param eventSource the source of the event (see K197UIeventsource)
   @param eventType the type of event (see K197UIeventType)
   @return true if the event has been entirely handled by this object
*/
bool UIMenuButtonItem::handleUIEvent(K197UIeventsource eventSource,
                                     K197UIeventType eventType) {
    82bc:	8c 01       	movw	r16, r24
    82be:	6b 01       	movw	r12, r22
    82c0:	7a 01       	movw	r14, r20
    82c2:	dc 01       	movw	r26, r24
    82c4:	ed 91       	ld	r30, X+
    82c6:	fc 91       	ld	r31, X
    82c8:	06 80       	ldd	r0, Z+6	; 0x06
    82ca:	f7 81       	ldd	r31, Z+7	; 0x07
    82cc:	e0 2d       	mov	r30, r0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:121
  if (selectable()) {
    82ce:	09 95       	icall
    82d0:	c8 2f       	mov	r28, r24
    82d2:	88 23       	and	r24, r24
    82d4:	79 f0       	breq	.+30     	; 0x82f4 <UIMenuButtonItem::handleUIEvent(K197UIeventsource, K197UIeventType)+0x46>
    82d6:	bd e1       	ldi	r27, 0x1D	; 29
    82d8:	cb 16       	cp	r12, r27
    82da:	d1 04       	cpc	r13, r1
    82dc:	a1 f4       	brne	.+40     	; 0x8306 <UIMenuButtonItem::handleUIEvent(K197UIeventsource, K197UIeventType)+0x58>
    82de:	ea 94       	dec	r14
    82e0:	ef 28       	or	r14, r15
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:122
    if ((eventSource == K197key_RCL) && (eventType == UIeventClick)) {
    82e2:	89 f4       	brne	.+34     	; 0x8306 <UIMenuButtonItem::handleUIEvent(K197UIeventsource, K197UIeventType)+0x58>
    82e4:	d8 01       	movw	r26, r16
    82e6:	ed 91       	ld	r30, X+
    82e8:	fc 91       	ld	r31, X
    82ea:	00 84       	ldd	r0, Z+8	; 0x08
    82ec:	f1 85       	ldd	r31, Z+9	; 0x09
    82ee:	e0 2d       	mov	r30, r0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:123
      change();
    82f0:	c8 01       	movw	r24, r16
    82f2:	09 95       	icall
    82f4:	8c 2f       	mov	r24, r28
    82f6:	cf 91       	pop	r28
    82f8:	1f 91       	pop	r17
    82fa:	0f 91       	pop	r16
    82fc:	ff 90       	pop	r15
    82fe:	ef 90       	pop	r14
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:128
      return true;
    }
  }
  return false;
}
    8300:	df 90       	pop	r13
    8302:	cf 90       	pop	r12
    8304:	08 95       	ret
    8306:	c0 e0       	ldi	r28, 0x00	; 0
    8308:	f5 cf       	rjmp	.-22     	; 0x82f4 <UIMenuButtonItem::handleUIEvent(K197UIeventsource, K197UIeventType)+0x46>

0000830a <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)>:
_ZN16MenuInputOptions13handleUIEventE17K197UIeventsource15K197UIeventType():
    830a:	fc 01       	movw	r30, r24
    830c:	6d 31       	cpi	r22, 0x1D	; 29
    830e:	71 05       	cpc	r23, r1
    8310:	b9 f1       	breq	.+110    	; 0x8380 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x76>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:127
    if ((eventSource == K197key_RCL) && (eventType == UIeventClick)) {
      change();
      return true;
    }
  }
  return false;
    8312:	6b 31       	cpi	r22, 0x1B	; 27
    8314:	71 05       	cpc	r23, r1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:436
   @param eventSource the source of the event (see K197UIeventsource)
   @param eventType the type of event (see K197UIeventType)
   @return true if the event has been entirely handled by this object
*/
bool MenuInputOptions::handleUIEvent(K197UIeventsource eventSource,
                                  K197UIeventType eventType) {
    8316:	99 f5       	brne	.+102    	; 0x837e <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x74>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:437
  if ((eventSource == K197key_RCL || eventSource == K197key_STO)) {
    8318:	42 31       	cpi	r20, 0x12	; 18
    831a:	51 05       	cpc	r21, r1
    831c:	a1 f0       	breq	.+40     	; 0x8346 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x3c>
    831e:	08 f0       	brcs	.+2      	; 0x8322 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x18>
    8320:	3e c0       	rjmp	.+124    	; 0x839e <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x94>
    8322:	41 31       	cpi	r20, 0x11	; 17
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:438
    switch (eventType) {
    8324:	51 05       	cpc	r21, r1
    8326:	11 f0       	breq	.+4      	; 0x832c <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x22>
    8328:	81 e0       	ldi	r24, 0x01	; 1
    832a:	08 95       	ret
    832c:	90 85       	ldd	r25, Z+8	; 0x08
    832e:	21 85       	ldd	r18, Z+9	; 0x09
calcIncrementExt():
    8330:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:457
      break;
    }
    return true;
  }
  return UIMenuButtonItem::handleUIEvent(eventSource, eventType);
}
    8332:	82 0f       	add	r24, r18
    8334:	28 17       	cp	r18, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:440
bool MenuInputOptions::handleUIEvent(K197UIeventsource eventSource,
                                  K197UIeventType eventType) {
  if ((eventSource == K197key_RCL || eventSource == K197key_STO)) {
    switch (eventType) {
    case UIeventPress:
      setValue(calcIncrementExt(value, eventSource, 1, options_size-1));
    8336:	10 f4       	brcc	.+4      	; 0x833c <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x32>
_ZN16MenuInputOptions13handleUIEventE17K197UIeventsource15K197UIeventType():
    8338:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:366
  if (eventSource == K197key_RCL) { // Increment
    newval = val + increment;
    if (newval < val)
      newval = 0;
  } else { // decrement
    newval = val - increment;
    833a:	89 0f       	add	r24, r25
setValue():
    833c:	81 87       	std	Z+9, r24	; 0x09
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:367
    if (newval > val)
    833e:	89 17       	cp	r24, r25
    8340:	98 f3       	brcs	.-26     	; 0x8328 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x1e>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:440
bool MenuInputOptions::handleUIEvent(K197UIeventsource eventSource,
                                  K197UIeventType eventType) {
  if ((eventSource == K197key_RCL || eventSource == K197key_STO)) {
    switch (eventType) {
    case UIeventPress:
      setValue(calcIncrementExt(value, eventSource, 1, options_size-1));
    8342:	11 86       	std	Z+9, r1	; 0x09
    8344:	f1 cf       	rjmp	.-30     	; 0x8328 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x1e>
_ZN16MenuInputOptions13handleUIEventE17K197UIeventsource15K197UIeventType():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:428
      : UIMenuButtonItem(height, text), options(myoptions), options_size(myoptions_size) {};
  /*!
     @brief  set the value for this item
     @param newValue the new value that will be assigned to the item
  */
  void setValue(byte newValue) { value = newValue; if (value>=options_size) value = 0;};
    8346:	20 85       	ldd	r18, Z+8	; 0x08
    8348:	91 85       	ldd	r25, Z+9	; 0x09
calcIncrementExt():
    834a:	81 e0       	ldi	r24, 0x01	; 1
    834c:	6d 31       	cpi	r22, 0x1D	; 29
    834e:	71 05       	cpc	r23, r1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:443
      break;
    case UIeventLongPress:
      setValue(calcIncrementExt(value, eventSource, 1, options_size-1));
    8350:	71 f0       	breq	.+28     	; 0x836e <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x64>
    8352:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:362
*/
static byte calcIncrementExt(const byte val, const K197UIeventsource eventSource,
                   const byte increment, const byte max) {
  byte newval;
  if (eventSource == K197key_RCL) { // Increment
    newval = val + increment;
    8354:	89 0f       	add	r24, r25
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:361
     @return the new value
*/
static byte calcIncrementExt(const byte val, const K197UIeventsource eventSource,
                   const byte increment, const byte max) {
  byte newval;
  if (eventSource == K197key_RCL) { // Increment
    8356:	98 17       	cp	r25, r24
    8358:	70 f4       	brcc	.+28     	; 0x8376 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x6c>
_ZN16MenuInputOptions13handleUIEventE17K197UIeventsource15K197UIeventType():
    835a:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:366
    newval = val + increment;
    if (newval < val)
      newval = 0;
  } else { // decrement
    newval = val - increment;
    835c:	82 0f       	add	r24, r18
    835e:	0b c0       	rjmp	.+22     	; 0x8376 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x6c>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:367
    if (newval > val)
    8360:	20 85       	ldd	r18, Z+8	; 0x08
    8362:	91 85       	ldd	r25, Z+9	; 0x09
calcIncrementExt():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:446
      break;
    case UIeventLongPress:
      setValue(calcIncrementExt(value, eventSource, 1, options_size-1));
      break;
    case UIeventHold:
      setValue(calcIncrementExt(value, eventSource, 2, options_size-1));
    8364:	8e ef       	ldi	r24, 0xFE	; 254
    8366:	6d 31       	cpi	r22, 0x1D	; 29
    8368:	71 05       	cpc	r23, r1
    836a:	a1 f7       	brne	.-24     	; 0x8354 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x4a>
    836c:	82 e0       	ldi	r24, 0x02	; 2
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:366
  if (eventSource == K197key_RCL) { // Increment
    newval = val + increment;
    if (newval < val)
      newval = 0;
  } else { // decrement
    newval = val - increment;
    836e:	89 0f       	add	r24, r25
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:361
     @return the new value
*/
static byte calcIncrementExt(const byte val, const K197UIeventsource eventSource,
                   const byte increment, const byte max) {
  byte newval;
  if (eventSource == K197key_RCL) { // Increment
    8370:	89 17       	cp	r24, r25
    8372:	08 f4       	brcc	.+2      	; 0x8376 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x6c>
_ZN16MenuInputOptions13handleUIEventE17K197UIeventsource15K197UIeventType():
    8374:	80 e0       	ldi	r24, 0x00	; 0
setValue():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:362
    newval = val + increment;
    8376:	81 87       	std	Z+9, r24	; 0x09
    8378:	82 17       	cp	r24, r18
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:363
    if (newval < val)
    837a:	18 f7       	brcc	.-58     	; 0x8342 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x38>
    837c:	d5 cf       	rjmp	.-86     	; 0x8328 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x1e>
_ZN16MenuInputOptions13handleUIEventE17K197UIeventsource15K197UIeventType():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:364
      newval = 0;
    837e:	97 cf       	rjmp	.-210    	; 0x82ae <UIMenuButtonItem::handleUIEvent(K197UIeventsource, K197UIeventType)>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:428
    8380:	42 31       	cpi	r20, 0x12	; 18
    8382:	51 05       	cpc	r21, r1
    8384:	01 f3       	breq	.-64     	; 0x8346 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x3c>
    8386:	58 f4       	brcc	.+22     	; 0x839e <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x94>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:456
    default:
      break;
    }
    return true;
  }
  return UIMenuButtonItem::handleUIEvent(eventSource, eventType);
    8388:	41 31       	cpi	r20, 0x11	; 17
    838a:	51 05       	cpc	r21, r1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:438
   @return true if the event has been entirely handled by this object
*/
bool MenuInputOptions::handleUIEvent(K197UIeventsource eventSource,
                                  K197UIeventType eventType) {
  if ((eventSource == K197key_RCL || eventSource == K197key_STO)) {
    switch (eventType) {
    838c:	69 f6       	brne	.-102    	; 0x8328 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x1e>
    838e:	90 85       	ldd	r25, Z+8	; 0x08
    8390:	21 85       	ldd	r18, Z+9	; 0x09
calcIncrementExt():
    8392:	81 e0       	ldi	r24, 0x01	; 1
    8394:	82 0f       	add	r24, r18
    8396:	82 17       	cp	r24, r18
    8398:	88 f6       	brcc	.-94     	; 0x833c <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x32>
_ZN16MenuInputOptions13handleUIEventE17K197UIeventsource15K197UIeventType():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:440
    case UIeventPress:
      setValue(calcIncrementExt(value, eventSource, 1, options_size-1));
    839a:	80 e0       	ldi	r24, 0x00	; 0
    839c:	cf cf       	rjmp	.-98     	; 0x833c <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x32>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:362
*/
static byte calcIncrementExt(const byte val, const K197UIeventsource eventSource,
                   const byte increment, const byte max) {
  byte newval;
  if (eventSource == K197key_RCL) { // Increment
    newval = val + increment;
    839e:	43 31       	cpi	r20, 0x13	; 19
    83a0:	51 05       	cpc	r21, r1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:363
    if (newval < val)
    83a2:	f1 f2       	breq	.-68     	; 0x8360 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x56>
    83a4:	44 31       	cpi	r20, 0x14	; 20
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:364
      newval = 0;
    83a6:	51 05       	cpc	r21, r1
    83a8:	09 f0       	breq	.+2      	; 0x83ac <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0xa2>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:438
   @return true if the event has been entirely handled by this object
*/
bool MenuInputOptions::handleUIEvent(K197UIeventsource eventSource,
                                  K197UIeventType eventType) {
  if ((eventSource == K197key_RCL || eventSource == K197key_STO)) {
    switch (eventType) {
    83aa:	be cf       	rjmp	.-132    	; 0x8328 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x1e>
    83ac:	cf 01       	movw	r24, r30
    83ae:	01 90       	ld	r0, Z+
    83b0:	f0 81       	ld	r31, Z
    83b2:	e0 2d       	mov	r30, r0
    83b4:	00 84       	ldd	r0, Z+8	; 0x08
    83b6:	f1 85       	ldd	r31, Z+9	; 0x09
    83b8:	e0 2d       	mov	r30, r0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:449
      break;
    case UIeventHold:
      setValue(calcIncrementExt(value, eventSource, 2, options_size-1));
      break;
    case UIeventRelease:
      change();
    83ba:	09 95       	icall
    83bc:	b5 cf       	rjmp	.-150    	; 0x8328 <MenuInputOptions::handleUIEvent(K197UIeventsource, K197UIeventType)+0x1e>

000083be <MenuInputBool::handleUIEvent(K197UIeventsource, K197UIeventType)>:
_ZN13MenuInputBool13handleUIEventE17K197UIeventsource15K197UIeventType():
    83be:	0f 93       	push	r16
    83c0:	1f 93       	push	r17
    83c2:	cf 93       	push	r28
    83c4:	df 93       	push	r29
    83c6:	6d 31       	cpi	r22, 0x1D	; 29
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:282
   @param eventSource the source of the event (see K197UIeventsource)
   @param eventType the type of event (see K197UIeventType)
   @return true if the event has been entirely handled by this object
*/
bool MenuInputBool::handleUIEvent(K197UIeventsource eventSource,
                                  K197UIeventType eventType) {
    83c8:	71 05       	cpc	r23, r1
    83ca:	19 f0       	breq	.+6      	; 0x83d2 <MenuInputBool::handleUIEvent(K197UIeventsource, K197UIeventType)+0x14>
    83cc:	6b 31       	cpi	r22, 0x1B	; 27
    83ce:	71 05       	cpc	r23, r1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:283
  if ((eventSource == K197key_RCL || eventSource == K197key_STO) &&
    83d0:	19 f4       	brne	.+6      	; 0x83d8 <MenuInputBool::handleUIEvent(K197UIeventsource, K197UIeventType)+0x1a>
    83d2:	41 30       	cpi	r20, 0x01	; 1
    83d4:	51 05       	cpc	r21, r1
    83d6:	29 f0       	breq	.+10     	; 0x83e2 <MenuInputBool::handleUIEvent(K197UIeventsource, K197UIeventType)+0x24>
    83d8:	df 91       	pop	r29
    83da:	cf 91       	pop	r28
    83dc:	1f 91       	pop	r17
    83de:	0f 91       	pop	r16
    83e0:	66 cf       	rjmp	.-308    	; 0x82ae <UIMenuButtonItem::handleUIEvent(K197UIeventsource, K197UIeventType)>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:290
    setValue(!getValue());
    change();
    return true;
  }
  return UIMenuButtonItem::handleUIEvent(eventSource, eventType);
}
    83e2:	ec 01       	movw	r28, r24
    83e4:	e8 81       	ld	r30, Y
    83e6:	f9 81       	ldd	r31, Y+1	; 0x01
    83e8:	02 85       	ldd	r16, Z+10	; 0x0a
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:289
      eventType == UIeventClick) {
    setValue(!getValue());
    change();
    return true;
  }
  return UIMenuButtonItem::handleUIEvent(eventSource, eventType);
    83ea:	13 85       	ldd	r17, Z+11	; 0x0b
    83ec:	04 84       	ldd	r0, Z+12	; 0x0c
    83ee:	f5 85       	ldd	r31, Z+13	; 0x0d
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:285
*/
bool MenuInputBool::handleUIEvent(K197UIeventsource eventSource,
                                  K197UIeventType eventType) {
  if ((eventSource == K197key_RCL || eventSource == K197key_STO) &&
      eventType == UIeventClick) {
    setValue(!getValue());
    83f0:	e0 2d       	mov	r30, r0
    83f2:	09 95       	icall
    83f4:	61 e0       	ldi	r22, 0x01	; 1
    83f6:	68 27       	eor	r22, r24
    83f8:	ce 01       	movw	r24, r28
    83fa:	f8 01       	movw	r30, r16
    83fc:	09 95       	icall
    83fe:	e8 81       	ld	r30, Y
    8400:	f9 81       	ldd	r31, Y+1	; 0x01
    8402:	00 84       	ldd	r0, Z+8	; 0x08
    8404:	f1 85       	ldd	r31, Z+9	; 0x09
    8406:	e0 2d       	mov	r30, r0
    8408:	ce 01       	movw	r24, r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:286
    change();
    840a:	09 95       	icall
    840c:	81 e0       	ldi	r24, 0x01	; 1
    840e:	df 91       	pop	r29
    8410:	cf 91       	pop	r28
    8412:	1f 91       	pop	r17
    8414:	0f 91       	pop	r16
    8416:	08 95       	ret

00008418 <UIMenuButtonItem::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)>:
_ZN16UIMenuButtonItem4drawEP4U8G2jjjb():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:290
    return true;
  }
  return UIMenuButtonItem::handleUIEvent(eventSource, eventType);
}
    8418:	2f 92       	push	r2
    841a:	3f 92       	push	r3
    841c:	4f 92       	push	r4
    841e:	5f 92       	push	r5
    8420:	6f 92       	push	r6
    8422:	7f 92       	push	r7
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:104
   @param y the y coordinate of the top/left corner
   @param w the y width of the menu item
   @param selected true if the menu item is selected
*/
void UIMenuButtonItem::draw(U8G2 *u8g2, u8g2_uint_t x, u8g2_uint_t y,
                            u8g2_uint_t w, bool selected) {
    8424:	8f 92       	push	r8
    8426:	9f 92       	push	r9
    8428:	af 92       	push	r10
    842a:	bf 92       	push	r11
    842c:	cf 92       	push	r12
    842e:	df 92       	push	r13
    8430:	ef 92       	push	r14
    8432:	0f 93       	push	r16
    8434:	1f 93       	push	r17
    8436:	cf 93       	push	r28
    8438:	df 93       	push	r29
    843a:	4c 01       	movw	r8, r24
    843c:	eb 01       	movw	r28, r22
    843e:	5a 01       	movw	r10, r20
    8440:	69 01       	movw	r12, r18
    8442:	28 01       	movw	r4, r16
    8444:	3b 01       	movw	r6, r22
    8446:	84 e0       	ldi	r24, 0x04	; 4
    8448:	68 0e       	add	r6, r24
    844a:	71 1c       	adc	r7, r1
    844c:	db 01       	movw	r26, r22
    844e:	a3 59       	subi	r26, 0x93	; 147
    8450:	bf 4f       	sbci	r27, 0xFF	; 255
    8452:	1d 01       	movw	r2, r26
draw():
    8454:	ee 20       	and	r14, r14
    8456:	a9 f0       	breq	.+42     	; 0x8482 <UIMenuButtonItem::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)+0x6a>
_ZN4U8G212setDrawColorEh():
    8458:	61 e0       	ldi	r22, 0x01	; 1
    845a:	c3 01       	movw	r24, r6
    845c:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
u8g2_SetFontMode():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:52
   @param w the y width of the menu item
   @param selected true if the menu item is selected
*/
void UImenuItem::draw(U8G2 *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w,
                      bool selected) {
  if (selected) {
    8460:	f1 01       	movw	r30, r2
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:218
    8462:	10 82       	st	Z, r1
draw():
    8464:	d4 01       	movw	r26, r8
    8466:	ed 91       	ld	r30, X+
    8468:	fc 91       	ld	r31, X
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:933
    U8G2_FONT_MODE_NONE
  This has been changed for the new font procedures  
*/
void u8g2_SetFontMode(u8g2_t *u8g2, uint8_t is_transparent)
{
  u8g2->font_decode.is_transparent = is_transparent;		// new font procedures
    846a:	01 90       	ld	r0, Z+
    846c:	f0 81       	ld	r31, Z
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:55
    u8g2->setDrawColor(1);
    u8g2->setFontMode(0);
    u8g2->drawFrame(x, y, w, getHeight(selected));
    846e:	e0 2d       	mov	r30, r0
    8470:	61 e0       	ldi	r22, 0x01	; 1
    8472:	c4 01       	movw	r24, r8
    8474:	09 95       	icall
_ZN4U8G29drawFrameEjjjj():
    8476:	8c 01       	movw	r16, r24
    8478:	92 01       	movw	r18, r4
    847a:	a6 01       	movw	r20, r12
    847c:	b5 01       	movw	r22, r10
    847e:	c3 01       	movw	r24, r6
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:227
    void drawVLine(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t h) { u8g2_DrawVLine(&u8g2, x, y, h); }
    void drawHVLine(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir) {
      u8g2_DrawHVLine(&u8g2, x, y, len, dir); }
    
    /* u8g2_box.c */
    void drawFrame(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h) { u8g2_DrawFrame(&u8g2, x, y, w, h); }
    8480:	5b da       	rcall	.-2890   	; 0x7938 <u8g2_DrawFrame>
u8g2_SetFontMode():
    8482:	f1 01       	movw	r30, r2
    8484:	10 82       	st	Z, r1
_ZN4U8G212setDrawColorEh():
    8486:	61 e0       	ldi	r22, 0x01	; 1
    8488:	c3 01       	movw	r24, r6
    848a:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
_ZN4U8G29setCursorEjj():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:933
    848e:	fe 01       	movw	r30, r28
    8490:	ee 56       	subi	r30, 0x6E	; 110
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:218
      { u8x8_RefreshDisplay(u8g2_GetU8x8(&u8g2)); }
    


    /* clib/u8g2.hvline.c */
    void setDrawColor(uint8_t color_index) { u8g2_SetDrawColor(&u8g2, color_index); }
    8492:	ff 4f       	sbci	r31, 0xFF	; 255
_ZN16UIMenuButtonItem4drawEP4U8G2jjjb():
    8494:	85 e0       	ldi	r24, 0x05	; 5
    8496:	a8 0e       	add	r10, r24
    8498:	b1 1c       	adc	r11, r1
_ZN4U8G29setCursorEjj():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
     /* LiquidCrystal compatible functions */
    void home(void) { tx = 0; ty = 0;  u8x8_utf8_init(u8g2_GetU8x8(&u8g2)); }
    void clear(void) { home(); clearDisplay(); clearBuffer();  }
    void noDisplay(void) { u8g2_SetPowerSave(&u8g2, 1); }
    void display(void) { u8g2_SetPowerSave(&u8g2, 0); }
    void setCursor(u8g2_uint_t x, u8g2_uint_t y) { tx = x; ty = y; }
    849a:	a0 82       	st	Z, r10
    849c:	b1 82       	std	Z+1, r11	; 0x01
    849e:	32 96       	adiw	r30, 0x02	; 2
_ZN16UIMenuButtonItem4drawEP4U8G2jjjb():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:108
void UIMenuButtonItem::draw(U8G2 *u8g2, u8g2_uint_t x, u8g2_uint_t y,
                            u8g2_uint_t w, bool selected) {
  UImenuItem::draw(u8g2, x, y, w, selected);
  u8g2->setFontMode(0);
  u8g2->setDrawColor(1);
  u8g2->setCursor(x + MENU_TEXT_OFFSET_X, y + MENU_TEXT_OFFSET_Y);
    84a0:	92 e0       	ldi	r25, 0x02	; 2
    84a2:	c9 0e       	add	r12, r25
    84a4:	d1 1c       	adc	r13, r1
_ZN4U8G29setCursorEjj():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
    84a6:	c0 82       	st	Z, r12
    84a8:	d1 82       	std	Z+1, r13	; 0x01
_ZN16UIMenuButtonItem4drawEP4U8G2jjjb():
    84aa:	d4 01       	movw	r26, r8
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:108
    84ac:	14 96       	adiw	r26, 0x04	; 4
    84ae:	6d 91       	ld	r22, X+
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
    84b0:	7c 91       	ld	r23, X
    84b2:	ce 01       	movw	r24, r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:109
  u8g2->print(reinterpret_cast<const __FlashStringHelper *>(text));
    84b4:	df 91       	pop	r29
    84b6:	cf 91       	pop	r28
    84b8:	1f 91       	pop	r17
    84ba:	0f 91       	pop	r16
    84bc:	ef 90       	pop	r14
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:110
}
    84be:	df 90       	pop	r13
    84c0:	cf 90       	pop	r12
    84c2:	bf 90       	pop	r11
    84c4:	af 90       	pop	r10
    84c6:	9f 90       	pop	r9
    84c8:	8f 90       	pop	r8
    84ca:	7f 90       	pop	r7
    84cc:	6f 90       	pop	r6
    84ce:	5f 90       	pop	r5
    84d0:	4f 90       	pop	r4
    84d2:	3f 90       	pop	r3
    84d4:	2f 90       	pop	r2
    84d6:	0c 94 c4 2f 	jmp	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>

000084da <MenuInputOptions::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)>:
_ZN16MenuInputOptions4drawEP4U8G2jjjb():
    84da:	cf 92       	push	r12
    84dc:	df 92       	push	r13
    84de:	ef 92       	push	r14
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:109
                            u8g2_uint_t w, bool selected) {
  UImenuItem::draw(u8g2, x, y, w, selected);
  u8g2->setFontMode(0);
  u8g2->setDrawColor(1);
  u8g2->setCursor(x + MENU_TEXT_OFFSET_X, y + MENU_TEXT_OFFSET_Y);
  u8g2->print(reinterpret_cast<const __FlashStringHelper *>(text));
    84e0:	0f 93       	push	r16
    84e2:	1f 93       	push	r17
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:418
     @param y the y coordinate of the top/left corner
     @param w the y width of the menu item
     @param selected true if the menu item is selected
*/
void MenuInputOptions::draw(U8G2 *u8g2, u8g2_uint_t x, u8g2_uint_t y,
                         u8g2_uint_t w, bool selected) {
    84e4:	cf 93       	push	r28
    84e6:	df 93       	push	r29
    84e8:	ec 01       	movw	r28, r24
    84ea:	6b 01       	movw	r12, r22
    84ec:	95 df       	rcall	.-214    	; 0x8418 <UIMenuButtonItem::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)>
    84ee:	99 85       	ldd	r25, Y+9	; 0x09
    84f0:	88 85       	ldd	r24, Y+8	; 0x08
    84f2:	98 17       	cp	r25, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:419
  UIMenuButtonItem::draw(u8g2, x, y, w, selected);
    84f4:	f8 f4       	brcc	.+62     	; 0x8534 <MenuInputOptions::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)+0x5a>
    84f6:	6f ee       	ldi	r22, 0xEF	; 239
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:420
  if (value<options_size) {
    84f8:	77 e0       	ldi	r23, 0x07	; 7
    84fa:	c6 01       	movw	r24, r12
    84fc:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:421
      u8g2->print(F(": < "));
    8500:	89 85       	ldd	r24, Y+9	; 0x09
    8502:	90 e0       	ldi	r25, 0x00	; 0
    8504:	88 0f       	add	r24, r24
    8506:	99 1f       	adc	r25, r25
    8508:	2e 81       	ldd	r18, Y+6	; 0x06
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:422
      u8g2->print(options[value]);
    850a:	3f 81       	ldd	r19, Y+7	; 0x07
    850c:	82 0f       	add	r24, r18
    850e:	93 1f       	adc	r25, r19
    8510:	fc 01       	movw	r30, r24
    8512:	60 81       	ld	r22, Z
    8514:	71 81       	ldd	r23, Z+1	; 0x01
    8516:	c6 01       	movw	r24, r12
    8518:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    851c:	6c ee       	ldi	r22, 0xEC	; 236
    851e:	77 e0       	ldi	r23, 0x07	; 7
    8520:	c6 01       	movw	r24, r12
    8522:	df 91       	pop	r29
    8524:	cf 91       	pop	r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:423
      u8g2->print(F(" >"));
    8526:	1f 91       	pop	r17
    8528:	0f 91       	pop	r16
    852a:	ef 90       	pop	r14
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:425
  }
}
    852c:	df 90       	pop	r13
    852e:	cf 90       	pop	r12
    8530:	0c 94 c4 2f 	jmp	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    8534:	df 91       	pop	r29
    8536:	cf 91       	pop	r28
    8538:	1f 91       	pop	r17
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:423
                         u8g2_uint_t w, bool selected) {
  UIMenuButtonItem::draw(u8g2, x, y, w, selected);
  if (value<options_size) {
      u8g2->print(F(": < "));
      u8g2->print(options[value]);
      u8g2->print(F(" >"));
    853a:	0f 91       	pop	r16
    853c:	ef 90       	pop	r14
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:425
  }
}
    853e:	df 90       	pop	r13
    8540:	cf 90       	pop	r12
    8542:	08 95       	ret

00008544 <MenuInputBool::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)>:
_ZN13MenuInputBool4drawEP4U8G2jjjb():
    8544:	4f 92       	push	r4
    8546:	5f 92       	push	r5
    8548:	6f 92       	push	r6
    854a:	7f 92       	push	r7
    854c:	8f 92       	push	r8
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:259
     @param y the y coordinate of the top/left corner
     @param w the y width of the menu item
     @param selected true if the menu item is selected
*/
void MenuInputBool::draw(U8G2 *u8g2, u8g2_uint_t x, u8g2_uint_t y,
                         u8g2_uint_t w, bool selected) {
    854e:	9f 92       	push	r9
    8550:	af 92       	push	r10
    8552:	bf 92       	push	r11
    8554:	cf 92       	push	r12
    8556:	df 92       	push	r13
    8558:	ef 92       	push	r14
    855a:	ff 92       	push	r15
    855c:	0f 93       	push	r16
    855e:	1f 93       	push	r17
    8560:	cf 93       	push	r28
    8562:	df 93       	push	r29
    8564:	5c 01       	movw	r10, r24
    8566:	6b 01       	movw	r12, r22
    8568:	4a 01       	movw	r8, r20
    856a:	e9 01       	movw	r28, r18
    856c:	55 df       	rcall	.-342    	; 0x8418 <UIMenuButtonItem::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)>
_ZN4U8G212setDrawColorEh():
    856e:	76 01       	movw	r14, r12
    8570:	84 e0       	ldi	r24, 0x04	; 4
    8572:	e8 0e       	add	r14, r24
    8574:	f1 1c       	adc	r15, r1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:260
  UIMenuButtonItem::draw(u8g2, x, y, w, selected);
    8576:	61 e0       	ldi	r22, 0x01	; 1
    8578:	c7 01       	movw	r24, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:218
      { u8x8_RefreshDisplay(u8g2_GetU8x8(&u8g2)); }
    


    /* clib/u8g2.hvline.c */
    void setDrawColor(uint8_t color_index) { u8g2_SetDrawColor(&u8g2, color_index); }
    857a:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
u8g2_SetFontMode():
    857e:	f6 01       	movw	r30, r12
    8580:	e3 59       	subi	r30, 0x93	; 147
    8582:	ff 4f       	sbci	r31, 0xFF	; 255
    8584:	10 82       	st	Z, r1
_ZN13MenuInputBool4drawEP4U8G2jjjb():
    8586:	80 0e       	add	r8, r16
    8588:	91 1e       	adc	r9, r17
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:933
    858a:	64 01       	movw	r12, r8
    858c:	af e0       	ldi	r26, 0x0F	; 15
    858e:	ca 1a       	sub	r12, r26
    8590:	d1 08       	sbc	r13, r1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:263
  u8g2->setDrawColor(1);
  u8g2->setFontMode(0);
  x = x + w - checkbox_size - checkbox_margin;
    8592:	2e 01       	movw	r4, r28
    8594:	b2 e0       	ldi	r27, 0x02	; 2
    8596:	4b 0e       	add	r4, r27
    8598:	51 1c       	adc	r5, r1
_ZN4U8G29drawFrameEjjjj():
    859a:	0a e0       	ldi	r16, 0x0A	; 10
    859c:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:264
  y = y + MENU_TEXT_OFFSET_Y;
    859e:	2a e0       	ldi	r18, 0x0A	; 10
    85a0:	30 e0       	ldi	r19, 0x00	; 0
    85a2:	a2 01       	movw	r20, r4
    85a4:	b6 01       	movw	r22, r12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:227
    void drawVLine(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t h) { u8g2_DrawVLine(&u8g2, x, y, h); }
    void drawHVLine(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir) {
      u8g2_DrawHVLine(&u8g2, x, y, len, dir); }
    
    /* u8g2_box.c */
    void drawFrame(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h) { u8g2_DrawFrame(&u8g2, x, y, w, h); }
    85a6:	c7 01       	movw	r24, r14
    85a8:	c7 d9       	rcall	.-3186   	; 0x7938 <u8g2_DrawFrame>
_ZN13MenuInputBool4drawEP4U8G2jjjb():
    85aa:	d5 01       	movw	r26, r10
    85ac:	ed 91       	ld	r30, X+
    85ae:	fc 91       	ld	r31, X
    85b0:	04 84       	ldd	r0, Z+12	; 0x0c
    85b2:	f5 85       	ldd	r31, Z+13	; 0x0d
    85b4:	e0 2d       	mov	r30, r0
    85b6:	c5 01       	movw	r24, r10
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:266
  u8g2->drawFrame(x, y, checkbox_size, checkbox_size);
  if (getValue()) {
    85b8:	09 95       	icall
    85ba:	88 23       	and	r24, r24
    85bc:	91 f0       	breq	.+36     	; 0x85e2 <MenuInputBool::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)+0x9e>
    85be:	2c 96       	adiw	r28, 0x0c	; 12
    85c0:	b5 e0       	ldi	r27, 0x05	; 5
    85c2:	8b 1a       	sub	r8, r27
    85c4:	91 08       	sbc	r9, r1
_ZN4U8G28drawLineEjjjj():
    85c6:	8e 01       	movw	r16, r28
    85c8:	94 01       	movw	r18, r8
    85ca:	a2 01       	movw	r20, r4
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:267
    u8g2->drawLine(x, y, x + checkbox_size, y + checkbox_size);
    85cc:	b6 01       	movw	r22, r12
    85ce:	c7 01       	movw	r24, r14
    85d0:	0e 94 65 37 	call	0x6eca	; 0x6eca <u8g2_DrawLine>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:244
    void drawEllipse(u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t rx, u8g2_uint_t ry, uint8_t opt = U8G2_DRAW_ALL) { u8g2_DrawEllipse(&u8g2, x0, y0, rx, ry, opt); }
    void drawFilledEllipse(u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t rx, u8g2_uint_t ry, uint8_t opt = U8G2_DRAW_ALL) { u8g2_DrawFilledEllipse(&u8g2, x0, y0, rx, ry, opt); }    

    /* u8g2_line.c */
    void drawLine(u8g2_uint_t x1, u8g2_uint_t y1, u8g2_uint_t x2, u8g2_uint_t y2) 
      { u8g2_DrawLine(&u8g2, x1, y1, x2, y2); }
    85d4:	82 01       	movw	r16, r4
    85d6:	94 01       	movw	r18, r8
    85d8:	ae 01       	movw	r20, r28
    85da:	b6 01       	movw	r22, r12
    85dc:	c7 01       	movw	r24, r14
    85de:	0e 94 65 37 	call	0x6eca	; 0x6eca <u8g2_DrawLine>
_ZN13MenuInputBool4drawEP4U8G2jjjb():
    85e2:	df 91       	pop	r29
    85e4:	cf 91       	pop	r28
    85e6:	1f 91       	pop	r17
    85e8:	0f 91       	pop	r16
    85ea:	ff 90       	pop	r15
    85ec:	ef 90       	pop	r14
    85ee:	df 90       	pop	r13
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:270
    u8g2->drawLine(x, y + checkbox_size, x + checkbox_size, y);
  }
}
    85f0:	cf 90       	pop	r12
    85f2:	bf 90       	pop	r11
    85f4:	af 90       	pop	r10
    85f6:	9f 90       	pop	r9
    85f8:	8f 90       	pop	r8
    85fa:	7f 90       	pop	r7
    85fc:	6f 90       	pop	r6
    85fe:	5f 90       	pop	r5
    8600:	4f 90       	pop	r4
    8602:	08 95       	ret

00008604 <UIMenuSeparator::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)>:
_ZN15UIMenuSeparator4drawEP4U8G2jjjb():
    8604:	cf 92       	push	r12
    8606:	df 92       	push	r13
    8608:	ef 92       	push	r14
    860a:	ff 92       	push	r15
    860c:	0f 93       	push	r16
    860e:	1f 93       	push	r17
    8610:	cf 93       	push	r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:87
   @param y the y coordinate of the top/left corner
   @param w the y width of the menu item
   @param selected true if the menu item is selected
*/
void UIMenuSeparator::draw(U8G2 *u8g2, u8g2_uint_t x, u8g2_uint_t y,
                           u8g2_uint_t w, bool selected) {
    8612:	df 93       	push	r29
    8614:	6c 01       	movw	r12, r24
    8616:	eb 01       	movw	r28, r22
    8618:	7a 01       	movw	r14, r20
    861a:	89 01       	movw	r16, r18
u8g2_SetFontMode():
    861c:	fb 01       	movw	r30, r22
    861e:	e3 59       	subi	r30, 0x93	; 147
    8620:	ff 4f       	sbci	r31, 0xFF	; 255
    8622:	10 82       	st	Z, r1
_ZN4U8G212setDrawColorEh():
    8624:	61 e0       	ldi	r22, 0x01	; 1
    8626:	ce 01       	movw	r24, r28
    8628:	04 96       	adiw	r24, 0x04	; 4
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:933
    862a:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
_ZN4U8G29setCursorEjj():
    862e:	fe 01       	movw	r30, r28
    8630:	ee 56       	subi	r30, 0x6E	; 110
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:218
      { u8x8_RefreshDisplay(u8g2_GetU8x8(&u8g2)); }
    


    /* clib/u8g2.hvline.c */
    void setDrawColor(uint8_t color_index) { u8g2_SetDrawColor(&u8g2, color_index); }
    8632:	ff 4f       	sbci	r31, 0xFF	; 255
_ZN15UIMenuSeparator4drawEP4U8G2jjjb():
    8634:	85 e0       	ldi	r24, 0x05	; 5
    8636:	e8 0e       	add	r14, r24
    8638:	f1 1c       	adc	r15, r1
_ZN4U8G29setCursorEjj():
    863a:	e0 82       	st	Z, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
     /* LiquidCrystal compatible functions */
    void home(void) { tx = 0; ty = 0;  u8x8_utf8_init(u8g2_GetU8x8(&u8g2)); }
    void clear(void) { home(); clearDisplay(); clearBuffer();  }
    void noDisplay(void) { u8g2_SetPowerSave(&u8g2, 1); }
    void display(void) { u8g2_SetPowerSave(&u8g2, 0); }
    void setCursor(u8g2_uint_t x, u8g2_uint_t y) { tx = x; ty = y; }
    863c:	f1 82       	std	Z+1, r15	; 0x01
    863e:	32 96       	adiw	r30, 0x02	; 2
_ZN15UIMenuSeparator4drawEP4U8G2jjjb():
    8640:	0e 5f       	subi	r16, 0xFE	; 254
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:90
  u8g2->setFontMode(0);
  u8g2->setDrawColor(1);
  u8g2->setCursor(x + MENU_TEXT_OFFSET_X, y + MENU_TEXT_OFFSET_Y);
    8642:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN4U8G29setCursorEjj():
    8644:	00 83       	st	Z, r16
    8646:	11 83       	std	Z+1, r17	; 0x01
_ZN15UIMenuSeparator4drawEP4U8G2jjjb():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
    8648:	f6 01       	movw	r30, r12
    864a:	64 81       	ldd	r22, Z+4	; 0x04
    864c:	75 81       	ldd	r23, Z+5	; 0x05
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:90
    864e:	ce 01       	movw	r24, r28
    8650:	df 91       	pop	r29
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
    8652:	cf 91       	pop	r28
    8654:	1f 91       	pop	r17
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:91
  u8g2->print(reinterpret_cast<const __FlashStringHelper *>(text));
    8656:	0f 91       	pop	r16
    8658:	ff 90       	pop	r15
    865a:	ef 90       	pop	r14
    865c:	df 90       	pop	r13
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:92
}
    865e:	cf 90       	pop	r12
    8660:	0c 94 c4 2f 	jmp	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>

00008664 <UImenuItem::handleUIEvent(K197UIeventsource, K197UIeventType)>:
_ZN10UImenuItem13handleUIEventE17K197UIeventsource15K197UIeventType():
    8664:	80 e0       	ldi	r24, 0x00	; 0
    8666:	08 95       	ret

00008668 <logU2U()>:
_Z6logU2Uv():
    8668:	80 91 11 51 	lds	r24, 0x5111	; 0x805111 <logSplitUnit+0x6>
    866c:	88 23       	and	r24, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:91
void UIMenuSeparator::draw(U8G2 *u8g2, u8g2_uint_t x, u8g2_uint_t y,
                           u8g2_uint_t w, bool selected) {
  u8g2->setFontMode(0);
  u8g2->setDrawColor(1);
  u8g2->setCursor(x + MENU_TEXT_OFFSET_X, y + MENU_TEXT_OFFSET_Y);
  u8g2->print(reinterpret_cast<const __FlashStringHelper *>(text));
    866e:	31 f0       	breq	.+12     	; 0x867c <logU2U()+0x14>
    8670:	62 ea       	ldi	r22, 0xA2	; 162
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:73
*/
bool UImenuItem::handleUIEvent(K197UIeventsource eventSource,
                               K197UIeventType eventType) {
  return false;
  dxUtil.checkFreeStack();
}
    8672:	77 e0       	ldi	r23, 0x07	; 7
    8674:	87 ec       	ldi	r24, 0xC7	; 199
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:755
   otherwise a space
      @details the options controls how the unit is handled when data is
   imported into a spreadsheet
*/
inline void logU2U() {
  if (logSplitUnit.getValue())
    8676:	95 e4       	ldi	r25, 0x45	; 69
    8678:	0c 94 c4 2f 	jmp	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    867c:	60 e2       	ldi	r22, 0x20	; 32
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:756
    Serial.print(F(" ;"));
    867e:	87 ec       	ldi	r24, 0xC7	; 199
    8680:	95 e4       	ldi	r25, 0x45	; 69
    8682:	0c 94 bd 2f 	jmp	0x5f7a	; 0x5f7a <Print::print(char)>

00008686 <__class_gr_sample_time::getValue()>:
_ZN10K197device14getGraphPeriodEv():
    8686:	80 91 68 55 	lds	r24, 0x5568	; 0x805568 <k197dev+0x303>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:758
  else
    Serial.print(CH_SPACE);
    868a:	90 91 69 55 	lds	r25, 0x5569	; 0x805569 <k197dev+0x304>
    868e:	63 e0       	ldi	r22, 0x03	; 3
    8690:	70 e0       	ldi	r23, 0x00	; 0
    8692:	0e 94 2c 78 	call	0xf058	; 0xf058 <__udivmodhi4>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.h:418
      @brief get the sampling period for the graph in seconds
      @details the actual sapling time will approximate the returned time, depending on the actual sampling rate of the K197.
      When zero is returned, all samples received from the K197 are graphed (the data rate is about 3Hz)
      @return number the sampling period in seconds
  */
  uint16_t getGraphPeriod() { return cache.nsamples_graph / 3; };
    8696:	86 2f       	mov	r24, r22
_ZN22__class_gr_sample_time8getValueEv():
    8698:	08 95       	ret

0000869a <__class_gr_xscale_autosample::change()>:
_ZN28__class_gr_xscale_autosample6changeEv():
    869a:	dc 01       	movw	r26, r24
    869c:	ed 91       	ld	r30, X+
    869e:	fc 91       	ld	r31, X
    86a0:	04 84       	ldd	r0, Z+12	; 0x0c
    86a2:	f5 85       	ldd	r31, Z+13	; 0x0d
    86a4:	e0 2d       	mov	r30, r0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:673

DEF_MENU_SEPARATOR(graphSeparator2, 15, "< X axis >"); ///< Menu separator
DEF_MENU_BOOL(gr_xscale_roll_mode, 15, "Roll mode");       ///< Menu input
DEF_MENU_BOOL_ACT(gr_xscale_autosample, 15, "Auto sample",
                  k197dev.setAutosample(getValue()););       ///< Menu input
DEF_MENU_BYTE_SETGET(gr_sample_time, 15, "Sample time (s)",
    86a6:	09 95       	icall
_ZN10K197device13setAutosampleEb():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:671
  
DEF_MENU_BOOL(gr_yscale_show0, 15, "Show y=0");

DEF_MENU_SEPARATOR(graphSeparator2, 15, "< X axis >"); ///< Menu separator
DEF_MENU_BOOL(gr_xscale_roll_mode, 15, "Roll mode");       ///< Menu input
DEF_MENU_BOOL_ACT(gr_xscale_autosample, 15, "Auto sample",
    86a8:	80 93 6a 55 	sts	0x556A, r24	; 0x80556a <k197dev+0x305>
_ZN28__class_gr_xscale_autosample6changeEv():
    86ac:	08 95       	ret

000086ae <__class_logStatSamples::change()>:
_ZN22__class_logStatSamples6changeEv():
    86ae:	dc 01       	movw	r26, r24
    86b0:	ed 91       	ld	r30, X+
    86b2:	fc 91       	ld	r31, X
    86b4:	04 84       	ldd	r0, Z+12	; 0x0c
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.h:438
      data already sampled are decimated, so that they match the new sampling time 

      @param autosample the new value of the autosample flag
  */
  void setAutosample(bool autosample) { 
      cache.autosample_graph = autosample; 
    86b6:	f5 85       	ldd	r31, Z+13	; 0x0d
    86b8:	e0 2d       	mov	r30, r0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:671
    86ba:	09 95       	icall
setNsamples():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:645
DEF_MENU_BOOL(logSplitUnit, 15, "Split unit");               ///< Menu input
DEF_MENU_BOOL(logTimestamp, 15, "Log timestamp");            ///< Menu input
DEF_MENU_BOOL(logTamb, 15, "Include Tamb");                  ///< Menu input
DEF_MENU_BOOL(logStat, 15, "Include Statistics");            ///< Menu input
DEF_MENU_SEPARATOR(logSeparator1, 15, "< Statistics >");     ///< Menu separator
DEF_MENU_BYTE_ACT(logStatSamples, 15, "Num. Samples",
    86bc:	80 93 65 55 	sts	0x5565, r24	; 0x805565 <k197dev+0x300>
    86c0:	68 2f       	mov	r22, r24
    86c2:	70 e0       	ldi	r23, 0x00	; 0
    86c4:	90 e0       	ldi	r25, 0x00	; 0
    86c6:	80 e0       	ldi	r24, 0x00	; 0
    86c8:	0e 94 e8 75 	call	0xebd0	; 0xebd0 <__floatunsisf>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.h:391
     takes effect

      @param nsamples number of samples
  */
  void setNsamples(byte nsamples) { 
      cache.nsamples = nsamples; 
    86cc:	9b 01       	movw	r18, r22
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.h:392
      cache.avg_factor = 1.0 / float(nsamples);
    86ce:	ac 01       	movw	r20, r24
    86d0:	60 e0       	ldi	r22, 0x00	; 0
    86d2:	70 e0       	ldi	r23, 0x00	; 0
    86d4:	80 e8       	ldi	r24, 0x80	; 128
    86d6:	9f e3       	ldi	r25, 0x3F	; 63
    86d8:	0e 94 7e 77 	call	0xeefc	; 0xeefc <__divsf3>
    86dc:	60 93 7a 52 	sts	0x527A, r22	; 0x80527a <k197dev+0x15>
    86e0:	70 93 7b 52 	sts	0x527B, r23	; 0x80527b <k197dev+0x16>
    86e4:	80 93 7c 52 	sts	0x527C, r24	; 0x80527c <k197dev+0x17>
    86e8:	90 93 7d 52 	sts	0x527D, r25	; 0x80527d <k197dev+0x18>
_ZN22__class_logStatSamples6changeEv():
    86ec:	08 95       	ret

000086ee <__class_contrastCtrl::change()>:
_ZN20__class_contrastCtrl6changeEv():
    86ee:	dc 01       	movw	r26, r24
    86f0:	ed 91       	ld	r30, X+
    86f2:	fc 91       	ld	r31, X
    86f4:	04 84       	ldd	r0, Z+12	; 0x0c
    86f6:	f5 85       	ldd	r31, Z+13	; 0x0d
    86f8:	e0 2d       	mov	r30, r0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:645
    86fa:	09 95       	icall
_ZN4U8G211setContrastEh():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:613
DEF_MENU_BOOL(reassignStoRcl, 15, "Reassign STO/RCL"); ///< Menu input
DEF_MENU_OPEN(btDatalog, 15, "Data logging >>>", &UIlogMenu); ///< Open submenu
DEF_MENU_OPEN(btGraphOpt, 15, "Graph options >>>", &UIgraphMenu); ///< Open submenu
DEF_MENU_BUTTON(bluetoothMenu, 15,
                "Bluetooth"); ///< TBD: submenu not yet implemented
DEF_MENU_BYTE_ACT(contrastCtrl, 15, "Contrast",
    86fc:	0c 94 ca 2d 	jmp	0x5b94	; 0x5b94 <u8x8_SetContrast.constprop.148>

00008700 <UImessageBox::show()>:
_ZN8UIwindow16getcurrentWindowEv():
    8700:	20 91 e8 4f 	lds	r18, 0x4FE8	; 0x804fe8 <UIwindow::currentWindow>
    8704:	30 91 e9 4f 	lds	r19, 0x4FE9	; 0x804fe9 <UIwindow::currentWindow+0x1>
_ZN12UImessageBox4showEv():
    8708:	21 15       	cp	r18, r1
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:136
      
    void setFlipMode(uint8_t mode) {
      u8g2_SetFlipMode(&u8g2, mode); }

    void setContrast(uint8_t value) {
      u8g2_SetContrast(&u8g2, value); }
    870a:	31 05       	cpc	r19, r1
    870c:	51 f0       	breq	.+20     	; 0x8722 <UImessageBox::show()+0x22>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:234

      /*!
         @brief  get the currrent menu
        @return pointer to UImenu object representing the current menu
      */
      static UIwindow *getcurrentWindow() { return currentWindow; };
    870e:	82 17       	cp	r24, r18
    8710:	93 07       	cpc	r25, r19
    8712:	39 f0       	breq	.+14     	; 0x8722 <UImessageBox::show()+0x22>
_ZN8UIwindow10openWindowEPS_():
    8714:	fc 01       	movw	r30, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:533
  };
  virtual void draw(U8G2 *u8g2, u8g2_uint_t x, u8g2_uint_t y);
  virtual bool handleUIEvent(K197UIeventsource eventSource, K197UIeventType eventType);
  void show() {
      UIwindow *current=getcurrentWindow();
      if (current!=NULL && current != this) current->openWindow(this);};
    8716:	24 83       	std	Z+4, r18	; 0x04
    8718:	35 83       	std	Z+5, r19	; 0x05
    871a:	80 93 e8 4f 	sts	0x4FE8, r24	; 0x804fe8 <UIwindow::currentWindow>
    871e:	90 93 e9 4f 	sts	0x4FE9, r25	; 0x804fe9 <UIwindow::currentWindow+0x1>
_ZN12UImessageBox4showEv():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:213
          object returned by getcurrentWindow().
          @param child pointer to an object of type UImenu, it will become the
          current menu
      */
      void openWindow(UIwindow *child) {
          child->parent = this;
    8722:	08 95       	ret

00008724 <UIMenuActionOpen::change()>:
_ZN16UIMenuActionOpen6changeEv():
    8724:	fc 01       	movw	r30, r24
    8726:	a6 81       	ldd	r26, Z+6	; 0x06
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:214
          currentWindow = child;
    8728:	b7 81       	ldd	r27, Z+7	; 0x07
_ZN8UIwindow16getcurrentWindowEv():
    872a:	e8 ee       	ldi	r30, 0xE8	; 232
    872c:	ff e4       	ldi	r31, 0x4F	; 79
_ZN8UIwindow10openWindowEPS_():
    872e:	80 81       	ld	r24, Z
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:533
  };
  virtual void draw(U8G2 *u8g2, u8g2_uint_t x, u8g2_uint_t y);
  virtual bool handleUIEvent(K197UIeventsource eventSource, K197UIeventType eventType);
  void show() {
      UIwindow *current=getcurrentWindow();
      if (current!=NULL && current != this) current->openWindow(this);};
    8730:	91 81       	ldd	r25, Z+1	; 0x01
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:498
     @brief  this method is triggered any time the value of the item is changed
     or the item is asked to perform its default action
     @details for this element this method asks the current menu to opens the
     child menu passed at contruction
  */
  virtual void change() { UIwindow::getcurrentWindow()->openWindow(child); };
    8732:	14 96       	adiw	r26, 0x04	; 4
    8734:	8d 93       	st	X+, r24
    8736:	9c 93       	st	X, r25
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:234

      /*!
         @brief  get the currrent menu
        @return pointer to UImenu object representing the current menu
      */
      static UIwindow *getcurrentWindow() { return currentWindow; };
    8738:	15 97       	sbiw	r26, 0x05	; 5
    873a:	a0 83       	st	Z, r26
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:213
          object returned by getcurrentWindow().
          @param child pointer to an object of type UImenu, it will become the
          current menu
      */
      void openWindow(UIwindow *child) {
          child->parent = this;
    873c:	b1 83       	std	Z+1, r27	; 0x01
_ZN16UIMenuActionOpen6changeEv():
    873e:	08 95       	ret

00008740 <UIMenuActionClose::change()>:
_ZN8UIwindow16getcurrentWindowEv():
    8740:	e0 91 e8 4f 	lds	r30, 0x4FE8	; 0x804fe8 <UIwindow::currentWindow>
    8744:	f0 91 e9 4f 	lds	r31, 0x4FE9	; 0x804fe9 <UIwindow::currentWindow+0x1>
_ZN8UIwindow11closeWindowEv.isra.4():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:214
          currentWindow = child;
    8748:	84 81       	ldd	r24, Z+4	; 0x04
    874a:	95 81       	ldd	r25, Z+5	; 0x05
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:498
     @brief  this method is triggered any time the value of the item is changed
     or the item is asked to perform its default action
     @details for this element this method asks the current menu to opens the
     child menu passed at contruction
  */
  virtual void change() { UIwindow::getcurrentWindow()->openWindow(child); };
    874c:	00 97       	sbiw	r24, 0x00	; 0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:234

      /*!
         @brief  get the currrent menu
        @return pointer to UImenu object representing the current menu
      */
      static UIwindow *getcurrentWindow() { return currentWindow; };
    874e:	31 f0       	breq	.+12     	; 0x875c <UIMenuActionClose::change()+0x1c>
    8750:	80 93 e8 4f 	sts	0x4FE8, r24	; 0x804fe8 <UIwindow::currentWindow>
    8754:	90 93 e9 4f 	sts	0x4FE9, r25	; 0x804fe9 <UIwindow::currentWindow+0x1>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:225
         current menu, that is the object returned by getcurrentWindow(). trying to
         close the root menu has no effect (the root menu has the parent set to
         NULL).
      */
      void closeWindow() {
          if (parent == NULL) return;
    8758:	14 82       	std	Z+4, r1	; 0x04
    875a:	15 82       	std	Z+5, r1	; 0x05
_ZN17UIMenuActionClose6changeEv():
    875c:	08 95       	ret

0000875e <MenuInputByte::getValue()>:
_ZN13MenuInputByte8getValueEv():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:226
          currentWindow = parent;
    875e:	fc 01       	movw	r30, r24
    8760:	87 81       	ldd	r24, Z+7	; 0x07
    8762:	08 95       	ret

00008764 <MenuInputByte::setValue(unsigned char)>:
_ZN13MenuInputByte8setValueEh():
    8764:	fc 01       	movw	r30, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:227
          parent = NULL;
    8766:	67 83       	std	Z+7, r22	; 0x07
    8768:	08 95       	ret

0000876a <MenuInputByte::getHeight(bool)>:
_ZN13MenuInputByte9getHeightEb():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:463
  /*!
     @brief  this method is triggered any time the value of the item is changed
     or the item is asked to perform its default action
     @details for this element this method closes the current menu
  */
  virtual void change() { UIwindow::getcurrentWindow()->closeWindow(); };
    876a:	fc 01       	movw	r30, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:388
  virtual void setValue(byte newValue) { value = newValue; };
  /*!
     @brief  get the value for this item
     @return the value assigned to the item
  */
  virtual byte getValue() { return value; };
    876c:	82 81       	ldd	r24, Z+2	; 0x02
    876e:	93 81       	ldd	r25, Z+3	; 0x03
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:383
  };
  /*!
     @brief  set the value for this item
     @param newValue the new value that will be assigned to the item
  */
  virtual void setValue(byte newValue) { value = newValue; };
    8770:	66 23       	and	r22, r22
    8772:	11 f0       	breq	.+4      	; 0x8778 <MenuInputByte::getHeight(bool)+0xe>
    8774:	88 0f       	add	r24, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:376
     @details when not selected the height returned is the one set at
     construction. When selected the height doubles.
     @param selected true if the method should return the height when selected
     @return height of the item in pixels
  */
  virtual u8g2_uint_t getHeight(bool selected = true) {
    8776:	99 1f       	adc	r25, r25
    8778:	08 95       	ret

0000877a <MenuInputBool::getValue()>:
_ZN13MenuInputBool8getValueEv():
    877a:	fc 01       	movw	r30, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:377
    return selected ? 2 * height : height;
    877c:	86 81       	ldd	r24, Z+6	; 0x06
    877e:	08 95       	ret

00008780 <MenuInputBool::setValue(bool)>:
_ZN13MenuInputBool8setValueEb():
    8780:	fc 01       	movw	r30, r24
    8782:	66 83       	std	Z+6, r22	; 0x06
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:378
  };
    8784:	08 95       	ret

00008786 <UIwindow::handleUIEvent(K197UIeventsource, K197UIeventType)>:
_ZN8UIwindow13handleUIEventE17K197UIeventsource15K197UIeventType():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:324
  virtual void setValue(bool newValue) { value = newValue; };
  /*!
     @brief  get the value for this item
     @return the value assigned to the item
  */
  virtual bool getValue() { return value; };
    8786:	80 e0       	ldi	r24, 0x00	; 0
    8788:	08 95       	ret

0000878a <UIwindow::draw(U8G2*, unsigned int, unsigned int)>:
_ZN8UIwindow4drawEP4U8G2jj():
    878a:	08 95       	ret

0000878c <UIMenuSeparator::selectable()>:
_ZN15UIMenuSeparator10selectableEv():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:319
      : UIMenuButtonItem(height, text){};
  /*!
     @brief  set the value for this item
     @param newValue the new value that will be assigned to the item
  */
  virtual void setValue(bool newValue) { value = newValue; };
    878c:	80 e0       	ldi	r24, 0x00	; 0
    878e:	08 95       	ret

00008790 <UImenuItem::change()>:
_ZN5Print5flushEv():
    8790:	08 95       	ret

00008792 <UImenuItem::selectable()>:
_ZN10UImenuItem10selectableEv():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:201
        "-Wunused-parameter" // A derived class may eturn a different valuse
                         // depending on being selected
      virtual void draw(U8G2 *u8g2, u8g2_uint_t x, u8g2_uint_t y){};  ///< virtual function, see derived classes
      virtual bool handleUIEvent(K197UIeventsource eventSource, K197UIeventType eventType){
          return false;  
      }; ///< virtual function, see derived classes
    8792:	81 e0       	ldi	r24, 0x01	; 1
    8794:	08 95       	ret

00008796 <UImenuItem::getHeight(bool)>:
_ZN10UImenuItem9getHeightEb():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:198
  
  #   pragma GCC diagnostic push
  #   pragma GCC diagnostic ignored                                                 \
        "-Wunused-parameter" // A derived class may eturn a different valuse
                         // depending on being selected
      virtual void draw(U8G2 *u8g2, u8g2_uint_t x, u8g2_uint_t y){};  ///< virtual function, see derived classes
    8796:	fc 01       	movw	r30, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:128
     @brief  query if the item can be selected
     @details a separator cannot be selected, so this method always returns
     false
     @return always return false
  */
  virtual bool selectable() { return false; };
    8798:	82 81       	ldd	r24, Z+2	; 0x02
    879a:	93 81       	ldd	r25, Z+3	; 0x03
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.h:95
    size_t println(void);

    int16_t printf(const char *format, ...) __attribute__ ((format (printf, 2, 3)));
    int16_t printf(const __FlashStringHelper *format, ...);

    virtual void flush() { /* Empty implementation for backward compatibility */ }
    879c:	08 95       	ret

0000879e <U8G2LOG::write(unsigned char const*, unsigned int)>:
_ZN7U8G2LOG5writeEPKhj():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:86
     @brief  query if the item can be selected
     @details a subclass may return false if the menu cannot be selected (e.g. a
     separator)
     @return true if the item can be selected
  */
  virtual bool selectable() { return true; };
    879e:	cf 92       	push	r12
    87a0:	df 92       	push	r13
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.h:68
     @param selected true if the method should return the height when selected
     @return height of the item in pixels
  */
  virtual u8g2_uint_t getHeight(bool selected = true) {
    return height;
  }; ///< return the height of the menu item
    87a2:	ef 92       	push	r14
    87a4:	ff 92       	push	r15
    87a6:	0f 93       	push	r16
    87a8:	1f 93       	push	r17
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:443
    size_t write(uint8_t v) {
      u8log_WriteChar(&u8log, v);
      return 1;
     }

    size_t write(const uint8_t *buffer, size_t size) {
    87aa:	cf 93       	push	r28
    87ac:	df 93       	push	r29
    87ae:	6c 01       	movw	r12, r24
    87b0:	eb 01       	movw	r28, r22
    87b2:	7b 01       	movw	r14, r22
    87b4:	e4 0e       	add	r14, r20
    87b6:	f5 1e       	adc	r15, r21
    87b8:	10 e0       	ldi	r17, 0x00	; 0
    87ba:	00 e0       	ldi	r16, 0x00	; 0
    87bc:	ce 15       	cp	r28, r14
    87be:	df 05       	cpc	r29, r15
    87c0:	61 f0       	breq	.+24     	; 0x87da <U8G2LOG::write(unsigned char const*, unsigned int)+0x3c>
    87c2:	69 91       	ld	r22, Y+
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:444
      size_t cnt = 0;
    87c4:	d6 01       	movw	r26, r12
    87c6:	ed 91       	ld	r30, X+
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:445
      while( size > 0 ) {
    87c8:	fc 91       	ld	r31, X
    87ca:	01 90       	ld	r0, Z+
    87cc:	f0 81       	ld	r31, Z
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:446
	cnt += write(*buffer++); 
    87ce:	e0 2d       	mov	r30, r0
    87d0:	c6 01       	movw	r24, r12
    87d2:	09 95       	icall
    87d4:	08 0f       	add	r16, r24
    87d6:	19 1f       	adc	r17, r25
    87d8:	f1 cf       	rjmp	.-30     	; 0x87bc <U8G2LOG::write(unsigned char const*, unsigned int)+0x1e>
    87da:	c8 01       	movw	r24, r16
    87dc:	df 91       	pop	r29
    87de:	cf 91       	pop	r28
    87e0:	1f 91       	pop	r17
    87e2:	0f 91       	pop	r16
    87e4:	ff 90       	pop	r15
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:450
	size--;
      }
      return cnt;
    }  
    87e6:	ef 90       	pop	r14
    87e8:	df 90       	pop	r13
    87ea:	cf 90       	pop	r12
    87ec:	08 95       	ret

000087ee <debugUtil::write(unsigned char const*, unsigned int)>:
_ZN9debugUtil5writeEPKhj():
    87ee:	cf 92       	push	r12
    87f0:	df 92       	push	r13
    87f2:	ef 92       	push	r14
    87f4:	ff 92       	push	r15
    87f6:	0f 93       	push	r16
    87f8:	1f 93       	push	r17
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:85
      @param size the number of bytes to write

      @return return the result from the stream that has the best outcome (or
   zero if no output stream is enabled)
*/
size_t debugUtil::write(const uint8_t *buffer, size_t size) {
    87fa:	cf 93       	push	r28
    87fc:	df 93       	push	r29
    87fe:	6c 01       	movw	r12, r24
    8800:	8b 01       	movw	r16, r22
    8802:	7a 01       	movw	r14, r20
    8804:	fc 01       	movw	r30, r24
    8806:	84 81       	ldd	r24, Z+4	; 0x04
    8808:	d0 e0       	ldi	r29, 0x00	; 0
    880a:	c0 e0       	ldi	r28, 0x00	; 0
    880c:	88 23       	and	r24, r24
    880e:	31 f0       	breq	.+12     	; 0x881c <debugUtil::write(unsigned char const*, unsigned int)+0x2e>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:87
  size_t b1 = 0, b2 = 0;
  if (use_serial)
    8810:	87 ec       	ldi	r24, 0xC7	; 199
    8812:	95 e4       	ldi	r25, 0x45	; 69
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:86

      @return return the result from the stream that has the best outcome (or
   zero if no output stream is enabled)
*/
size_t debugUtil::write(const uint8_t *buffer, size_t size) {
  size_t b1 = 0, b2 = 0;
    8814:	0e 94 e8 2f 	call	0x5fd0	; 0x5fd0 <Print::write(unsigned char const*, unsigned int)>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:87
  if (use_serial)
    8818:	d8 2f       	mov	r29, r24
    881a:	c9 2f       	mov	r28, r25
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:88
    b1 = Serial.write(buffer, size);
    881c:	f6 01       	movw	r30, r12
    881e:	85 81       	ldd	r24, Z+5	; 0x05
    8820:	30 e0       	ldi	r19, 0x00	; 0
    8822:	20 e0       	ldi	r18, 0x00	; 0
    8824:	88 23       	and	r24, r24
    8826:	31 f0       	breq	.+12     	; 0x8834 <debugUtil::write(unsigned char const*, unsigned int)+0x46>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:89
  if (use_oled)
    8828:	a7 01       	movw	r20, r14
    882a:	b8 01       	movw	r22, r16
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:86

      @return return the result from the stream that has the best outcome (or
   zero if no output stream is enabled)
*/
size_t debugUtil::write(const uint8_t *buffer, size_t size) {
  size_t b1 = 0, b2 = 0;
    882c:	8f e8       	ldi	r24, 0x8F	; 143
    882e:	91 e5       	ldi	r25, 0x51	; 81
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:89
  if (use_serial)
    b1 = Serial.write(buffer, size);
  if (use_oled)
    8830:	b6 df       	rcall	.-148    	; 0x879e <U8G2LOG::write(unsigned char const*, unsigned int)>
    8832:	9c 01       	movw	r18, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:90
    b2 = u8g2log.write(buffer, size);
    8834:	8d 2f       	mov	r24, r29
    8836:	9c 2f       	mov	r25, r28
    8838:	82 17       	cp	r24, r18
    883a:	93 07       	cpc	r25, r19
    883c:	08 f4       	brcc	.+2      	; 0x8840 <debugUtil::write(unsigned char const*, unsigned int)+0x52>
    883e:	c9 01       	movw	r24, r18
    8840:	df 91       	pop	r29
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:91
  return b1 > b2 ? b1 : b2;
    8842:	cf 91       	pop	r28
    8844:	1f 91       	pop	r17
    8846:	0f 91       	pop	r16
    8848:	ff 90       	pop	r15
    884a:	ef 90       	pop	r14
    884c:	df 90       	pop	r13
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/debugUtil.cpp:92
}
    884e:	cf 90       	pop	r12
    8850:	08 95       	ret

00008852 <U8G2LOG::write(unsigned char)>:
_ZN7U8G2LOG5writeEh():
    8852:	04 96       	adiw	r24, 0x04	; 4
    8854:	0e 94 a4 34 	call	0x6948	; 0x6948 <u8log_WriteChar>
    8858:	81 e0       	ldi	r24, 0x01	; 1
    885a:	90 e0       	ldi	r25, 0x00	; 0
    885c:	08 95       	ret

0000885e <U8G2::write(unsigned char const*, unsigned int)>:
_ZN4U8G25writeEPKhj():
    885e:	cf 92       	push	r12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:439
    void setRedrawMode(uint8_t is_redraw_line_for_each_char) {
      u8log_SetRedrawMode(&u8log, is_redraw_line_for_each_char); }
    
    /* virtual function for print base class */    
    size_t write(uint8_t v) {
      u8log_WriteChar(&u8log, v);
    8860:	df 92       	push	r13
    8862:	ef 92       	push	r14
    8864:	ff 92       	push	r15
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:441
      return 1;
     }
    8866:	0f 93       	push	r16
    8868:	1f 93       	push	r17
    886a:	cf 93       	push	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:356
	
      }
      return 1;
     }

    size_t write(const uint8_t *buffer, size_t size) {
    886c:	df 93       	push	r29
    886e:	6c 01       	movw	r12, r24
    8870:	eb 01       	movw	r28, r22
    8872:	7b 01       	movw	r14, r22
    8874:	e4 0e       	add	r14, r20
    8876:	f5 1e       	adc	r15, r21
    8878:	10 e0       	ldi	r17, 0x00	; 0
    887a:	00 e0       	ldi	r16, 0x00	; 0
    887c:	ce 15       	cp	r28, r14
    887e:	df 05       	cpc	r29, r15
    8880:	61 f0       	breq	.+24     	; 0x889a <U8G2::write(unsigned char const*, unsigned int)+0x3c>
    8882:	69 91       	ld	r22, Y+
    8884:	d6 01       	movw	r26, r12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:357
      size_t cnt = 0;
    8886:	ed 91       	ld	r30, X+
    8888:	fc 91       	ld	r31, X
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:358
      while( size > 0 ) {
    888a:	01 90       	ld	r0, Z+
    888c:	f0 81       	ld	r31, Z
    888e:	e0 2d       	mov	r30, r0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:359
	cnt += write(*buffer++); 
    8890:	c6 01       	movw	r24, r12
    8892:	09 95       	icall
    8894:	08 0f       	add	r16, r24
    8896:	19 1f       	adc	r17, r25
    8898:	f1 cf       	rjmp	.-30     	; 0x887c <U8G2::write(unsigned char const*, unsigned int)+0x1e>
    889a:	c8 01       	movw	r24, r16
    889c:	df 91       	pop	r29
    889e:	cf 91       	pop	r28
    88a0:	1f 91       	pop	r17
    88a2:	0f 91       	pop	r16
    88a4:	ff 90       	pop	r15
    88a6:	ef 90       	pop	r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:363
	size--;
      }
      return cnt;
    }
    88a8:	df 90       	pop	r13
    88aa:	cf 90       	pop	r12
    88ac:	08 95       	ret

000088ae <U8G2::write(unsigned char)>:
_ZN4U8G25writeEh():
    88ae:	cf 92       	push	r12
    88b0:	df 92       	push	r13
    88b2:	ef 92       	push	r14
    88b4:	ff 92       	push	r15
    88b6:	0f 93       	push	r16
    88b8:	1f 93       	push	r17
    88ba:	cf 93       	push	r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:318
    void writeBufferPBM2(Print &p);
    void writeBufferXBM2(Print &p);
#endif

    /* virtual function for print base class */    
    size_t write(uint8_t v) {
    88bc:	df 93       	push	r29
    88be:	ec 01       	movw	r28, r24
    88c0:	6c 01       	movw	r12, r24
    88c2:	24 e0       	ldi	r18, 0x04	; 4
    88c4:	c2 0e       	add	r12, r18
    88c6:	d1 1c       	adc	r13, r1
    88c8:	fc 01       	movw	r30, r24
    88ca:	e0 57       	subi	r30, 0x70	; 112
    88cc:	ff 4f       	sbci	r31, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:319
      uint16_t e = cpp_next_cb(&(u8g2.u8x8), v);
    88ce:	01 90       	ld	r0, Z+
    88d0:	f0 81       	ld	r31, Z
    88d2:	e0 2d       	mov	r30, r0
    88d4:	c6 01       	movw	r24, r12
    88d6:	09 95       	icall
    88d8:	8e 3f       	cpi	r24, 0xFE	; 254
    88da:	ef ef       	ldi	r30, 0xFF	; 255
    88dc:	9e 07       	cpc	r25, r30
    88de:	d8 f4       	brcc	.+54     	; 0x8916 <U8G2::write(unsigned char)+0x68>
    88e0:	8e 01       	movw	r16, r28
    88e2:	0c 56       	subi	r16, 0x6C	; 108
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:321
      
      if ( e < 0x0fffe )
    88e4:	1f 4f       	sbci	r17, 0xFF	; 255
    88e6:	f8 01       	movw	r30, r16
    88e8:	40 81       	ld	r20, Z
    88ea:	51 81       	ldd	r21, Z+1	; 0x01
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:323
      {
	u8g2_uint_t delta = u8g2_DrawGlyph(&u8g2, tx, ty, e);
    88ec:	7e 01       	movw	r14, r28
    88ee:	f2 e9       	ldi	r31, 0x92	; 146
    88f0:	ef 0e       	add	r14, r31
    88f2:	f1 1c       	adc	r15, r1
    88f4:	f7 01       	movw	r30, r14
    88f6:	60 81       	ld	r22, Z
    88f8:	71 81       	ldd	r23, Z+1	; 0x01
    88fa:	9c 01       	movw	r18, r24
    88fc:	c6 01       	movw	r24, r12
    88fe:	0e 94 cc 3a 	call	0x7598	; 0x7598 <u8g2_DrawGlyph>
    8902:	c0 59       	subi	r28, 0x90	; 144
    8904:	df 4f       	sbci	r29, 0xFF	; 255
    8906:	28 81       	ld	r18, Y
    8908:	21 30       	cpi	r18, 0x01	; 1
    890a:	c1 f0       	breq	.+48     	; 0x893c <U8G2::write(unsigned char)+0x8e>
    890c:	78 f0       	brcs	.+30     	; 0x892c <U8G2::write(unsigned char)+0x7e>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:326
	
#ifdef U8G2_WITH_FONT_ROTATION
	switch(u8g2.font_decode.dir)
    890e:	22 30       	cpi	r18, 0x02	; 2
    8910:	b9 f0       	breq	.+46     	; 0x8940 <U8G2::write(unsigned char)+0x92>
    8912:	23 30       	cpi	r18, 0x03	; 3
    8914:	e9 f0       	breq	.+58     	; 0x8950 <U8G2::write(unsigned char)+0xa2>
    8916:	81 e0       	ldi	r24, 0x01	; 1
    8918:	90 e0       	ldi	r25, 0x00	; 0
    891a:	df 91       	pop	r29
    891c:	cf 91       	pop	r28
    891e:	1f 91       	pop	r17
    8920:	0f 91       	pop	r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:354
	
	
	
      }
      return 1;
     }
    8922:	ff 90       	pop	r15
    8924:	ef 90       	pop	r14
    8926:	df 90       	pop	r13
    8928:	cf 90       	pop	r12
    892a:	08 95       	ret
    892c:	f7 01       	movw	r30, r14
    892e:	20 81       	ld	r18, Z
    8930:	31 81       	ldd	r19, Z+1	; 0x01
    8932:	82 0f       	add	r24, r18
    8934:	93 1f       	adc	r25, r19
    8936:	80 83       	st	Z, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:329
	
#ifdef U8G2_WITH_FONT_ROTATION
	switch(u8g2.font_decode.dir)
	{
	  case 0:
	    tx += delta;
    8938:	91 83       	std	Z+1, r25	; 0x01
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:332
	    break;
	  case 1:
	    ty += delta;
    893a:	ed cf       	rjmp	.-38     	; 0x8916 <U8G2::write(unsigned char)+0x68>
    893c:	f8 01       	movw	r30, r16
    893e:	f7 cf       	rjmp	.-18     	; 0x892e <U8G2::write(unsigned char)+0x80>
    8940:	f7 01       	movw	r30, r14
    8942:	20 81       	ld	r18, Z
    8944:	31 81       	ldd	r19, Z+1	; 0x01
    8946:	28 1b       	sub	r18, r24
    8948:	39 0b       	sbc	r19, r25
    894a:	20 83       	st	Z, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:335
	    break;
	  case 2:
	    tx -= delta;
    894c:	31 83       	std	Z+1, r19	; 0x01
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:338
	    break;
	  case 3:
	    ty -= delta;
    894e:	e3 cf       	rjmp	.-58     	; 0x8916 <U8G2::write(unsigned char)+0x68>
    8950:	f8 01       	movw	r30, r16
    8952:	f7 cf       	rjmp	.-18     	; 0x8942 <U8G2::write(unsigned char)+0x94>

00008954 <Print::availableForWrite()>:
_ZN5Print17availableForWriteEv():
    8954:	90 e0       	ldi	r25, 0x00	; 0
    8956:	80 e0       	ldi	r24, 0x00	; 0
    8958:	08 95       	ret

0000895a <k197graph_label_type::getpow10(int)>:
_ZN20k197graph_label_type8getpow10Ei():
    895a:	87 30       	cpi	r24, 0x07	; 7
    895c:	91 05       	cpc	r25, r1
    895e:	14 f0       	brlt	.+4      	; 0x8964 <k197graph_label_type::getpow10(int)+0xa>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.h:65
      return write((const uint8_t *)buffer, size);
    }

    // default to zero, meaning "a single write may block"
    // should be overridden by subclasses with buffering
    virtual int availableForWrite() { return 0; }
    8960:	86 e0       	ldi	r24, 0x06	; 6
    8962:	90 e0       	ldi	r25, 0x00	; 0
    8964:	8a 3f       	cpi	r24, 0xFA	; 250
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:501
        }
    }
    pow10=6;
}

float k197graph_label_type::getpow10(int i) {
    8966:	2f ef       	ldi	r18, 0xFF	; 255
    8968:	92 07       	cpc	r25, r18
    896a:	14 f4       	brge	.+4      	; 0x8970 <k197graph_label_type::getpow10(int)+0x16>
    896c:	8a ef       	ldi	r24, 0xFA	; 250
    896e:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:505
   //return powf(10.0, i); // next code is equivalent but faster
   if (i<-6) i=-6;
   else if (i>6) i=6;
   return  pgm_read_float(&scaleFactor[i+6]);
    8970:	fc 01       	movw	r30, r24
    8972:	ee 0f       	add	r30, r30
    8974:	ff 1f       	adc	r31, r31
    8976:	ee 0f       	add	r30, r30
    8978:	ff 1f       	adc	r31, r31
    897a:	eb 58       	subi	r30, 0x8B	; 139
    897c:	f8 4f       	sbci	r31, 0xF8	; 248
    897e:	65 91       	lpm	r22, Z+
    8980:	75 91       	lpm	r23, Z+
    8982:	85 91       	lpm	r24, Z+
    8984:	94 91       	lpm	r25, Z
    8986:	08 95       	ret

00008988 <k197graph_label_type::setScaleMultiplierDown(float)>:
_ZN20k197graph_label_type22setScaleMultiplierDownEf():
    8988:	cf 92       	push	r12
    898a:	df 92       	push	r13
    898c:	ef 92       	push	r14
    898e:	ff 92       	push	r15
    8990:	1f 93       	push	r17
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:506
}
    8992:	cf 93       	push	r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:536
        mult=-1;
     }
  }
}

void k197graph_label_type::setScaleMultiplierDown(float x) { // Look for the minimum
    8994:	df 93       	push	r29
    8996:	ec 01       	movw	r28, r24
    8998:	6a 01       	movw	r12, r20
    899a:	7b 01       	movw	r14, r22
    899c:	89 81       	ldd	r24, Y+1	; 0x01
    899e:	99 27       	eor	r25, r25
    89a0:	81 95       	neg	r24
    89a2:	0c f4       	brge	.+2      	; 0x89a6 <k197graph_label_type::setScaleMultiplierDown(float)+0x1e>
    89a4:	90 95       	com	r25
    89a6:	d9 df       	rcall	.-78     	; 0x895a <k197graph_label_type::getpow10(int)>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:537
  float norm=x * getpow10(-pow10); // normalized: 1>=abs(norm)>=1
    89a8:	a7 01       	movw	r20, r14
    89aa:	96 01       	movw	r18, r12
    89ac:	0e 94 49 76 	call	0xec92	; 0xec92 <__mulsf3>
    89b0:	6b 01       	movw	r12, r22
    89b2:	7c 01       	movw	r14, r24
    89b4:	20 e0       	ldi	r18, 0x00	; 0
    89b6:	30 e0       	ldi	r19, 0x00	; 0
    89b8:	a9 01       	movw	r20, r18
    89ba:	0e 94 17 78 	call	0xf02e	; 0xf02e <__gesf2>
    89be:	18 16       	cp	r1, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:538
  if ( norm > 0) {
    89c0:	34 f5       	brge	.+76     	; 0x8a0e <k197graph_label_type::setScaleMultiplierDown(float)+0x86>
    89c2:	19 81       	ldd	r17, Y+1	; 0x01
    89c4:	11 50       	subi	r17, 0x01	; 1
    89c6:	20 e0       	ldi	r18, 0x00	; 0
    89c8:	30 e0       	ldi	r19, 0x00	; 0
    89ca:	40 e0       	ldi	r20, 0x00	; 0
    89cc:	5f e3       	ldi	r21, 0x3F	; 63
    89ce:	c7 01       	movw	r24, r14
    89d0:	b6 01       	movw	r22, r12
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:539
     if (norm > 0.5) {
    89d2:	0e 94 17 78 	call	0xf02e	; 0xf02e <__gesf2>
    89d6:	18 16       	cp	r1, r24
    89d8:	5c f4       	brge	.+22     	; 0x89f0 <k197graph_label_type::setScaleMultiplierDown(float)+0x68>
    89da:	19 83       	std	Y+1, r17	; 0x01
    89dc:	85 e0       	ldi	r24, 0x05	; 5
    89de:	88 83       	st	Y, r24
    89e0:	df 91       	pop	r29
    89e2:	cf 91       	pop	r28
    89e4:	1f 91       	pop	r17
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:540
        pow10--;
    89e6:	ff 90       	pop	r15
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:541
        mult=5;
    89e8:	ef 90       	pop	r14
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:557
        mult=-2;
     } else if (norm > -0.5) {
        pow10--;
        mult=-5;
     } else {
        mult=-1;
    89ea:	df 90       	pop	r13
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:560
     }
  }
}
    89ec:	cf 90       	pop	r12
    89ee:	08 95       	ret
    89f0:	2d ec       	ldi	r18, 0xCD	; 205
    89f2:	3c ec       	ldi	r19, 0xCC	; 204
    89f4:	4c e4       	ldi	r20, 0x4C	; 76
    89f6:	5e e3       	ldi	r21, 0x3E	; 62
    89f8:	c7 01       	movw	r24, r14
    89fa:	b6 01       	movw	r22, r12
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:542
  float norm=x * getpow10(-pow10); // normalized: 1>=abs(norm)>=1
  if ( norm > 0) {
     if (norm > 0.5) {
        pow10--;
        mult=5;
     } else if (norm > 0.2) {
    89fc:	0e 94 17 78 	call	0xf02e	; 0xf02e <__gesf2>
    8a00:	19 83       	std	Y+1, r17	; 0x01
    8a02:	18 16       	cp	r1, r24
    8a04:	14 f4       	brge	.+4      	; 0x8a0a <k197graph_label_type::setScaleMultiplierDown(float)+0x82>
    8a06:	82 e0       	ldi	r24, 0x02	; 2
    8a08:	ea cf       	rjmp	.-44     	; 0x89de <k197graph_label_type::setScaleMultiplierDown(float)+0x56>
    8a0a:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:543
        pow10--;
    8a0c:	e8 cf       	rjmp	.-48     	; 0x89de <k197graph_label_type::setScaleMultiplierDown(float)+0x56>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:542
  float norm=x * getpow10(-pow10); // normalized: 1>=abs(norm)>=1
  if ( norm > 0) {
     if (norm > 0.5) {
        pow10--;
        mult=5;
     } else if (norm > 0.2) {
    8a0e:	2d ec       	ldi	r18, 0xCD	; 205
    8a10:	3c ec       	ldi	r19, 0xCC	; 204
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:544
        pow10--;
        mult=2;
    8a12:	4c e4       	ldi	r20, 0x4C	; 76
    8a14:	5e eb       	ldi	r21, 0xBE	; 190
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:547
     } else {
        pow10--;
        mult=1;
    8a16:	c7 01       	movw	r24, r14
    8a18:	b6 01       	movw	r22, r12
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:550
     }
  } else {
     if (norm > -0.2) {
    8a1a:	0e 94 17 78 	call	0xf02e	; 0xf02e <__gesf2>
    8a1e:	18 16       	cp	r1, r24
    8a20:	2c f4       	brge	.+10     	; 0x8a2c <k197graph_label_type::setScaleMultiplierDown(float)+0xa4>
    8a22:	89 81       	ldd	r24, Y+1	; 0x01
    8a24:	81 50       	subi	r24, 0x01	; 1
    8a26:	89 83       	std	Y+1, r24	; 0x01
    8a28:	8e ef       	ldi	r24, 0xFE	; 254
    8a2a:	d9 cf       	rjmp	.-78     	; 0x89de <k197graph_label_type::setScaleMultiplierDown(float)+0x56>
    8a2c:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:551
        pow10--;
    8a2e:	30 e0       	ldi	r19, 0x00	; 0
    8a30:	40 e0       	ldi	r20, 0x00	; 0
    8a32:	5f eb       	ldi	r21, 0xBF	; 191
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:552
        mult=-2;
    8a34:	c7 01       	movw	r24, r14
    8a36:	b6 01       	movw	r22, r12
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:553
     } else if (norm > -0.5) {
    8a38:	0e 94 17 78 	call	0xf02e	; 0xf02e <__gesf2>
    8a3c:	18 16       	cp	r1, r24
    8a3e:	2c f4       	brge	.+10     	; 0x8a4a <k197graph_label_type::setScaleMultiplierDown(float)+0xc2>
    8a40:	89 81       	ldd	r24, Y+1	; 0x01
    8a42:	81 50       	subi	r24, 0x01	; 1
    8a44:	89 83       	std	Y+1, r24	; 0x01
    8a46:	8b ef       	ldi	r24, 0xFB	; 251
    8a48:	ca cf       	rjmp	.-108    	; 0x89de <k197graph_label_type::setScaleMultiplierDown(float)+0x56>
    8a4a:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:554
        pow10--;
    8a4c:	c8 cf       	rjmp	.-112    	; 0x89de <k197graph_label_type::setScaleMultiplierDown(float)+0x56>

00008a4e <k197graph_label_type::setScaleMultiplierUp(float)>:
_ZN20k197graph_label_type20setScaleMultiplierUpEf():
    8a4e:	cf 92       	push	r12
    8a50:	df 92       	push	r13
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:555
        mult=-5;
    8a52:	ef 92       	push	r14
    8a54:	ff 92       	push	r15
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:557
     } else {
        mult=-1;
    8a56:	1f 93       	push	r17
    8a58:	cf 93       	push	r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:508
   if (i<-6) i=-6;
   else if (i>6) i=6;
   return  pgm_read_float(&scaleFactor[i+6]);
}

void k197graph_label_type::setScaleMultiplierUp(float x) { // Look for the maximum
    8a5a:	df 93       	push	r29
    8a5c:	ec 01       	movw	r28, r24
    8a5e:	6a 01       	movw	r12, r20
    8a60:	7b 01       	movw	r14, r22
    8a62:	89 81       	ldd	r24, Y+1	; 0x01
    8a64:	99 27       	eor	r25, r25
    8a66:	81 95       	neg	r24
    8a68:	0c f4       	brge	.+2      	; 0x8a6c <k197graph_label_type::setScaleMultiplierUp(float)+0x1e>
    8a6a:	90 95       	com	r25
    8a6c:	76 df       	rcall	.-276    	; 0x895a <k197graph_label_type::getpow10(int)>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:509
  float norm=x * getpow10(-pow10); // normalized: -1<norm<1
    8a6e:	a7 01       	movw	r20, r14
    8a70:	96 01       	movw	r18, r12
    8a72:	0e 94 49 76 	call	0xec92	; 0xec92 <__mulsf3>
    8a76:	6b 01       	movw	r12, r22
    8a78:	7c 01       	movw	r14, r24
    8a7a:	20 e0       	ldi	r18, 0x00	; 0
    8a7c:	30 e0       	ldi	r19, 0x00	; 0
    8a7e:	a9 01       	movw	r20, r18
    8a80:	0e 94 17 78 	call	0xf02e	; 0xf02e <__gesf2>
    8a84:	18 16       	cp	r1, r24
    8a86:	44 f5       	brge	.+80     	; 0x8ad8 <k197graph_label_type::setScaleMultiplierUp(float)+0x8a>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:512
  //DebugOut.print(F("setScaleMultiplierUp pow10="));DebugOut.println(pow10);
  //DebugOut.print(F("setScaleMultiplierUp norm="));DebugOut.println(norm);
  if ( norm > 0) {
    8a88:	2d ec       	ldi	r18, 0xCD	; 205
    8a8a:	3c ec       	ldi	r19, 0xCC	; 204
    8a8c:	4c e4       	ldi	r20, 0x4C	; 76
    8a8e:	5e e3       	ldi	r21, 0x3E	; 62
    8a90:	c7 01       	movw	r24, r14
    8a92:	b6 01       	movw	r22, r12
    8a94:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:513
     if (norm < 0.2) {
    8a98:	87 ff       	sbrs	r24, 7
    8a9a:	0d c0       	rjmp	.+26     	; 0x8ab6 <k197graph_label_type::setScaleMultiplierUp(float)+0x68>
    8a9c:	89 81       	ldd	r24, Y+1	; 0x01
    8a9e:	81 50       	subi	r24, 0x01	; 1
    8aa0:	89 83       	std	Y+1, r24	; 0x01
    8aa2:	82 e0       	ldi	r24, 0x02	; 2
    8aa4:	88 83       	st	Y, r24
    8aa6:	df 91       	pop	r29
    8aa8:	cf 91       	pop	r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:514
        pow10--;
    8aaa:	1f 91       	pop	r17
    8aac:	ff 90       	pop	r15
    8aae:	ef 90       	pop	r14
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:515
        mult=2;
    8ab0:	df 90       	pop	r13
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:531
     } else if (norm < -0.2) {
        pow10--;
        mult=-2;
     } else {
        pow10--;
        mult=-1;
    8ab2:	cf 90       	pop	r12
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:534
     }
  }
}
    8ab4:	08 95       	ret
    8ab6:	20 e0       	ldi	r18, 0x00	; 0
    8ab8:	30 e0       	ldi	r19, 0x00	; 0
    8aba:	40 e0       	ldi	r20, 0x00	; 0
    8abc:	5f e3       	ldi	r21, 0x3F	; 63
    8abe:	c7 01       	movw	r24, r14
    8ac0:	b6 01       	movw	r22, r12
    8ac2:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:516
  //DebugOut.print(F("setScaleMultiplierUp norm="));DebugOut.println(norm);
  if ( norm > 0) {
     if (norm < 0.2) {
        pow10--;
        mult=2;
     } else if (norm < 0.5) {
    8ac6:	87 ff       	sbrs	r24, 7
    8ac8:	05 c0       	rjmp	.+10     	; 0x8ad4 <k197graph_label_type::setScaleMultiplierUp(float)+0x86>
    8aca:	89 81       	ldd	r24, Y+1	; 0x01
    8acc:	81 50       	subi	r24, 0x01	; 1
    8ace:	89 83       	std	Y+1, r24	; 0x01
    8ad0:	85 e0       	ldi	r24, 0x05	; 5
    8ad2:	e8 cf       	rjmp	.-48     	; 0x8aa4 <k197graph_label_type::setScaleMultiplierUp(float)+0x56>
    8ad4:	81 e0       	ldi	r24, 0x01	; 1
    8ad6:	e6 cf       	rjmp	.-52     	; 0x8aa4 <k197graph_label_type::setScaleMultiplierUp(float)+0x56>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:517
        pow10--;
    8ad8:	19 81       	ldd	r17, Y+1	; 0x01
    8ada:	11 50       	subi	r17, 0x01	; 1
    8adc:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:518
        mult=5;
    8ade:	30 e0       	ldi	r19, 0x00	; 0
    8ae0:	40 e0       	ldi	r20, 0x00	; 0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:520
     } else {
        mult=1;
    8ae2:	5f eb       	ldi	r21, 0xBF	; 191
    8ae4:	c7 01       	movw	r24, r14
    8ae6:	b6 01       	movw	r22, r12
    8ae8:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:523
     }
  } else {
     if (norm < -0.5) {
    8aec:	87 ff       	sbrs	r24, 7
    8aee:	03 c0       	rjmp	.+6      	; 0x8af6 <k197graph_label_type::setScaleMultiplierUp(float)+0xa8>
    8af0:	19 83       	std	Y+1, r17	; 0x01
    8af2:	8b ef       	ldi	r24, 0xFB	; 251
    8af4:	d7 cf       	rjmp	.-82     	; 0x8aa4 <k197graph_label_type::setScaleMultiplierUp(float)+0x56>
    8af6:	2d ec       	ldi	r18, 0xCD	; 205
    8af8:	3c ec       	ldi	r19, 0xCC	; 204
    8afa:	4c e4       	ldi	r20, 0x4C	; 76
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:524
        pow10--;
    8afc:	5e eb       	ldi	r21, 0xBE	; 190
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:525
        mult=-5;
    8afe:	c7 01       	movw	r24, r14
    8b00:	b6 01       	movw	r22, r12
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:526
     } else if (norm < -0.2) {
    8b02:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
    8b06:	19 83       	std	Y+1, r17	; 0x01
    8b08:	87 ff       	sbrs	r24, 7
    8b0a:	02 c0       	rjmp	.+4      	; 0x8b10 <k197graph_label_type::setScaleMultiplierUp(float)+0xc2>
    8b0c:	8e ef       	ldi	r24, 0xFE	; 254
    8b0e:	ca cf       	rjmp	.-108    	; 0x8aa4 <k197graph_label_type::setScaleMultiplierUp(float)+0x56>
    8b10:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:527
        pow10--;
    8b12:	c8 cf       	rjmp	.-112    	; 0x8aa4 <k197graph_label_type::setScaleMultiplierUp(float)+0x56>

00008b14 <k197graph_label_type::setLog10Ceiling(float)>:
_ZN20k197graph_label_type15setLog10CeilingEf():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:526
     }
  } else {
     if (norm < -0.5) {
        pow10--;
        mult=-5;
     } else if (norm < -0.2) {
    8b14:	af 92       	push	r10
    8b16:	bf 92       	push	r11
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:528
        pow10--;
        mult=-2;
    8b18:	cf 92       	push	r12
    8b1a:	df 92       	push	r13
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:531
     } else {
        pow10--;
        mult=-1;
    8b1c:	ef 92       	push	r14
    8b1e:	ff 92       	push	r15
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:485
#define sizeof_scaleFactor int(sizeof(scaleFactor)/sizeof(scaleFactor[0]))

#define SCALE_VALUE_MIN 1E-6
#define SCALE_LOG_MIN -6

void k197graph_label_type::setLog10Ceiling(float x) {
    8b20:	0f 93       	push	r16
    8b22:	1f 93       	push	r17
    8b24:	cf 93       	push	r28
    8b26:	8c 01       	movw	r16, r24
    8b28:	6a 01       	movw	r12, r20
    8b2a:	7b 01       	movw	r14, r22
    8b2c:	e8 94       	clt
    8b2e:	f7 f8       	bld	r15, 7
    8b30:	2d eb       	ldi	r18, 0xBD	; 189
    8b32:	37 e3       	ldi	r19, 0x37	; 55
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:486
    x=fabsf(x);
    8b34:	46 e8       	ldi	r20, 0x86	; 134
    8b36:	55 e3       	ldi	r21, 0x35	; 53
    8b38:	c7 01       	movw	r24, r14
    8b3a:	b6 01       	movw	r22, r12
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:487
    if (x<=SCALE_VALUE_MIN) {
    8b3c:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
    8b40:	18 16       	cp	r1, r24
    8b42:	6c f0       	brlt	.+26     	; 0x8b5e <k197graph_label_type::setLog10Ceiling(float)+0x4a>
    8b44:	8a ef       	ldi	r24, 0xFA	; 250
    8b46:	f8 01       	movw	r30, r16
    8b48:	81 83       	std	Z+1, r24	; 0x01
    8b4a:	cf 91       	pop	r28
    8b4c:	1f 91       	pop	r17
    8b4e:	0f 91       	pop	r16
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:488
      pow10 = SCALE_LOG_MIN;
    8b50:	ff 90       	pop	r15
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:498
        if ( x * pgm_read_float(&scaleFactor[i]) <1.0) {
             pow10=6-i;
             return;
        }
    }
    pow10=6;
    8b52:	ef 90       	pop	r14
    8b54:	df 90       	pop	r13
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:499
}
    8b56:	cf 90       	pop	r12
    8b58:	bf 90       	pop	r11
    8b5a:	af 90       	pop	r10
    8b5c:	08 95       	ret
    8b5e:	8d e8       	ldi	r24, 0x8D	; 141
    8b60:	a8 2e       	mov	r10, r24
    8b62:	87 e0       	ldi	r24, 0x07	; 7
    8b64:	b8 2e       	mov	r11, r24
    8b66:	cc e0       	ldi	r28, 0x0C	; 12
    8b68:	f5 01       	movw	r30, r10
    8b6a:	25 91       	lpm	r18, Z+
    8b6c:	35 91       	lpm	r19, Z+
    8b6e:	45 91       	lpm	r20, Z+
    8b70:	54 91       	lpm	r21, Z
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:492
    if (x<=SCALE_VALUE_MIN) {
      pow10 = SCALE_LOG_MIN;
      return;
    }
    //return ceilf(log10f(x)); // next code is equivalent but faster
    for (int8_t i=sizeof_scaleFactor-1; i>0; i--) {
    8b72:	c7 01       	movw	r24, r14
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:493
        if ( x * pgm_read_float(&scaleFactor[i]) <1.0) {
    8b74:	b6 01       	movw	r22, r12
    8b76:	0e 94 49 76 	call	0xec92	; 0xec92 <__mulsf3>
    8b7a:	20 e0       	ldi	r18, 0x00	; 0
    8b7c:	30 e0       	ldi	r19, 0x00	; 0
    8b7e:	40 e8       	ldi	r20, 0x80	; 128
    8b80:	5f e3       	ldi	r21, 0x3F	; 63
    8b82:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
    8b86:	87 ff       	sbrs	r24, 7
    8b88:	03 c0       	rjmp	.+6      	; 0x8b90 <k197graph_label_type::setLog10Ceiling(float)+0x7c>
    8b8a:	86 e0       	ldi	r24, 0x06	; 6
    8b8c:	8c 1b       	sub	r24, r28
    8b8e:	db cf       	rjmp	.-74     	; 0x8b46 <k197graph_label_type::setLog10Ceiling(float)+0x32>
    8b90:	f4 e0       	ldi	r31, 0x04	; 4
    8b92:	af 1a       	sub	r10, r31
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:494
             pow10=6-i;
    8b94:	b1 08       	sbc	r11, r1
    8b96:	c1 50       	subi	r28, 0x01	; 1
    8b98:	39 f7       	brne	.-50     	; 0x8b68 <k197graph_label_type::setLog10Ceiling(float)+0x54>
    8b9a:	86 e0       	ldi	r24, 0x06	; 6
    8b9c:	d4 cf       	rjmp	.-88     	; 0x8b46 <k197graph_label_type::setLog10Ceiling(float)+0x32>

00008b9e <k197graph_label_type::getValue() const>:
_ZNK20k197graph_label_type8getValueEv():
    8b9e:	cf 92       	push	r12
    8ba0:	df 92       	push	r13
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.cpp:498
             return;
        }
    }
    pow10=6;
    8ba2:	ef 92       	push	r14
    8ba4:	ff 92       	push	r15
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197device.h:73
     k197graph_label_type(int8_t init_mult, int8_t init_pow10) : mult(init_mult), pow10(init_pow10) {};
     static float getpow10(int i);
     void setLog10Ceiling(float x);
     void setScaleMultiplierUp(float x);
     void setScaleMultiplierDown(float x);
     float getValue() const {return mult==0 ? 0.0 : float(mult)*getpow10(pow10);}; ///< return equivalent float value
    8ba6:	cf 93       	push	r28
    8ba8:	fc 01       	movw	r30, r24
    8baa:	c0 81       	ld	r28, Z
    8bac:	60 e0       	ldi	r22, 0x00	; 0
    8bae:	70 e0       	ldi	r23, 0x00	; 0
    8bb0:	cb 01       	movw	r24, r22
    8bb2:	cc 23       	and	r28, r28
    8bb4:	91 f0       	breq	.+36     	; 0x8bda <k197graph_label_type::getValue() const+0x3c>
    8bb6:	81 81       	ldd	r24, Z+1	; 0x01
    8bb8:	08 2e       	mov	r0, r24
    8bba:	00 0c       	add	r0, r0
    8bbc:	99 0b       	sbc	r25, r25
    8bbe:	cd de       	rcall	.-614    	; 0x895a <k197graph_label_type::getpow10(int)>
    8bc0:	6b 01       	movw	r12, r22
    8bc2:	7c 01       	movw	r14, r24
    8bc4:	6c 2f       	mov	r22, r28
    8bc6:	cc 0f       	add	r28, r28
    8bc8:	77 0b       	sbc	r23, r23
    8bca:	88 0b       	sbc	r24, r24
    8bcc:	99 0b       	sbc	r25, r25
    8bce:	0e 94 ea 75 	call	0xebd4	; 0xebd4 <__floatsisf>
    8bd2:	a7 01       	movw	r20, r14
    8bd4:	96 01       	movw	r18, r12
    8bd6:	0e 94 49 76 	call	0xec92	; 0xec92 <__mulsf3>
    8bda:	cf 91       	pop	r28
    8bdc:	ff 90       	pop	r15
    8bde:	ef 90       	pop	r14
    8be0:	df 90       	pop	r13
    8be2:	cf 90       	pop	r12
    8be4:	08 95       	ret

00008be6 <invoke_callback(int, K197UIeventType)>:
_ZL15invoke_callbacki15K197UIeventType():
    8be6:	20 91 d4 44 	lds	r18, 0x44D4	; 0x8044d4 <callBack>
    8bea:	30 91 d5 44 	lds	r19, 0x44D5	; 0x8044d5 <callBack+0x1>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:75

    @param i the array index assigned to the push button
    @param eventType the button event passed to the call back
*/
static inline void invoke_callback(int i, K197UIeventType eventType) {
  if (callBack != NULL) {
    8bee:	21 15       	cp	r18, r1
    8bf0:	31 05       	cpc	r19, r1
    8bf2:	39 f0       	breq	.+14     	; 0x8c02 <invoke_callback(int, K197UIeventType)+0x1c>
    8bf4:	8e 50       	subi	r24, 0x0E	; 14
    8bf6:	99 4f       	sbci	r25, 0xF9	; 249
    8bf8:	fc 01       	movw	r30, r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:76
    callBack((K197UIeventsource)pgm_read_byte(&buttonPinIn[i]), eventType);
    8bfa:	84 91       	lpm	r24, Z
    8bfc:	90 e0       	ldi	r25, 0x00	; 0
    8bfe:	f9 01       	movw	r30, r18
    8c00:	09 94       	ijmp
    8c02:	08 95       	ret

00008c04 <k197ButtonCluster::checkNew(unsigned char, unsigned char, unsigned long) [clone .constprop.107]>:
_ZN17k197ButtonCluster8checkNewEhhm.constprop.107():
    8c04:	cf 92       	push	r12
    8c06:	df 92       	push	r13
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:78
  }
}
    8c08:	ef 92       	push	r14
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:612

    @param i the array index assigned to the push button
    @param btnow the current state of the button as indicated in the raw event
    @param now the current value of micros()
*/
void k197ButtonCluster::checkNew(uint8_t i, uint8_t btnow, unsigned long now) {
    8c0a:	ff 92       	push	r15
    8c0c:	0f 93       	push	r16
    8c0e:	1f 93       	push	r17
    8c10:	cf 93       	push	r28
    8c12:	df 93       	push	r29
    8c14:	c8 2f       	mov	r28, r24
    8c16:	d0 e0       	ldi	r29, 0x00	; 0
    8c18:	fe 01       	movw	r30, r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:613
  if (btnow != buttonState[i]) { // state has changed
    8c1a:	e5 5b       	subi	r30, 0xB5	; 181
    8c1c:	ff 4b       	sbci	r31, 0xBF	; 191
    8c1e:	80 81       	ld	r24, Z
    8c20:	86 17       	cp	r24, r22
    8c22:	61 f1       	breq	.+88     	; 0x8c7c <k197ButtonCluster::checkNew(unsigned char, unsigned char, unsigned long) [clone .constprop.107]+0x78>
    8c24:	69 01       	movw	r12, r18
    8c26:	7a 01       	movw	r14, r20
    8c28:	60 83       	st	Z, r22
    8c2a:	8e 01       	movw	r16, r28
    8c2c:	00 0f       	add	r16, r16
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:614
    buttonState[i] = btnow;
    8c2e:	11 1f       	adc	r17, r17
    8c30:	00 0f       	add	r16, r16
    8c32:	11 1f       	adc	r17, r17
    8c34:	61 30       	cpi	r22, 0x01	; 1
    8c36:	09 f0       	breq	.+2      	; 0x8c3a <k197ButtonCluster::checkNew(unsigned char, unsigned char, unsigned long) [clone .constprop.107]+0x36>
    8c38:	41 c0       	rjmp	.+130    	; 0x8cbc <k197ButtonCluster::checkNew(unsigned char, unsigned char, unsigned long) [clone .constprop.107]+0xb8>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:616
    // The following actions are taken at Button release
    if (btnow == BUTTON_IDLE_STATE) { // button was just released
    8c3a:	64 e1       	ldi	r22, 0x14	; 20
    8c3c:	70 e0       	ldi	r23, 0x00	; 0
    8c3e:	ce 01       	movw	r24, r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:617
      invoke_callback(i, UIeventRelease);
    8c40:	d2 df       	rcall	.-92     	; 0x8be6 <invoke_callback(int, K197UIeventType)>
    8c42:	f8 01       	movw	r30, r16
    8c44:	e5 55       	subi	r30, 0x55	; 85
    8c46:	fa 4b       	sbci	r31, 0xBA	; 186
    8c48:	80 81       	ld	r24, Z
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:618
      if ((now - startPressed[i]) > longPressTime) {
    8c4a:	91 81       	ldd	r25, Z+1	; 0x01
    8c4c:	a2 81       	ldd	r26, Z+2	; 0x02
    8c4e:	b3 81       	ldd	r27, Z+3	; 0x03
    8c50:	b7 01       	movw	r22, r14
    8c52:	a6 01       	movw	r20, r12
    8c54:	48 1b       	sub	r20, r24
    8c56:	59 0b       	sbc	r21, r25
    8c58:	6a 0b       	sbc	r22, r26
    8c5a:	7b 0b       	sbc	r23, r27
    8c5c:	41 32       	cpi	r20, 0x21	; 33
    8c5e:	51 4a       	sbci	r21, 0xA1	; 161
    8c60:	67 40       	sbci	r22, 0x07	; 7
    8c62:	71 05       	cpc	r23, r1
    8c64:	a0 f0       	brcs	.+40     	; 0x8c8e <k197ButtonCluster::checkNew(unsigned char, unsigned char, unsigned long) [clone .constprop.107]+0x8a>
    8c66:	63 e0       	ldi	r22, 0x03	; 3
    8c68:	70 e0       	ldi	r23, 0x00	; 0
    8c6a:	ce 01       	movw	r24, r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:619
        invoke_callback(i, UIeventLongClick);
    8c6c:	bc df       	rcall	.-136    	; 0x8be6 <invoke_callback(int, K197UIeventType)>
    8c6e:	f8 01       	movw	r30, r16
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:626
        invoke_callback(i, UIeventClick);
        invoke_callback(i, UIeventDoubleClick);
        // DebugOut.print(F("Dbclick time: "));
        // DebugOut.println(now-lastReleased[i]);
      } else {
        invoke_callback(i, UIeventClick);
    8c70:	e5 56       	subi	r30, 0x65	; 101
    8c72:	fa 4b       	sbci	r31, 0xBA	; 186
    8c74:	c0 82       	st	Z, r12
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:630
        // DebugOut.print(F("Click time: "));
        // DebugOut.println(now-startPressed[i]);
      }
      lastReleased[i] = now;
    8c76:	d1 82       	std	Z+1, r13	; 0x01
    8c78:	e2 82       	std	Z+2, r14	; 0x02
    8c7a:	f3 82       	std	Z+3, r15	; 0x03
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:634
    } else { // btnow == BUTTON_PRESSED_STATE   // button was just pressed
      invoke_callback(i, UIeventPress);
      startPressed[i] = now;
      lastHold[i] = now;
    8c7c:	df 91       	pop	r29
    8c7e:	cf 91       	pop	r28
    8c80:	1f 91       	pop	r17
    8c82:	0f 91       	pop	r16
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:637
    }
  }
}
    8c84:	ff 90       	pop	r15
    8c86:	ef 90       	pop	r14
    8c88:	df 90       	pop	r13
    8c8a:	cf 90       	pop	r12
    8c8c:	08 95       	ret
    8c8e:	f8 01       	movw	r30, r16
    8c90:	e5 56       	subi	r30, 0x65	; 101
    8c92:	fa 4b       	sbci	r31, 0xBA	; 186
    8c94:	40 81       	ld	r20, Z
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:620
    // The following actions are taken at Button release
    if (btnow == BUTTON_IDLE_STATE) { // button was just released
      invoke_callback(i, UIeventRelease);
      if ((now - startPressed[i]) > longPressTime) {
        invoke_callback(i, UIeventLongClick);
      } else if (startPressed[i] - lastReleased[i] < doubleClicktime) {
    8c96:	51 81       	ldd	r21, Z+1	; 0x01
    8c98:	62 81       	ldd	r22, Z+2	; 0x02
    8c9a:	73 81       	ldd	r23, Z+3	; 0x03
    8c9c:	84 1b       	sub	r24, r20
    8c9e:	95 0b       	sbc	r25, r21
    8ca0:	a6 0b       	sbc	r26, r22
    8ca2:	b7 0b       	sbc	r27, r23
    8ca4:	61 e0       	ldi	r22, 0x01	; 1
    8ca6:	70 e0       	ldi	r23, 0x00	; 0
    8ca8:	80 32       	cpi	r24, 0x20	; 32
    8caa:	91 4a       	sbci	r25, 0xA1	; 161
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:621
        invoke_callback(i, UIeventClick);
    8cac:	a7 40       	sbci	r26, 0x07	; 7
    8cae:	b1 05       	cpc	r27, r1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:620
    // The following actions are taken at Button release
    if (btnow == BUTTON_IDLE_STATE) { // button was just released
      invoke_callback(i, UIeventRelease);
      if ((now - startPressed[i]) > longPressTime) {
        invoke_callback(i, UIeventLongClick);
      } else if (startPressed[i] - lastReleased[i] < doubleClicktime) {
    8cb0:	e0 f6       	brcc	.-72     	; 0x8c6a <k197ButtonCluster::checkNew(unsigned char, unsigned char, unsigned long) [clone .constprop.107]+0x66>
    8cb2:	ce 01       	movw	r24, r28
    8cb4:	98 df       	rcall	.-208    	; 0x8be6 <invoke_callback(int, K197UIeventType)>
    8cb6:	62 e0       	ldi	r22, 0x02	; 2
    8cb8:	70 e0       	ldi	r23, 0x00	; 0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:621
        invoke_callback(i, UIeventClick);
    8cba:	d7 cf       	rjmp	.-82     	; 0x8c6a <k197ButtonCluster::checkNew(unsigned char, unsigned char, unsigned long) [clone .constprop.107]+0x66>
    8cbc:	61 e1       	ldi	r22, 0x11	; 17
    8cbe:	70 e0       	ldi	r23, 0x00	; 0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:622
        invoke_callback(i, UIeventDoubleClick);
    8cc0:	ce 01       	movw	r24, r28
    8cc2:	91 df       	rcall	.-222    	; 0x8be6 <invoke_callback(int, K197UIeventType)>
    8cc4:	f8 01       	movw	r30, r16
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:632
        // DebugOut.print(F("Click time: "));
        // DebugOut.println(now-startPressed[i]);
      }
      lastReleased[i] = now;
    } else { // btnow == BUTTON_PRESSED_STATE   // button was just pressed
      invoke_callback(i, UIeventPress);
    8cc6:	e5 55       	subi	r30, 0x55	; 85
    8cc8:	fa 4b       	sbci	r31, 0xBA	; 186
    8cca:	c0 82       	st	Z, r12
    8ccc:	d1 82       	std	Z+1, r13	; 0x01
    8cce:	e2 82       	std	Z+2, r14	; 0x02
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:633
      startPressed[i] = now;
    8cd0:	f3 82       	std	Z+3, r15	; 0x03
    8cd2:	f8 01       	movw	r30, r16
    8cd4:	e5 57       	subi	r30, 0x75	; 117
    8cd6:	fa 4b       	sbci	r31, 0xBA	; 186
    8cd8:	cd cf       	rjmp	.-102    	; 0x8c74 <k197ButtonCluster::checkNew(unsigned char, unsigned char, unsigned long) [clone .constprop.107]+0x70>

00008cda <dxUtilClass::getTKelvin() [clone .constprop.158]>:
_ZN11dxUtilClass10getTKelvinEv.constprop.158():
    8cda:	82 e4       	ldi	r24, 0x42	; 66
    8cdc:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:634
      lastHold[i] = now;
    8ce0:	81 e0       	ldi	r24, 0x01	; 1
    8ce2:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:136
    pin = digitalPinToAnalogInput(pin);
    if(pin == NOT_A_PIN) return -1;

  }
  /* Select channel */
  ADC0.MUXPOS = ((pin & 0x7F) << ADC_MUXPOS_gp);
    8ce6:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
    8cea:	80 ff       	sbrs	r24, 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:140
  /* Reference should be already set up */

  /* Start conversion */
  ADC0.COMMAND = ADC_STCONV_bm;
    8cec:	fc cf       	rjmp	.-8      	; 0x8ce6 <dxUtilClass::getTKelvin() [clone .constprop.158]+0xc>
    8cee:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:143

  /* Wait for result ready */
  while(!(ADC0.INTFLAGS & ADC_RESRDY_bm));
    8cf2:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
    8cf6:	20 91 06 11 	lds	r18, 0x1106	; 0x801106 <__TEXT_REGION_LENGTH__+0x7e1106>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:149

  #if (defined(__AVR_DA__) && (!defined(NO_ADC_WORKAROUND)))
    // That may become defined when DA-series silicon is available with the fix
    ADC0.MUXPOS = 0x40;
  #endif
  return ADC0.RES;
    8cfa:	30 91 07 11 	lds	r19, 0x1107	; 0x801107 <__TEXT_REGION_LENGTH__+0x7e1107>
    8cfe:	a0 91 04 11 	lds	r26, 0x1104	; 0x801104 <__TEXT_REGION_LENGTH__+0x7e1104>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:154
                                   // case analogRead reports an ADC error
  // DebugOut.print(F("ADC=")); DebugOut.println(adc_reading);

  // Using the datasheet recommended method with precision 1/4th Kelvin
  uint16_t sigrow_offset =
      SIGROW.TEMPSENSE1; // Read unsigned value from signature row
    8d02:	b0 91 05 11 	lds	r27, 0x1105	; 0x801105 <__TEXT_REGION_LENGTH__+0x7e1105>
    8d06:	28 1b       	sub	r18, r24
    8d08:	39 0b       	sbc	r19, r25
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:156
  uint16_t sigrow_slope =
      SIGROW.TEMPSENSE0; // Read unsigned value from signature row
    8d0a:	0e 94 0a 77 	call	0xee14	; 0xee14 <__umulhisi3>
    8d0e:	7e 5f       	subi	r23, 0xFE	; 254
    8d10:	8f 4f       	sbci	r24, 0xFF	; 255
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:157
  uint32_t temp = sigrow_offset - adc_reading;
    8d12:	9f 4f       	sbci	r25, 0xFF	; 255
    8d14:	2a e0       	ldi	r18, 0x0A	; 10
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:158
  temp *= sigrow_slope; // Result will overflow 16-bit variable
    8d16:	96 95       	lsr	r25
    8d18:	87 95       	ror	r24
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:159
  temp += 0x0200;       // Add 4096/8 to get correct rounding on division below
    8d1a:	77 95       	ror	r23
    8d1c:	67 95       	ror	r22
    8d1e:	2a 95       	dec	r18
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:160
  temp >>= 10; // Round off to nearest degree in Kelvin, by dividing with 2^102
    8d20:	d1 f7       	brne	.-12     	; 0x8d16 <dxUtilClass::getTKelvin() [clone .constprop.158]+0x3c>
    8d22:	0e 94 e8 75 	call	0xebd0	; 0xebd0 <__floatunsisf>
    8d26:	20 e0       	ldi	r18, 0x00	; 0
    8d28:	30 e0       	ldi	r19, 0x00	; 0
    8d2a:	40 e8       	ldi	r20, 0x80	; 128
    8d2c:	5e e3       	ldi	r21, 0x3E	; 62
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:164
               // (1024)
  // uint16_t temperature_in_K = temp;

  float ftempk = float(temp) / 4.0;
    8d2e:	0c 94 49 76 	jmp	0xec92	; 0xec92 <__mulsf3>

00008d32 <_pinconfigure(unsigned char, unsigned int)>:
_Z13_pinconfigurehj():
    8d32:	90 e0       	ldi	r25, 0x00	; 0
    8d34:	fc 01       	movw	r30, r24
    8d36:	ec 50       	subi	r30, 0x0C	; 12
    8d38:	fe 4b       	sbci	r31, 0xBE	; 190
    8d3a:	50 81       	ld	r21, Z
    8d3c:	5f 3f       	cpi	r21, 0xFF	; 255
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:166
  return ftempk;
}
    8d3e:	09 f4       	brne	.+2      	; 0x8d42 <_pinconfigure(unsigned char, unsigned int)+0x10>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:34
  checkCore(1);
}
#endif
void __pinconfigure(const uint8_t digital_pin, uint16_t pin_config) {

  uint8_t bit_mask = digitalPinToBitMask(digital_pin);
    8d40:	49 c0       	rjmp	.+146    	; 0x8dd4 <_pinconfigure(unsigned char, unsigned int)+0xa2>
    8d42:	fc 01       	movw	r30, r24
    8d44:	ee 55       	subi	r30, 0x5E	; 94
    8d46:	fe 4b       	sbci	r31, 0xBE	; 190
    8d48:	40 81       	ld	r20, Z
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:35
  if(bit_mask == NOT_A_PIN || !pin_config) // Return if digital pin is invalid or the other parameters or out to zero
    8d4a:	85 53       	subi	r24, 0x35	; 53
    8d4c:	9e 4b       	sbci	r25, 0xBE	; 190
    8d4e:	fc 01       	movw	r30, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:38
    return;

  uint8_t bit_pos  = digitalPinToBitPosition(digital_pin);
    8d50:	80 81       	ld	r24, Z
    8d52:	f0 e2       	ldi	r31, 0x20	; 32
    8d54:	8f 9f       	mul	r24, r31
    8d56:	c0 01       	movw	r24, r0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:39
  volatile uint8_t *portbase = (volatile uint8_t*) digitalPinToPortStruct(digital_pin);
    8d58:	11 24       	eor	r1, r1
    8d5a:	9c 5f       	subi	r25, 0xFC	; 252
    8d5c:	e6 2f       	mov	r30, r22
    8d5e:	e3 70       	andi	r30, 0x03	; 3
    8d60:	21 f0       	breq	.+8      	; 0x8d6a <_pinconfigure(unsigned char, unsigned int)+0x38>
    8d62:	e8 0f       	add	r30, r24
    8d64:	f9 2f       	mov	r31, r25
    8d66:	f1 1d       	adc	r31, r1
    8d68:	50 83       	st	Z, r21
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:42

  // Write to selected pin direction register
  uint8_t setting = pin_config & 0x03; // Mask out direction bits (DIR, DIRSET, DIRCLR, DIRTGL)
    8d6a:	9b 01       	movw	r18, r22
    8d6c:	36 95       	lsr	r19
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:43
  if(setting)
    8d6e:	27 95       	ror	r18
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:44
    *(portbase + setting) = bit_mask;
    8d70:	36 95       	lsr	r19
    8d72:	27 95       	ror	r18
    8d74:	e2 2f       	mov	r30, r18
    8d76:	e3 70       	andi	r30, 0x03	; 3
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:47

  // Write to selected output register
  pin_config >>= 2;
    8d78:	29 f0       	breq	.+10     	; 0x8d84 <_pinconfigure(unsigned char, unsigned int)+0x52>
    8d7a:	f0 e0       	ldi	r31, 0x00	; 0
    8d7c:	34 96       	adiw	r30, 0x04	; 4
    8d7e:	e8 0f       	add	r30, r24
    8d80:	f9 1f       	adc	r31, r25
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:48
  setting = pin_config & 0x03;
    8d82:	50 83       	st	Z, r21
    8d84:	2c 7f       	andi	r18, 0xFC	; 252
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:49
  if(setting)
    8d86:	3f 73       	andi	r19, 0x3F	; 63
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:50
    *(portbase + 4 + setting) = bit_mask;
    8d88:	23 2b       	or	r18, r19
    8d8a:	21 f1       	breq	.+72     	; 0x8dd4 <_pinconfigure(unsigned char, unsigned int)+0xa2>
    8d8c:	5f b7       	in	r21, 0x3f	; 63
    8d8e:	f8 94       	cli
    8d90:	9b 01       	movw	r18, r22
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:53

  // Return if there is nothing more to configure
  if(!(pin_config & 0x3FFC))
    8d92:	64 e0       	ldi	r22, 0x04	; 4
    8d94:	36 95       	lsr	r19
    8d96:	27 95       	ror	r18
    8d98:	6a 95       	dec	r22
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:62
   * For this we need to disable interrupts
   * (for efficiency) we only read the register once
   * modify that value, then write it back at the end.
   */

  uint8_t oldSREG = SREG;             // Store SREG
    8d9a:	e1 f7       	brne	.-8      	; 0x8d94 <_pinconfigure(unsigned char, unsigned int)+0x62>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:63
  cli();
    8d9c:	e4 2f       	mov	r30, r20
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:64
  pin_config >>= 2;
    8d9e:	f0 e0       	ldi	r31, 0x00	; 0
    8da0:	70 96       	adiw	r30, 0x10	; 16
    8da2:	e8 0f       	add	r30, r24
    8da4:	f9 1f       	adc	r31, r25
    8da6:	80 81       	ld	r24, Z
    8da8:	23 fd       	sbrc	r18, 3
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:65
  uint8_t pinncfg = *(portbase + 0x10 + bit_pos);
    8daa:	88 7f       	andi	r24, 0xF8	; 248
    8dac:	20 73       	andi	r18, 0x30	; 48
    8dae:	21 f0       	breq	.+8      	; 0x8db8 <_pinconfigure(unsigned char, unsigned int)+0x86>
    8db0:	20 33       	cpi	r18, 0x30	; 48
    8db2:	89 f4       	brne	.+34     	; 0x8dd6 <_pinconfigure(unsigned char, unsigned int)+0xa4>
    8db4:	98 e0       	ldi	r25, 0x08	; 8
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:67
  // Input sense configuration (ISC)
  if(pin_config & 0x08)
    8db6:	89 27       	eor	r24, r25
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:68
    pinncfg = (pinncfg & 0xF8) | (pin_config & PORT_ISC_gm);
    8db8:	97 2f       	mov	r25, r23
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:70
  // Pullup resistor
  uint8_t temp = pin_config & 0x30;
    8dba:	92 95       	swap	r25
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:71
  if(temp)
    8dbc:	9f 70       	andi	r25, 0x0F	; 15
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:73
  {
    if(temp == 0x30)
    8dbe:	29 2f       	mov	r18, r25
    8dc0:	23 70       	andi	r18, 0x03	; 3
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:74
      pinncfg ^= PORT_PULLUPEN_bm;    // Toggle pullup
    8dc2:	09 f0       	breq	.+2      	; 0x8dc6 <_pinconfigure(unsigned char, unsigned int)+0x94>
    8dc4:	8f 7b       	andi	r24, 0xBF	; 191
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:81
      pinncfg &= ~(PORT_PULLUPEN_bm); // Clear pullup
    else
      pinncfg |= PORT_PULLUPEN_bm;    // Set pullup
  }
  // Invert pin
  pin_config >>= 8;
    8dc6:	9c 70       	andi	r25, 0x0C	; 12
    8dc8:	19 f0       	breq	.+6      	; 0x8dd0 <_pinconfigure(unsigned char, unsigned int)+0x9e>
    8dca:	98 30       	cpi	r25, 0x08	; 8
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:94
     * If you want a toggle INLVL option, you're in an X-Y problem and are going about something
     * sufficiently wrong that giving you what you think you need does you a disservice.
     * If you disagree with this design decision please create an issue and explain the use case that would make this
     * a worthwhile feature.
     */
    temp = pin_config & 0x03;
    8dcc:	51 f4       	brne	.+20     	; 0x8de2 <_pinconfigure(unsigned char, unsigned int)+0xb0>
    8dce:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:95
    if (temp) {
    8dd0:	80 83       	st	Z, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:99
      if (temp == 0x01) {
        pinncfg |= 0x40;              // set INLVL
      } else {
        pinncfg &= ~(0x40);           // clear INLVL
    8dd2:	5f bf       	out	0x3f, r21	; 63
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:103
      }
    }
  #endif
  temp = pin_config & 0x0C;
    8dd4:	08 95       	ret
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:104
  if(temp)
    8dd6:	20 32       	cpi	r18, 0x20	; 32
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:108
  {
    if(temp == 0x0C)
      pinncfg ^= PORT_INVEN_bm;       // Toggle INVEN
    else if(temp == 0x08)
    8dd8:	11 f4       	brne	.+4      	; 0x8dde <_pinconfigure(unsigned char, unsigned int)+0xac>
    8dda:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:109
      pinncfg &= ~(PORT_INVEN_bm);    // Clear INVEN
    8ddc:	ed cf       	rjmp	.-38     	; 0x8db8 <_pinconfigure(unsigned char, unsigned int)+0x86>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:114
    else
      pinncfg |= PORT_INVEN_bm;       // Set INVEN
  }
  // Write to PINnCTRL register
  *(portbase + 0x10 + bit_pos) = pinncfg;
    8dde:	88 60       	ori	r24, 0x08	; 8
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:117

  // Restore SREG
  SREG = oldSREG;
    8de0:	eb cf       	rjmp	.-42     	; 0x8db8 <_pinconfigure(unsigned char, unsigned int)+0x86>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:148
        }
      }
    }
  #endif
  __pinconfigure(pin,pin_config);
}
    8de2:	80 68       	ori	r24, 0x80	; 128
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:75
  uint8_t temp = pin_config & 0x30;
  if(temp)
  {
    if(temp == 0x30)
      pinncfg ^= PORT_PULLUPEN_bm;    // Toggle pullup
    else if(temp == 0x20)
    8de4:	f5 cf       	rjmp	.-22     	; 0x8dd0 <_pinconfigure(unsigned char, unsigned int)+0x9e>

00008de6 <digitalWrite>:
digitalWrite():
    8de6:	0f 93       	push	r16
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:76
      pinncfg &= ~(PORT_PULLUPEN_bm); // Clear pullup
    8de8:	1f 93       	push	r17
    8dea:	cf 93       	push	r28
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:78
    else
      pinncfg |= PORT_PULLUPEN_bm;    // Set pullup
    8dec:	df 93       	push	r29
    8dee:	89 32       	cpi	r24, 0x29	; 41
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_extra.cpp:111
    if(temp == 0x0C)
      pinncfg ^= PORT_INVEN_bm;       // Toggle INVEN
    else if(temp == 0x08)
      pinncfg &= ~(PORT_INVEN_bm);    // Clear INVEN
    else
      pinncfg |= PORT_INVEN_bm;       // Set INVEN
    8df0:	08 f0       	brcs	.+2      	; 0x8df4 <digitalWrite+0xe>
    8df2:	cc c0       	rjmp	.+408    	; 0x8f8c <digitalWrite+0x1a6>
check_valid_digital_pin():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:209
  default:
    break;
  }
}

void digitalWrite(uint8_t pin, uint8_t val) {
    8df4:	90 e0       	ldi	r25, 0x00	; 0
digitalWrite():
    8df6:	dc 01       	movw	r26, r24
    8df8:	ac 50       	subi	r26, 0x0C	; 12
    8dfa:	be 4b       	sbci	r27, 0xBE	; 190
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:212
  check_valid_digital_pin(pin);
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    8dfc:	2c 91       	ld	r18, X
    8dfe:	2f 3f       	cpi	r18, 0xFF	; 255
    8e00:	09 f4       	brne	.+2      	; 0x8e04 <digitalWrite+0x1e>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/Arduino.h:712
    8e02:	c4 c0       	rjmp	.+392    	; 0x8f8c <digitalWrite+0x1a6>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:212
    8e04:	8c 01       	movw	r16, r24
    8e06:	05 53       	subi	r16, 0x35	; 53
    8e08:	1e 4b       	sbci	r17, 0xBE	; 190
    8e0a:	e8 01       	movw	r28, r16
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:213
  if (bit_mask == NOT_A_PIN) {
    8e0c:	e8 81       	ld	r30, Y
    8e0e:	d0 e2       	ldi	r29, 0x20	; 32
    8e10:	ed 9f       	mul	r30, r29
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:218
    return;
  }

  /* Get port */
  PORT_t *port = digitalPinToPortStruct(pin);
    8e12:	f0 01       	movw	r30, r0
    8e14:	11 24       	eor	r1, r1
    8e16:	fc 5f       	subi	r31, 0xFC	; 252
    8e18:	61 11       	cpse	r22, r1
    8e1a:	37 c0       	rjmp	.+110    	; 0x8e8a <digitalWrite+0xa4>
    8e1c:	26 83       	std	Z+6, r18	; 0x06
    8e1e:	30 81       	ld	r19, Z
    8e20:	23 23       	and	r18, r19
    8e22:	ac 01       	movw	r20, r24
    8e24:	4e 55       	subi	r20, 0x5E	; 94
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:226
  the behavior of digitalWrite() on classic AVR devices, where
  you could digitalWrite() a pin while it's an input, to ensure
  that the value of the port was set correctly when it was
  changed to an output. Code in the wild relies on this behavior. */

  if (val == LOW) { /* If LOW */
    8e26:	5e 4b       	sbci	r21, 0xBE	; 190
    8e28:	21 11       	cpse	r18, r1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:227
    port->OUTCLR = bit_mask;
    8e2a:	11 c0       	rjmp	.+34     	; 0x8e4e <digitalWrite+0x68>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:251
  } else {
    port->OUTSET = bit_mask;
  }

  /* Input direction */
  if (!(port->DIR & bit_mask)) {
    8e2c:	ea 01       	movw	r28, r20
    8e2e:	28 81       	ld	r18, Y
    8e30:	30 97       	sbiw	r30, 0x00	; 0
    8e32:	a1 f1       	breq	.+104    	; 0x8e9c <digitalWrite+0xb6>
    8e34:	28 30       	cpi	r18, 0x08	; 8
    8e36:	90 f5       	brcc	.+100    	; 0x8e9c <digitalWrite+0xb6>
    8e38:	70 96       	adiw	r30, 0x10	; 16
    8e3a:	e2 0f       	add	r30, r18
    8e3c:	f1 1d       	adc	r31, r1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:261

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    8e3e:	3f b7       	in	r19, 0x3f	; 63
    8e40:	f8 94       	cli
    8e42:	20 81       	ld	r18, Z
    8e44:	61 11       	cpse	r22, r1
    8e46:	2d c0       	rjmp	.+90     	; 0x8ea2 <digitalWrite+0xbc>
    8e48:	27 7f       	andi	r18, 0xF7	; 247
    8e4a:	20 83       	st	Z, r18
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:264

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    8e4c:	3f bf       	out	0x3f, r19	; 63
digitalPinToTimerNow():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:265
    cli();
    8e4e:	fa 01       	movw	r30, r20
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:269

    if (val == LOW) {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    8e50:	30 81       	ld	r19, Z
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:267

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    cli();

    if (val == LOW) {
    8e52:	3f 3f       	cpi	r19, 0xFF	; 255
    8e54:	09 f4       	brne	.+2      	; 0x8e58 <digitalWrite+0x72>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:269
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    8e56:	9a c0       	rjmp	.+308    	; 0x8f8c <digitalWrite+0x1a6>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:272
    } else {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    8e58:	e8 01       	movw	r28, r16
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:276
    }

    /* Restore system status */
    SREG = status;
    8e5a:	28 81       	ld	r18, Y
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:745
  badCall("Resuming core control of type D timer not supported.");
}


uint8_t digitalPinToTimerNow(uint8_t p) {
  uint8_t bit_pos = digitalPinToBitPosition(p);
    8e5c:	40 91 42 40 	lds	r20, 0x4042	; 0x804042 <__PeripheralControl>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:746
  if (bit_pos == NOT_A_PIN) return NOT_ON_TIMER;     /* Use bit position to check for invalid pins */
    8e60:	36 30       	cpi	r19, 0x06	; 6
    8e62:	b0 f5       	brcc	.+108    	; 0x8ed0 <digitalWrite+0xea>
    8e64:	30 91 e6 05 	lds	r19, 0x05E6	; 0x8005e6 <__TEXT_REGION_LENGTH__+0x7e05e6>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:747
  uint8_t port = digitalPinToPort(p);                /* If bit_pos is valid, port will be too      */
    8e68:	44 ff       	sbrs	r20, 4
    8e6a:	1d c0       	rjmp	.+58     	; 0x8ea6 <digitalWrite+0xc0>
    8e6c:	53 2f       	mov	r21, r19
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:748
  if ( bit_pos < 6) {                                /* SPLIT MODE TCA output is on pins 0-5       */
    8e6e:	57 70       	andi	r21, 0x07	; 7
    8e70:	25 13       	cpse	r18, r21
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:750
  #if defined(TCA1)
    uint8_t tcamux = PORTMUX.TCAROUTEA;
    8e72:	19 c0       	rjmp	.+50     	; 0x8ea6 <digitalWrite+0xc0>
turnOffPWM():
    8e74:	ec 91       	ld	r30, X
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:751
    if ( __PeripheralControl & TIMERA0) {              /* make sure user hasn't taken over TCA0      */
    8e76:	e5 30       	cpi	r30, 0x05	; 5
    8e78:	08 f0       	brcs	.+2      	; 0x8e7c <digitalWrite+0x96>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:752
      if (((tcamux & PORTMUX_TCA0_gm) == port)) {    /* TCA0 mux is EASY - same as the port number */
    8e7a:	ee 0f       	add	r30, r30
    8e7c:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7e0a01>
    8e80:	e0 95       	com	r30
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:119
  /* Get pin's timer */
  uint8_t timer = digitalPinToTimerNow(pin);
  if(timer == NOT_ON_TIMER) return;

  // uint8_t bit_pos = digitalPinToBitPosition(pin);
  uint8_t bit_mask = digitalPinToBitMask(pin);
    8e82:	e8 23       	and	r30, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:128
  switch (timer) {

  /* TCA0 */
  case TIMERA0:
    /* Bit position will give output channel */
    if (bit_mask > 0x04)  bit_mask <<= 1; // there's a blank bit in the middle
    8e84:	e0 93 01 0a 	sts	0x0A01, r30	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7e0a01>
    8e88:	81 c0       	rjmp	.+258    	; 0x8f8c <digitalWrite+0x1a6>
digitalWrite():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:130
    /* Disable corresponding channel */
    TCA0.SPLIT.CTRLB &= ~bit_mask;
    8e8a:	64 30       	cpi	r22, 0x04	; 4
    8e8c:	29 f4       	brne	.+10     	; 0x8e98 <digitalWrite+0xb2>
    8e8e:	34 81       	ldd	r19, Z+4	; 0x04
    8e90:	27 83       	std	Z+7, r18	; 0x07
    8e92:	64 81       	ldd	r22, Z+4	; 0x04
    8e94:	62 23       	and	r22, r18
    8e96:	c3 cf       	rjmp	.-122    	; 0x8e1e <digitalWrite+0x38>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:228
  that the value of the port was set correctly when it was
  changed to an output. Code in the wild relies on this behavior. */

  if (val == LOW) { /* If LOW */
    port->OUTCLR = bit_mask;
  } else if (val == CHANGE) { /* If TOGGLE
    8e98:	25 83       	std	Z+5, r18	; 0x05
    8e9a:	c1 cf       	rjmp	.-126    	; 0x8e1e <digitalWrite+0x38>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:235
     * we need to know if it's been set high or low
     * otherwise the pullup state could get out of
     * sync with the output bit. Annoying! But we should
     * have to read it before writing OUTTGL, since that can
     * have a 1 clock delay. So read first + invert */
    val = !(port->OUT & bit_mask);
    8e9c:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:236
    port->OUTTGL = bit_mask;
    8e9e:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:241
    // Now, for the pullup setting part below
    // we need to know if it's been set high or low
    // otherwise the pullup state could get out of
    // sync with the output bit. Annoying!
    val = port->OUT & bit_mask;
    8ea0:	ce cf       	rjmp	.-100    	; 0x8e3e <digitalWrite+0x58>
    8ea2:	28 60       	ori	r18, 0x08	; 8
    8ea4:	d2 cf       	rjmp	.-92     	; 0x8e4a <digitalWrite+0x64>
digitalPinToTimerNow():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:247
    // val will now be 0 (LOW) if the toggling made it LOW
    // or bit_mask if not. And further down, we only need to
    // know if it's
  /* If HIGH OR  > TOGGLE  */
  } else {
    port->OUTSET = bit_mask;
    8ea6:	43 ff       	sbrs	r20, 3
    8ea8:	13 c0       	rjmp	.+38     	; 0x8ed0 <digitalWrite+0xea>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:261

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    8eaa:	38 71       	andi	r19, 0x18	; 24
    8eac:	69 f4       	brne	.+26     	; 0x8ec8 <digitalWrite+0xe2>
    8eae:	21 30       	cpi	r18, 0x01	; 1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:272
    if (val == LOW) {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    } else {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    8eb0:	79 f4       	brne	.+30     	; 0x8ed0 <digitalWrite+0xea>
turnOffPWM():
    8eb2:	ec 91       	ld	r30, X
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:757
        return TIMERA0;
      }
    }
    tcamux &= 0x18;
    if (__PeripheralControl & TIMERA1) {               /* make sure user hasn't taken over TCA0      */
    8eb4:	e5 30       	cpi	r30, 0x05	; 5
    8eb6:	08 f0       	brcs	.+2      	; 0x8eba <digitalWrite+0xd4>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:756
    if ( __PeripheralControl & TIMERA0) {              /* make sure user hasn't taken over TCA0      */
      if (((tcamux & PORTMUX_TCA0_gm) == port)) {    /* TCA0 mux is EASY - same as the port number */
        return TIMERA0;
      }
    }
    tcamux &= 0x18;
    8eb8:	ee 0f       	add	r30, r30
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:758
    if (__PeripheralControl & TIMERA1) {               /* make sure user hasn't taken over TCA0      */
      if ((tcamux == 0 && port == PB ) || (tcamux == 0x18 && port == PG)) { /* supports only 6-ch  */
    8eba:	80 91 41 0a 	lds	r24, 0x0A41	; 0x800a41 <__TEXT_REGION_LENGTH__+0x7e0a41>
    8ebe:	e0 95       	com	r30
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:119
  /* Get pin's timer */
  uint8_t timer = digitalPinToTimerNow(pin);
  if(timer == NOT_ON_TIMER) return;

  // uint8_t bit_pos = digitalPinToBitPosition(pin);
  uint8_t bit_mask = digitalPinToBitMask(pin);
    8ec0:	e8 23       	and	r30, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:135
    TCA0.SPLIT.CTRLB &= ~bit_mask;
    break;
  #ifdef TCA1
  case TIMERA1:
    /* Bit position will give output channel */
    if (bit_mask > 0x04)  bit_mask <<= 1; // there's a blank bit in the middle
    8ec2:	e0 93 41 0a 	sts	0x0A41, r30	; 0x800a41 <__TEXT_REGION_LENGTH__+0x7e0a41>
    8ec6:	62 c0       	rjmp	.+196    	; 0x8f8c <digitalWrite+0x1a6>
digitalPinToTimerNow():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:137
    /* Disable corresponding channel */
    TCA1.SPLIT.CTRLB &= ~bit_mask;
    8ec8:	38 31       	cpi	r19, 0x18	; 24
    8eca:	11 f4       	brne	.+4      	; 0x8ed0 <digitalWrite+0xea>
    8ecc:	26 30       	cpi	r18, 0x06	; 6
    8ece:	89 f3       	breq	.-30     	; 0x8eb2 <digitalWrite+0xcc>
    8ed0:	8e 58       	subi	r24, 0x8E	; 142
    8ed2:	9e 4b       	sbci	r25, 0xBE	; 190
    8ed4:	fc 01       	movw	r30, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:758
    8ed6:	80 81       	ld	r24, Z
    8ed8:	46 ff       	sbrs	r20, 6
    8eda:	3f c0       	rjmp	.+126    	; 0x8f5a <digitalWrite+0x174>
    8edc:	86 ff       	sbrs	r24, 6
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:770
        return TIMERA0;
      }
    }
  #endif
  }
  uint8_t timer = digitalPinToTimer(p);
    8ede:	3d c0       	rjmp	.+122    	; 0x8f5a <digitalWrite+0x174>
    8ee0:	90 91 e8 05 	lds	r25, 0x05E8	; 0x8005e8 <__TEXT_REGION_LENGTH__+0x7e05e8>
    8ee4:	97 70       	andi	r25, 0x07	; 7
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:772

  if ( __PeripheralControl & TIMERD0) {
    8ee6:	48 2f       	mov	r20, r24
    8ee8:	50 e0       	ldi	r21, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:773
    if (timer & TIMERD0) {
    8eea:	4f 7b       	andi	r20, 0xBF	; 191
    8eec:	94 17       	cp	r25, r20
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:774
      byte tcdmux = (PORTMUX.TCDROUTEA & PORTMUX_TCD0_gm);
    8eee:	15 06       	cpc	r1, r21
    8ef0:	a1 f5       	brne	.+104    	; 0x8f5a <digitalWrite+0x174>
turnOffPWM():
    8ef2:	ec 91       	ld	r30, X
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:773
  #endif
  }
  uint8_t timer = digitalPinToTimer(p);

  if ( __PeripheralControl & TIMERD0) {
    if (timer & TIMERD0) {
    8ef4:	80 91 92 0b 	lds	r24, 0x0B92	; 0x800b92 <__TEXT_REGION_LENGTH__+0x7e0b92>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:775
      byte tcdmux = (PORTMUX.TCDROUTEA & PORTMUX_TCD0_gm);
      if (tcdmux == (timer & ~TIMERD0)) {
    8ef8:	8e 23       	and	r24, r30
    8efa:	09 f4       	brne	.+2      	; 0x8efe <digitalWrite+0x118>
    8efc:	47 c0       	rjmp	.+142    	; 0x8f8c <digitalWrite+0x1a6>
    8efe:	c0 e2       	ldi	r28, 0x20	; 32
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:119
  /* Get pin's timer */
  uint8_t timer = digitalPinToTimerNow(pin);
  if(timer == NOT_ON_TIMER) return;

  // uint8_t bit_pos = digitalPinToBitPosition(pin);
  uint8_t bit_mask = digitalPinToBitMask(pin);
    8f00:	2c 9f       	mul	r18, r28
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:171
        // on the DA series, it could be any of them
        #if !defined(ERRATA_TCD_PORTMUX) || ERRATA_TCD_PORTMUX == 0
          //                                Px4-Px7
          uint8_t fcset = TCD0.FAULTCTRL & (bit_mask > 0x0F ? bit_mask : bit_mask << 4 ); // hopefully that gets rendereed as swap, not 4 leftshifts
        #else
          uint8_t fcset = TCD0.FAULTCTRL & bit_mask;
    8f02:	90 01       	movw	r18, r0
    8f04:	11 24       	eor	r1, r1
    8f06:	3c 5f       	subi	r19, 0xFC	; 252
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:174
        #endif
      #endif
      if (fcset) {
    8f08:	e8 30       	cpi	r30, 0x08	; 8
    8f0a:	08 f0       	brcs	.+2      	; 0x8f0e <digitalWrite+0x128>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:179
        // don't do any of this unless the pin is currently set to output PWM - spamming digital I/O on a pin that could output PWM shouldn't
        // cause TCD0 to lose a couple of clocks of timing each time.
        #if defined (NO_GLITCH_TIMERD0)
          // Arrgh, almost didn't need bit position!
          volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(digitalPinToPortStruct(pin), digitalPinToBitMask(pin));
    8f0c:	55 c0       	rjmp	.+170    	; 0x8fb8 <digitalWrite+0x1d2>
    8f0e:	20 5f       	subi	r18, 0xF0	; 240
    8f10:	3f 4f       	sbci	r19, 0xFF	; 255
    8f12:	e2 0f       	add	r30, r18
    8f14:	f3 2f       	mov	r31, r19
    8f16:	f1 1d       	adc	r31, r1
    8f18:	4f b7       	in	r20, 0x3f	; 63
    8f1a:	f8 94       	cli
    8f1c:	90 91 80 0b 	lds	r25, 0x0B80	; 0x800b80 <__TEXT_REGION_LENGTH__+0x7e0b80>
    8f20:	9e 7f       	andi	r25, 0xFE	; 254
    8f22:	90 93 80 0b 	sts	0x0B80, r25	; 0x800b80 <__TEXT_REGION_LENGTH__+0x7e0b80>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:188
        // it was currently set to output PWM, so it's very hard to imagine triggering it with just innocent calls to digitalWrite
        // in a constructor - we do not promise core functions will behave if users are reconfiguring peripherals in arbitrary ways.
        // Starting pwm manually (analogWrite won't start it until init starts the timers) in a constructor and then digitalWriting the same pin,
        // when the pin uses TCD0 for PWM is not expected to to produce correct behavior. If you modify the configuration except as described in
        // REF_TCD.md, you must takeOverTCD0() and assume full responsibility for all TCD configuration.
        uint8_t oldSREG = SREG;
    8f26:	90 91 8e 0b 	lds	r25, 0x0B8E	; 0x800b8e <__TEXT_REGION_LENGTH__+0x7e0b8e>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:190
        cli();
        TCD0.CTRLA &= ~TCD_ENABLE_bm; // stop the timer
    8f2a:	90 ff       	sbrs	r25, 0
    8f2c:	fc cf       	rjmp	.-8      	; 0x8f26 <digitalWrite+0x140>
    8f2e:	20 91 92 0b 	lds	r18, 0x0B92	; 0x800b92 <__TEXT_REGION_LENGTH__+0x7e0b92>
    8f32:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:192
        // Experimentally found ENRDY must be set set to configure FAULTCTRL
        while(!(TCD0.STATUS & 0x01));    // wait until it can be re-enabled
    8f34:	80 95       	com	r24
    8f36:	90 95       	com	r25
    8f38:	30 e0       	ldi	r19, 0x00	; 0
    8f3a:	82 23       	and	r24, r18
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:193
        _PROTECTED_WRITE(TCD0.FAULTCTRL,TCD0.FAULTCTRL & ~fcset);
    8f3c:	93 23       	and	r25, r19
    8f3e:	28 ed       	ldi	r18, 0xD8	; 216
    8f40:	24 bf       	out	0x34, r18	; 52
    8f42:	80 93 92 0b 	sts	0x0B92, r24	; 0x800b92 <__TEXT_REGION_LENGTH__+0x7e0b92>
    8f46:	80 91 80 0b 	lds	r24, 0x0B80	; 0x800b80 <__TEXT_REGION_LENGTH__+0x7e0b80>
    8f4a:	81 60       	ori	r24, 0x01	; 1
    8f4c:	80 93 80 0b 	sts	0x0B80, r24	; 0x800b80 <__TEXT_REGION_LENGTH__+0x7e0b80>
    8f50:	80 81       	ld	r24, Z
    8f52:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:195
        // while(!(TCD0.STATUS & 0x01));    // wait until it can be re-enabled
        TCD0.CTRLA |= TCD_ENABLE_bm;  // re-enable it
    8f54:	80 83       	st	Z, r24
    8f56:	4f bf       	out	0x3f, r20	; 63
    8f58:	19 c0       	rjmp	.+50     	; 0x8f8c <digitalWrite+0x1a6>
digitalPinToTimerNow():
    8f5a:	85 ff       	sbrs	r24, 5
    8f5c:	15 c0       	rjmp	.+42     	; 0x8f88 <digitalWrite+0x1a2>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:197
        #if defined(NO_GLITCH_TIMERD0)
          *pin_ctrl_reg &= ~(PORT_INVEN_bm);
    8f5e:	30 e1       	ldi	r19, 0x10	; 16
    8f60:	83 9f       	mul	r24, r19
    8f62:	f0 01       	movw	r30, r0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:199
        #endif
        SREG = oldSREG;
    8f64:	11 24       	eor	r1, r1
    8f66:	f7 5f       	subi	r31, 0xF7	; 247
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:780
        return TIMERD0;
      }
    }
  }
  if (timer & TIMERB0) { /* Finally check TCBn, if we made it here w/out returning */
    8f68:	91 81       	ldd	r25, Z+1	; 0x01
    8f6a:	97 70       	andi	r25, 0x07	; 7
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:782
    TCB_t* timer_B;
    timer_B = ((TCB_t *)&TCB0 + (timer - TIMERB0)); /* get timer struct */
    8f6c:	97 30       	cpi	r25, 0x07	; 7
    8f6e:	71 f4       	brne	.+28     	; 0x8f8c <digitalWrite+0x1a6>
turnOffPWM():
    8f70:	ec 91       	ld	r30, X
    8f72:	85 32       	cpi	r24, 0x25	; 37
    8f74:	80 f4       	brcc	.+32     	; 0x8f96 <digitalWrite+0x1b0>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:783
    if (((timer_B->CTRLB) &  TCB_CNTMODE_gm) != TCB_CNTMODE_PWM8_gc )
    8f76:	80 32       	cpi	r24, 0x20	; 32
    8f78:	b0 f4       	brcc	.+44     	; 0x8fa6 <digitalWrite+0x1c0>
    8f7a:	88 30       	cpi	r24, 0x08	; 8
    8f7c:	09 f4       	brne	.+2      	; 0x8f80 <digitalWrite+0x19a>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:119
  /* Get pin's timer */
  uint8_t timer = digitalPinToTimerNow(pin);
  if(timer == NOT_ON_TIMER) return;

  // uint8_t bit_pos = digitalPinToBitPosition(pin);
  uint8_t bit_mask = digitalPinToBitMask(pin);
    8f7e:	9a cf       	rjmp	.-204    	; 0x8eb4 <digitalWrite+0xce>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:123
  // we know is valid because we were told it was a timer above.
  TCB_t *timerB;

  switch (timer) {
    8f80:	80 31       	cpi	r24, 0x10	; 16
    8f82:	09 f4       	brne	.+2      	; 0x8f86 <digitalWrite+0x1a0>
    8f84:	78 cf       	rjmp	.-272    	; 0x8e76 <digitalWrite+0x90>
    8f86:	02 c0       	rjmp	.+4      	; 0x8f8c <digitalWrite+0x1a6>
    8f88:	81 11       	cpse	r24, r1
    8f8a:	f2 cf       	rjmp	.-28     	; 0x8f70 <digitalWrite+0x18a>
digitalWrite():
    8f8c:	df 91       	pop	r29
    8f8e:	cf 91       	pop	r28
    8f90:	1f 91       	pop	r17
    8f92:	0f 91       	pop	r16
    8f94:	08 95       	ret
turnOffPWM():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:116
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimerNow(pin);
  if(timer == NOT_ON_TIMER) return;
    8f96:	80 34       	cpi	r24, 0x40	; 64
    8f98:	09 f4       	brne	.+2      	; 0x8f9c <digitalWrite+0x1b6>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:289
   * analogWritten() 255, then digitallyWritten() to HIGH, which
   * would turn it off for the time between turnOffPWM() and
   * PORT->OUTCLR)
   * Since there's no penalty, why make a glitch we don't have to? */
  turnOffPWM(pin);
}
    8f9a:	ac cf       	rjmp	.-168    	; 0x8ef4 <digitalWrite+0x10e>
    8f9c:	80 38       	cpi	r24, 0x80	; 128
    8f9e:	b1 f7       	brne	.-20     	; 0x8f8c <digitalWrite+0x1a6>
    8fa0:	10 92 a0 06 	sts	0x06A0, r1	; 0x8006a0 <__TEXT_REGION_LENGTH__+0x7e06a0>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:123
  // uint8_t bit_pos = digitalPinToBitPosition(pin);
  uint8_t bit_mask = digitalPinToBitMask(pin);
  // we know is valid because we were told it was a timer above.
  TCB_t *timerB;

  switch (timer) {
    8fa4:	f3 cf       	rjmp	.-26     	; 0x8f8c <digitalWrite+0x1a6>
    8fa6:	90 e1       	ldi	r25, 0x10	; 16
    8fa8:	89 9f       	mul	r24, r25
    8faa:	f0 01       	movw	r30, r0
    8fac:	11 24       	eor	r1, r1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:155
    timerB->CTRLB &= ~(TCB_CCMPEN_bm);

    break;
  #if defined(DAC0)
  case DACOUT:
    DAC0.CTRLA = 0x00;
    8fae:	f7 5f       	subi	r31, 0xF7	; 247
    8fb0:	81 81       	ldd	r24, Z+1	; 0x01
    8fb2:	8f 7e       	andi	r24, 0xEF	; 239
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:147
  case TIMERB1:
  case TIMERB2:
  case TIMERB3:
  case TIMERB4:

    timerB = (TCB_t *) &TCB0 + (timer - TIMERB0);
    8fb4:	81 83       	std	Z+1, r24	; 0x01
    8fb6:	ea cf       	rjmp	.-44     	; 0x8f8c <digitalWrite+0x1a6>
digitalWrite():
    8fb8:	f0 e0       	ldi	r31, 0x00	; 0
    8fba:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:150

     // Disable TCB compare channel
    timerB->CTRLB &= ~(TCB_CCMPEN_bm);
    8fbc:	ad cf       	rjmp	.-166    	; 0x8f18 <digitalWrite+0x132>

00008fbe <u8x8_gpio_and_delay_arduino>:
u8x8_gpio_and_delay_arduino():
    8fbe:	cf 93       	push	r28
    8fc0:	df 93       	push	r29
    8fc2:	ec 01       	movw	r28, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:179
      if (fcset) {
        // don't do any of this unless the pin is currently set to output PWM - spamming digital I/O on a pin that could output PWM shouldn't
        // cause TCD0 to lose a couple of clocks of timing each time.
        #if defined (NO_GLITCH_TIMERD0)
          // Arrgh, almost didn't need bit position!
          volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(digitalPinToPortStruct(pin), digitalPinToBitMask(pin));
    8fc4:	e6 2f       	mov	r30, r22
    8fc6:	64 2f       	mov	r22, r20
    8fc8:	ec 32       	cpi	r30, 0x2C	; 44
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:88
/*=== ARDUINO GPIO & DELAY ===*/

#ifdef ARDUINO
#ifdef U8X8_USE_PINS
extern "C" uint8_t u8x8_gpio_and_delay_arduino(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, U8X8_UNUSED void *arg_ptr)
{
    8fca:	d0 f5       	brcc	.+116    	; 0x9040 <u8x8_gpio_and_delay_arduino+0x82>
    8fcc:	ea 32       	cpi	r30, 0x2A	; 42
    8fce:	08 f0       	brcs	.+2      	; 0x8fd2 <u8x8_gpio_and_delay_arduino+0x14>
    8fd0:	7f c0       	rjmp	.+254    	; 0x90d0 <u8x8_gpio_and_delay_arduino+0x112>
    8fd2:	e8 32       	cpi	r30, 0x28	; 40
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:90
  uint8_t i;
  switch(msg)
    8fd4:	09 f4       	brne	.+2      	; 0x8fd8 <u8x8_gpio_and_delay_arduino+0x1a>
    8fd6:	5c c0       	rjmp	.+184    	; 0x9090 <u8x8_gpio_and_delay_arduino+0xd2>
    8fd8:	e9 32       	cpi	r30, 0x29	; 41
    8fda:	09 f4       	brne	.+2      	; 0x8fde <u8x8_gpio_and_delay_arduino+0x20>
    8fdc:	a4 c0       	rjmp	.+328    	; 0x9126 <u8x8_gpio_and_delay_arduino+0x168>
    8fde:	80 e0       	ldi	r24, 0x00	; 0
    8fe0:	e0 34       	cpi	r30, 0x40	; 64
    8fe2:	08 f4       	brcc	.+2      	; 0x8fe6 <u8x8_gpio_and_delay_arduino+0x28>
    8fe4:	76 c0       	rjmp	.+236    	; 0x90d2 <u8x8_gpio_and_delay_arduino+0x114>
    8fe6:	ef 73       	andi	r30, 0x3F	; 63
    8fe8:	de 01       	movw	r26, r28
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:177
	  }
	}
	break;
      }
      
      return 0;
    8fea:	ae 0f       	add	r26, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:155
	digitalWrite(u8x8_GetPinValue(u8x8, msg), 1);
#endif 
      }
      break;
    default:
      if ( msg >= U8X8_MSG_GPIO(0) )
    8fec:	b1 1d       	adc	r27, r1
    8fee:	5e 96       	adiw	r26, 0x1e	; 30
    8ff0:	8c 91       	ld	r24, X
    8ff2:	8f 3f       	cpi	r24, 0xFF	; 255
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:157
      {
	i = u8x8_GetPinValue(u8x8, msg);
    8ff4:	09 f4       	brne	.+2      	; 0x8ff8 <u8x8_gpio_and_delay_arduino+0x3a>
    8ff6:	6c c0       	rjmp	.+216    	; 0x90d0 <u8x8_gpio_and_delay_arduino+0x112>
    8ff8:	e0 31       	cpi	r30, 0x10	; 16
    8ffa:	08 f4       	brcc	.+2      	; 0x8ffe <u8x8_gpio_and_delay_arduino+0x40>
    8ffc:	47 c0       	rjmp	.+142    	; 0x908c <u8x8_gpio_and_delay_arduino+0xce>
check_valid_digital_pin():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:158
	if ( i != U8X8_PIN_NONE )
    8ffe:	28 2f       	mov	r18, r24
    9000:	30 e0       	ldi	r19, 0x00	; 0
digitalRead():
    9002:	89 32       	cpi	r24, 0x29	; 41
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:160
	{
	  if ( u8x8_GetPinIndex(u8x8, msg) < U8X8_PIN_OUTPUT_CNT )
    9004:	08 f0       	brcs	.+2      	; 0x9008 <u8x8_gpio_and_delay_arduino+0x4a>
    9006:	c7 c0       	rjmp	.+398    	; 0x9196 <u8x8_gpio_and_delay_arduino+0x1d8>
    9008:	f9 01       	movw	r30, r18
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/Arduino.h:712
    900a:	ec 50       	subi	r30, 0x0C	; 12
    900c:	fe 4b       	sbci	r31, 0xBE	; 190
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:323
}

int8_t digitalRead(uint8_t pin) {
  check_valid_digital_pin(pin);
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    900e:	80 81       	ld	r24, Z
    9010:	8f 3f       	cpi	r24, 0xFF	; 255
    9012:	09 f4       	brne	.+2      	; 0x9016 <u8x8_gpio_and_delay_arduino+0x58>
    9014:	c0 c0       	rjmp	.+384    	; 0x9196 <u8x8_gpio_and_delay_arduino+0x1d8>
    9016:	25 53       	subi	r18, 0x35	; 53
    9018:	3e 4b       	sbci	r19, 0xBE	; 190
    901a:	f9 01       	movw	r30, r18
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:324
  if (bit_mask == NOT_A_PIN) {
    901c:	a0 81       	ld	r26, Z
    901e:	f0 e2       	ldi	r31, 0x20	; 32
    9020:	af 9f       	mul	r26, r31
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:337
  // high bar for stuff that would make it even slower than it already is.
  //
  // turnOffPWM(pin);

  /* Get port and check valid port */
  PORT_t *port = digitalPinToPortStruct(pin);
    9022:	d0 01       	movw	r26, r0
    9024:	11 24       	eor	r1, r1
    9026:	bc 5f       	subi	r27, 0xFC	; 252
    9028:	18 96       	adiw	r26, 0x08	; 8
    902a:	9c 91       	ld	r25, X
    902c:	98 23       	and	r25, r24
    902e:	81 e0       	ldi	r24, 0x01	; 1
    9030:	09 f4       	brne	.+2      	; 0x9034 <u8x8_gpio_and_delay_arduino+0x76>
    9032:	80 e0       	ldi	r24, 0x00	; 0
u8x8_gpio_and_delay_arduino():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:340

  /* Read pin value from PORTx.IN register */
  if (port->IN & bit_mask) {
    9034:	91 e0       	ldi	r25, 0x01	; 1
    9036:	81 11       	cpse	r24, r1
    9038:	01 c0       	rjmp	.+2      	; 0x903c <u8x8_gpio_and_delay_arduino+0x7e>
    903a:	90 e0       	ldi	r25, 0x00	; 0
    903c:	99 8f       	std	Y+25, r25	; 0x19
    903e:	48 c0       	rjmp	.+144    	; 0x90d0 <u8x8_gpio_and_delay_arduino+0x112>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:171
	    if ( u8x8_GetPinIndex(u8x8, msg) == U8X8_PIN_OUTPUT_CNT )
	    {
	      // call yield() for the first pin only, u8x8 will always request all the pins, so this should be ok
	      yield();
	    }
	    u8x8_SetGPIOResult(u8x8, digitalRead(i) == 0 ? 0 : 1);
    9040:	ed 32       	cpi	r30, 0x2D	; 45
    9042:	09 f4       	brne	.+2      	; 0x9046 <u8x8_gpio_and_delay_arduino+0x88>
    9044:	76 c0       	rjmp	.+236    	; 0x9132 <u8x8_gpio_and_delay_arduino+0x174>
    9046:	58 f2       	brcs	.-106    	; 0x8fde <u8x8_gpio_and_delay_arduino+0x20>
    9048:	84 eb       	ldi	r24, 0xB4	; 180
    904a:	8e 0f       	add	r24, r30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:90
#ifdef ARDUINO
#ifdef U8X8_USE_PINS
extern "C" uint8_t u8x8_gpio_and_delay_arduino(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, U8X8_UNUSED void *arg_ptr)
{
  uint8_t i;
  switch(msg)
    904c:	82 30       	cpi	r24, 0x02	; 2
    904e:	38 f6       	brcc	.-114    	; 0x8fde <u8x8_gpio_and_delay_arduino+0x20>
    9050:	ef 73       	andi	r30, 0x3F	; 63
    9052:	ec 0f       	add	r30, r28
    9054:	fd 2f       	mov	r31, r29
    9056:	f1 1d       	adc	r31, r1
    9058:	26 8d       	ldd	r18, Z+30	; 0x1e
    905a:	82 2f       	mov	r24, r18
    905c:	90 e0       	ldi	r25, 0x00	; 0
    905e:	41 11       	cpse	r20, r1
    9060:	71 c0       	rjmp	.+226    	; 0x9144 <u8x8_gpio_and_delay_arduino+0x186>
_pinMode():
    9062:	29 32       	cpi	r18, 0x29	; 41
    9064:	88 f4       	brcc	.+34     	; 0x9088 <u8x8_gpio_and_delay_arduino+0xca>
    9066:	dc 01       	movw	r26, r24
    9068:	ac 50       	subi	r26, 0x0C	; 12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:139
      /* arg_int is 1 or 4: 100KHz (5us) or 400KHz (1.25us) */
      delayMicroseconds(arg_int<=2?5:2);
      break;
    case U8X8_MSG_GPIO_I2C_CLOCK:
    case U8X8_MSG_GPIO_I2C_DATA:
      if ( arg_int == 0 )
    906a:	be 4b       	sbci	r27, 0xBE	; 190
    906c:	2c 91       	ld	r18, X
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:79
    }
  #endif
  _pinMode(pin, mode);
}
void _pinMode(uint8_t pin, uint8_t mode) {
  uint8_t bit_mask = digitalPinToBitMask(pin);
    906e:	2f 3f       	cpi	r18, 0xFF	; 255
    9070:	59 f0       	breq	.+22     	; 0x9088 <u8x8_gpio_and_delay_arduino+0xca>
    9072:	85 53       	subi	r24, 0x35	; 53
    9074:	9e 4b       	sbci	r25, 0xBE	; 190
    9076:	ec 01       	movw	r28, r24
    9078:	a8 81       	ld	r26, Y
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:80
  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP)) {
    907a:	d0 e2       	ldi	r29, 0x20	; 32
    907c:	ad 9f       	mul	r26, r29
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:83
    return;                             /* ignore invalid pins passed at runtime */
  }
  PORT_t *port = digitalPinToPortStruct(pin);
    907e:	d0 01       	movw	r26, r0
    9080:	11 24       	eor	r1, r1
    9082:	bc 5f       	subi	r27, 0xFC	; 252
    9084:	11 96       	adiw	r26, 0x01	; 1
    9086:	2c 93       	st	X, r18
u8x8_gpio_and_delay_arduino():
    9088:	60 e0       	ldi	r22, 0x00	; 0
    908a:	86 8d       	ldd	r24, Z+30	; 0x1e
    908c:	ac de       	rcall	.-680    	; 0x8de6 <digitalWrite>
    908e:	20 c0       	rjmp	.+64     	; 0x90d0 <u8x8_gpio_and_delay_arduino+0x112>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:86
  // if (port == NULL) return;           /* skip this test; if bit_mask isn't NOT_A_PIN, port won't be null - if it is, pins_arduino.h contains errors and we can't expect any digital I/O to work correctly.
  if (mode == OUTPUT) {
    port->DIRSET = bit_mask;            /* Configure direction as output and done*/
    9090:	fc 01       	movw	r30, r24
    9092:	7e 96       	adiw	r30, 0x1e	; 30
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:142
      {
	pinMode(u8x8_GetPinValue(u8x8, msg), OUTPUT);
	digitalWrite(u8x8_GetPinValue(u8x8, msg), 0);
    9094:	80 e0       	ldi	r24, 0x00	; 0
    9096:	91 91       	ld	r25, Z+
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:162
	i = u8x8_GetPinValue(u8x8, msg);
	if ( i != U8X8_PIN_NONE )
	{
	  if ( u8x8_GetPinIndex(u8x8, msg) < U8X8_PIN_OUTPUT_CNT )
	  {
	    digitalWrite(i, arg_int);
    9098:	9f 3f       	cpi	r25, 0xFF	; 255
    909a:	b9 f0       	breq	.+46     	; 0x90ca <u8x8_gpio_and_delay_arduino+0x10c>
    909c:	29 2f       	mov	r18, r25
    909e:	30 e0       	ldi	r19, 0x00	; 0
    90a0:	80 31       	cpi	r24, 0x10	; 16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:94
  uint8_t i;
  switch(msg)
  {
    case U8X8_MSG_GPIO_AND_DELAY_INIT:
    
      for( i = 0; i < U8X8_PIN_CNT; i++ )
    90a2:	d0 f4       	brcc	.+52     	; 0x90d8 <u8x8_gpio_and_delay_arduino+0x11a>
_pinMode():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:95
	if ( u8x8->pins[i] != U8X8_PIN_NONE )
    90a4:	99 32       	cpi	r25, 0x29	; 41
    90a6:	88 f4       	brcc	.+34     	; 0x90ca <u8x8_gpio_and_delay_arduino+0x10c>
    90a8:	d9 01       	movw	r26, r18
    90aa:	ac 50       	subi	r26, 0x0C	; 12
    90ac:	be 4b       	sbci	r27, 0xBE	; 190
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:97
	{
	  if ( i < U8X8_PIN_OUTPUT_CNT )
    90ae:	9c 91       	ld	r25, X
    90b0:	9f 3f       	cpi	r25, 0xFF	; 255
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:79
    }
  #endif
  _pinMode(pin, mode);
}
void _pinMode(uint8_t pin, uint8_t mode) {
  uint8_t bit_mask = digitalPinToBitMask(pin);
    90b2:	59 f0       	breq	.+22     	; 0x90ca <u8x8_gpio_and_delay_arduino+0x10c>
    90b4:	25 53       	subi	r18, 0x35	; 53
    90b6:	3e 4b       	sbci	r19, 0xBE	; 190
    90b8:	e9 01       	movw	r28, r18
    90ba:	a8 81       	ld	r26, Y
    90bc:	d0 e2       	ldi	r29, 0x20	; 32
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:80
  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP)) {
    90be:	ad 9f       	mul	r26, r29
    90c0:	d0 01       	movw	r26, r0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:83
    return;                             /* ignore invalid pins passed at runtime */
  }
  PORT_t *port = digitalPinToPortStruct(pin);
    90c2:	11 24       	eor	r1, r1
    90c4:	bc 5f       	subi	r27, 0xFC	; 252
    90c6:	11 96       	adiw	r26, 0x01	; 1
    90c8:	9c 93       	st	X, r25
u8x8_gpio_and_delay_arduino():
    90ca:	8f 5f       	subi	r24, 0xFF	; 255
    90cc:	86 31       	cpi	r24, 0x16	; 22
    90ce:	19 f7       	brne	.-58     	; 0x9096 <u8x8_gpio_and_delay_arduino+0xd8>
    90d0:	81 e0       	ldi	r24, 0x01	; 1
    90d2:	df 91       	pop	r29
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:86
  // if (port == NULL) return;           /* skip this test; if bit_mask isn't NOT_A_PIN, port won't be null - if it is, pins_arduino.h contains errors and we can't expect any digital I/O to work correctly.
  if (mode == OUTPUT) {
    port->DIRSET = bit_mask;            /* Configure direction as output and done*/
    90d4:	cf 91       	pop	r28
    90d6:	08 95       	ret
_pinMode():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:94
  uint8_t i;
  switch(msg)
  {
    case U8X8_MSG_GPIO_AND_DELAY_INIT:
    
      for( i = 0; i < U8X8_PIN_CNT; i++ )
    90d8:	99 32       	cpi	r25, 0x29	; 41
    90da:	b8 f7       	brcc	.-18     	; 0x90ca <u8x8_gpio_and_delay_arduino+0x10c>
    90dc:	d9 01       	movw	r26, r18
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:179
	break;
      }
      
      return 0;
  }
  return 1;
    90de:	ac 50       	subi	r26, 0x0C	; 12
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:180
}
    90e0:	be 4b       	sbci	r27, 0xBE	; 190
    90e2:	9c 91       	ld	r25, X
    90e4:	9f 3f       	cpi	r25, 0xFF	; 255
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:79
    }
  #endif
  _pinMode(pin, mode);
}
void _pinMode(uint8_t pin, uint8_t mode) {
  uint8_t bit_mask = digitalPinToBitMask(pin);
    90e6:	89 f3       	breq	.-30     	; 0x90ca <u8x8_gpio_and_delay_arduino+0x10c>
    90e8:	d9 01       	movw	r26, r18
    90ea:	a5 53       	subi	r26, 0x35	; 53
    90ec:	be 4b       	sbci	r27, 0xBE	; 190
    90ee:	cc 91       	ld	r28, X
    90f0:	40 e2       	ldi	r20, 0x20	; 32
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:80
  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP)) {
    90f2:	c4 9f       	mul	r28, r20
    90f4:	e0 01       	movw	r28, r0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:83
    return;                             /* ignore invalid pins passed at runtime */
  }
  PORT_t *port = digitalPinToPortStruct(pin);
    90f6:	11 24       	eor	r1, r1
    90f8:	dc 5f       	subi	r29, 0xFC	; 252
    90fa:	2e 55       	subi	r18, 0x5E	; 94
    90fc:	3e 4b       	sbci	r19, 0xBE	; 190
    90fe:	d9 01       	movw	r26, r18
    9100:	4c 91       	ld	r20, X
u8x8_gpio_and_delay_arduino():
    9102:	b0 e0       	ldi	r27, 0x00	; 0
    9104:	a0 e0       	ldi	r26, 0x00	; 0
_pinMode():
    9106:	48 30       	cpi	r20, 0x08	; 8
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:89
  // if (port == NULL) return;           /* skip this test; if bit_mask isn't NOT_A_PIN, port won't be null - if it is, pins_arduino.h contains errors and we can't expect any digital I/O to work correctly.
  if (mode == OUTPUT) {
    port->DIRSET = bit_mask;            /* Configure direction as output and done*/
  } else {                              /* mode == INPUT or INPUT_PULLUP - more complicated */
                                        /* Calculate where pin control register is */
    uint8_t bit_pos = digitalPinToBitPosition(pin);
    9108:	30 f4       	brcc	.+12     	; 0x9116 <u8x8_gpio_and_delay_arduino+0x158>
    910a:	9e 01       	movw	r18, r28
    910c:	20 5f       	subi	r18, 0xF0	; 240
    910e:	3f 4f       	sbci	r19, 0xFF	; 255
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:90
    volatile uint8_t *pin_ctrl = getPINnCTRLregister(port, bit_pos);
    9110:	d9 01       	movw	r26, r18
    9112:	a4 0f       	add	r26, r20
    9114:	b1 1d       	adc	r27, r1
    9116:	2f b7       	in	r18, 0x3f	; 63
    9118:	f8 94       	cli
    911a:	9a 83       	std	Y+2, r25	; 0x02
    911c:	9c 91       	ld	r25, X
    911e:	98 60       	ori	r25, 0x08	; 8
    9120:	9c 93       	st	X, r25
    9122:	2f bf       	out	0x3f, r18	; 63
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:91
    uint8_t status = SREG;              /* Save state */
    9124:	d2 cf       	rjmp	.-92     	; 0x90ca <u8x8_gpio_and_delay_arduino+0x10c>
u8x8_gpio_and_delay_arduino():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:92
    cli();                              /* Interrupts off for PINnCTRL stuff */
    9126:	70 e0       	ldi	r23, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:93
    port->DIRCLR = bit_mask;            /* Configure direction as input */
    9128:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:95
    if (mode == INPUT_PULLUP) {         /* Configure pull-up resistor */
      *pin_ctrl |= PORT_PULLUPEN_bm;    /* Enable pull-up */
    912a:	80 e0       	ldi	r24, 0x00	; 0
    912c:	0e 94 07 32 	call	0x640e	; 0x640e <delay>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:99
    } else {                            /* mode == INPUT (no pullup) */
      *pin_ctrl &= ~(PORT_PULLUPEN_bm); /* Disable pull-up */
    }
    SREG = status;                      /* Restore state */
    9130:	cf cf       	rjmp	.-98     	; 0x90d0 <u8x8_gpio_and_delay_arduino+0x112>
    9132:	85 e0       	ldi	r24, 0x05	; 5
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:131
    case U8X8_MSG_DELAY_100NANO:
      /* not used at the moment */
      break;
   
    case U8X8_MSG_DELAY_MILLI:
      delay(arg_int);
    9134:	90 e0       	ldi	r25, 0x00	; 0
    9136:	43 30       	cpi	r20, 0x03	; 3
    9138:	10 f0       	brcs	.+4      	; 0x913e <u8x8_gpio_and_delay_arduino+0x180>
    913a:	82 e0       	ldi	r24, 0x02	; 2
    913c:	90 e0       	ldi	r25, 0x00	; 0
delayMicroseconds():
    913e:	0e 94 b4 31 	call	0x6368	; 0x6368 <_delayMicroseconds>
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8x8lib.cpp:135
      break;
    case U8X8_MSG_DELAY_I2C:
      /* arg_int is 1 or 4: 100KHz (5us) or 400KHz (1.25us) */
      delayMicroseconds(arg_int<=2?5:2);
    9142:	c6 cf       	rjmp	.-116    	; 0x90d0 <u8x8_gpio_and_delay_arduino+0x112>
_pinMode():
    9144:	29 32       	cpi	r18, 0x29	; 41
    9146:	20 f6       	brcc	.-120    	; 0x90d0 <u8x8_gpio_and_delay_arduino+0x112>
    9148:	fc 01       	movw	r30, r24
    914a:	ec 50       	subi	r30, 0x0C	; 12
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring.c:987
inline __attribute__((always_inline)) void delayMicroseconds(unsigned int us) {
  // This function gets optimized away, but to what depends on whether us is constant.
  if (__builtin_constant_p(us)) {
    _delay_us(us); // Constant microseconds use the avr-libc _delay_us() which is highly accurate for all values and efficient!
  } else { // If it is not, we have to use the Arduino style implementation.
    _delayMicroseconds(us);
    914c:	fe 4b       	sbci	r31, 0xBE	; 190
    914e:	20 81       	ld	r18, Z
    9150:	2f 3f       	cpi	r18, 0xFF	; 255
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:79
    }
  #endif
  _pinMode(pin, mode);
}
void _pinMode(uint8_t pin, uint8_t mode) {
  uint8_t bit_mask = digitalPinToBitMask(pin);
    9152:	09 f4       	brne	.+2      	; 0x9156 <u8x8_gpio_and_delay_arduino+0x198>
    9154:	bd cf       	rjmp	.-134    	; 0x90d0 <u8x8_gpio_and_delay_arduino+0x112>
    9156:	fc 01       	movw	r30, r24
    9158:	e5 53       	subi	r30, 0x35	; 53
    915a:	fe 4b       	sbci	r31, 0xBE	; 190
    915c:	a0 81       	ld	r26, Z
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:80
  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP)) {
    915e:	e0 e2       	ldi	r30, 0x20	; 32
    9160:	ae 9f       	mul	r26, r30
    9162:	d0 01       	movw	r26, r0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:83
    return;                             /* ignore invalid pins passed at runtime */
  }
  PORT_t *port = digitalPinToPortStruct(pin);
    9164:	11 24       	eor	r1, r1
    9166:	bc 5f       	subi	r27, 0xFC	; 252
    9168:	8e 55       	subi	r24, 0x5E	; 94
    916a:	9e 4b       	sbci	r25, 0xBE	; 190
    916c:	ec 01       	movw	r28, r24
    916e:	e8 81       	ld	r30, Y
    9170:	e8 30       	cpi	r30, 0x08	; 8
    9172:	70 f4       	brcc	.+28     	; 0x9190 <u8x8_gpio_and_delay_arduino+0x1d2>
    9174:	cd 01       	movw	r24, r26
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:89
  // if (port == NULL) return;           /* skip this test; if bit_mask isn't NOT_A_PIN, port won't be null - if it is, pins_arduino.h contains errors and we can't expect any digital I/O to work correctly.
  if (mode == OUTPUT) {
    port->DIRSET = bit_mask;            /* Configure direction as output and done*/
  } else {                              /* mode == INPUT or INPUT_PULLUP - more complicated */
                                        /* Calculate where pin control register is */
    uint8_t bit_pos = digitalPinToBitPosition(pin);
    9176:	40 96       	adiw	r24, 0x10	; 16
    9178:	e8 0f       	add	r30, r24
    917a:	f9 2f       	mov	r31, r25
    917c:	f1 1d       	adc	r31, r1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:90
    volatile uint8_t *pin_ctrl = getPINnCTRLregister(port, bit_pos);
    917e:	9f b7       	in	r25, 0x3f	; 63
    9180:	f8 94       	cli
    9182:	12 96       	adiw	r26, 0x02	; 2
    9184:	2c 93       	st	X, r18
    9186:	80 81       	ld	r24, Z
    9188:	88 60       	ori	r24, 0x08	; 8
    918a:	80 83       	st	Z, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:91
    uint8_t status = SREG;              /* Save state */
    918c:	9f bf       	out	0x3f, r25	; 63
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:92
    cli();                              /* Interrupts off for PINnCTRL stuff */
    918e:	a0 cf       	rjmp	.-192    	; 0x90d0 <u8x8_gpio_and_delay_arduino+0x112>
u8x8_gpio_and_delay_arduino():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:93
    port->DIRCLR = bit_mask;            /* Configure direction as input */
    9190:	f0 e0       	ldi	r31, 0x00	; 0
    9192:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:95
    if (mode == INPUT_PULLUP) {         /* Configure pull-up resistor */
      *pin_ctrl |= PORT_PULLUPEN_bm;    /* Enable pull-up */
    9194:	f4 cf       	rjmp	.-24     	; 0x917e <u8x8_gpio_and_delay_arduino+0x1c0>
    9196:	8f ef       	ldi	r24, 0xFF	; 255
    9198:	4d cf       	rjmp	.-358    	; 0x9034 <u8x8_gpio_and_delay_arduino+0x76>

0000919a <UImanager::formatNumber(char*, float)>:
_ZN9UImanager12formatNumberEPcf():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:99
    } else {                            /* mode == INPUT (no pullup) */
      *pin_ctrl &= ~(PORT_PULLUPEN_bm); /* Disable pull-up */
    }
    SREG = status;                      /* Restore state */
    919a:	8f 92       	push	r8
    919c:	9f 92       	push	r9
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:90
  if (mode == OUTPUT) {
    port->DIRSET = bit_mask;            /* Configure direction as output and done*/
  } else {                              /* mode == INPUT or INPUT_PULLUP - more complicated */
                                        /* Calculate where pin control register is */
    uint8_t bit_pos = digitalPinToBitPosition(pin);
    volatile uint8_t *pin_ctrl = getPINnCTRLregister(port, bit_pos);
    919e:	af 92       	push	r10
    91a0:	bf 92       	push	r11
    91a2:	cf 92       	push	r12
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:325
int8_t digitalRead(uint8_t pin) {
  check_valid_digital_pin(pin);
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
  if (bit_mask == NOT_A_PIN) {
    return -1;
    91a4:	df 92       	push	r13
    91a6:	ef 92       	push	r14
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:770
      @param buf a buffer where the formatted string should be written
      @param f the number to be formatted
      @return a nul terminated char array with the formatted number (same as
   buf)
*/
const char *UImanager::formatNumber(char buf[K197_RAW_MSG_SIZE + 1], float f) {
    91a8:	ff 92       	push	r15
    91aa:	0f 93       	push	r16
    91ac:	1f 93       	push	r17
    91ae:	cf 93       	push	r28
    91b0:	8c 01       	movw	r16, r24
    91b2:	6a 01       	movw	r12, r20
    91b4:	7b 01       	movw	r14, r22
    91b6:	20 ef       	ldi	r18, 0xF0	; 240
    91b8:	33 e2       	ldi	r19, 0x23	; 35
    91ba:	44 e7       	ldi	r20, 0x74	; 116
    91bc:	59 e4       	ldi	r21, 0x49	; 73
    91be:	cb 01       	movw	r24, r22
    91c0:	b6 01       	movw	r22, r12
    91c2:	0e 94 17 78 	call	0xf02e	; 0xf02e <__gesf2>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:771
  if (f > 999999.0)
    91c6:	18 16       	cp	r1, r24
    91c8:	0c f4       	brge	.+2      	; 0x91cc <UImanager::formatNumber(char*, float)+0x32>
    91ca:	6d c0       	rjmp	.+218    	; 0x92a6 <UImanager::formatNumber(char*, float)+0x10c>
    91cc:	20 ef       	ldi	r18, 0xF0	; 240
    91ce:	33 e2       	ldi	r19, 0x23	; 35
    91d0:	44 e7       	ldi	r20, 0x74	; 116
    91d2:	59 ec       	ldi	r21, 0xC9	; 201
    91d4:	c7 01       	movw	r24, r14
    91d6:	b6 01       	movw	r22, r12
    91d8:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:773
    f = 999999.0;
  else if (f < -999999.0)
    91dc:	87 ff       	sbrs	r24, 7
    91de:	08 c0       	rjmp	.+16     	; 0x91f0 <UImanager::formatNumber(char*, float)+0x56>
    91e0:	90 ef       	ldi	r25, 0xF0	; 240
    91e2:	c9 2e       	mov	r12, r25
    91e4:	93 e2       	ldi	r25, 0x23	; 35
    91e6:	d9 2e       	mov	r13, r25
    91e8:	94 e7       	ldi	r25, 0x74	; 116
    91ea:	e9 2e       	mov	r14, r25
    91ec:	99 ec       	ldi	r25, 0xC9	; 201
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:774
    f = -999999.0;
    91ee:	f9 2e       	mov	r15, r25
    91f0:	c7 01       	movw	r24, r14
    91f2:	b6 01       	movw	r22, r12
    91f4:	0e 94 e6 77 	call	0xefcc	; 0xefcc <__fixsfsi>
    91f8:	9b 01       	movw	r18, r22
    91fa:	77 ff       	sbrs	r23, 7
    91fc:	04 c0       	rjmp	.+8      	; 0x9206 <UImanager::formatNumber(char*, float)+0x6c>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:775
  float f_abs = abs(f);
    91fe:	22 27       	eor	r18, r18
    9200:	33 27       	eor	r19, r19
    9202:	26 1b       	sub	r18, r22
    9204:	37 0b       	sbc	r19, r23
    9206:	b9 01       	movw	r22, r18
    9208:	33 0f       	add	r19, r19
    920a:	88 0b       	sbc	r24, r24
    920c:	99 0b       	sbc	r25, r25
    920e:	0e 94 ea 75 	call	0xebd4	; 0xebd4 <__floatsisf>
    9212:	4b 01       	movw	r8, r22
    9214:	5c 01       	movw	r10, r24
    9216:	26 ef       	ldi	r18, 0xF6	; 246
    9218:	3f ef       	ldi	r19, 0xFF	; 255
    921a:	4f e1       	ldi	r20, 0x1F	; 31
    921c:	51 e4       	ldi	r21, 0x41	; 65
    921e:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:777
  int ndec = 0;
  if (f_abs <= 9.99999)
    9222:	25 e0       	ldi	r18, 0x05	; 5
    9224:	18 16       	cp	r1, r24
    9226:	74 f5       	brge	.+92     	; 0x9284 <UImanager::formatNumber(char*, float)+0xea>
    9228:	23 ef       	ldi	r18, 0xF3	; 243
    922a:	3f ef       	ldi	r19, 0xFF	; 255
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:778
    ndec = 5;
    922c:	47 ec       	ldi	r20, 0xC7	; 199
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:777
    f = 999999.0;
  else if (f < -999999.0)
    f = -999999.0;
  float f_abs = abs(f);
  int ndec = 0;
  if (f_abs <= 9.99999)
    922e:	52 e4       	ldi	r21, 0x42	; 66
    9230:	c5 01       	movw	r24, r10
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:779
    ndec = 5;
  else if (f_abs <= 99.9999)
    9232:	b4 01       	movw	r22, r8
    9234:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
    9238:	24 e0       	ldi	r18, 0x04	; 4
    923a:	18 16       	cp	r1, r24
    923c:	1c f5       	brge	.+70     	; 0x9284 <UImanager::formatNumber(char*, float)+0xea>
    923e:	20 ef       	ldi	r18, 0xF0	; 240
    9240:	3f ef       	ldi	r19, 0xFF	; 255
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:780
    ndec = 4;
    9242:	49 e7       	ldi	r20, 0x79	; 121
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:779
    f = -999999.0;
  float f_abs = abs(f);
  int ndec = 0;
  if (f_abs <= 9.99999)
    ndec = 5;
  else if (f_abs <= 99.9999)
    9244:	54 e4       	ldi	r21, 0x44	; 68
    9246:	c5 01       	movw	r24, r10
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:781
    ndec = 4;
  else if (f_abs <= 999.999)
    9248:	b4 01       	movw	r22, r8
    924a:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
    924e:	23 e0       	ldi	r18, 0x03	; 3
    9250:	18 16       	cp	r1, r24
    9252:	c4 f4       	brge	.+48     	; 0x9284 <UImanager::formatNumber(char*, float)+0xea>
    9254:	26 ef       	ldi	r18, 0xF6	; 246
    9256:	3f e3       	ldi	r19, 0x3F	; 63
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:782
    ndec = 3;
    9258:	4c e1       	ldi	r20, 0x1C	; 28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:781
  int ndec = 0;
  if (f_abs <= 9.99999)
    ndec = 5;
  else if (f_abs <= 99.9999)
    ndec = 4;
  else if (f_abs <= 999.999)
    925a:	56 e4       	ldi	r21, 0x46	; 70
    925c:	c5 01       	movw	r24, r10
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:783
    ndec = 3;
  else if (f_abs <= 9999.99)
    925e:	b4 01       	movw	r22, r8
    9260:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
    9264:	22 e0       	ldi	r18, 0x02	; 2
    9266:	18 16       	cp	r1, r24
    9268:	6c f4       	brge	.+26     	; 0x9284 <UImanager::formatNumber(char*, float)+0xea>
    926a:	c1 e0       	ldi	r28, 0x01	; 1
    926c:	23 ef       	ldi	r18, 0xF3	; 243
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:784
    ndec = 2;
    926e:	3f e4       	ldi	r19, 0x4F	; 79
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:783
    ndec = 5;
  else if (f_abs <= 99.9999)
    ndec = 4;
  else if (f_abs <= 999.999)
    ndec = 3;
  else if (f_abs <= 9999.99)
    9270:	43 ec       	ldi	r20, 0xC3	; 195
    9272:	57 e4       	ldi	r21, 0x47	; 71
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:785
    ndec = 2;
  else if (f_abs <= 99999.9)
    9274:	c5 01       	movw	r24, r10
    9276:	b4 01       	movw	r22, r8
    9278:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
    927c:	18 16       	cp	r1, r24
    927e:	0c f4       	brge	.+2      	; 0x9282 <UImanager::formatNumber(char*, float)+0xe8>
    9280:	c0 e0       	ldi	r28, 0x00	; 0
    9282:	2c 2f       	mov	r18, r28
    9284:	48 e0       	ldi	r20, 0x08	; 8
    9286:	c7 01       	movw	r24, r14
    9288:	b6 01       	movw	r22, r12
    928a:	0e 94 23 71 	call	0xe246	; 0xe246 <dtostrf>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:787
    ndec = 1;
  return dtostrf(f, K197_RAW_MSG_SIZE, ndec, buf);
    928e:	cf 91       	pop	r28
    9290:	1f 91       	pop	r17
    9292:	0f 91       	pop	r16
    9294:	ff 90       	pop	r15
    9296:	ef 90       	pop	r14
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:788
}
    9298:	df 90       	pop	r13
    929a:	cf 90       	pop	r12
    929c:	bf 90       	pop	r11
    929e:	af 90       	pop	r10
    92a0:	9f 90       	pop	r9
    92a2:	8f 90       	pop	r8
    92a4:	08 95       	ret
    92a6:	80 ef       	ldi	r24, 0xF0	; 240
    92a8:	c8 2e       	mov	r12, r24
    92aa:	83 e2       	ldi	r24, 0x23	; 35
    92ac:	d8 2e       	mov	r13, r24
    92ae:	84 e7       	ldi	r24, 0x74	; 116
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:772
      @return a nul terminated char array with the formatted number (same as
   buf)
*/
const char *UImanager::formatNumber(char buf[K197_RAW_MSG_SIZE + 1], float f) {
  if (f > 999999.0)
    f = 999999.0;
    92b0:	e8 2e       	mov	r14, r24
    92b2:	89 e4       	ldi	r24, 0x49	; 73
    92b4:	f8 2e       	mov	r15, r24
    92b6:	9c cf       	rjmp	.-200    	; 0x91f0 <UImanager::formatNumber(char*, float)+0x56>

000092b8 <Print::write(char const*) [clone .part.0]>:
_ZN5Print5writeEPKc.part.0():
    92b8:	fb 01       	movw	r30, r22
    92ba:	01 90       	ld	r0, Z+
    92bc:	00 20       	and	r0, r0
    92be:	e9 f7       	brne	.-6      	; 0x92ba <Print::write(char const*) [clone .part.0]+0x2>
    92c0:	31 97       	sbiw	r30, 0x01	; 1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.h:56
    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == NULL) {
        return 0;
      }
      return write((const uint8_t *)str, strlen(str));
    92c2:	af 01       	movw	r20, r30
    92c4:	46 1b       	sub	r20, r22
    92c6:	57 0b       	sbc	r21, r23
    92c8:	dc 01       	movw	r26, r24
    92ca:	ed 91       	ld	r30, X+
    92cc:	fc 91       	ld	r31, X
    92ce:	02 80       	ldd	r0, Z+2	; 0x02
    92d0:	f3 81       	ldd	r31, Z+3	; 0x03
    92d2:	e0 2d       	mov	r30, r0
    92d4:	09 94       	ijmp

000092d6 <Print::println()>:
_ZN5Print7printlnEv():
    92d6:	6b e6       	ldi	r22, 0x6B	; 107
    92d8:	73 e4       	ldi	r23, 0x43	; 67
    92da:	ee cf       	rjmp	.-36     	; 0x92b8 <Print::write(char const*) [clone .part.0]>

000092dc <Print::println(__FlashStringHelper const*)>:
_ZN5Print7printlnEPK19__FlashStringHelper():
    92dc:	0f 93       	push	r16
    92de:	1f 93       	push	r17
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:123

size_t Print::print(const Printable &x) {
  return x.printTo(*this);
}

size_t Print::println(void) {
    92e0:	cf 93       	push	r28
    92e2:	df 93       	push	r29
    92e4:	ec 01       	movw	r28, r24
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:113

size_t Print::print(double n, int digits) {
  return printFloat(n, digits);
}

size_t Print::println(const __FlashStringHelper *ifsh) {
    92e6:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    92ea:	8c 01       	movw	r16, r24
    92ec:	ce 01       	movw	r24, r28
    92ee:	f3 df       	rcall	.-26     	; 0x92d6 <Print::println()>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:114
  size_t n = print(ifsh);
    92f0:	80 0f       	add	r24, r16
    92f2:	91 1f       	adc	r25, r17
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:115
  n += println();
    92f4:	df 91       	pop	r29
    92f6:	cf 91       	pop	r28
    92f8:	1f 91       	pop	r17
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:117
  return n;
}
    92fa:	0f 91       	pop	r16
    92fc:	08 95       	ret

000092fe <__class_saveSettings::change()>:
_ZN20__class_saveSettings6changeEv():
    92fe:	cf 93       	push	r28
    9300:	df 93       	push	r29
    9302:	cd b7       	in	r28, 0x3d	; 61
    9304:	de b7       	in	r29, 0x3e	; 62
    9306:	2c 97       	sbiw	r28, 0x0c	; 12
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:615
DEF_MENU_OPEN(btGraphOpt, 15, "Graph options >>>", &UIgraphMenu); ///< Open submenu
DEF_MENU_BUTTON(bluetoothMenu, 15,
                "Bluetooth"); ///< TBD: submenu not yet implemented
DEF_MENU_BYTE_ACT(contrastCtrl, 15, "Contrast",
                  u8g2.setContrast(getValue());); ///< set contrast
DEF_MENU_ACTION(saveSettings, 15, "Save settings",
    9308:	cd bf       	out	0x3d, r28	; 61
    930a:	de bf       	out	0x3e, r29	; 62
__base_ctor ():
    930c:	8d e4       	ldi	r24, 0x4D	; 77
    930e:	9c e3       	ldi	r25, 0x3C	; 60
    9310:	ab e2       	ldi	r26, 0x2B	; 43
    9312:	ba e1       	ldi	r27, 0x1A	; 26
    9314:	89 83       	std	Y+1, r24	; 0x01
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.h:239
/*!
    @brief  structure used to store and retrieve the configuration to and from
   the EEPROM
*/
/**************************************************************************/
struct permadata {
    9316:	9a 83       	std	Y+2, r25	; 0x02
    9318:	ab 83       	std	Y+3, r26	; 0x03
    931a:	bc 83       	std	Y+4, r27	; 0x04
    931c:	81 e0       	ldi	r24, 0x01	; 1
    931e:	90 e0       	ldi	r25, 0x00	; 0
    9320:	a0 e0       	ldi	r26, 0x00	; 0
    9322:	b0 e0       	ldi	r27, 0x00	; 0
    9324:	8d 83       	std	Y+5, r24	; 0x05
    9326:	9e 83       	std	Y+6, r25	; 0x06
    9328:	af 83       	std	Y+7, r26	; 0x07
    932a:	b8 87       	std	Y+8, r27	; 0x08
copyFromUI():
    932c:	80 91 64 51 	lds	r24, 0x5164	; 0x805164 <additionalModes+0x6>
    9330:	81 70       	andi	r24, 0x01	; 1
    9332:	90 91 5d 51 	lds	r25, 0x515D	; 0x80515d <reassignStoRcl+0x6>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:1234
    @brief copy data from the GUI to the structure
    @details This function is used inside store_to_EEPROM
*/
void permadata::copyFromUI() {
  dxUtil.checkFreeStack();
  bool_options.additionalModes = additionalModes.getValue();
    9336:	90 fb       	bst	r25, 0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:1235
  bool_options.reassignStoRcl = reassignStoRcl.getValue();
    9338:	81 f9       	bld	r24, 1
    933a:	90 91 20 51 	lds	r25, 0x5120	; 0x805120 <logEnable+0x6>
    933e:	90 fb       	bst	r25, 0
    9340:	82 f9       	bld	r24, 2
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:1236
  bool_options.logEnable = logEnable.getValue();
    9342:	90 91 11 51 	lds	r25, 0x5111	; 0x805111 <logSplitUnit+0x6>
    9346:	90 fb       	bst	r25, 0
    9348:	83 f9       	bld	r24, 3
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:1237
  bool_options.logSplitUnit = logSplitUnit.getValue();
    934a:	90 91 0a 51 	lds	r25, 0x510A	; 0x80510a <logTimestamp+0x6>
    934e:	90 fb       	bst	r25, 0
    9350:	84 f9       	bld	r24, 4
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:1238
  bool_options.logTimestamp = logTimestamp.getValue();
    9352:	90 91 03 51 	lds	r25, 0x5103	; 0x805103 <logTamb+0x6>
    9356:	90 fb       	bst	r25, 0
    9358:	85 f9       	bld	r24, 5
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:1239
  bool_options.logTamb = logTamb.getValue();
    935a:	90 91 fc 50 	lds	r25, 0x50FC	; 0x8050fc <logStat+0x6>
    935e:	90 fb       	bst	r25, 0
    9360:	86 f9       	bld	r24, 6
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:1240
  bool_options.logStat = logStat.getValue();
    9362:	89 87       	std	Y+9, r24	; 0x09
    9364:	80 91 40 51 	lds	r24, 0x5140	; 0x805140 <contrastCtrl+0x7>
    9368:	8a 87       	std	Y+10, r24	; 0x0a
    936a:	80 91 19 51 	lds	r24, 0x5119	; 0x805119 <logSkip+0x7>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:1241
  byte_options.contrastCtrl = contrastCtrl.getValue();
    936e:	8b 87       	std	Y+11, r24	; 0x0b
    9370:	80 91 ef 50 	lds	r24, 0x50EF	; 0x8050ef <logStatSamples+0x7>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:1242
  byte_options.logSkip = logSkip.getValue();
    9374:	8c 87       	std	Y+12, r24	; 0x0c
    9376:	de 01       	movw	r26, r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:1243
  byte_options.logStatSamples = logStatSamples.getValue();
    9378:	11 96       	adiw	r26, 0x01	; 1
    937a:	e0 e0       	ldi	r30, 0x00	; 0
    937c:	f4 e1       	ldi	r31, 0x14	; 20
operator=():
    937e:	8d e9       	ldi	r24, 0x9D	; 157
    9380:	33 e1       	ldi	r19, 0x13	; 19
_ZN11EEPROMClass3putI9permadataEERKT_jS4_.isra.38():
    9382:	9d 91       	ld	r25, X+
update():
    9384:	20 81       	ld	r18, Z
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\EEPROM\src/EEPROM.h:110
    // which would cause millis() to lose time.
    // Note that writing more than 1 byte in an ISR will **always** cause millis to lose time.
    cli();

    _PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    _PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    9386:	92 17       	cp	r25, r18
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\EEPROM\src/EEPROM.h:265

  template< typename T > const T &put(INDEXDATATYPE idx, const T &t) {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *) &t;
    for (uint8_t count = sizeof(T); count; --count, ++e) {
      (*e).update(*ptr++);
    9388:	81 f0       	breq	.+32     	; 0x93aa <__class_saveSettings::change()+0xac>
operator=():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\EEPROM\src/EEPROM.h:149
  EERef &operator >>= (uint8_t in)    {
    return *this = **this >> in;
  }

  EERef &update(uint8_t in)          {
    return  in != *this ? *this = in : *this;
    938a:	4f b7       	in	r20, 0x3f	; 63
    938c:	20 91 02 10 	lds	r18, 0x1002	; 0x801002 <__TEXT_REGION_LENGTH__+0x7e1002>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\EEPROM\src/EEPROM.h:99
      : "x"(adr)          // and the address (not the index) in X
      : "r30", "r31", "r18");      // clobber Z and r18. We needed an upper register for the temporary value to andi it. I wonder if this will fix the eeprom bugs too?
    return *this;
    #else
    uint8_t oldSREG = SREG;
    while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    9390:	52 2f       	mov	r21, r18
    9392:	52 70       	andi	r21, 0x02	; 2
    9394:	21 fd       	sbrc	r18, 1
    9396:	fa cf       	rjmp	.-12     	; 0x938c <__class_saveSettings::change()+0x8e>
    9398:	f8 94       	cli
    939a:	84 bf       	out	0x34, r24	; 52
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\EEPROM\src/EEPROM.h:107
    // during which we *start* the write, not for the while loop, and we save SREG
    // before the while loop. That way there is only a 1 clock window where an
    // interrupt that starts a write will cause this write to halt the CPU
    // which would cause millis() to lose time.
    // Note that writing more than 1 byte in an ISR will **always** cause millis to lose time.
    cli();
    939c:	50 93 00 10 	sts	0x1000, r21	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\EEPROM\src/EEPROM.h:109

    _PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    93a0:	84 bf       	out	0x34, r24	; 52
    93a2:	30 93 00 10 	sts	0x1000, r19	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\EEPROM\src/EEPROM.h:110
    _PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    93a6:	90 83       	st	Z, r25
    93a8:	4f bf       	out	0x3f, r20	; 63
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\EEPROM\src/EEPROM.h:111
    *(uint8_t *)(MAPPED_EEPROM_START + (index & EEPROM_INDEX_MASK)) = in;
    93aa:	31 96       	adiw	r30, 0x01	; 1
_ZN11EEPROMClass3putI9permadataEERKT_jS4_.isra.38():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\EEPROM\src/EEPROM.h:113

    SREG = oldSREG; // restore SREG and interrupts
    93ac:	ec 30       	cpi	r30, 0x0C	; 12
    93ae:	94 e1       	ldi	r25, 0x14	; 20
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\libraries\EEPROM\src/EEPROM.h:264
  }

  template< typename T > const T &put(INDEXDATATYPE idx, const T &t) {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *) &t;
    for (uint8_t count = sizeof(T); count; --count, ++e) {
    93b0:	f9 07       	cpc	r31, r25
    93b2:	39 f7       	brne	.-50     	; 0x9382 <__class_saveSettings::change()+0x84>
store_to_EEPROM():
    93b4:	61 e9       	ldi	r22, 0x91	; 145
    93b6:	77 e0       	ldi	r23, 0x07	; 7
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:1282
    return false;
  }
  permadata pdata;
  pdata.copyFromUI();
  EEPROM.put(EEPROM_BASE_ADDRESS, pdata);
  DebugOut.println(F("EEPROM: store ok"));
    93b8:	8e ed       	ldi	r24, 0xDE	; 222
    93ba:	97 e4       	ldi	r25, 0x47	; 71
    93bc:	8f df       	rcall	.-226    	; 0x92dc <Print::println(__FlashStringHelper const*)>
_ZN20__class_saveSettings6changeEv():
    93be:	87 e8       	ldi	r24, 0x87	; 135
    93c0:	91 e5       	ldi	r25, 0x51	; 81
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImanager.cpp:615
DEF_MENU_OPEN(btGraphOpt, 15, "Graph options >>>", &UIgraphMenu); ///< Open submenu
DEF_MENU_BUTTON(bluetoothMenu, 15,
                "Bluetooth"); ///< TBD: submenu not yet implemented
DEF_MENU_BYTE_ACT(contrastCtrl, 15, "Contrast",
                  u8g2.setContrast(getValue());); ///< set contrast
DEF_MENU_ACTION(saveSettings, 15, "Save settings",
    93c2:	2c 96       	adiw	r28, 0x0c	; 12
    93c4:	cd bf       	out	0x3d, r28	; 61
    93c6:	de bf       	out	0x3e, r29	; 62
    93c8:	df 91       	pop	r29
    93ca:	cf 91       	pop	r28
    93cc:	99 c9       	rjmp	.-3278   	; 0x8700 <UImessageBox::show()>

000093ce <fifo_pull()>:
_ZL9fifo_pullv():
    93ce:	e0 91 71 45 	lds	r30, 0x4571	; 0x804571 <fifo_front>
    93d2:	0e 2e       	mov	r0, r30
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:235
    @details this function is thread safe, but the result may not be consistent
   with previous/following calls (see fifo_pull())
    @return true if the FIFO queue is empty
*/
static inline bool fifo_isEmpty() {
   bool isempty = fifo_records[fifo_front] == fifo_NO_DATA; // self-explaining :-)
    93d4:	00 0c       	add	r0, r0
    93d6:	ff 0b       	sbc	r31, r31
    93d8:	ed 5b       	subi	r30, 0xBD	; 189
    93da:	ff 4b       	sbci	r31, 0xBF	; 191
    93dc:	80 81       	ld	r24, Z
    93de:	8f 3f       	cpi	r24, 0xFF	; 255
    93e0:	59 f4       	brne	.+22     	; 0x93f8 <fifo_pull()+0x2a>
    93e2:	80 91 72 45 	lds	r24, 0x4572	; 0x804572 <fifo_size>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:236
   if (isempty && (fifo_size != 0) ) {
    93e6:	88 23       	and	r24, r24
    93e8:	29 f0       	breq	.+10     	; 0x93f4 <fifo_pull()+0x26>
    93ea:	61 e4       	ldi	r22, 0x41	; 65
    93ec:	77 e0       	ldi	r23, 0x07	; 7
    93ee:	8e ed       	ldi	r24, 0xDE	; 222
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:237
      DebugOut.println(F("fifo_isEmpty: size mismatch"));    
    93f0:	97 e4       	ldi	r25, 0x47	; 71
    93f2:	74 df       	rcall	.-280    	; 0x92dc <Print::println(__FlashStringHelper const*)>
    93f4:	8f ef       	ldi	r24, 0xFF	; 255
    93f6:	08 95       	ret
    93f8:	e0 91 71 45 	lds	r30, 0x4571	; 0x804571 <fifo_front>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:311
    @return the record just pulled from the front of the queue (or fifo_NO_DATA
if the queue is empty).
*/
static inline byte fifo_pull() {
  if (fifo_isEmpty())
    return fifo_NO_DATA;
    93fc:	0e 2e       	mov	r0, r30
    93fe:	00 0c       	add	r0, r0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:312
  byte x = fifo_records[fifo_front];
    9400:	ff 0b       	sbc	r31, r31
    9402:	ed 5b       	subi	r30, 0xBD	; 189
    9404:	ff 4b       	sbci	r31, 0xBF	; 191
    9406:	80 81       	ld	r24, Z
    9408:	e0 91 71 45 	lds	r30, 0x4571	; 0x804571 <fifo_front>
    940c:	0e 2e       	mov	r0, r30
    940e:	00 0c       	add	r0, r0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:313
  fifo_records[fifo_front] =
    9410:	ff 0b       	sbc	r31, r31
    9412:	ed 5b       	subi	r30, 0xBD	; 189
    9414:	ff 4b       	sbci	r31, 0xBF	; 191
    9416:	9f ef       	ldi	r25, 0xFF	; 255
    9418:	90 83       	st	Z, r25
    941a:	90 91 71 45 	lds	r25, 0x4571	; 0x804571 <fifo_front>
    941e:	9f 5f       	subi	r25, 0xFF	; 255
    9420:	97 70       	andi	r25, 0x07	; 7
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:316
      fifo_NO_DATA; // here we risk a race condition with push(), but only if
                    // the FIFO is full
  fifo_front = (fifo_front + 1) % fifo_MAX_RECORDS;
    9422:	90 93 71 45 	sts	0x4571, r25	; 0x804571 <fifo_front>
    9426:	90 91 72 45 	lds	r25, 0x4572	; 0x804572 <fifo_size>
    942a:	91 50       	subi	r25, 0x01	; 1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:317
  fifo_size--;
    942c:	90 93 72 45 	sts	0x4572, r25	; 0x804572 <fifo_size>
    9430:	08 95       	ret

00009432 <fifo_isFull()>:
_ZL11fifo_isFullv():
    9432:	cf 93       	push	r28
    9434:	ef b3       	in	r30, 0x1f	; 31
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:319
  return x;
}
    9436:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:248
    @brief  check if the FIFO is full
    @details this function is thread safe, but the result may not be consistent
   with previous/following calls (see fifo_pull())
    @return true if the FIFO queue is empty
*/
static inline bool fifo_isFull() {
    9438:	31 96       	adiw	r30, 0x01	; 1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:250
  // If we do not have free space than the queue must be full
  bool isFull = fifo_records[(fifo_rear + 1) % fifo_MAX_RECORDS] != fifo_NO_DATA;
    943a:	e7 70       	andi	r30, 0x07	; 7
    943c:	ff 27       	eor	r31, r31
    943e:	ed 5b       	subi	r30, 0xBD	; 189
    9440:	ff 4b       	sbci	r31, 0xBF	; 191
    9442:	80 81       	ld	r24, Z
    9444:	c1 e0       	ldi	r28, 0x01	; 1
    9446:	8f 3f       	cpi	r24, 0xFF	; 255
    9448:	21 f4       	brne	.+8      	; 0x9452 <fifo_isFull()+0x20>
    944a:	c0 e0       	ldi	r28, 0x00	; 0
    944c:	8c 2f       	mov	r24, r28
    944e:	cf 91       	pop	r28
    9450:	08 95       	ret
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:255
  if (isFull && (fifo_size != fifo_MAX_RECORDS) ) {
      DebugOut.println(F("fifo_isFull: size mismatch"));    
  }
  return isFull;
}
    9452:	80 91 72 45 	lds	r24, 0x4572	; 0x804572 <fifo_size>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:251
    @return true if the FIFO queue is empty
*/
static inline bool fifo_isFull() {
  // If we do not have free space than the queue must be full
  bool isFull = fifo_records[(fifo_rear + 1) % fifo_MAX_RECORDS] != fifo_NO_DATA;
  if (isFull && (fifo_size != fifo_MAX_RECORDS) ) {
    9456:	88 30       	cpi	r24, 0x08	; 8
    9458:	c9 f3       	breq	.-14     	; 0x944c <fifo_isFull()+0x1a>
    945a:	66 e2       	ldi	r22, 0x26	; 38
    945c:	77 e0       	ldi	r23, 0x07	; 7
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:252
      DebugOut.println(F("fifo_isFull: size mismatch"));    
    945e:	8e ed       	ldi	r24, 0xDE	; 222
    9460:	97 e4       	ldi	r25, 0x47	; 71
    9462:	3c df       	rcall	.-392    	; 0x92dc <Print::println(__FlashStringHelper const*)>
    9464:	f3 cf       	rjmp	.-26     	; 0x944c <fifo_isFull()+0x1a>

00009466 <fifo_push(unsigned char)>:
_ZL9fifo_pushh():
    9466:	cf 93       	push	r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:276
   fifo_pull(), wich could result in the last record pushed being lost. However,
   if this is acceptable no long term corruption to the queue should result from
   this.
    @param b the record that should be pushed at the rear of the FIFO queue
*/
static inline void fifo_push(byte b) {
    9468:	c8 2f       	mov	r28, r24
    946a:	e3 df       	rcall	.-58     	; 0x9432 <fifo_isFull()>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:277
  if (fifo_isFull()) {
    946c:	81 11       	cpse	r24, r1
    946e:	0e c0       	rjmp	.+28     	; 0x948c <fifo_push(unsigned char)+0x26>
    9470:	8f b3       	in	r24, 0x1f	; 31
    9472:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:280
      return;
  }
  fifo_rear = (fifo_rear + 1) % fifo_MAX_RECORDS;
    9474:	87 70       	andi	r24, 0x07	; 7
    9476:	8f bb       	out	0x1f, r24	; 31
    9478:	ef b3       	in	r30, 0x1f	; 31
    947a:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:281
  fifo_records[fifo_rear] = b;
    947c:	ed 5b       	subi	r30, 0xBD	; 189
    947e:	ff 4b       	sbci	r31, 0xBF	; 191
    9480:	c0 83       	st	Z, r28
    9482:	80 91 72 45 	lds	r24, 0x4572	; 0x804572 <fifo_size>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:282
  fifo_size++;
    9486:	8f 5f       	subi	r24, 0xFF	; 255
    9488:	80 93 72 45 	sts	0x4572, r24	; 0x804572 <fifo_size>
    948c:	cf 91       	pop	r28
    948e:	08 95       	ret

00009490 <CCL_interrupt_handler()>:
_Z21CCL_interrupt_handlerv():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:283
}
    9490:	88 9a       	sbi	0x11, 0	; 17
    9492:	f8 94       	cli
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:316
  if (val == LOW)
    vport->OUT &= ~mask;
  else if (val == CHANGE)
    vport->IN |= mask;
  else // HIGH
    vport->OUT |= mask;
    9494:	9e b1       	in	r25, 0x0e	; 14
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:349
*/
void CCL_interrupt_handler() {
  digitalWriteFast(PIN_PE0, HIGH);
  //CCL.INTFLAGS =  CCL.INTFLAGS; // We prefer to enter the interrupts twice
  //  rather than missing an event
  cli();
    9496:	86 b3       	in	r24, 0x16	; 22
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:351
  fifo_push((UI_STO_VPORT.IN & (UI_STO_bm | UI_RCL_bm)) |
            (UI_REL_VPORT.IN & (UI_REL_bm | UI_DB_bm)));
    9498:	90 7a       	andi	r25, 0xA0	; 160
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:350
void CCL_interrupt_handler() {
  digitalWriteFast(PIN_PE0, HIGH);
  //CCL.INTFLAGS =  CCL.INTFLAGS; // We prefer to enter the interrupts twice
  //  rather than missing an event
  cli();
  fifo_push((UI_STO_VPORT.IN & (UI_STO_bm | UI_RCL_bm)) |
    949a:	83 70       	andi	r24, 0x03	; 3
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:351
            (UI_REL_VPORT.IN & (UI_REL_bm | UI_DB_bm)));
    949c:	89 2b       	or	r24, r25
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:350
void CCL_interrupt_handler() {
  digitalWriteFast(PIN_PE0, HIGH);
  //CCL.INTFLAGS =  CCL.INTFLAGS; // We prefer to enter the interrupts twice
  //  rather than missing an event
  cli();
  fifo_push((UI_STO_VPORT.IN & (UI_STO_bm | UI_RCL_bm)) |
    949e:	e3 df       	rcall	.-58     	; 0x9466 <fifo_push(unsigned char)>
digitalWriteFast():
    94a0:	88 98       	cbi	0x11, 0	; 17
_Z21CCL_interrupt_handlerv():
    94a2:	08 95       	ret

000094a4 <Print::printNumber(unsigned long, unsigned char)>:
_ZN5Print11printNumberEmh():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_digital.c:312
    vport->OUT &= ~mask;
  else // CHANGE
    vport->IN = mask;
*/
  if (val == LOW)
    vport->OUT &= ~mask;
    94a4:	8f 92       	push	r8
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/K197PushButtons.cpp:353
            (UI_REL_VPORT.IN & (UI_REL_bm | UI_DB_bm)));
  digitalWriteFast(PIN_PE0, LOW); 
}
    94a6:	9f 92       	push	r9
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:215
  return vfprintf_P(&f, (const char *)format, ap);
}

// Private Methods /////////////////////////////////////////////////////////////

size_t Print::printNumber(unsigned long n, uint8_t base) {
    94a8:	af 92       	push	r10
    94aa:	bf 92       	push	r11
    94ac:	ef 92       	push	r14
    94ae:	ff 92       	push	r15
    94b0:	0f 93       	push	r16
    94b2:	1f 93       	push	r17
    94b4:	cf 93       	push	r28
    94b6:	df 93       	push	r29
    94b8:	cd b7       	in	r28, 0x3d	; 61
    94ba:	de b7       	in	r29, 0x3e	; 62
    94bc:	a1 97       	sbiw	r28, 0x21	; 33
    94be:	cd bf       	out	0x3d, r28	; 61
    94c0:	de bf       	out	0x3e, r29	; 62
    94c2:	7c 01       	movw	r14, r24
    94c4:	fa 01       	movw	r30, r20
    94c6:	cb 01       	movw	r24, r22
    94c8:	19 a2       	std	Y+33, r1	; 0x21
    94ca:	22 30       	cpi	r18, 0x02	; 2
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:219
  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.
  char *str = &buf[sizeof(buf) - 1];

  *str = '\0';
    94cc:	08 f4       	brcc	.+2      	; 0x94d0 <Print::printNumber(unsigned long, unsigned char)+0x2c>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:222

  // prevent crash if called with base == 1
  if (base < 2) {
    94ce:	2a e0       	ldi	r18, 0x0A	; 10
    94d0:	8e 01       	movw	r16, r28
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:223
    base = 10;
    94d2:	0f 5d       	subi	r16, 0xDF	; 223
    94d4:	1f 4f       	sbci	r17, 0xFF	; 255
    94d6:	82 2e       	mov	r8, r18
    94d8:	91 2c       	mov	r9, r1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:227
  }

  do {
    char c = n % base;
    94da:	b1 2c       	mov	r11, r1
    94dc:	a1 2c       	mov	r10, r1
    94de:	bf 01       	movw	r22, r30
    94e0:	a5 01       	movw	r20, r10
    94e2:	94 01       	movw	r18, r8
    94e4:	0e 94 53 78 	call	0xf0a6	; 0xf0a6 <__udivmodsi4>
    94e8:	f9 01       	movw	r30, r18
    94ea:	ca 01       	movw	r24, r20
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:228
    n /= base;
    94ec:	6a 30       	cpi	r22, 0x0A	; 10
    94ee:	ec f4       	brge	.+58     	; 0x952a <Print::printNumber(unsigned long, unsigned char)+0x86>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:230

    *--str = c < 10 ? c + '0' : c + 'A' - 10;
    94f0:	60 5d       	subi	r22, 0xD0	; 208
    94f2:	d8 01       	movw	r26, r16
    94f4:	6e 93       	st	-X, r22
    94f6:	8d 01       	movw	r16, r26
    94f8:	23 2b       	or	r18, r19
    94fa:	24 2b       	or	r18, r20
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:231
  } while (n);
    94fc:	25 2b       	or	r18, r21
    94fe:	79 f7       	brne	.-34     	; 0x94de <Print::printNumber(unsigned long, unsigned char)+0x3a>
    9500:	90 e0       	ldi	r25, 0x00	; 0
    9502:	80 e0       	ldi	r24, 0x00	; 0
write():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.h:54
    }

    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == NULL) {
        return 0;
    9504:	10 97       	sbiw	r26, 0x00	; 0
    9506:	19 f0       	breq	.+6      	; 0x950e <Print::printNumber(unsigned long, unsigned char)+0x6a>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.h:53
      setWriteError(0);
    }

    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == NULL) {
    9508:	bd 01       	movw	r22, r26
    950a:	c7 01       	movw	r24, r14
    950c:	d5 de       	rcall	.-598    	; 0x92b8 <Print::write(char const*) [clone .part.0]>
_ZN5Print11printNumberEmh():
    950e:	a1 96       	adiw	r28, 0x21	; 33
    9510:	cd bf       	out	0x3d, r28	; 61
    9512:	de bf       	out	0x3e, r29	; 62
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:234

  return write(str);
}
    9514:	df 91       	pop	r29
    9516:	cf 91       	pop	r28
    9518:	1f 91       	pop	r17
    951a:	0f 91       	pop	r16
    951c:	ff 90       	pop	r15
    951e:	ef 90       	pop	r14
    9520:	bf 90       	pop	r11
    9522:	af 90       	pop	r10
    9524:	9f 90       	pop	r9
    9526:	8f 90       	pop	r8
    9528:	08 95       	ret
    952a:	69 5c       	subi	r22, 0xC9	; 201
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:230

  do {
    char c = n % base;
    n /= base;

    *--str = c < 10 ? c + '0' : c + 'A' - 10;
    952c:	e2 cf       	rjmp	.-60     	; 0x94f2 <Print::printNumber(unsigned long, unsigned char)+0x4e>

0000952e <Print::print(unsigned char, int)>:
_ZN5Print5printEhi():
    952e:	24 2f       	mov	r18, r20
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:74

size_t Print::print(char c) {
  return write(c);
}

size_t Print::print(unsigned char b, int base) {
    9530:	46 2f       	mov	r20, r22
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:75
  return print((unsigned long) b, base);
    9532:	50 e0       	ldi	r21, 0x00	; 0
    9534:	70 e0       	ldi	r23, 0x00	; 0
    9536:	60 e0       	ldi	r22, 0x00	; 0
print():
    9538:	b5 cf       	rjmp	.-150    	; 0x94a4 <Print::printNumber(unsigned long, unsigned char)>

0000953a <Print::println(unsigned char, int) [clone .constprop.116]>:
_ZN5Print7printlnEhi.constprop.116():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:105

size_t Print::print(unsigned long n, int base) {
  if (base == 0) {
    return write(n);
  } else {
    return printNumber(n, base);
    953a:	0f 93       	push	r16
    953c:	1f 93       	push	r17
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:145
  size_t n = print(c);
  n += println();
  return n;
}

size_t Print::println(unsigned char b, int base) {
    953e:	cf 93       	push	r28
    9540:	df 93       	push	r29
    9542:	ec 01       	movw	r28, r24
    9544:	4a e0       	ldi	r20, 0x0A	; 10
    9546:	50 e0       	ldi	r21, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:146
  size_t n = print(b, base);
    9548:	f2 df       	rcall	.-28     	; 0x952e <Print::print(unsigned char, int)>
    954a:	8c 01       	movw	r16, r24
    954c:	ce 01       	movw	r24, r28
    954e:	c3 de       	rcall	.-634    	; 0x92d6 <Print::println()>
    9550:	80 0f       	add	r24, r16
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:147
  n += println();
    9552:	91 1f       	adc	r25, r17
    9554:	df 91       	pop	r29
    9556:	cf 91       	pop	r28
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:149
  return n;
}
    9558:	1f 91       	pop	r17
    955a:	0f 91       	pop	r16
    955c:	08 95       	ret

0000955e <calcIncrement(unsigned char, K197UIeventsource, unsigned char)>:
_ZL13calcIncrementh17K197UIeventsourceh():
    955e:	cf 93       	push	r28
    9560:	c8 2f       	mov	r28, r24
    9562:	6d 31       	cpi	r22, 0x1D	; 29
    9564:	71 05       	cpc	r23, r1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:334
     @param eventSource (used to determine the sign of the value change)
     @param increment the increment
     @return the new value
*/
static byte calcIncrement(const byte val, const K197UIeventsource eventSource,
                   const byte increment) {
    9566:	89 f4       	brne	.+34     	; 0x958a <calcIncrement(unsigned char, K197UIeventsource, unsigned char)+0x2c>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:337
  byte newval;
  if (eventSource == K197key_RCL) { // Increment
    newval = val + increment;
    9568:	c4 0f       	add	r28, r20
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:336
     @return the new value
*/
static byte calcIncrement(const byte val, const K197UIeventsource eventSource,
                   const byte increment) {
  byte newval;
  if (eventSource == K197key_RCL) { // Increment
    956a:	c8 17       	cp	r28, r24
    956c:	08 f4       	brcc	.+2      	; 0x9570 <calcIncrement(unsigned char, K197UIeventsource, unsigned char)+0x12>
    956e:	cf ef       	ldi	r28, 0xFF	; 255
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:337
    newval = val + increment;
    9570:	62 ee       	ldi	r22, 0xE2	; 226
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:338
    if (newval < val)
    9572:	77 e0       	ldi	r23, 0x07	; 7
    9574:	8e ed       	ldi	r24, 0xDE	; 222
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:339
      newval = 255;
    9576:	97 e4       	ldi	r25, 0x47	; 71
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:345
  } else { // decrement
    newval = val - increment;
    if (newval > val)
      newval = 0;
  }
  DebugOut.print(F("New inc: ")); DebugOut.println(newval);
    9578:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    957c:	6c 2f       	mov	r22, r28
    957e:	8e ed       	ldi	r24, 0xDE	; 222
    9580:	97 e4       	ldi	r25, 0x47	; 71
    9582:	db df       	rcall	.-74     	; 0x953a <Print::println(unsigned char, int) [clone .constprop.116]>
    9584:	8c 2f       	mov	r24, r28
    9586:	cf 91       	pop	r28
    9588:	08 95       	ret
    958a:	c4 1b       	sub	r28, r20
    958c:	8c 17       	cp	r24, r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:347
  return newval;
}
    958e:	80 f7       	brcc	.-32     	; 0x9570 <calcIncrement(unsigned char, K197UIeventsource, unsigned char)+0x12>
    9590:	c0 e0       	ldi	r28, 0x00	; 0
    9592:	ee cf       	rjmp	.-36     	; 0x9570 <calcIncrement(unsigned char, K197UIeventsource, unsigned char)+0x12>

00009594 <MenuInputByte::handleUIEvent(K197UIeventsource, K197UIeventType)>:
_ZN13MenuInputByte13handleUIEventE17K197UIeventsource15K197UIeventType():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:341
  if (eventSource == K197key_RCL) { // Increment
    newval = val + increment;
    if (newval < val)
      newval = 255;
  } else { // decrement
    newval = val - increment;
    9594:	0f 93       	push	r16
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:342
    if (newval > val)
    9596:	1f 93       	push	r17
    9598:	cf 93       	push	r28
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:343
      newval = 0;
    959a:	df 93       	push	r29
    959c:	6d 31       	cpi	r22, 0x1D	; 29
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:382
   @param eventSource the source of the event (see K197UIeventsource)
   @param eventType the type of event (see K197UIeventType)
   @return true if the event has been entirely handled by this object
*/
bool MenuInputByte::handleUIEvent(K197UIeventsource eventSource,
                                  K197UIeventType eventType) {
    959e:	71 05       	cpc	r23, r1
    95a0:	19 f0       	breq	.+6      	; 0x95a8 <MenuInputByte::handleUIEvent(K197UIeventsource, K197UIeventType)+0x14>
    95a2:	6b 31       	cpi	r22, 0x1B	; 27
    95a4:	71 05       	cpc	r23, r1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:383
  if ((eventSource == K197key_RCL || eventSource == K197key_STO)) {
    95a6:	d1 f5       	brne	.+116    	; 0x961c <MenuInputByte::handleUIEvent(K197UIeventsource, K197UIeventType)+0x88>
    95a8:	8b 01       	movw	r16, r22
    95aa:	ec 01       	movw	r28, r24
    95ac:	42 31       	cpi	r20, 0x12	; 18
    95ae:	51 05       	cpc	r21, r1
    95b0:	69 f1       	breq	.+90     	; 0x960c <MenuInputByte::handleUIEvent(K197UIeventsource, K197UIeventType)+0x78>
    95b2:	48 f4       	brcc	.+18     	; 0x95c6 <MenuInputByte::handleUIEvent(K197UIeventsource, K197UIeventType)+0x32>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:384
    switch (eventType) {
    95b4:	41 31       	cpi	r20, 0x11	; 17
    95b6:	51 05       	cpc	r21, r1
    95b8:	e1 f0       	breq	.+56     	; 0x95f2 <MenuInputByte::handleUIEvent(K197UIeventsource, K197UIeventType)+0x5e>
    95ba:	81 e0       	ldi	r24, 0x01	; 1
    95bc:	df 91       	pop	r29
    95be:	cf 91       	pop	r28
    95c0:	1f 91       	pop	r17
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:406
      break;
    }
    return true;
  }
  return UIMenuButtonItem::handleUIEvent(eventSource, eventType);
}
    95c2:	0f 91       	pop	r16
    95c4:	08 95       	ret
    95c6:	43 31       	cpi	r20, 0x13	; 19
    95c8:	51 05       	cpc	r21, r1
    95ca:	31 f1       	breq	.+76     	; 0x9618 <MenuInputByte::handleUIEvent(K197UIeventsource, K197UIeventType)+0x84>
    95cc:	44 31       	cpi	r20, 0x14	; 20
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:384
   @return true if the event has been entirely handled by this object
*/
bool MenuInputByte::handleUIEvent(K197UIeventsource eventSource,
                                  K197UIeventType eventType) {
  if ((eventSource == K197key_RCL || eventSource == K197key_STO)) {
    switch (eventType) {
    95ce:	51 05       	cpc	r21, r1
    95d0:	a1 f7       	brne	.-24     	; 0x95ba <MenuInputByte::handleUIEvent(K197UIeventsource, K197UIeventType)+0x26>
    95d2:	e8 81       	ld	r30, Y
    95d4:	f9 81       	ldd	r31, Y+1	; 0x01
    95d6:	02 84       	ldd	r0, Z+10	; 0x0a
    95d8:	f3 85       	ldd	r31, Z+11	; 0x0b
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:396
      break;
    case UIeventHold:
      value = calcIncrement(value, eventSource, 5);
      break;
    case UIeventRelease:
      setValue(value);
    95da:	e0 2d       	mov	r30, r0
    95dc:	6f 81       	ldd	r22, Y+7	; 0x07
    95de:	09 95       	icall
    95e0:	e8 81       	ld	r30, Y
    95e2:	f9 81       	ldd	r31, Y+1	; 0x01
    95e4:	00 84       	ldd	r0, Z+8	; 0x08
    95e6:	f1 85       	ldd	r31, Z+9	; 0x09
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:397
      change();
    95e8:	e0 2d       	mov	r30, r0
    95ea:	ce 01       	movw	r24, r28
    95ec:	09 95       	icall
    95ee:	1e 82       	std	Y+6, r1	; 0x06
    95f0:	e4 cf       	rjmp	.-56     	; 0x95ba <MenuInputByte::handleUIEvent(K197UIeventsource, K197UIeventType)+0x26>
    95f2:	e8 81       	ld	r30, Y
    95f4:	f9 81       	ldd	r31, Y+1	; 0x01
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:398
      edit_mode = false;
    95f6:	04 84       	ldd	r0, Z+12	; 0x0c
    95f8:	f5 85       	ldd	r31, Z+13	; 0x0d
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:386
bool MenuInputByte::handleUIEvent(K197UIeventsource eventSource,
                                  K197UIeventType eventType) {
  if ((eventSource == K197key_RCL || eventSource == K197key_STO)) {
    switch (eventType) {
    case UIeventPress:
      value = calcIncrement(getValue(), eventSource, 1);
    95fa:	e0 2d       	mov	r30, r0
    95fc:	09 95       	icall
    95fe:	41 e0       	ldi	r20, 0x01	; 1
    9600:	b8 01       	movw	r22, r16
    9602:	ad df       	rcall	.-166    	; 0x955e <calcIncrement(unsigned char, K197UIeventsource, unsigned char)>
    9604:	8f 83       	std	Y+7, r24	; 0x07
    9606:	81 e0       	ldi	r24, 0x01	; 1
    9608:	8e 83       	std	Y+6, r24	; 0x06
    960a:	d7 cf       	rjmp	.-82     	; 0x95ba <MenuInputByte::handleUIEvent(K197UIeventsource, K197UIeventType)+0x26>
    960c:	4a e0       	ldi	r20, 0x0A	; 10
    960e:	b8 01       	movw	r22, r16
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:387
      edit_mode = true;
    9610:	8f 81       	ldd	r24, Y+7	; 0x07
    9612:	a5 df       	rcall	.-182    	; 0x955e <calcIncrement(unsigned char, K197UIeventsource, unsigned char)>
    9614:	8f 83       	std	Y+7, r24	; 0x07
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:390
      break;
    case UIeventLongPress:
      value = calcIncrement(value, eventSource, 10);
    9616:	d1 cf       	rjmp	.-94     	; 0x95ba <MenuInputByte::handleUIEvent(K197UIeventsource, K197UIeventType)+0x26>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:393
      break;
    case UIeventHold:
      value = calcIncrement(value, eventSource, 5);
    9618:	45 e0       	ldi	r20, 0x05	; 5
    961a:	f9 cf       	rjmp	.-14     	; 0x960e <MenuInputByte::handleUIEvent(K197UIeventsource, K197UIeventType)+0x7a>
    961c:	df 91       	pop	r29
    961e:	cf 91       	pop	r28
    9620:	1f 91       	pop	r17
    9622:	0f 91       	pop	r16
    9624:	0c 94 57 41 	jmp	0x82ae	; 0x82ae <UIMenuButtonItem::handleUIEvent(K197UIeventsource, K197UIeventType)>

00009628 <MenuInputByte::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)>:
_ZN13MenuInputByte4drawEP4U8G2jjjb():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:406
      break;
    }
    return true;
  }
  return UIMenuButtonItem::handleUIEvent(eventSource, eventType);
}
    9628:	4f 92       	push	r4
    962a:	5f 92       	push	r5
    962c:	6f 92       	push	r6
    962e:	7f 92       	push	r7
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:405
    default:
      break;
    }
    return true;
  }
  return UIMenuButtonItem::handleUIEvent(eventSource, eventType);
    9630:	8f 92       	push	r8
    9632:	9f 92       	push	r9
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:303
     @param y the y coordinate of the top/left corner
     @param w the y width of the menu item
     @param selected true if the menu item is selected
*/
void MenuInputByte::draw(U8G2 *u8g2, u8g2_uint_t x, u8g2_uint_t y,
                         u8g2_uint_t w, bool selected) {
    9634:	af 92       	push	r10
    9636:	bf 92       	push	r11
    9638:	cf 92       	push	r12
    963a:	df 92       	push	r13
    963c:	ef 92       	push	r14
    963e:	ff 92       	push	r15
    9640:	0f 93       	push	r16
    9642:	1f 93       	push	r17
    9644:	cf 93       	push	r28
    9646:	df 93       	push	r29
    9648:	5c 01       	movw	r10, r24
    964a:	4b 01       	movw	r8, r22
    964c:	ea 01       	movw	r28, r20
    964e:	69 01       	movw	r12, r18
    9650:	38 01       	movw	r6, r16
    9652:	4e 2c       	mov	r4, r14
    9654:	0e 94 0c 42 	call	0x8418	; 0x8418 <UIMenuButtonItem::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)>
_ZN4U8G212setDrawColorEh():
    9658:	74 01       	movw	r14, r8
    965a:	84 e0       	ldi	r24, 0x04	; 4
    965c:	e8 0e       	add	r14, r24
    965e:	f1 1c       	adc	r15, r1
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:304
  UIMenuButtonItem::draw(u8g2, x, y, w, selected);
    9660:	61 e0       	ldi	r22, 0x01	; 1
    9662:	c7 01       	movw	r24, r14
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:218
      { u8x8_RefreshDisplay(u8g2_GetU8x8(&u8g2)); }
    


    /* clib/u8g2.hvline.c */
    void setDrawColor(uint8_t color_index) { u8g2_SetDrawColor(&u8g2, color_index); }
    9664:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
u8g2_SetFontMode():
    9668:	f4 01       	movw	r30, r8
    966a:	e3 59       	subi	r30, 0x93	; 147
    966c:	ff 4f       	sbci	r31, 0xFF	; 255
    966e:	10 82       	st	Z, r1
_ZN4U8G29setCursorEjj():
    9670:	b5 96       	adiw	r30, 0x25	; 37
_ZN13MenuInputByte4drawEP4U8G2jjjb():
    9672:	c8 01       	movw	r24, r16
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src\clib/u8g2_font.c:933
    9674:	4e 97       	sbiw	r24, 0x1e	; 30
    9676:	8c 0f       	add	r24, r28
    9678:	9d 1f       	adc	r25, r29
_ZN4U8G29setCursorEjj():
    967a:	80 83       	st	Z, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
     /* LiquidCrystal compatible functions */
    void home(void) { tx = 0; ty = 0;  u8x8_utf8_init(u8g2_GetU8x8(&u8g2)); }
    void clear(void) { home(); clearDisplay(); clearBuffer();  }
    void noDisplay(void) { u8g2_SetPowerSave(&u8g2, 1); }
    void display(void) { u8g2_SetPowerSave(&u8g2, 0); }
    void setCursor(u8g2_uint_t x, u8g2_uint_t y) { tx = x; ty = y; }
    967c:	91 83       	std	Z+1, r25	; 0x01
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:307
  u8g2->setDrawColor(1);
  u8g2->setFontMode(0);
  u8g2->setCursor(x + w - value_size, y + MENU_TEXT_OFFSET_Y);
    967e:	32 96       	adiw	r30, 0x02	; 2
_ZN13MenuInputByte4drawEP4U8G2jjjb():
    9680:	c6 01       	movw	r24, r12
    9682:	02 96       	adiw	r24, 0x02	; 2
_ZN4U8G29setCursorEjj():
    9684:	80 83       	st	Z, r24
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
    9686:	91 83       	std	Z+1, r25	; 0x01
_ZN13MenuInputByte4drawEP4U8G2jjjb():
    9688:	d5 01       	movw	r26, r10
    968a:	16 96       	adiw	r26, 0x06	; 6
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:307
    968c:	8c 91       	ld	r24, X
    968e:	16 97       	sbiw	r26, 0x06	; 6
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:386
    9690:	88 23       	and	r24, r24
    9692:	81 f1       	breq	.+96     	; 0x96f4 <MenuInputByte::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)+0xcc>
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:308
  byte draw_value = edit_mode ? value : getValue();
    9694:	17 96       	adiw	r26, 0x07	; 7
    9696:	5c 90       	ld	r5, X
    9698:	4a e0       	ldi	r20, 0x0A	; 10
    969a:	50 e0       	ldi	r21, 0x00	; 0
    969c:	65 2d       	mov	r22, r5
    969e:	c4 01       	movw	r24, r8
    96a0:	46 df       	rcall	.-372    	; 0x952e <Print::print(unsigned char, int)>
    96a2:	44 20       	and	r4, r4
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:309
  u8g2->print(draw_value);
    96a4:	b1 f0       	breq	.+44     	; 0x96d2 <MenuInputByte::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)+0xaa>
    96a6:	25 96       	adiw	r28, 0x05	; 5
    96a8:	f5 01       	movw	r30, r10
    96aa:	a2 80       	ldd	r10, Z+2	; 0x02
    96ac:	b3 80       	ldd	r11, Z+3	; 0x03
    96ae:	ca 0c       	add	r12, r10
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:310
  if (selected) {
    96b0:	db 1c       	adc	r13, r11
    96b2:	fa e0       	ldi	r31, 0x0A	; 10
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:311
    x = x + slide_xmargin;
    96b4:	6f 1a       	sub	r6, r31
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:312
    y = y + height + slide_ymargin0;
    96b6:	71 08       	sbc	r7, r1
    96b8:	84 e0       	ldi	r24, 0x04	; 4
    96ba:	a8 1a       	sub	r10, r24
    96bc:	b1 08       	sbc	r11, r1
    96be:	af ef       	ldi	r26, 0xFF	; 255
_ZN4U8G27drawBoxEjjjj():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:313
    w = w - 2 * slide_xmargin;
    96c0:	85 01       	movw	r16, r10
    96c2:	93 01       	movw	r18, r6
    96c4:	a6 01       	movw	r20, r12
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:314
    u8g2_uint_t h = height - slide_ymargin0 - slide_ymargin1;
    96c6:	be 01       	movw	r22, r28
    96c8:	c7 01       	movw	r24, r14
_ZN13MenuInputByte4drawEP4U8G2jjjb():
    96ca:	5a 12       	cpse	r5, r26
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:315
    if (draw_value == 255) {
    96cc:	1c c0       	rjmp	.+56     	; 0x9706 <MenuInputByte::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)+0xde>
_ZN4U8G27drawBoxEjjjj():
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:229
      u8g2_DrawHVLine(&u8g2, x, y, len, dir); }
    
    /* u8g2_box.c */
    void drawFrame(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h) { u8g2_DrawFrame(&u8g2, x, y, w, h); }
    void drawRFrame(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h, u8g2_uint_t r) { u8g2_DrawRFrame(&u8g2, x, y, w, h,r); }
    void drawBox(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h) { u8g2_DrawBox(&u8g2, x, y, w, h); }
    96ce:	0e 94 01 3e 	call	0x7c02	; 0x7c02 <u8g2_DrawBox>
_ZN13MenuInputByte4drawEP4U8G2jjjb():
    96d2:	df 91       	pop	r29
    96d4:	cf 91       	pop	r28
    96d6:	1f 91       	pop	r17
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:315
    96d8:	0f 91       	pop	r16
    96da:	ff 90       	pop	r15
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:229
    96dc:	ef 90       	pop	r14
    96de:	df 90       	pop	r13
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:323
      u8g2->drawFrame(x, y, w, h);
      unsigned int m = int(draw_value) * int(w) / int(255);
      u8g2->drawBox(x, y, (u8g2_uint_t)m, h);
    }
  }
}
    96e0:	cf 90       	pop	r12
    96e2:	bf 90       	pop	r11
    96e4:	af 90       	pop	r10
    96e6:	9f 90       	pop	r9
    96e8:	8f 90       	pop	r8
    96ea:	7f 90       	pop	r7
    96ec:	6f 90       	pop	r6
    96ee:	5f 90       	pop	r5
    96f0:	4f 90       	pop	r4
    96f2:	08 95       	ret
    96f4:	ed 91       	ld	r30, X+
    96f6:	fc 91       	ld	r31, X
    96f8:	04 84       	ldd	r0, Z+12	; 0x0c
    96fa:	f5 85       	ldd	r31, Z+13	; 0x0d
    96fc:	e0 2d       	mov	r30, r0
    96fe:	c5 01       	movw	r24, r10
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:308
                         u8g2_uint_t w, bool selected) {
  UIMenuButtonItem::draw(u8g2, x, y, w, selected);
  u8g2->setDrawColor(1);
  u8g2->setFontMode(0);
  u8g2->setCursor(x + w - value_size, y + MENU_TEXT_OFFSET_Y);
  byte draw_value = edit_mode ? value : getValue();
    9700:	09 95       	icall
    9702:	58 2e       	mov	r5, r24
    9704:	c9 cf       	rjmp	.-110    	; 0x9698 <MenuInputByte::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)+0x70>
_ZN4U8G29drawFrameEjjjj():
    9706:	0e 94 9c 3c 	call	0x7938	; 0x7938 <u8g2_DrawFrame>
_ZN13MenuInputByte4drawEP4U8G2jjjb():
    970a:	56 9c       	mul	r5, r6
    970c:	c0 01       	movw	r24, r0
    970e:	57 9c       	mul	r5, r7
    9710:	90 0d       	add	r25, r0
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:227
    void drawVLine(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t h) { u8g2_DrawVLine(&u8g2, x, y, h); }
    void drawHVLine(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir) {
      u8g2_DrawHVLine(&u8g2, x, y, len, dir); }
    
    /* u8g2_box.c */
    void drawFrame(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h) { u8g2_DrawFrame(&u8g2, x, y, w, h); }
    9712:	11 24       	eor	r1, r1
    9714:	6f ef       	ldi	r22, 0xFF	; 255
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/UImenu.cpp:319
    u8g2_uint_t h = height - slide_ymargin0 - slide_ymargin1;
    if (draw_value == 255) {
      u8g2->drawBox(x, y, w, h);
    } else {
      u8g2->drawFrame(x, y, w, h);
      unsigned int m = int(draw_value) * int(w) / int(255);
    9716:	70 e0       	ldi	r23, 0x00	; 0
    9718:	0e 94 40 78 	call	0xf080	; 0xf080 <__divmodhi4>
    971c:	9b 01       	movw	r18, r22
_ZN4U8G27drawBoxEjjjj():
    971e:	a6 01       	movw	r20, r12
    9720:	be 01       	movw	r22, r28
    9722:	c7 01       	movw	r24, r14
    9724:	d4 cf       	rjmp	.-88     	; 0x96ce <MenuInputByte::draw(U8G2*, unsigned int, unsigned int, unsigned int, bool)+0xa6>

00009726 <Print::printFloat(double, unsigned char)>:
_ZN5Print10printFloatEdh():
    9726:	2f 92       	push	r2
    9728:	3f 92       	push	r3
E:\Users\puzzole\Documents\Arduino\libraries\U8g2\src/U8g2lib.h:229
    void drawRFrame(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h, u8g2_uint_t r) { u8g2_DrawRFrame(&u8g2, x, y, w, h,r); }
    void drawBox(u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h) { u8g2_DrawBox(&u8g2, x, y, w, h); }
    972a:	4f 92       	push	r4
    972c:	5f 92       	push	r5
    972e:	6f 92       	push	r6
    9730:	7f 92       	push	r7
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:236
  } while (n);

  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) {
    9732:	8f 92       	push	r8
    9734:	9f 92       	push	r9
    9736:	af 92       	push	r10
    9738:	bf 92       	push	r11
    973a:	cf 92       	push	r12
    973c:	df 92       	push	r13
    973e:	ef 92       	push	r14
    9740:	ff 92       	push	r15
    9742:	1f 93       	push	r17
    9744:	cf 93       	push	r28
    9746:	df 93       	push	r29
    9748:	ec 01       	movw	r28, r24
    974a:	6a 01       	movw	r12, r20
    974c:	7b 01       	movw	r14, r22
    974e:	72 2e       	mov	r7, r18
    9750:	ab 01       	movw	r20, r22
    9752:	96 01       	movw	r18, r12
    9754:	cb 01       	movw	r24, r22
    9756:	b6 01       	movw	r22, r12
    9758:	0e 94 1b 78 	call	0xf036	; 0xf036 <__unordsf2>
write():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:239
  size_t n = 0;

  if (isnan(number)) {
    975c:	6e e6       	ldi	r22, 0x6E	; 110
    975e:	73 e4       	ldi	r23, 0x43	; 67
_ZN5Print10printFloatEdh():
    9760:	81 11       	cpse	r24, r1
    9762:	26 c0       	rjmp	.+76     	; 0x97b0 <Print::printFloat(double, unsigned char)+0x8a>
    9764:	46 01       	movw	r8, r12
    9766:	57 01       	movw	r10, r14
    9768:	e8 94       	clt
    976a:	b7 f8       	bld	r11, 7
    976c:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:242
    return print("nan");
  }
  if (isinf(number)) {
    976e:	3f ef       	ldi	r19, 0xFF	; 255
    9770:	4f e7       	ldi	r20, 0x7F	; 127
    9772:	5f e7       	ldi	r21, 0x7F	; 127
    9774:	c5 01       	movw	r24, r10
    9776:	b4 01       	movw	r22, r8
    9778:	0e 94 1b 78 	call	0xf036	; 0xf036 <__unordsf2>
    977c:	81 11       	cpse	r24, r1
    977e:	0c c0       	rjmp	.+24     	; 0x9798 <Print::printFloat(double, unsigned char)+0x72>
    9780:	2f ef       	ldi	r18, 0xFF	; 255
    9782:	3f ef       	ldi	r19, 0xFF	; 255
    9784:	4f e7       	ldi	r20, 0x7F	; 127
    9786:	5f e7       	ldi	r21, 0x7F	; 127
    9788:	c5 01       	movw	r24, r10
    978a:	b4 01       	movw	r22, r8
    978c:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
write():
    9790:	62 e7       	ldi	r22, 0x72	; 114
    9792:	73 e4       	ldi	r23, 0x43	; 67
_ZN5Print10printFloatEdh():
    9794:	18 16       	cp	r1, r24
    9796:	64 f0       	brlt	.+24     	; 0x97b0 <Print::printFloat(double, unsigned char)+0x8a>
    9798:	2f ef       	ldi	r18, 0xFF	; 255
    979a:	3f ef       	ldi	r19, 0xFF	; 255
    979c:	4f e7       	ldi	r20, 0x7F	; 127
    979e:	5f e4       	ldi	r21, 0x4F	; 79
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:245
    return print("inf");
  }
  if (number > 4294967040.0) {
    97a0:	c7 01       	movw	r24, r14
    97a2:	b6 01       	movw	r22, r12
    97a4:	0e 94 17 78 	call	0xf02e	; 0xf02e <__gesf2>
    97a8:	18 16       	cp	r1, r24
    97aa:	ac f4       	brge	.+42     	; 0x97d6 <Print::printFloat(double, unsigned char)+0xb0>
write():
    97ac:	66 e7       	ldi	r22, 0x76	; 118
    97ae:	73 e4       	ldi	r23, 0x43	; 67
    97b0:	ce 01       	movw	r24, r28
_ZN5Print10printFloatEdh():
    97b2:	df 91       	pop	r29
    97b4:	cf 91       	pop	r28
    97b6:	1f 91       	pop	r17
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:285
    n += print(toPrint);
    remainder -= toPrint;
  }

  return n;
}
    97b8:	ff 90       	pop	r15
    97ba:	ef 90       	pop	r14
    97bc:	df 90       	pop	r13
    97be:	cf 90       	pop	r12
    97c0:	bf 90       	pop	r11
    97c2:	af 90       	pop	r10
    97c4:	9f 90       	pop	r9
    97c6:	8f 90       	pop	r8
    97c8:	7f 90       	pop	r7
    97ca:	6f 90       	pop	r6
    97cc:	5f 90       	pop	r5
    97ce:	4f 90       	pop	r4
    97d0:	3f 90       	pop	r3
    97d2:	2f 90       	pop	r2
write():
    97d4:	71 cd       	rjmp	.-1310   	; 0x92b8 <Print::write(char const*) [clone .part.0]>
_ZN5Print10printFloatEdh():
    97d6:	2f ef       	ldi	r18, 0xFF	; 255
    97d8:	3f ef       	ldi	r19, 0xFF	; 255
    97da:	4f e7       	ldi	r20, 0x7F	; 127
    97dc:	5f ec       	ldi	r21, 0xCF	; 207
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:248
    return print("inf");
  }
  if (number > 4294967040.0) {
    return print("ovf");  // constant determined empirically
  }
  if (number < -4294967040.0) {
    97de:	c7 01       	movw	r24, r14
    97e0:	b6 01       	movw	r22, r12
    97e2:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
    97e6:	87 fd       	sbrc	r24, 7
    97e8:	e1 cf       	rjmp	.-62     	; 0x97ac <Print::printFloat(double, unsigned char)+0x86>
    97ea:	20 e0       	ldi	r18, 0x00	; 0
    97ec:	30 e0       	ldi	r19, 0x00	; 0
    97ee:	a9 01       	movw	r20, r18
    97f0:	c7 01       	movw	r24, r14
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:253
    return print("ovf");  // constant determined empirically
  }

  // Handle negative numbers
  if (number < 0.0) {
    97f2:	b6 01       	movw	r22, r12
    97f4:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
    97f8:	31 2c       	mov	r3, r1
    97fa:	21 2c       	mov	r2, r1
    97fc:	87 ff       	sbrs	r24, 7
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:237

  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) {
  size_t n = 0;
    97fe:	09 c0       	rjmp	.+18     	; 0x9812 <Print::printFloat(double, unsigned char)+0xec>
    9800:	6d e2       	ldi	r22, 0x2D	; 45
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:253
  if (number < -4294967040.0) {
    return print("ovf");  // constant determined empirically
  }

  // Handle negative numbers
  if (number < 0.0) {
    9802:	ce 01       	movw	r24, r28
    9804:	0e 94 bd 2f 	call	0x5f7a	; 0x5f7a <Print::print(char)>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:254
    n += print('-');
    9808:	1c 01       	movw	r2, r24
    980a:	f7 fa       	bst	r15, 7
    980c:	f0 94       	com	r15
    980e:	f7 f8       	bld	r15, 7
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:255
    number = -number;
    9810:	f0 94       	com	r15
    9812:	10 e0       	ldi	r17, 0x00	; 0
    9814:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:260
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i = 0; i < digits; ++i) {
    9816:	70 e0       	ldi	r23, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:259
    n += print('-');
    number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
    9818:	80 e0       	ldi	r24, 0x00	; 0
    981a:	9f e3       	ldi	r25, 0x3F	; 63
    981c:	71 16       	cp	r7, r17
    981e:	41 f0       	breq	.+16     	; 0x9830 <Print::printFloat(double, unsigned char)+0x10a>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:260
  for (uint8_t i = 0; i < digits; ++i) {
    9820:	20 e0       	ldi	r18, 0x00	; 0
    9822:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:261
    rounding /= 10.0;
    9824:	40 e2       	ldi	r20, 0x20	; 32
    9826:	51 e4       	ldi	r21, 0x41	; 65
    9828:	0e 94 7e 77 	call	0xeefc	; 0xeefc <__divsf3>
    982c:	1f 5f       	subi	r17, 0xFF	; 255
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:260
    number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i = 0; i < digits; ++i) {
    982e:	f6 cf       	rjmp	.-20     	; 0x981c <Print::printFloat(double, unsigned char)+0xf6>
    9830:	a7 01       	movw	r20, r14
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:264
    rounding /= 10.0;
  }

  number += rounding;
    9832:	96 01       	movw	r18, r12
    9834:	0e 94 1a 77 	call	0xee34	; 0xee34 <__addsf3>
    9838:	2b 01       	movw	r4, r22
    983a:	3c 01       	movw	r6, r24
    983c:	0e 94 eb 77 	call	0xefd6	; 0xefd6 <__fixunssfsi>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:267

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
    9840:	4b 01       	movw	r8, r22
    9842:	5c 01       	movw	r10, r24
print():
    9844:	2a e0       	ldi	r18, 0x0A	; 10
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:105

size_t Print::print(unsigned long n, int base) {
  if (base == 0) {
    return write(n);
  } else {
    return printNumber(n, base);
    9846:	bc 01       	movw	r22, r24
    9848:	a4 01       	movw	r20, r8
    984a:	ce 01       	movw	r24, r28
    984c:	2b de       	rcall	.-938    	; 0x94a4 <Print::printNumber(unsigned long, unsigned char)>
_ZN5Print10printFloatEdh():
    984e:	7c 01       	movw	r14, r24
    9850:	e2 0c       	add	r14, r2
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:269
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
  n += print(int_part);
    9852:	f3 1c       	adc	r15, r3
    9854:	11 23       	and	r17, r17
    9856:	b9 f1       	breq	.+110    	; 0x98c6 <Print::printFloat(double, unsigned char)+0x1a0>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:272

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    9858:	c5 01       	movw	r24, r10
    985a:	b4 01       	movw	r22, r8
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:268

  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
    985c:	0e 94 e8 75 	call	0xebd0	; 0xebd0 <__floatunsisf>
    9860:	9b 01       	movw	r18, r22
    9862:	ac 01       	movw	r20, r24
    9864:	c3 01       	movw	r24, r6
    9866:	b2 01       	movw	r22, r4
    9868:	0e 94 19 77 	call	0xee32	; 0xee32 <__subsf3>
    986c:	4b 01       	movw	r8, r22
    986e:	5c 01       	movw	r10, r24
write():
    9870:	6a e7       	ldi	r22, 0x7A	; 122
    9872:	73 e4       	ldi	r23, 0x43	; 67
    9874:	ce 01       	movw	r24, r28
    9876:	20 dd       	rcall	.-1472   	; 0x92b8 <Print::write(char const*) [clone .part.0]>
_ZN5Print10printFloatEdh():
    9878:	e8 0e       	add	r14, r24
    987a:	f9 1e       	adc	r15, r25
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:273
  n += print(int_part);

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    n += print(".");
    987c:	11 50       	subi	r17, 0x01	; 1
    987e:	18 f1       	brcs	.+70     	; 0x98c6 <Print::printFloat(double, unsigned char)+0x1a0>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:277
  }

  // Extract digits from the remainder one at a time
  while (digits-- > 0) {
    9880:	20 e0       	ldi	r18, 0x00	; 0
    9882:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:278
    remainder *= 10.0;
    9884:	40 e2       	ldi	r20, 0x20	; 32
    9886:	51 e4       	ldi	r21, 0x41	; 65
    9888:	c5 01       	movw	r24, r10
    988a:	b4 01       	movw	r22, r8
    988c:	0e 94 49 76 	call	0xec92	; 0xec92 <__mulsf3>
    9890:	2b 01       	movw	r4, r22
    9892:	3c 01       	movw	r6, r24
    9894:	0e 94 eb 77 	call	0xefd6	; 0xefd6 <__fixunssfsi>
print():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:279
    unsigned int toPrint = (unsigned int)remainder;
    9898:	4b 01       	movw	r8, r22
    989a:	b1 2c       	mov	r11, r1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:83
size_t Print::print(int n, int base) {
  return print((long) n, base);
}

size_t Print::print(unsigned int n, int base) {
  return print((unsigned long) n, base);
    989c:	a1 2c       	mov	r10, r1
    989e:	2a e0       	ldi	r18, 0x0A	; 10
    98a0:	b5 01       	movw	r22, r10
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:105

size_t Print::print(unsigned long n, int base) {
  if (base == 0) {
    return write(n);
  } else {
    return printNumber(n, base);
    98a2:	a4 01       	movw	r20, r8
    98a4:	ce 01       	movw	r24, r28
    98a6:	fe dd       	rcall	.-1028   	; 0x94a4 <Print::printNumber(unsigned long, unsigned char)>
_ZN5Print10printFloatEdh():
    98a8:	e8 0e       	add	r14, r24
    98aa:	f9 1e       	adc	r15, r25
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:280

  // Extract digits from the remainder one at a time
  while (digits-- > 0) {
    remainder *= 10.0;
    unsigned int toPrint = (unsigned int)remainder;
    n += print(toPrint);
    98ac:	c5 01       	movw	r24, r10
    98ae:	b4 01       	movw	r22, r8
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:281
    remainder -= toPrint;
    98b0:	0e 94 e8 75 	call	0xebd0	; 0xebd0 <__floatunsisf>
    98b4:	9b 01       	movw	r18, r22
    98b6:	ac 01       	movw	r20, r24
    98b8:	c3 01       	movw	r24, r6
    98ba:	b2 01       	movw	r22, r4
    98bc:	0e 94 19 77 	call	0xee32	; 0xee32 <__subsf3>
    98c0:	4b 01       	movw	r8, r22
    98c2:	5c 01       	movw	r10, r24
    98c4:	db cf       	rjmp	.-74     	; 0x987c <Print::printFloat(double, unsigned char)+0x156>
    98c6:	c7 01       	movw	r24, r14
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:285
  }

  return n;
}
    98c8:	df 91       	pop	r29
    98ca:	cf 91       	pop	r28
    98cc:	1f 91       	pop	r17
    98ce:	ff 90       	pop	r15
    98d0:	ef 90       	pop	r14
    98d2:	df 90       	pop	r13
    98d4:	cf 90       	pop	r12
    98d6:	bf 90       	pop	r11
    98d8:	af 90       	pop	r10
    98da:	9f 90       	pop	r9
    98dc:	8f 90       	pop	r8
    98de:	7f 90       	pop	r7
    98e0:	6f 90       	pop	r6
    98e2:	5f 90       	pop	r5
    98e4:	4f 90       	pop	r4
    98e6:	3f 90       	pop	r3
    98e8:	2f 90       	pop	r2
    98ea:	08 95       	ret

000098ec <dxUtilClass::checkTemperature(bool) [clone .constprop.156]>:
_ZN11dxUtilClass16checkTemperatureEb.constprop.156():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:202
   Internally uses getTCelsius()

   @param newline true if a newline should be printed at the end
*/
void dxUtilClass::checkTemperature(bool newline) {
  DebugOut.print(F("T="));
    98ec:	60 ed       	ldi	r22, 0xD0	; 208
    98ee:	7b e0       	ldi	r23, 0x0B	; 11
    98f0:	8e ed       	ldi	r24, 0xDE	; 222
    98f2:	97 e4       	ldi	r25, 0x47	; 71
    98f4:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
getTCelsius():
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:176

    getTCelsius() = getTKelvin() - 273.15

   @return Temperature in Celsius
*/
float dxUtilClass::getTCelsius() { return getTKelvin() - 273.15; }
    98f8:	f0 d9       	rcall	.-3104   	; 0x8cda <dxUtilClass::getTKelvin() [clone .constprop.158]>
    98fa:	23 e3       	ldi	r18, 0x33	; 51
    98fc:	33 e9       	ldi	r19, 0x93	; 147
    98fe:	48 e8       	ldi	r20, 0x88	; 136
    9900:	53 e4       	ldi	r21, 0x43	; 67
    9902:	0e 94 19 77 	call	0xee32	; 0xee32 <__subsf3>
    9906:	ab 01       	movw	r20, r22
    9908:	bc 01       	movw	r22, r24
print():
    990a:	22 e0       	ldi	r18, 0x02	; 2
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:110
    return printNumber(n, base);
  }
}

size_t Print::print(double n, int digits) {
  return printFloat(n, digits);
    990c:	8e ed       	ldi	r24, 0xDE	; 222
    990e:	97 e4       	ldi	r25, 0x47	; 71
    9910:	0a df       	rcall	.-492    	; 0x9726 <Print::printFloat(double, unsigned char)>
_ZN11dxUtilClass16checkTemperatureEb.constprop.156():
    9912:	6d ec       	ldi	r22, 0xCD	; 205
    9914:	7b e0       	ldi	r23, 0x0B	; 11
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:204
   @param newline true if a newline should be printed at the end
*/
void dxUtilClass::checkTemperature(bool newline) {
  DebugOut.print(F("T="));
  DebugOut.print(getTCelsius());
  DebugOut.print(F(" C"));
    9916:	8e ed       	ldi	r24, 0xDE	; 222
    9918:	97 e4       	ldi	r25, 0x47	; 71
    991a:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    991e:	8e ed       	ldi	r24, 0xDE	; 222
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:206
  if (newline)
    DebugOut.println();
    9920:	97 e4       	ldi	r25, 0x47	; 71
    9922:	d9 cc       	rjmp	.-1614   	; 0x92d6 <Print::println()>

00009924 <dxUtilClass::checkVoltages(bool) [clone .constprop.151]>:
_ZN11dxUtilClass13checkVoltagesEb.constprop.151():
    9924:	84 e4       	ldi	r24, 0x44	; 68
    9926:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:136
    pin = digitalPinToAnalogInput(pin);
    if(pin == NOT_A_PIN) return -1;

  }
  /* Select channel */
  ADC0.MUXPOS = ((pin & 0x7F) << ADC_MUXPOS_gp);
    992a:	81 e0       	ldi	r24, 0x01	; 1
    992c:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:140
  /* Reference should be already set up */

  /* Start conversion */
  ADC0.COMMAND = ADC_STCONV_bm;
    9930:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:143

  /* Wait for result ready */
  while(!(ADC0.INTFLAGS & ADC_RESRDY_bm));
    9934:	80 ff       	sbrs	r24, 0
    9936:	fc cf       	rjmp	.-8      	; 0x9930 <dxUtilClass::checkVoltages(bool) [clone .constprop.151]+0xc>
    9938:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:149

  #if (defined(__AVR_DA__) && (!defined(NO_ADC_WORKAROUND)))
    // That may become defined when DA-series silicon is available with the fix
    ADC0.MUXPOS = 0x40;
  #endif
  return ADC0.RES;
    993c:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
    9940:	07 2e       	mov	r0, r23
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:118
*/
float dxUtilClass::getVdd() {
  int adc_reading =
      analogRead(ADC_VDDDIV10); // Note: temp. will be way out of range in case
                                // analogRead reports an ADC error
  float vdd = adc_reading * vstep;
    9942:	00 0c       	add	r0, r0
    9944:	88 0b       	sbc	r24, r24
    9946:	99 0b       	sbc	r25, r25
    9948:	0e 94 ea 75 	call	0xebd4	; 0xebd4 <__floatsisf>
    994c:	2a e0       	ldi	r18, 0x0A	; 10
    994e:	37 ed       	ldi	r19, 0xD7	; 215
    9950:	43 ea       	ldi	r20, 0xA3	; 163
    9952:	5b e3       	ldi	r21, 0x3B	; 59
    9954:	0e 94 49 76 	call	0xec92	; 0xec92 <__mulsf3>
    9958:	ab 01       	movw	r20, r22
    995a:	bc 01       	movw	r22, r24
print():
    995c:	22 e0       	ldi	r18, 0x02	; 2
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:110
    995e:	8e ed       	ldi	r24, 0xDE	; 222
    9960:	97 e4       	ldi	r25, 0x47	; 71
    9962:	e1 de       	rcall	.-574    	; 0x9726 <Print::printFloat(double, unsigned char)>
_ZN11dxUtilClass13checkVoltagesEb.constprop.151():
    9964:	69 ec       	ldi	r22, 0xC9	; 201
    9966:	7b e0       	ldi	r23, 0x0B	; 11
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:187

   @param newline true if a newline should be printed at the end
*/
void dxUtilClass::checkVoltages(bool newline) {
  DebugOut.print(getVdd());
  DebugOut.print(F("V, "));
    9968:	8e ed       	ldi	r24, 0xDE	; 222
    996a:	97 e4       	ldi	r25, 0x47	; 71
    996c:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
analogRead():
    9970:	85 e4       	ldi	r24, 0x45	; 69
    9972:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:136
    pin = digitalPinToAnalogInput(pin);
    if(pin == NOT_A_PIN) return -1;

  }
  /* Select channel */
  ADC0.MUXPOS = ((pin & 0x7F) << ADC_MUXPOS_gp);
    9976:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:140
  /* Reference should be already set up */

  /* Start conversion */
  ADC0.COMMAND = ADC_STCONV_bm;
    9978:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
    997c:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:143

  /* Wait for result ready */
  while(!(ADC0.INTFLAGS & ADC_RESRDY_bm));
    9980:	80 ff       	sbrs	r24, 0
    9982:	fc cf       	rjmp	.-8      	; 0x997c <dxUtilClass::checkVoltages(bool) [clone .constprop.151]+0x58>
    9984:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore/wiring_analog.c:149

  #if (defined(__AVR_DA__) && (!defined(NO_ADC_WORKAROUND)))
    // That may become defined when DA-series silicon is available with the fix
    ADC0.MUXPOS = 0x40;
  #endif
  return ADC0.RES;
    9988:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
getVddio2():
    998c:	07 2e       	mov	r0, r23
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:132
*/
float dxUtilClass::getVddio2() {
  int adc_reading =
      analogRead(ADC_VDDIO2DIV10); // Note: temp. will be way out of range in
                                   // case analogRead reports an ADC error
  float vddio2 = adc_reading * vstep;
    998e:	00 0c       	add	r0, r0
    9990:	88 0b       	sbc	r24, r24
    9992:	99 0b       	sbc	r25, r25
    9994:	0e 94 ea 75 	call	0xebd4	; 0xebd4 <__floatsisf>
    9998:	2a e0       	ldi	r18, 0x0A	; 10
    999a:	37 ed       	ldi	r19, 0xD7	; 215
    999c:	43 ea       	ldi	r20, 0xA3	; 163
    999e:	5b e3       	ldi	r21, 0x3B	; 59
    99a0:	0e 94 49 76 	call	0xec92	; 0xec92 <__mulsf3>
    99a4:	ab 01       	movw	r20, r22
    99a6:	bc 01       	movw	r22, r24
print():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:110
    99a8:	22 e0       	ldi	r18, 0x02	; 2
    99aa:	8e ed       	ldi	r24, 0xDE	; 222
    99ac:	97 e4       	ldi	r25, 0x47	; 71
    99ae:	bb de       	rcall	.-650    	; 0x9726 <Print::printFloat(double, unsigned char)>
_ZN11dxUtilClass13checkVoltagesEb.constprop.151():
    99b0:	67 ec       	ldi	r22, 0xC7	; 199
C:\Users\dax\Google Drive\GitLocalRepositories\K197Display/dxUtil.cpp:189
*/
void dxUtilClass::checkVoltages(bool newline) {
  DebugOut.print(getVdd());
  DebugOut.print(F("V, "));
  DebugOut.print(getVddio2());
  DebugOut.print(F("V"));
    99b2:	7b e0       	ldi	r23, 0x0B	; 11
    99b4:	8e ed       	ldi	r24, 0xDE	; 222
    99b6:	97 e4       	ldi	r25, 0x47	; 71
    99b8:	0c 94 c4 2f 	jmp	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>

000099bc <Print::println(double, int) [clone .constprop.112]>:
_ZN5Print7printlnEdi.constprop.112():
    99bc:	0f 93       	push	r16
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:175
  size_t n = print(num, base);
  n += println();
  return n;
}

size_t Print::println(double num, int digits) {
    99be:	1f 93       	push	r17
    99c0:	cf 93       	push	r28
    99c2:	df 93       	push	r29
    99c4:	ec 01       	movw	r28, r24
print():
    99c6:	22 e0       	ldi	r18, 0x02	; 2
    99c8:	ae de       	rcall	.-676    	; 0x9726 <Print::printFloat(double, unsigned char)>
    99ca:	8c 01       	movw	r16, r24
_ZN5Print7printlnEdi.constprop.112():
    99cc:	ce 01       	movw	r24, r28
    99ce:	83 dc       	rcall	.-1786   	; 0x92d6 <Print::println()>
    99d0:	80 0f       	add	r24, r16
    99d2:	91 1f       	adc	r25, r17
    99d4:	df 91       	pop	r29
    99d6:	cf 91       	pop	r28
    99d8:	1f 91       	pop	r17
    99da:	0f 91       	pop	r16
    99dc:	08 95       	ret

000099de <Print::print(int, int)>:
_ZN5Print5printEii():
    99de:	cf 92       	push	r12
    99e0:	df 92       	push	r13
    99e2:	ef 92       	push	r14
    99e4:	ff 92       	push	r15
    99e6:	0f 93       	push	r16
    99e8:	1f 93       	push	r17
    99ea:	cf 93       	push	r28
    99ec:	df 93       	push	r29
    99ee:	6b 01       	movw	r12, r22
    99f0:	77 0f       	add	r23, r23
    99f2:	ee 08       	sbc	r14, r14
    99f4:	ff 08       	sbc	r15, r15
print():
    99f6:	4a 30       	cpi	r20, 0x0A	; 10
    99f8:	51 05       	cpc	r21, r1
    99fa:	e9 f4       	brne	.+58     	; 0x9a36 <Print::print(int, int)+0x58>
    99fc:	2a e0       	ldi	r18, 0x0A	; 10
    99fe:	f7 fe       	sbrs	r15, 7
    9a00:	1b c0       	rjmp	.+54     	; 0x9a38 <Print::print(int, int)+0x5a>
    9a02:	ec 01       	movw	r28, r24
    9a04:	6d e2       	ldi	r22, 0x2D	; 45
    9a06:	0e 94 bd 2f 	call	0x5f7a	; 0x5f7a <Print::print(char)>
    9a0a:	8c 01       	movw	r16, r24
    9a0c:	44 27       	eor	r20, r20
    9a0e:	55 27       	eor	r21, r21
    9a10:	ba 01       	movw	r22, r20
    9a12:	4c 19       	sub	r20, r12
    9a14:	5d 09       	sbc	r21, r13
    9a16:	6e 09       	sbc	r22, r14
    9a18:	7f 09       	sbc	r23, r15
    9a1a:	2a e0       	ldi	r18, 0x0A	; 10
    9a1c:	ce 01       	movw	r24, r28
    9a1e:	42 dd       	rcall	.-1404   	; 0x94a4 <Print::printNumber(unsigned long, unsigned char)>
    9a20:	80 0f       	add	r24, r16
    9a22:	91 1f       	adc	r25, r17
_ZN5Print5printEii():
    9a24:	df 91       	pop	r29
    9a26:	cf 91       	pop	r28
    9a28:	1f 91       	pop	r17
    9a2a:	0f 91       	pop	r16
    9a2c:	ff 90       	pop	r15
    9a2e:	ef 90       	pop	r14
    9a30:	df 90       	pop	r13
    9a32:	cf 90       	pop	r12
    9a34:	08 95       	ret
print():
    9a36:	24 2f       	mov	r18, r20
    9a38:	b7 01       	movw	r22, r14
    9a3a:	a6 01       	movw	r20, r12
_ZN5Print5printEii():
    9a3c:	df 91       	pop	r29
    9a3e:	cf 91       	pop	r28
    9a40:	1f 91       	pop	r17
    9a42:	0f 91       	pop	r16
    9a44:	ff 90       	pop	r15
    9a46:	ef 90       	pop	r14
    9a48:	df 90       	pop	r13
    9a4a:	cf 90       	pop	r12
print():
    9a4c:	2b cd       	rjmp	.-1450   	; 0x94a4 <Print::printNumber(unsigned long, unsigned char)>

00009a4e <dxUtilClass::reportStack(bool) [clone .constprop.163]>:
_ZN11dxUtilClass11reportStackEb.constprop.163():
    9a4e:	80 91 53 40 	lds	r24, 0x4053	; 0x804053 <dxUtil+0x4>
    9a52:	90 91 54 40 	lds	r25, 0x4054	; 0x804054 <dxUtil+0x5>
    9a56:	89 3e       	cpi	r24, 0xE9	; 233
    9a58:	93 40       	sbci	r25, 0x03	; 3
    9a5a:	34 f0       	brlt	.+12     	; 0x9a68 <dxUtilClass::reportStack(bool) [clone .constprop.163]+0x1a>
    9a5c:	88 ee       	ldi	r24, 0xE8	; 232
    9a5e:	93 e0       	ldi	r25, 0x03	; 3
    9a60:	80 93 53 40 	sts	0x4053, r24	; 0x804053 <dxUtil+0x4>
    9a64:	90 93 54 40 	sts	0x4054, r25	; 0x804054 <dxUtil+0x5>
    9a68:	63 ed       	ldi	r22, 0xD3	; 211
    9a6a:	7b e0       	ldi	r23, 0x0B	; 11
    9a6c:	8e ed       	ldi	r24, 0xDE	; 222
    9a6e:	97 e4       	ldi	r25, 0x47	; 71
    9a70:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    9a74:	60 91 53 40 	lds	r22, 0x4053	; 0x804053 <dxUtil+0x4>
    9a78:	70 91 54 40 	lds	r23, 0x4054	; 0x804054 <dxUtil+0x5>
    9a7c:	4a e0       	ldi	r20, 0x0A	; 10
    9a7e:	50 e0       	ldi	r21, 0x00	; 0
    9a80:	8e ed       	ldi	r24, 0xDE	; 222
    9a82:	97 e4       	ldi	r25, 0x47	; 71
    9a84:	ac cf       	rjmp	.-168    	; 0x99de <Print::print(int, int)>

00009a86 <myButtonCallback(K197UIeventsource, K197UIeventType)>:
_Z16myButtonCallback17K197UIeventsource15K197UIeventType():
    9a86:	1f 93       	push	r17
    9a88:	cf 93       	push	r28
    9a8a:	df 93       	push	r29
    9a8c:	18 2f       	mov	r17, r24
    9a8e:	eb 01       	movw	r28, r22
    9a90:	6d e1       	ldi	r22, 0x1D	; 29
    9a92:	76 e0       	ldi	r23, 0x06	; 6
    9a94:	8e ed       	ldi	r24, 0xDE	; 222
    9a96:	97 e4       	ldi	r25, 0x47	; 71
    9a98:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    9a9c:	4a e0       	ldi	r20, 0x0A	; 10
    9a9e:	50 e0       	ldi	r21, 0x00	; 0
    9aa0:	61 2f       	mov	r22, r17
    9aa2:	8e ed       	ldi	r24, 0xDE	; 222
    9aa4:	97 e4       	ldi	r25, 0x47	; 71
    9aa6:	43 dd       	rcall	.-1402   	; 0x952e <Print::print(unsigned char, int)>
    9aa8:	6b e1       	ldi	r22, 0x1B	; 27
    9aaa:	76 e0       	ldi	r23, 0x06	; 6
    9aac:	8e ed       	ldi	r24, 0xDE	; 222
    9aae:	97 e4       	ldi	r25, 0x47	; 71
    9ab0:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    9ab4:	69 e1       	ldi	r22, 0x19	; 25
    9ab6:	76 e0       	ldi	r23, 0x06	; 6
    9ab8:	8e ed       	ldi	r24, 0xDE	; 222
    9aba:	97 e4       	ldi	r25, 0x47	; 71
    9abc:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
DebugOut_printEventName():
    9ac0:	fe 01       	movw	r30, r28
    9ac2:	31 97       	sbiw	r30, 0x01	; 1
    9ac4:	e4 31       	cpi	r30, 0x14	; 20
    9ac6:	f1 05       	cpc	r31, r1
    9ac8:	08 f0       	brcs	.+2      	; 0x9acc <myButtonCallback(K197UIeventsource, K197UIeventType)+0x46>
    9aca:	36 c0       	rjmp	.+108    	; 0x9b38 <myButtonCallback(K197UIeventsource, K197UIeventType)+0xb2>
    9acc:	e6 59       	subi	r30, 0x96	; 150
    9ace:	f2 4b       	sbci	r31, 0xB2	; 178
    9ad0:	0c 94 91 78 	jmp	0xf122	; 0xf122 <__tablejump2__>
    9ad4:	7e 4d       	sbci	r23, 0xDE	; 222
    9ad6:	8a 4d       	sbci	r24, 0xDA	; 218
    9ad8:	8d 4d       	sbci	r24, 0xDD	; 221
    9ada:	9c 4d       	sbci	r25, 0xDC	; 220
    9adc:	9c 4d       	sbci	r25, 0xDC	; 220
    9ade:	9c 4d       	sbci	r25, 0xDC	; 220
    9ae0:	9c 4d       	sbci	r25, 0xDC	; 220
    9ae2:	9c 4d       	sbci	r25, 0xDC	; 220
    9ae4:	9c 4d       	sbci	r25, 0xDC	; 220
    9ae6:	9c 4d       	sbci	r25, 0xDC	; 220
    9ae8:	9c 4d       	sbci	r25, 0xDC	; 220
    9aea:	9c 4d       	sbci	r25, 0xDC	; 220
    9aec:	9c 4d       	sbci	r25, 0xDC	; 220
    9aee:	9c 4d       	sbci	r25, 0xDC	; 220
    9af0:	9c 4d       	sbci	r25, 0xDC	; 220
    9af2:	9c 4d       	sbci	r25, 0xDC	; 220
    9af4:	90 4d       	sbci	r25, 0xD0	; 208
    9af6:	93 4d       	sbci	r25, 0xD3	; 211
    9af8:	96 4d       	sbci	r25, 0xD6	; 214
    9afa:	99 4d       	sbci	r25, 0xD9	; 217
    9afc:	6e e0       	ldi	r22, 0x0E	; 14
    9afe:	76 e0       	ldi	r23, 0x06	; 6
    9b00:	8e ed       	ldi	r24, 0xDE	; 222
    9b02:	97 e4       	ldi	r25, 0x47	; 71
    9b04:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_Z16myButtonCallback17K197UIeventsource15K197UIeventType():
    9b08:	8e ed       	ldi	r24, 0xDE	; 222
    9b0a:	97 e4       	ldi	r25, 0x47	; 71
    9b0c:	df 91       	pop	r29
    9b0e:	cf 91       	pop	r28
    9b10:	1f 91       	pop	r17
    9b12:	e1 cb       	rjmp	.-2110   	; 0x92d6 <Print::println()>
DebugOut_printEventName():
    9b14:	6d ef       	ldi	r22, 0xFD	; 253
    9b16:	75 e0       	ldi	r23, 0x05	; 5
    9b18:	f3 cf       	rjmp	.-26     	; 0x9b00 <myButtonCallback(K197UIeventsource, K197UIeventType)+0x7a>
    9b1a:	6e ee       	ldi	r22, 0xEE	; 238
    9b1c:	75 e0       	ldi	r23, 0x05	; 5
    9b1e:	f0 cf       	rjmp	.-32     	; 0x9b00 <myButtonCallback(K197UIeventsource, K197UIeventType)+0x7a>
    9b20:	63 ee       	ldi	r22, 0xE3	; 227
    9b22:	75 e0       	ldi	r23, 0x05	; 5
    9b24:	ed cf       	rjmp	.-38     	; 0x9b00 <myButtonCallback(K197UIeventsource, K197UIeventType)+0x7a>
    9b26:	64 ed       	ldi	r22, 0xD4	; 212
    9b28:	75 e0       	ldi	r23, 0x05	; 5
    9b2a:	ea cf       	rjmp	.-44     	; 0x9b00 <myButtonCallback(K197UIeventsource, K197UIeventType)+0x7a>
    9b2c:	6a ec       	ldi	r22, 0xCA	; 202
    9b2e:	75 e0       	ldi	r23, 0x05	; 5
    9b30:	e7 cf       	rjmp	.-50     	; 0x9b00 <myButtonCallback(K197UIeventsource, K197UIeventType)+0x7a>
    9b32:	6d eb       	ldi	r22, 0xBD	; 189
    9b34:	75 e0       	ldi	r23, 0x05	; 5
    9b36:	e4 cf       	rjmp	.-56     	; 0x9b00 <myButtonCallback(K197UIeventsource, K197UIeventType)+0x7a>
    9b38:	60 eb       	ldi	r22, 0xB0	; 176
    9b3a:	75 e0       	ldi	r23, 0x05	; 5
    9b3c:	8e ed       	ldi	r24, 0xDE	; 222
    9b3e:	97 e4       	ldi	r25, 0x47	; 71
    9b40:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    9b44:	4a e0       	ldi	r20, 0x0A	; 10
    9b46:	50 e0       	ldi	r21, 0x00	; 0
    9b48:	be 01       	movw	r22, r28
    9b4a:	8e ed       	ldi	r24, 0xDE	; 222
    9b4c:	97 e4       	ldi	r25, 0x47	; 71
    9b4e:	47 df       	rcall	.-370    	; 0x99de <Print::print(int, int)>
    9b50:	db cf       	rjmp	.-74     	; 0x9b08 <myButtonCallback(K197UIeventsource, K197UIeventType)+0x82>

00009b52 <permadata::retrieve_from_EEPROM()>:
_ZN9permadata20retrieve_from_EEPROMEv():
    9b52:	cf 92       	push	r12
    9b54:	df 92       	push	r13
    9b56:	ef 92       	push	r14
    9b58:	ff 92       	push	r15
    9b5a:	1f 93       	push	r17
    9b5c:	cf 93       	push	r28
    9b5e:	df 93       	push	r29
    9b60:	cd b7       	in	r28, 0x3d	; 61
    9b62:	de b7       	in	r29, 0x3e	; 62
    9b64:	2c 97       	sbiw	r28, 0x0c	; 12
    9b66:	cd bf       	out	0x3d, r28	; 61
    9b68:	de bf       	out	0x3e, r29	; 62
__base_ctor ():
    9b6a:	8d e4       	ldi	r24, 0x4D	; 77
    9b6c:	9c e3       	ldi	r25, 0x3C	; 60
    9b6e:	ab e2       	ldi	r26, 0x2B	; 43
    9b70:	ba e1       	ldi	r27, 0x1A	; 26
    9b72:	89 83       	std	Y+1, r24	; 0x01
    9b74:	9a 83       	std	Y+2, r25	; 0x02
    9b76:	ab 83       	std	Y+3, r26	; 0x03
    9b78:	bc 83       	std	Y+4, r27	; 0x04
    9b7a:	81 e0       	ldi	r24, 0x01	; 1
    9b7c:	90 e0       	ldi	r25, 0x00	; 0
    9b7e:	a0 e0       	ldi	r26, 0x00	; 0
    9b80:	b0 e0       	ldi	r27, 0x00	; 0
    9b82:	8d 83       	std	Y+5, r24	; 0x05
    9b84:	9e 83       	std	Y+6, r25	; 0x06
    9b86:	af 83       	std	Y+7, r26	; 0x07
    9b88:	b8 87       	std	Y+8, r27	; 0x08
_ZN9permadata19bool_options_structC2Ev():
    9b8a:	19 86       	std	Y+9, r1	; 0x09
    9b8c:	de 01       	movw	r26, r28
    9b8e:	11 96       	adiw	r26, 0x01	; 1
    9b90:	e0 e0       	ldi	r30, 0x00	; 0
    9b92:	f4 e1       	ldi	r31, 0x14	; 20
_ZN11EEPROMClass3getI9permadataEERT_jS3_.isra.39():
    9b94:	81 91       	ld	r24, Z+
    9b96:	8d 93       	st	X+, r24
    9b98:	ec 30       	cpi	r30, 0x0C	; 12
    9b9a:	24 e1       	ldi	r18, 0x14	; 20
    9b9c:	f2 07       	cpc	r31, r18
    9b9e:	d1 f7       	brne	.-12     	; 0x9b94 <permadata::retrieve_from_EEPROM()+0x42>
_ZN9permadata20retrieve_from_EEPROMEv():
    9ba0:	89 81       	ldd	r24, Y+1	; 0x01
    9ba2:	9a 81       	ldd	r25, Y+2	; 0x02
    9ba4:	ab 81       	ldd	r26, Y+3	; 0x03
    9ba6:	bc 81       	ldd	r27, Y+4	; 0x04
    9ba8:	8d 34       	cpi	r24, 0x4D	; 77
    9baa:	9c 43       	sbci	r25, 0x3C	; 60
    9bac:	ab 42       	sbci	r26, 0x2B	; 43
    9bae:	ba 41       	sbci	r27, 0x1A	; 26
    9bb0:	89 f0       	breq	.+34     	; 0x9bd4 <permadata::retrieve_from_EEPROM()+0x82>
    9bb2:	65 ea       	ldi	r22, 0xA5	; 165
    9bb4:	77 e0       	ldi	r23, 0x07	; 7
    9bb6:	8e ed       	ldi	r24, 0xDE	; 222
    9bb8:	97 e4       	ldi	r25, 0x47	; 71
    9bba:	90 db       	rcall	.-2272   	; 0x92dc <Print::println(__FlashStringHelper const*)>
    9bbc:	80 e0       	ldi	r24, 0x00	; 0
    9bbe:	2c 96       	adiw	r28, 0x0c	; 12
    9bc0:	cd bf       	out	0x3d, r28	; 61
    9bc2:	de bf       	out	0x3e, r29	; 62
    9bc4:	df 91       	pop	r29
    9bc6:	cf 91       	pop	r28
    9bc8:	1f 91       	pop	r17
    9bca:	ff 90       	pop	r15
    9bcc:	ef 90       	pop	r14
    9bce:	df 90       	pop	r13
    9bd0:	cf 90       	pop	r12
    9bd2:	08 95       	ret
    9bd4:	cd 80       	ldd	r12, Y+5	; 0x05
    9bd6:	de 80       	ldd	r13, Y+6	; 0x06
    9bd8:	ef 80       	ldd	r14, Y+7	; 0x07
    9bda:	f8 84       	ldd	r15, Y+8	; 0x08
    9bdc:	81 e0       	ldi	r24, 0x01	; 1
    9bde:	c8 16       	cp	r12, r24
    9be0:	d1 04       	cpc	r13, r1
    9be2:	e1 04       	cpc	r14, r1
    9be4:	f1 04       	cpc	r15, r1
    9be6:	f1 f0       	breq	.+60     	; 0x9c24 <permadata::retrieve_from_EEPROM()+0xd2>
    9be8:	64 ed       	ldi	r22, 0xD4	; 212
    9bea:	77 e0       	ldi	r23, 0x07	; 7
    9bec:	8e ed       	ldi	r24, 0xDE	; 222
    9bee:	97 e4       	ldi	r25, 0x47	; 71
    9bf0:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
print():
    9bf4:	20 e1       	ldi	r18, 0x10	; 16
    9bf6:	b7 01       	movw	r22, r14
    9bf8:	a6 01       	movw	r20, r12
    9bfa:	8e ed       	ldi	r24, 0xDE	; 222
    9bfc:	97 e4       	ldi	r25, 0x47	; 71
    9bfe:	52 dc       	rcall	.-1884   	; 0x94a4 <Print::printNumber(unsigned long, unsigned char)>
_ZN9permadata20retrieve_from_EEPROMEv():
    9c00:	68 ec       	ldi	r22, 0xC8	; 200
    9c02:	77 e0       	ldi	r23, 0x07	; 7
    9c04:	8e ed       	ldi	r24, 0xDE	; 222
    9c06:	97 e4       	ldi	r25, 0x47	; 71
    9c08:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
print():
    9c0c:	20 e1       	ldi	r18, 0x10	; 16
    9c0e:	41 e0       	ldi	r20, 0x01	; 1
    9c10:	50 e0       	ldi	r21, 0x00	; 0
    9c12:	60 e0       	ldi	r22, 0x00	; 0
    9c14:	70 e0       	ldi	r23, 0x00	; 0
    9c16:	8e ed       	ldi	r24, 0xDE	; 222
    9c18:	97 e4       	ldi	r25, 0x47	; 71
    9c1a:	44 dc       	rcall	.-1912   	; 0x94a4 <Print::printNumber(unsigned long, unsigned char)>
println():
    9c1c:	8e ed       	ldi	r24, 0xDE	; 222
    9c1e:	97 e4       	ldi	r25, 0x47	; 71
    9c20:	5a db       	rcall	.-2380   	; 0x92d6 <Print::println()>
    9c22:	cc cf       	rjmp	.-104    	; 0x9bbc <permadata::retrieve_from_EEPROM()+0x6a>
copyToUI():
    9c24:	89 85       	ldd	r24, Y+9	; 0x09
    9c26:	98 2f       	mov	r25, r24
    9c28:	91 70       	andi	r25, 0x01	; 1
setValue():
    9c2a:	90 93 64 51 	sts	0x5164, r25	; 0x805164 <additionalModes+0x6>
copyToUI():
    9c2e:	81 fb       	bst	r24, 1
    9c30:	99 27       	eor	r25, r25
    9c32:	90 f9       	bld	r25, 0
setValue():
    9c34:	90 93 5d 51 	sts	0x515D, r25	; 0x80515d <reassignStoRcl+0x6>
copyToUI():
    9c38:	82 fb       	bst	r24, 2
    9c3a:	99 27       	eor	r25, r25
    9c3c:	90 f9       	bld	r25, 0
setValue():
    9c3e:	90 93 20 51 	sts	0x5120, r25	; 0x805120 <logEnable+0x6>
copyToUI():
    9c42:	83 fb       	bst	r24, 3
    9c44:	99 27       	eor	r25, r25
    9c46:	90 f9       	bld	r25, 0
setValue():
    9c48:	90 93 11 51 	sts	0x5111, r25	; 0x805111 <logSplitUnit+0x6>
copyToUI():
    9c4c:	84 fb       	bst	r24, 4
    9c4e:	99 27       	eor	r25, r25
    9c50:	90 f9       	bld	r25, 0
setValue():
    9c52:	90 93 0a 51 	sts	0x510A, r25	; 0x80510a <logTimestamp+0x6>
copyToUI():
    9c56:	85 fb       	bst	r24, 5
    9c58:	99 27       	eor	r25, r25
    9c5a:	90 f9       	bld	r25, 0
setValue():
    9c5c:	90 93 03 51 	sts	0x5103, r25	; 0x805103 <logTamb+0x6>
copyToUI():
    9c60:	86 fb       	bst	r24, 6
    9c62:	88 27       	eor	r24, r24
    9c64:	80 f9       	bld	r24, 0
setValue():
    9c66:	80 93 fc 50 	sts	0x50FC, r24	; 0x8050fc <logStat+0x6>
copyToUI():
    9c6a:	1a 85       	ldd	r17, Y+10	; 0x0a
_ZN4U8G211setContrastEh():
    9c6c:	81 2f       	mov	r24, r17
    9c6e:	0e 94 ca 2d 	call	0x5b94	; 0x5b94 <u8x8_SetContrast.constprop.148>
setValue():
    9c72:	10 93 40 51 	sts	0x5140, r17	; 0x805140 <contrastCtrl+0x7>
    9c76:	8b 85       	ldd	r24, Y+11	; 0x0b
    9c78:	80 93 19 51 	sts	0x5119, r24	; 0x805119 <logSkip+0x7>
copyToUI():
    9c7c:	6c 85       	ldd	r22, Y+12	; 0x0c
setValue():
    9c7e:	60 93 ef 50 	sts	0x50EF, r22	; 0x8050ef <logStatSamples+0x7>
setNsamples():
    9c82:	60 93 65 55 	sts	0x5565, r22	; 0x805565 <k197dev+0x300>
    9c86:	70 e0       	ldi	r23, 0x00	; 0
    9c88:	90 e0       	ldi	r25, 0x00	; 0
    9c8a:	80 e0       	ldi	r24, 0x00	; 0
    9c8c:	0e 94 e8 75 	call	0xebd0	; 0xebd0 <__floatunsisf>
    9c90:	9b 01       	movw	r18, r22
    9c92:	ac 01       	movw	r20, r24
    9c94:	60 e0       	ldi	r22, 0x00	; 0
    9c96:	70 e0       	ldi	r23, 0x00	; 0
    9c98:	80 e8       	ldi	r24, 0x80	; 128
    9c9a:	9f e3       	ldi	r25, 0x3F	; 63
    9c9c:	0e 94 7e 77 	call	0xeefc	; 0xeefc <__divsf3>
    9ca0:	60 93 7a 52 	sts	0x527A, r22	; 0x80527a <k197dev+0x15>
    9ca4:	70 93 7b 52 	sts	0x527B, r23	; 0x80527b <k197dev+0x16>
    9ca8:	80 93 7c 52 	sts	0x527C, r24	; 0x80527c <k197dev+0x17>
    9cac:	90 93 7d 52 	sts	0x527D, r25	; 0x80527d <k197dev+0x18>
_ZN9permadata20retrieve_from_EEPROMEv():
    9cb0:	65 eb       	ldi	r22, 0xB5	; 181
    9cb2:	77 e0       	ldi	r23, 0x07	; 7
    9cb4:	8e ed       	ldi	r24, 0xDE	; 222
    9cb6:	97 e4       	ldi	r25, 0x47	; 71
    9cb8:	11 db       	rcall	.-2526   	; 0x92dc <Print::println(__FlashStringHelper const*)>
    9cba:	81 e0       	ldi	r24, 0x01	; 1
    9cbc:	80 cf       	rjmp	.-256    	; 0x9bbe <permadata::retrieve_from_EEPROM()+0x6c>

00009cbe <__class_reloadSettings::change()>:
_ZN22__class_reloadSettings6changeEv():
    9cbe:	49 df       	rcall	.-366    	; 0x9b52 <permadata::retrieve_from_EEPROM()>
    9cc0:	88 23       	and	r24, r24
    9cc2:	21 f0       	breq	.+8      	; 0x9ccc <__class_reloadSettings::change()+0xe>
    9cc4:	8f e7       	ldi	r24, 0x7F	; 127
    9cc6:	91 e5       	ldi	r25, 0x51	; 81
    9cc8:	0c 94 80 43 	jmp	0x8700	; 0x8700 <UImessageBox::show()>
    9ccc:	87 e7       	ldi	r24, 0x77	; 119
    9cce:	91 e5       	ldi	r25, 0x51	; 81
    9cd0:	fb cf       	rjmp	.-10     	; 0x9cc8 <__class_reloadSettings::change()+0xa>

00009cd2 <printHelp()>:
_Z9printHelpv():
    9cd2:	cf 93       	push	r28
    9cd4:	df 93       	push	r29
    9cd6:	87 ec       	ldi	r24, 0xC7	; 199
    9cd8:	95 e4       	ldi	r25, 0x45	; 69
    9cda:	fd da       	rcall	.-2566   	; 0x92d6 <Print::println()>
    9cdc:	66 e9       	ldi	r22, 0x96	; 150
    9cde:	75 e0       	ldi	r23, 0x05	; 5
    9ce0:	87 ec       	ldi	r24, 0xC7	; 199
    9ce2:	95 e4       	ldi	r25, 0x45	; 69
    9ce4:	fb da       	rcall	.-2570   	; 0x92dc <Print::println(__FlashStringHelper const*)>
    9ce6:	65 e7       	ldi	r22, 0x75	; 117
    9ce8:	75 e0       	ldi	r23, 0x05	; 5
    9cea:	87 ec       	ldi	r24, 0xC7	; 199
    9cec:	95 e4       	ldi	r25, 0x45	; 69
    9cee:	f6 da       	rcall	.-2580   	; 0x92dc <Print::println(__FlashStringHelper const*)>
    9cf0:	65 e5       	ldi	r22, 0x55	; 85
    9cf2:	75 e0       	ldi	r23, 0x05	; 5
    9cf4:	87 ec       	ldi	r24, 0xC7	; 199
    9cf6:	95 e4       	ldi	r25, 0x45	; 69
    9cf8:	f1 da       	rcall	.-2590   	; 0x92dc <Print::println(__FlashStringHelper const*)>
    9cfa:	63 e3       	ldi	r22, 0x33	; 51
    9cfc:	75 e0       	ldi	r23, 0x05	; 5
    9cfe:	87 ec       	ldi	r24, 0xC7	; 199
    9d00:	95 e4       	ldi	r25, 0x45	; 69
    9d02:	ec da       	rcall	.-2600   	; 0x92dc <Print::println(__FlashStringHelper const*)>
    9d04:	6c e0       	ldi	r22, 0x0C	; 12
    9d06:	75 e0       	ldi	r23, 0x05	; 5
    9d08:	87 ec       	ldi	r24, 0xC7	; 199
    9d0a:	95 e4       	ldi	r25, 0x45	; 69
    9d0c:	e7 da       	rcall	.-2610   	; 0x92dc <Print::println(__FlashStringHelper const*)>
    9d0e:	68 ed       	ldi	r22, 0xD8	; 216
    9d10:	74 e0       	ldi	r23, 0x04	; 4
    9d12:	87 ec       	ldi	r24, 0xC7	; 199
    9d14:	95 e4       	ldi	r25, 0x45	; 69
    9d16:	e2 da       	rcall	.-2620   	; 0x92dc <Print::println(__FlashStringHelper const*)>
    9d18:	6b eb       	ldi	r22, 0xBB	; 187
    9d1a:	74 e0       	ldi	r23, 0x04	; 4
    9d1c:	87 ec       	ldi	r24, 0xC7	; 199
    9d1e:	95 e4       	ldi	r25, 0x45	; 69
    9d20:	dd da       	rcall	.-2630   	; 0x92dc <Print::println(__FlashStringHelper const*)>
    9d22:	6e e8       	ldi	r22, 0x8E	; 142
    9d24:	74 e0       	ldi	r23, 0x04	; 4
    9d26:	87 ec       	ldi	r24, 0xC7	; 199
    9d28:	95 e4       	ldi	r25, 0x45	; 69
    9d2a:	d8 da       	rcall	.-2640   	; 0x92dc <Print::println(__FlashStringHelper const*)>
printPrompt():
    9d2c:	87 ec       	ldi	r24, 0xC7	; 199
    9d2e:	95 e4       	ldi	r25, 0x45	; 69
    9d30:	d2 da       	rcall	.-2652   	; 0x92d6 <Print::println()>
    9d32:	8d de       	rcall	.-742    	; 0x9a4e <dxUtilClass::reportStack(bool) [clone .constprop.163]>
    9d34:	68 e7       	ldi	r22, 0x78	; 120
    9d36:	74 e0       	ldi	r23, 0x04	; 4
    9d38:	87 ec       	ldi	r24, 0xC7	; 199
    9d3a:	95 e4       	ldi	r25, 0x45	; 69
    9d3c:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    9d40:	c9 e3       	ldi	r28, 0x39	; 57
    9d42:	d2 e5       	ldi	r29, 0x52	; 82
print():
    9d44:	48 81       	ld	r20, Y
    9d46:	59 81       	ldd	r21, Y+1	; 0x01
    9d48:	6a 81       	ldd	r22, Y+2	; 0x02
    9d4a:	7b 81       	ldd	r23, Y+3	; 0x03
    9d4c:	2a e0       	ldi	r18, 0x0A	; 10
    9d4e:	87 ec       	ldi	r24, 0xC7	; 199
    9d50:	95 e4       	ldi	r25, 0x45	; 69
    9d52:	a8 db       	rcall	.-2224   	; 0x94a4 <Print::printNumber(unsigned long, unsigned char)>
println():
    9d54:	87 ec       	ldi	r24, 0xC7	; 199
    9d56:	95 e4       	ldi	r25, 0x45	; 69
    9d58:	be da       	rcall	.-2692   	; 0x92d6 <Print::println()>
printPrompt():
    9d5a:	18 82       	st	Y, r1
    9d5c:	19 82       	std	Y+1, r1	; 0x01
    9d5e:	1a 82       	std	Y+2, r1	; 0x02
    9d60:	1b 82       	std	Y+3, r1	; 0x03
    9d62:	65 e7       	ldi	r22, 0x75	; 117
    9d64:	74 e0       	ldi	r23, 0x04	; 4
    9d66:	87 ec       	ldi	r24, 0xC7	; 199
    9d68:	95 e4       	ldi	r25, 0x45	; 69
_Z9printHelpv():
    9d6a:	df 91       	pop	r29
    9d6c:	cf 91       	pop	r28
printPrompt():
    9d6e:	b6 ca       	rjmp	.-2708   	; 0x92dc <Print::println(__FlashStringHelper const*)>

00009d70 <Print::println(char const*)>:
_ZN5Print7printlnEPKc():
    9d70:	0f 93       	push	r16
    9d72:	1f 93       	push	r17
    9d74:	cf 93       	push	r28
    9d76:	df 93       	push	r29
    9d78:	8c 01       	movw	r16, r24
    9d7a:	d0 e0       	ldi	r29, 0x00	; 0
    9d7c:	c0 e0       	ldi	r28, 0x00	; 0
write():
    9d7e:	61 15       	cp	r22, r1
    9d80:	71 05       	cpc	r23, r1
    9d82:	11 f0       	breq	.+4      	; 0x9d88 <Print::println(char const*)+0x18>
    9d84:	99 da       	rcall	.-2766   	; 0x92b8 <Print::write(char const*) [clone .part.0]>
    9d86:	ec 01       	movw	r28, r24
_ZN5Print7printlnEPKc():
    9d88:	c8 01       	movw	r24, r16
    9d8a:	a5 da       	rcall	.-2742   	; 0x92d6 <Print::println()>
    9d8c:	8c 0f       	add	r24, r28
    9d8e:	9d 1f       	adc	r25, r29
    9d90:	df 91       	pop	r29
    9d92:	cf 91       	pop	r28
    9d94:	1f 91       	pop	r17
    9d96:	0f 91       	pop	r16
    9d98:	08 95       	ret

00009d9a <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]>:
_ZN10K197device17k197_cache_struct13resampleGraphEj.constprop.70():
    9d9a:	2f 92       	push	r2
    9d9c:	3f 92       	push	r3
    9d9e:	4f 92       	push	r4
    9da0:	5f 92       	push	r5
    9da2:	6f 92       	push	r6
    9da4:	7f 92       	push	r7
    9da6:	8f 92       	push	r8
    9da8:	9f 92       	push	r9
    9daa:	af 92       	push	r10
    9dac:	bf 92       	push	r11
    9dae:	cf 92       	push	r12
    9db0:	df 92       	push	r13
    9db2:	ef 92       	push	r14
    9db4:	ff 92       	push	r15
    9db6:	0f 93       	push	r16
    9db8:	1f 93       	push	r17
    9dba:	cf 93       	push	r28
    9dbc:	df 93       	push	r29
    9dbe:	cd b7       	in	r28, 0x3d	; 61
    9dc0:	de b7       	in	r29, 0x3e	; 62
    9dc2:	2f 97       	sbiw	r28, 0x0f	; 15
    9dc4:	cd bf       	out	0x3d, r28	; 61
    9dc6:	de bf       	out	0x3e, r29	; 62
    9dc8:	1c 01       	movw	r2, r24
    9dca:	2d b7       	in	r18, 0x3d	; 61
    9dcc:	3e b7       	in	r19, 0x3e	; 62
    9dce:	28 87       	std	Y+8, r18	; 0x08
    9dd0:	39 87       	std	Y+9, r19	; 0x09
    9dd2:	30 91 63 55 	lds	r19, 0x5563	; 0x805563 <k197dev+0x2fe>
    9dd6:	39 83       	std	Y+1, r19	; 0x01
    9dd8:	33 23       	and	r19, r19
    9dda:	09 f4       	brne	.+2      	; 0x9dde <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x44>
    9ddc:	9a c1       	rjmp	.+820    	; 0xa112 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x378>
    9dde:	e0 90 68 55 	lds	r14, 0x5568	; 0x805568 <k197dev+0x303>
    9de2:	f0 90 69 55 	lds	r15, 0x5569	; 0x805569 <k197dev+0x304>
    9de6:	e8 16       	cp	r14, r24
    9de8:	f9 06       	cpc	r15, r25
    9dea:	09 f4       	brne	.+2      	; 0x9dee <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x54>
    9dec:	92 c1       	rjmp	.+804    	; 0xa112 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x378>
    9dee:	e1 14       	cp	r14, r1
    9df0:	f1 04       	cpc	r15, r1
    9df2:	09 f0       	breq	.+2      	; 0x9df6 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x5c>
    9df4:	a5 c0       	rjmp	.+330    	; 0x9f40 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x1a6>
    9df6:	41 e0       	ldi	r20, 0x01	; 1
    9df8:	50 e0       	ldi	r21, 0x00	; 0
    9dfa:	4a 83       	std	Y+2, r20	; 0x02
    9dfc:	5b 83       	std	Y+3, r21	; 0x03
    9dfe:	41 01       	movw	r8, r2
    9e00:	21 14       	cp	r2, r1
    9e02:	31 04       	cpc	r3, r1
    9e04:	19 f4       	brne	.+6      	; 0x9e0c <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x72>
    9e06:	88 24       	eor	r8, r8
    9e08:	83 94       	inc	r8
    9e0a:	91 2c       	mov	r9, r1
    9e0c:	59 81       	ldd	r21, Y+1	; 0x01
    9e0e:	c5 2e       	mov	r12, r21
    9e10:	d1 2c       	mov	r13, r1
    9e12:	56 01       	movw	r10, r12
    9e14:	81 e0       	ldi	r24, 0x01	; 1
    9e16:	a8 1a       	sub	r10, r24
    9e18:	b1 08       	sbc	r11, r1
    9e1a:	80 91 66 55 	lds	r24, 0x5566	; 0x805566 <k197dev+0x301>
    9e1e:	90 91 67 55 	lds	r25, 0x5567	; 0x805567 <k197dev+0x302>
    9e22:	b4 01       	movw	r22, r8
    9e24:	0e 94 2c 78 	call	0xf058	; 0xf058 <__udivmodhi4>
    9e28:	8b 01       	movw	r16, r22
    9e2a:	8e 87       	std	Y+14, r24	; 0x0e
    9e2c:	9f 87       	std	Y+15, r25	; 0x0f
    9e2e:	2a 81       	ldd	r18, Y+2	; 0x02
    9e30:	3b 81       	ldd	r19, Y+3	; 0x03
    9e32:	d5 01       	movw	r26, r10
    9e34:	0e 94 9a 78 	call	0xf134	; 0xf134 <__usmulhisi3>
    9e38:	94 01       	movw	r18, r8
    9e3a:	50 e0       	ldi	r21, 0x00	; 0
    9e3c:	40 e0       	ldi	r20, 0x00	; 0
    9e3e:	0e 94 75 78 	call	0xf0ea	; 0xf0ea <__divmodsi4>
    9e42:	29 01       	movw	r4, r18
    9e44:	3a 01       	movw	r6, r20
    9e46:	9f ef       	ldi	r25, 0xFF	; 255
    9e48:	49 1a       	sub	r4, r25
    9e4a:	59 0a       	sbc	r5, r25
    9e4c:	69 0a       	sbc	r6, r25
    9e4e:	79 0a       	sbc	r7, r25
    9e50:	40 0e       	add	r4, r16
    9e52:	51 1e       	adc	r5, r17
    9e54:	61 1c       	adc	r6, r1
    9e56:	71 1c       	adc	r7, r1
    9e58:	a5 eb       	ldi	r26, 0xB5	; 181
    9e5a:	4a 16       	cp	r4, r26
    9e5c:	51 04       	cpc	r5, r1
    9e5e:	61 04       	cpc	r6, r1
    9e60:	71 04       	cpc	r7, r1
    9e62:	2c f0       	brlt	.+10     	; 0x9e6e <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0xd4>
    9e64:	f4 eb       	ldi	r31, 0xB4	; 180
    9e66:	4f 2e       	mov	r4, r31
    9e68:	51 2c       	mov	r5, r1
    9e6a:	61 2c       	mov	r6, r1
    9e6c:	71 2c       	mov	r7, r1
    9e6e:	92 01       	movw	r18, r4
    9e70:	22 0f       	add	r18, r18
    9e72:	33 1f       	adc	r19, r19
    9e74:	22 0f       	add	r18, r18
    9e76:	33 1f       	adc	r19, r19
    9e78:	2a 87       	std	Y+10, r18	; 0x0a
    9e7a:	3b 87       	std	Y+11, r19	; 0x0b
    9e7c:	4d b7       	in	r20, 0x3d	; 61
    9e7e:	5e b7       	in	r21, 0x3e	; 62
    9e80:	42 1b       	sub	r20, r18
    9e82:	53 0b       	sbc	r21, r19
    9e84:	4d bf       	out	0x3d, r20	; 61
    9e86:	5e bf       	out	0x3e, r21	; 62
    9e88:	8d b7       	in	r24, 0x3d	; 61
    9e8a:	9e b7       	in	r25, 0x3e	; 62
    9e8c:	01 96       	adiw	r24, 0x01	; 1
    9e8e:	8c 83       	std	Y+4, r24	; 0x04
    9e90:	9d 83       	std	Y+5, r25	; 0x05
    9e92:	80 91 62 55 	lds	r24, 0x5562	; 0x805562 <k197dev+0x2fd>
    9e96:	90 e0       	ldi	r25, 0x00	; 0
    9e98:	9c 01       	movw	r18, r24
    9e9a:	2f 5f       	subi	r18, 0xFF	; 255
    9e9c:	3f 4f       	sbci	r19, 0xFF	; 255
    9e9e:	2e 83       	std	Y+6, r18	; 0x06
    9ea0:	3f 83       	std	Y+7, r19	; 0x07
    9ea2:	e2 14       	cp	r14, r2
    9ea4:	f3 04       	cpc	r15, r3
    9ea6:	08 f0       	brcs	.+2      	; 0x9eaa <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x110>
    9ea8:	7e c0       	rjmp	.+252    	; 0x9fa6 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x20c>
    9eaa:	b1 2c       	mov	r11, r1
    9eac:	a1 2c       	mov	r10, r1
    9eae:	f1 2c       	mov	r15, r1
    9eb0:	e1 2c       	mov	r14, r1
    9eb2:	f0 e0       	ldi	r31, 0x00	; 0
    9eb4:	e0 e0       	ldi	r30, 0x00	; 0
_ZN10K197device17k197_cache_struct13grGetArrayIdxEj():
    9eb6:	49 81       	ldd	r20, Y+1	; 0x01
    9eb8:	24 2f       	mov	r18, r20
    9eba:	30 e0       	ldi	r19, 0x00	; 0
_ZN10K197device17k197_cache_struct13resampleGraphEj.constprop.70():
    9ebc:	8e 9c       	mul	r8, r14
    9ebe:	c0 01       	movw	r24, r0
    9ec0:	8f 9c       	mul	r8, r15
    9ec2:	90 0d       	add	r25, r0
    9ec4:	9e 9c       	mul	r9, r14
    9ec6:	90 0d       	add	r25, r0
    9ec8:	11 24       	eor	r1, r1
    9eca:	a8 16       	cp	r10, r24
    9ecc:	b9 06       	cpc	r11, r25
    9ece:	08 f4       	brcc	.+2      	; 0x9ed2 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x138>
    9ed0:	60 c0       	rjmp	.+192    	; 0x9f92 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x1f8>
    9ed2:	c7 01       	movw	r24, r14
    9ed4:	b0 e0       	ldi	r27, 0x00	; 0
    9ed6:	a0 e0       	ldi	r26, 0x00	; 0
    9ed8:	84 15       	cp	r24, r4
    9eda:	95 05       	cpc	r25, r5
    9edc:	a6 05       	cpc	r26, r6
    9ede:	b7 05       	cpc	r27, r7
    9ee0:	90 f1       	brcs	.+100    	; 0x9f46 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x1ac>
    9ee2:	6c e7       	ldi	r22, 0x7C	; 124
    9ee4:	73 e4       	ldi	r23, 0x43	; 67
    9ee6:	8e ed       	ldi	r24, 0xDE	; 222
    9ee8:	97 e4       	ldi	r25, 0x47	; 71
    9eea:	42 df       	rcall	.-380    	; 0x9d70 <Print::println(char const*)>
    9eec:	c7 01       	movw	r24, r14
    9eee:	b0 e0       	ldi	r27, 0x00	; 0
    9ef0:	a0 e0       	ldi	r26, 0x00	; 0
    9ef2:	48 16       	cp	r4, r24
    9ef4:	59 06       	cpc	r5, r25
    9ef6:	6a 06       	cpc	r6, r26
    9ef8:	7b 06       	cpc	r7, r27
    9efa:	29 f0       	breq	.+10     	; 0x9f06 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x16c>
    9efc:	6d e8       	ldi	r22, 0x8D	; 141
    9efe:	73 e4       	ldi	r23, 0x43	; 67
    9f00:	8e ed       	ldi	r24, 0xDE	; 222
    9f02:	97 e4       	ldi	r25, 0x47	; 71
    9f04:	35 df       	rcall	.-406    	; 0x9d70 <Print::println(char const*)>
    9f06:	8f ef       	ldi	r24, 0xFF	; 255
    9f08:	8e 0d       	add	r24, r14
    9f0a:	80 93 62 55 	sts	0x5562, r24	; 0x805562 <k197dev+0x2fd>
    9f0e:	e0 92 63 55 	sts	0x5563, r14	; 0x805563 <k197dev+0x2fe>
    9f12:	20 91 63 55 	lds	r18, 0x5563	; 0x805563 <k197dev+0x2fe>
    9f16:	30 e0       	ldi	r19, 0x00	; 0
    9f18:	ec 81       	ldd	r30, Y+4	; 0x04
    9f1a:	fd 81       	ldd	r31, Y+5	; 0x05
    9f1c:	a2 e9       	ldi	r26, 0x92	; 146
    9f1e:	b2 e5       	ldi	r27, 0x52	; 82
    9f20:	90 e0       	ldi	r25, 0x00	; 0
    9f22:	80 e0       	ldi	r24, 0x00	; 0
    9f24:	82 17       	cp	r24, r18
    9f26:	93 07       	cpc	r25, r19
    9f28:	0c f0       	brlt	.+2      	; 0x9f2c <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x192>
    9f2a:	d1 c0       	rjmp	.+418    	; 0xa0ce <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x334>
    9f2c:	41 91       	ld	r20, Z+
    9f2e:	51 91       	ld	r21, Z+
    9f30:	61 91       	ld	r22, Z+
    9f32:	71 91       	ld	r23, Z+
    9f34:	4d 93       	st	X+, r20
    9f36:	5d 93       	st	X+, r21
    9f38:	6d 93       	st	X+, r22
    9f3a:	7d 93       	st	X+, r23
    9f3c:	01 96       	adiw	r24, 0x01	; 1
    9f3e:	f2 cf       	rjmp	.-28     	; 0x9f24 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x18a>
    9f40:	ea 82       	std	Y+2, r14	; 0x02
    9f42:	fb 82       	std	Y+3, r15	; 0x03
    9f44:	5c cf       	rjmp	.-328    	; 0x9dfe <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x64>
    9f46:	87 01       	movw	r16, r14
    9f48:	00 0f       	add	r16, r16
    9f4a:	11 1f       	adc	r17, r17
    9f4c:	00 0f       	add	r16, r16
    9f4e:	11 1f       	adc	r17, r17
    9f50:	8c 81       	ldd	r24, Y+4	; 0x04
    9f52:	9d 81       	ldd	r25, Y+5	; 0x05
    9f54:	08 0f       	add	r16, r24
    9f56:	19 1f       	adc	r17, r25
_ZN10K197device17k197_cache_struct13grGetArrayIdxEj():
    9f58:	8e 81       	ldd	r24, Y+6	; 0x06
    9f5a:	9f 81       	ldd	r25, Y+7	; 0x07
    9f5c:	8e 0f       	add	r24, r30
    9f5e:	9f 1f       	adc	r25, r31
    9f60:	b9 01       	movw	r22, r18
    9f62:	0e 94 2c 78 	call	0xf058	; 0xf058 <__udivmodhi4>
_ZN10K197device17k197_cache_struct13resampleGraphEj.constprop.70():
    9f66:	dc 01       	movw	r26, r24
    9f68:	aa 0f       	add	r26, r26
    9f6a:	bb 1f       	adc	r27, r27
    9f6c:	aa 0f       	add	r26, r26
    9f6e:	bb 1f       	adc	r27, r27
    9f70:	a3 58       	subi	r26, 0x83	; 131
    9f72:	bd 4a       	sbci	r27, 0xAD	; 173
    9f74:	55 96       	adiw	r26, 0x15	; 21
    9f76:	4d 91       	ld	r20, X+
    9f78:	5d 91       	ld	r21, X+
    9f7a:	6d 91       	ld	r22, X+
    9f7c:	7c 91       	ld	r23, X
    9f7e:	58 97       	sbiw	r26, 0x18	; 24
    9f80:	d8 01       	movw	r26, r16
    9f82:	4d 93       	st	X+, r20
    9f84:	5d 93       	st	X+, r21
    9f86:	6d 93       	st	X+, r22
    9f88:	7c 93       	st	X, r23
    9f8a:	13 97       	sbiw	r26, 0x03	; 3
    9f8c:	bf ef       	ldi	r27, 0xFF	; 255
    9f8e:	eb 1a       	sub	r14, r27
    9f90:	fb 0a       	sbc	r15, r27
    9f92:	31 96       	adiw	r30, 0x01	; 1
    9f94:	4a 81       	ldd	r20, Y+2	; 0x02
    9f96:	5b 81       	ldd	r21, Y+3	; 0x03
    9f98:	a4 0e       	add	r10, r20
    9f9a:	b5 1e       	adc	r11, r21
    9f9c:	ec 15       	cp	r30, r12
    9f9e:	fd 05       	cpc	r31, r13
    9fa0:	0c f4       	brge	.+2      	; 0x9fa4 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x20a>
    9fa2:	8c cf       	rjmp	.-232    	; 0x9ebc <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x122>
    9fa4:	a3 cf       	rjmp	.-186    	; 0x9eec <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x152>
    9fa6:	92 01       	movw	r18, r4
    9fa8:	21 50       	subi	r18, 0x01	; 1
    9faa:	31 09       	sbc	r19, r1
    9fac:	2c 87       	std	Y+12, r18	; 0x0c
    9fae:	3d 87       	std	Y+13, r19	; 0x0d
_ZN10K197device17k197_cache_struct13grGetArrayIdxEj():
    9fb0:	ce 80       	ldd	r12, Y+6	; 0x06
    9fb2:	df 80       	ldd	r13, Y+7	; 0x07
    9fb4:	ca 0c       	add	r12, r10
    9fb6:	db 1c       	adc	r13, r11
    9fb8:	90 e0       	ldi	r25, 0x00	; 0
    9fba:	80 e0       	ldi	r24, 0x00	; 0
    9fbc:	39 81       	ldd	r19, Y+1	; 0x01
    9fbe:	e3 2e       	mov	r14, r19
    9fc0:	f1 2c       	mov	r15, r1
    9fc2:	9c 01       	movw	r18, r24
    9fc4:	21 50       	subi	r18, 0x01	; 1
    9fc6:	31 09       	sbc	r19, r1
_ZN10K197device17k197_cache_struct13resampleGraphEj.constprop.70():
    9fc8:	91 95       	neg	r25
    9fca:	81 95       	neg	r24
    9fcc:	91 09       	sbc	r25, r1
    9fce:	80 17       	cp	r24, r16
    9fd0:	91 07       	cpc	r25, r17
    9fd2:	20 f5       	brcc	.+72     	; 0xa01c <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x282>
    9fd4:	f9 01       	movw	r30, r18
    9fd6:	ee 0f       	add	r30, r30
    9fd8:	ff 1f       	adc	r31, r31
    9fda:	ee 0f       	add	r30, r30
    9fdc:	ff 1f       	adc	r31, r31
    9fde:	4a 85       	ldd	r20, Y+10	; 0x0a
    9fe0:	5b 85       	ldd	r21, Y+11	; 0x0b
    9fe2:	e4 0f       	add	r30, r20
    9fe4:	f5 1f       	adc	r31, r21
    9fe6:	8c 81       	ldd	r24, Y+4	; 0x04
    9fe8:	9d 81       	ldd	r25, Y+5	; 0x05
    9fea:	e8 0f       	add	r30, r24
    9fec:	f9 1f       	adc	r31, r25
_ZN10K197device17k197_cache_struct13grGetArrayIdxEj():
    9fee:	c6 01       	movw	r24, r12
    9ff0:	b7 01       	movw	r22, r14
    9ff2:	0e 94 2c 78 	call	0xf058	; 0xf058 <__udivmodhi4>
_ZN10K197device17k197_cache_struct13resampleGraphEj.constprop.70():
    9ff6:	dc 01       	movw	r26, r24
    9ff8:	aa 0f       	add	r26, r26
    9ffa:	bb 1f       	adc	r27, r27
    9ffc:	aa 0f       	add	r26, r26
    9ffe:	bb 1f       	adc	r27, r27
    a000:	a3 58       	subi	r26, 0x83	; 131
    a002:	bd 4a       	sbci	r27, 0xAD	; 173
    a004:	55 96       	adiw	r26, 0x15	; 21
    a006:	8d 91       	ld	r24, X+
    a008:	9d 91       	ld	r25, X+
    a00a:	0d 90       	ld	r0, X+
    a00c:	bc 91       	ld	r27, X
    a00e:	a0 2d       	mov	r26, r0
    a010:	80 83       	st	Z, r24
    a012:	91 83       	std	Z+1, r25	; 0x01
    a014:	a2 83       	std	Z+2, r26	; 0x02
    a016:	b3 83       	std	Z+3, r27	; 0x03
    a018:	c9 01       	movw	r24, r18
    a01a:	d3 cf       	rjmp	.-90     	; 0x9fc2 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x228>
    a01c:	ec 85       	ldd	r30, Y+12	; 0x0c
    a01e:	fd 85       	ldd	r31, Y+13	; 0x0d
    a020:	e0 1b       	sub	r30, r16
    a022:	f1 0b       	sbc	r31, r17
    a024:	ae 85       	ldd	r26, Y+14	; 0x0e
    a026:	bf 85       	ldd	r27, Y+15	; 0x0f
    a028:	a0 93 66 55 	sts	0x5566, r26	; 0x805566 <k197dev+0x301>
    a02c:	b0 93 67 55 	sts	0x5567, r27	; 0x805567 <k197dev+0x302>
    a030:	7f 01       	movw	r14, r30
    a032:	ee 0c       	add	r14, r14
    a034:	ff 1c       	adc	r15, r15
    a036:	ee 0c       	add	r14, r14
    a038:	ff 1c       	adc	r15, r15
    a03a:	2c 81       	ldd	r18, Y+4	; 0x04
    a03c:	3d 81       	ldd	r19, Y+5	; 0x05
    a03e:	e2 0e       	add	r14, r18
    a040:	f3 1e       	adc	r15, r19
    a042:	8e 9e       	mul	r8, r30
    a044:	60 01       	movw	r12, r0
    a046:	8f 9e       	mul	r8, r31
    a048:	d0 0c       	add	r13, r0
    a04a:	9e 9e       	mul	r9, r30
    a04c:	d0 0c       	add	r13, r0
    a04e:	11 24       	eor	r1, r1
_ZN10K197device17k197_cache_struct13grGetArrayIdxEj():
    a050:	49 81       	ldd	r20, Y+1	; 0x01
    a052:	24 2f       	mov	r18, r20
    a054:	30 e0       	ldi	r19, 0x00	; 0
_ZN10K197device17k197_cache_struct13resampleGraphEj.constprop.70():
    a056:	f7 fd       	sbrc	r31, 7
    a058:	33 c0       	rjmp	.+102    	; 0xa0c0 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x326>
    a05a:	aa 81       	ldd	r26, Y+2	; 0x02
    a05c:	bb 81       	ldd	r27, Y+3	; 0x03
    a05e:	aa 9d       	mul	r26, r10
    a060:	c0 01       	movw	r24, r0
    a062:	ab 9d       	mul	r26, r11
    a064:	90 0d       	add	r25, r0
    a066:	ba 9d       	mul	r27, r10
    a068:	90 0d       	add	r25, r0
    a06a:	11 24       	eor	r1, r1
    a06c:	c8 16       	cp	r12, r24
    a06e:	d9 06       	cpc	r13, r25
    a070:	30 f4       	brcc	.+12     	; 0xa07e <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x2e4>
    a072:	a1 14       	cp	r10, r1
    a074:	b1 04       	cpc	r11, r1
    a076:	19 f0       	breq	.+6      	; 0xa07e <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x2e4>
    a078:	b1 e0       	ldi	r27, 0x01	; 1
    a07a:	ab 1a       	sub	r10, r27
    a07c:	b1 08       	sbc	r11, r1
_ZN10K197device17k197_cache_struct13grGetArrayIdxEj():
    a07e:	8e 81       	ldd	r24, Y+6	; 0x06
    a080:	9f 81       	ldd	r25, Y+7	; 0x07
    a082:	8a 0d       	add	r24, r10
    a084:	9b 1d       	adc	r25, r11
    a086:	b9 01       	movw	r22, r18
    a088:	0e 94 2c 78 	call	0xf058	; 0xf058 <__udivmodhi4>
_ZN10K197device17k197_cache_struct13resampleGraphEj.constprop.70():
    a08c:	dc 01       	movw	r26, r24
    a08e:	aa 0f       	add	r26, r26
    a090:	bb 1f       	adc	r27, r27
    a092:	aa 0f       	add	r26, r26
    a094:	bb 1f       	adc	r27, r27
    a096:	a3 58       	subi	r26, 0x83	; 131
    a098:	bd 4a       	sbci	r27, 0xAD	; 173
    a09a:	55 96       	adiw	r26, 0x15	; 21
    a09c:	4d 91       	ld	r20, X+
    a09e:	5d 91       	ld	r21, X+
    a0a0:	6d 91       	ld	r22, X+
    a0a2:	7c 91       	ld	r23, X
    a0a4:	58 97       	sbiw	r26, 0x18	; 24
    a0a6:	d7 01       	movw	r26, r14
    a0a8:	4d 93       	st	X+, r20
    a0aa:	5d 93       	st	X+, r21
    a0ac:	6d 93       	st	X+, r22
    a0ae:	7c 93       	st	X, r23
    a0b0:	13 97       	sbiw	r26, 0x03	; 3
    a0b2:	31 97       	sbiw	r30, 0x01	; 1
    a0b4:	b4 e0       	ldi	r27, 0x04	; 4
    a0b6:	eb 1a       	sub	r14, r27
    a0b8:	f1 08       	sbc	r15, r1
    a0ba:	c8 18       	sub	r12, r8
    a0bc:	d9 08       	sbc	r13, r9
    a0be:	cb cf       	rjmp	.-106    	; 0xa056 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x2bc>
    a0c0:	8f ef       	ldi	r24, 0xFF	; 255
    a0c2:	84 0d       	add	r24, r4
    a0c4:	80 93 62 55 	sts	0x5562, r24	; 0x805562 <k197dev+0x2fd>
    a0c8:	40 92 63 55 	sts	0x5563, r4	; 0x805563 <k197dev+0x2fe>
    a0cc:	22 cf       	rjmp	.-444    	; 0x9f12 <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x178>
    a0ce:	20 92 68 55 	sts	0x5568, r2	; 0x805568 <k197dev+0x303>
    a0d2:	30 92 69 55 	sts	0x5569, r3	; 0x805569 <k197dev+0x304>
    a0d6:	28 85       	ldd	r18, Y+8	; 0x08
    a0d8:	39 85       	ldd	r19, Y+9	; 0x09
    a0da:	2d bf       	out	0x3d, r18	; 61
    a0dc:	3e bf       	out	0x3e, r19	; 62
    a0de:	88 85       	ldd	r24, Y+8	; 0x08
    a0e0:	99 85       	ldd	r25, Y+9	; 0x09
    a0e2:	8d bf       	out	0x3d, r24	; 61
    a0e4:	9e bf       	out	0x3e, r25	; 62
    a0e6:	2f 96       	adiw	r28, 0x0f	; 15
    a0e8:	cd bf       	out	0x3d, r28	; 61
    a0ea:	de bf       	out	0x3e, r29	; 62
    a0ec:	df 91       	pop	r29
    a0ee:	cf 91       	pop	r28
    a0f0:	1f 91       	pop	r17
    a0f2:	0f 91       	pop	r16
    a0f4:	ff 90       	pop	r15
    a0f6:	ef 90       	pop	r14
    a0f8:	df 90       	pop	r13
    a0fa:	cf 90       	pop	r12
    a0fc:	bf 90       	pop	r11
    a0fe:	af 90       	pop	r10
    a100:	9f 90       	pop	r9
    a102:	8f 90       	pop	r8
    a104:	7f 90       	pop	r7
    a106:	6f 90       	pop	r6
    a108:	5f 90       	pop	r5
    a10a:	4f 90       	pop	r4
    a10c:	3f 90       	pop	r3
    a10e:	2f 90       	pop	r2
    a110:	08 95       	ret
    a112:	48 85       	ldd	r20, Y+8	; 0x08
    a114:	59 85       	ldd	r21, Y+9	; 0x09
    a116:	4d bf       	out	0x3d, r20	; 61
    a118:	5e bf       	out	0x3e, r21	; 62
    a11a:	e1 cf       	rjmp	.-62     	; 0xa0de <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]+0x344>

0000a11c <__class_gr_sample_time::setValue(unsigned char)>:
_ZN22__class_gr_sample_time8setValueEh():
    a11c:	23 e0       	ldi	r18, 0x03	; 3
    a11e:	62 9f       	mul	r22, r18
    a120:	c0 01       	movw	r24, r0
    a122:	11 24       	eor	r1, r1
    a124:	3a ce       	rjmp	.-908    	; 0x9d9a <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]>

0000a126 <Print::print(char const*)>:
_ZN5Print5printEPKc():
    a126:	61 15       	cp	r22, r1
    a128:	71 05       	cpc	r23, r1
    a12a:	09 f0       	breq	.+2      	; 0xa12e <Print::print(char const*)+0x8>
    a12c:	c5 c8       	rjmp	.-3702   	; 0x92b8 <Print::write(char const*) [clone .part.0]>
    a12e:	90 e0       	ldi	r25, 0x00	; 0
    a130:	80 e0       	ldi	r24, 0x00	; 0
    a132:	08 95       	ret

0000a134 <dumpFifoStatus(char const*)>:
_Z14dumpFifoStatusPKc():
    a134:	cf 93       	push	r28
    a136:	df 93       	push	r29
    a138:	bc 01       	movw	r22, r24
    a13a:	8e ed       	ldi	r24, 0xDE	; 222
    a13c:	97 e4       	ldi	r25, 0x47	; 71
    a13e:	f3 df       	rcall	.-26     	; 0xa126 <Print::print(char const*)>
    a140:	63 e2       	ldi	r22, 0x23	; 35
    a142:	77 e0       	ldi	r23, 0x07	; 7
    a144:	8e ed       	ldi	r24, 0xDE	; 222
    a146:	97 e4       	ldi	r25, 0x47	; 71
    a148:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    a14c:	d0 e0       	ldi	r29, 0x00	; 0
    a14e:	c0 e0       	ldi	r28, 0x00	; 0
    a150:	6f e1       	ldi	r22, 0x1F	; 31
    a152:	77 e0       	ldi	r23, 0x07	; 7
    a154:	8e ed       	ldi	r24, 0xDE	; 222
    a156:	97 e4       	ldi	r25, 0x47	; 71
    a158:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    a15c:	fe 01       	movw	r30, r28
    a15e:	ed 5b       	subi	r30, 0xBD	; 189
    a160:	ff 4b       	sbci	r31, 0xBF	; 191
    a162:	60 81       	ld	r22, Z
    a164:	40 e1       	ldi	r20, 0x10	; 16
    a166:	50 e0       	ldi	r21, 0x00	; 0
    a168:	8e ed       	ldi	r24, 0xDE	; 222
    a16a:	97 e4       	ldi	r25, 0x47	; 71
    a16c:	e0 d9       	rcall	.-3136   	; 0x952e <Print::print(unsigned char, int)>
    a16e:	21 96       	adiw	r28, 0x01	; 1
    a170:	c8 30       	cpi	r28, 0x08	; 8
    a172:	d1 05       	cpc	r29, r1
    a174:	a1 f5       	brne	.+104    	; 0xa1de <dumpFifoStatus(char const*)+0xaa>
    a176:	8e ed       	ldi	r24, 0xDE	; 222
    a178:	97 e4       	ldi	r25, 0x47	; 71
    a17a:	ad d8       	rcall	.-3750   	; 0x92d6 <Print::println()>
    a17c:	61 e1       	ldi	r22, 0x11	; 17
    a17e:	77 e0       	ldi	r23, 0x07	; 7
    a180:	8e ed       	ldi	r24, 0xDE	; 222
    a182:	97 e4       	ldi	r25, 0x47	; 71
    a184:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    a188:	60 91 72 45 	lds	r22, 0x4572	; 0x804572 <fifo_size>
    a18c:	06 2e       	mov	r0, r22
    a18e:	00 0c       	add	r0, r0
    a190:	77 0b       	sbc	r23, r23
    a192:	4a e0       	ldi	r20, 0x0A	; 10
    a194:	50 e0       	ldi	r21, 0x00	; 0
    a196:	8e ed       	ldi	r24, 0xDE	; 222
    a198:	97 e4       	ldi	r25, 0x47	; 71
    a19a:	21 dc       	rcall	.-1982   	; 0x99de <Print::print(int, int)>
    a19c:	63 e0       	ldi	r22, 0x03	; 3
    a19e:	77 e0       	ldi	r23, 0x07	; 7
    a1a0:	8e ed       	ldi	r24, 0xDE	; 222
    a1a2:	97 e4       	ldi	r25, 0x47	; 71
    a1a4:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    a1a8:	60 91 71 45 	lds	r22, 0x4571	; 0x804571 <fifo_front>
    a1ac:	06 2e       	mov	r0, r22
    a1ae:	00 0c       	add	r0, r0
    a1b0:	77 0b       	sbc	r23, r23
    a1b2:	4a e0       	ldi	r20, 0x0A	; 10
    a1b4:	50 e0       	ldi	r21, 0x00	; 0
    a1b6:	8e ed       	ldi	r24, 0xDE	; 222
    a1b8:	97 e4       	ldi	r25, 0x47	; 71
    a1ba:	11 dc       	rcall	.-2014   	; 0x99de <Print::print(int, int)>
    a1bc:	66 ef       	ldi	r22, 0xF6	; 246
    a1be:	76 e0       	ldi	r23, 0x06	; 6
    a1c0:	8e ed       	ldi	r24, 0xDE	; 222
    a1c2:	97 e4       	ldi	r25, 0x47	; 71
    a1c4:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    a1c8:	6f b3       	in	r22, 0x1f	; 31
    a1ca:	4a e0       	ldi	r20, 0x0A	; 10
    a1cc:	50 e0       	ldi	r21, 0x00	; 0
    a1ce:	8e ed       	ldi	r24, 0xDE	; 222
    a1d0:	97 e4       	ldi	r25, 0x47	; 71
    a1d2:	ad d9       	rcall	.-3238   	; 0x952e <Print::print(unsigned char, int)>
    a1d4:	8e ed       	ldi	r24, 0xDE	; 222
    a1d6:	97 e4       	ldi	r25, 0x47	; 71
    a1d8:	df 91       	pop	r29
    a1da:	cf 91       	pop	r28
    a1dc:	7c c8       	rjmp	.-3848   	; 0x92d6 <Print::println()>
    a1de:	6c e2       	ldi	r22, 0x2C	; 44
    a1e0:	8e ed       	ldi	r24, 0xDE	; 222
    a1e2:	97 e4       	ldi	r25, 0x47	; 71
    a1e4:	0e 94 bd 2f 	call	0x5f7a	; 0x5f7a <Print::print(char)>
    a1e8:	b3 cf       	rjmp	.-154    	; 0xa150 <dumpFifoStatus(char const*)+0x1c>

0000a1ea <debugUtil::write(char const*)>:
_ZN9debugUtil5writeEPKc():
    a1ea:	ef 92       	push	r14
    a1ec:	ff 92       	push	r15
    a1ee:	0f 93       	push	r16
    a1f0:	1f 93       	push	r17
    a1f2:	cf 93       	push	r28
    a1f4:	df 93       	push	r29
    a1f6:	ec 01       	movw	r28, r24
    a1f8:	8b 01       	movw	r16, r22
    a1fa:	8c 81       	ldd	r24, Y+4	; 0x04
    a1fc:	88 23       	and	r24, r24
    a1fe:	11 f1       	breq	.+68     	; 0xa244 <debugUtil::write(char const*)+0x5a>
write():
    a200:	61 15       	cp	r22, r1
    a202:	71 05       	cpc	r23, r1
    a204:	f9 f0       	breq	.+62     	; 0xa244 <debugUtil::write(char const*)+0x5a>
    a206:	87 ec       	ldi	r24, 0xC7	; 199
    a208:	95 e4       	ldi	r25, 0x45	; 69
    a20a:	56 d8       	rcall	.-3924   	; 0x92b8 <Print::write(char const*) [clone .part.0]>
    a20c:	7c 01       	movw	r14, r24
_ZN9debugUtil5writeEPKc():
    a20e:	8d 81       	ldd	r24, Y+5	; 0x05
    a210:	d0 e0       	ldi	r29, 0x00	; 0
    a212:	c0 e0       	ldi	r28, 0x00	; 0
    a214:	88 23       	and	r24, r24
    a216:	51 f0       	breq	.+20     	; 0xa22c <debugUtil::write(char const*)+0x42>
    a218:	e8 01       	movw	r28, r16
    a21a:	09 90       	ld	r0, Y+
    a21c:	00 20       	and	r0, r0
    a21e:	e9 f7       	brne	.-6      	; 0xa21a <debugUtil::write(char const*)+0x30>
    a220:	21 97       	sbiw	r28, 0x01	; 1
    a222:	c0 1b       	sub	r28, r16
    a224:	d1 0b       	sbc	r29, r17
_ZN7U8G2LOG11writeStringEPKc():
    a226:	c8 01       	movw	r24, r16
    a228:	0e 94 3f 35 	call	0x6a7e	; 0x6a7e <u8log_WriteString.constprop.31>
_ZN9debugUtil5writeEPKc():
    a22c:	c7 01       	movw	r24, r14
    a22e:	ec 16       	cp	r14, r28
    a230:	fd 06       	cpc	r15, r29
    a232:	08 f4       	brcc	.+2      	; 0xa236 <debugUtil::write(char const*)+0x4c>
    a234:	ce 01       	movw	r24, r28
    a236:	df 91       	pop	r29
    a238:	cf 91       	pop	r28
    a23a:	1f 91       	pop	r17
    a23c:	0f 91       	pop	r16
    a23e:	ff 90       	pop	r15
    a240:	ef 90       	pop	r14
    a242:	08 95       	ret
    a244:	e1 2c       	mov	r14, r1
    a246:	f1 2c       	mov	r15, r1
    a248:	e2 cf       	rjmp	.-60     	; 0xa20e <debugUtil::write(char const*)+0x24>

0000a24a <u8g2_ClearBuffer>:
u8g2_ClearBuffer():
    a24a:	fc 01       	movw	r30, r24
    a24c:	a0 81       	ld	r26, Z
    a24e:	b1 81       	ldd	r27, Z+1	; 0x01
    a250:	50 96       	adiw	r26, 0x10	; 16
    a252:	2c 91       	ld	r18, X
    a254:	82 ad       	ldd	r24, Z+58	; 0x3a
    a256:	38 e0       	ldi	r19, 0x08	; 8
    a258:	83 9f       	mul	r24, r19
    a25a:	c0 01       	movw	r24, r0
    a25c:	11 24       	eor	r1, r1
    a25e:	28 9f       	mul	r18, r24
    a260:	a0 01       	movw	r20, r0
    a262:	29 9f       	mul	r18, r25
    a264:	50 0d       	add	r21, r0
    a266:	11 24       	eor	r1, r1
    a268:	70 e0       	ldi	r23, 0x00	; 0
    a26a:	60 e0       	ldi	r22, 0x00	; 0
    a26c:	80 ad       	ldd	r24, Z+56	; 0x38
    a26e:	91 ad       	ldd	r25, Z+57	; 0x39
    a270:	0c 94 ac 78 	jmp	0xf158	; 0xf158 <memset>

0000a274 <__class_openLog::change()>:
_ZN15__class_openLog6changeEv():
    a274:	ec db       	rcall	.-2088   	; 0x9a4e <dxUtilClass::reportStack(bool) [clone .constprop.163]>
    a276:	8e ed       	ldi	r24, 0xDE	; 222
    a278:	97 e4       	ldi	r25, 0x47	; 71
    a27a:	2d d8       	rcall	.-4006   	; 0x92d6 <Print::println()>
_ZN10K197device5isCalEv():
    a27c:	80 91 75 52 	lds	r24, 0x5275	; 0x805275 <k197dev+0x10>
    a280:	80 fd       	sbrc	r24, 0
    a282:	14 c0       	rjmp	.+40     	; 0xa2ac <__class_openLog::change()+0x38>
showDebugLog():
    a284:	80 91 41 52 	lds	r24, 0x5241	; 0x805241 <uiman+0x8>
    a288:	90 91 42 52 	lds	r25, 0x5242	; 0x805242 <uiman+0x9>
    a28c:	8f 70       	andi	r24, 0x0F	; 15
    a28e:	99 27       	eor	r25, r25
    a290:	80 93 41 52 	sts	0x5241, r24	; 0x805241 <uiman+0x8>
    a294:	90 93 42 52 	sts	0x5242, r25	; 0x805242 <uiman+0x9>
_ZN4U8G211clearBufferEv():
    a298:	87 ea       	ldi	r24, 0xA7	; 167
    a29a:	91 e5       	ldi	r25, 0x51	; 81
    a29c:	d6 df       	rcall	.-84     	; 0xa24a <u8g2_ClearBuffer>
_ZN4U8G210sendBufferEv():
    a29e:	0e 94 95 3c 	call	0x792a	; 0x792a <u8g2_SendBuffer.constprop.142>
_ZN10K197device14setDisplayHoldEb():
    a2a2:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
    a2a6:	87 7f       	andi	r24, 0xF7	; 247
    a2a8:	80 93 65 52 	sts	0x5265, r24	; 0x805265 <k197dev>
_ZN15__class_openLog6changeEv():
    a2ac:	08 95       	ret

0000a2ae <__class_exitMenu::change()>:
_ZN16__class_exitMenu6changeEv():
    a2ae:	e9 e3       	ldi	r30, 0x39	; 57
    a2b0:	f2 e5       	ldi	r31, 0x52	; 82
    a2b2:	80 85       	ldd	r24, Z+8	; 0x08
    a2b4:	91 85       	ldd	r25, Z+9	; 0x09
    a2b6:	8f 70       	andi	r24, 0x0F	; 15
    a2b8:	99 27       	eor	r25, r25
    a2ba:	80 61       	ori	r24, 0x10	; 16
    a2bc:	80 87       	std	Z+8, r24	; 0x08
    a2be:	91 87       	std	Z+9, r25	; 0x09
_ZN4U8G211clearBufferEv():
    a2c0:	87 ea       	ldi	r24, 0xA7	; 167
    a2c2:	91 e5       	ldi	r25, 0x51	; 81
    a2c4:	c2 df       	rcall	.-124    	; 0xa24a <u8g2_ClearBuffer>
_ZN4U8G210sendBufferEv():
    a2c6:	0e 94 95 3c 	call	0x792a	; 0x792a <u8g2_SendBuffer.constprop.142>
_ZN10K197device14setDisplayHoldEb():
    a2ca:	e5 e6       	ldi	r30, 0x65	; 101
    a2cc:	f2 e5       	ldi	r31, 0x52	; 82
    a2ce:	80 81       	ld	r24, Z
    a2d0:	87 7f       	andi	r24, 0xF7	; 247
    a2d2:	80 83       	st	Z, r24
_ZN16__class_exitMenu6changeEv():
    a2d4:	08 95       	ret

0000a2d6 <u8x8_byte_arduino_3wire_hw_spi>:
u8x8_byte_arduino_3wire_hw_spi():
    a2d6:	cf 92       	push	r12
    a2d8:	df 92       	push	r13
    a2da:	ef 92       	push	r14
    a2dc:	ff 92       	push	r15
    a2de:	0f 93       	push	r16
    a2e0:	1f 93       	push	r17
    a2e2:	cf 93       	push	r28
    a2e4:	df 93       	push	r29
    a2e6:	ec 01       	movw	r28, r24
    a2e8:	d4 2e       	mov	r13, r20
    a2ea:	68 31       	cpi	r22, 0x18	; 24
    a2ec:	09 f4       	brne	.+2      	; 0xa2f0 <u8x8_byte_arduino_3wire_hw_spi+0x1a>
    a2ee:	c9 c0       	rjmp	.+402    	; 0xa482 <u8x8_byte_arduino_3wire_hw_spi+0x1ac>
    a2f0:	38 f4       	brcc	.+14     	; 0xa300 <u8x8_byte_arduino_3wire_hw_spi+0x2a>
    a2f2:	64 31       	cpi	r22, 0x14	; 20
    a2f4:	09 f4       	brne	.+2      	; 0xa2f8 <u8x8_byte_arduino_3wire_hw_spi+0x22>
    a2f6:	59 c0       	rjmp	.+178    	; 0xa3aa <u8x8_byte_arduino_3wire_hw_spi+0xd4>
    a2f8:	67 31       	cpi	r22, 0x17	; 23
    a2fa:	91 f0       	breq	.+36     	; 0xa320 <u8x8_byte_arduino_3wire_hw_spi+0x4a>
    a2fc:	80 e0       	ldi	r24, 0x00	; 0
    a2fe:	1c c0       	rjmp	.+56     	; 0xa338 <u8x8_byte_arduino_3wire_hw_spi+0x62>
    a300:	69 31       	cpi	r22, 0x19	; 25
    a302:	09 f4       	brne	.+2      	; 0xa306 <u8x8_byte_arduino_3wire_hw_spi+0x30>
    a304:	1c c1       	rjmp	.+568    	; 0xa53e <u8x8_byte_arduino_3wire_hw_spi+0x268>
    a306:	60 32       	cpi	r22, 0x20	; 32
    a308:	c9 f7       	brne	.-14     	; 0xa2fc <u8x8_byte_arduino_3wire_hw_spi+0x26>
    a30a:	80 e0       	ldi	r24, 0x00	; 0
    a30c:	91 e0       	ldi	r25, 0x01	; 1
    a30e:	41 11       	cpse	r20, r1
    a310:	02 c0       	rjmp	.+4      	; 0xa316 <u8x8_byte_arduino_3wire_hw_spi+0x40>
    a312:	90 e0       	ldi	r25, 0x00	; 0
    a314:	80 e0       	ldi	r24, 0x00	; 0
    a316:	80 93 e0 44 	sts	0x44E0, r24	; 0x8044e0 <arduino_hw_spi_3w_dc>
    a31a:	90 93 e1 44 	sts	0x44E1, r25	; 0x8044e1 <arduino_hw_spi_3w_dc+0x1>
    a31e:	0b c0       	rjmp	.+22     	; 0xa336 <u8x8_byte_arduino_3wire_hw_spi+0x60>
    a320:	e9 01       	movw	r28, r18
arduino_hw_spi_3w_sendbyte():
    a322:	07 e0       	ldi	r16, 0x07	; 7
    a324:	10 e0       	ldi	r17, 0x00	; 0
    a326:	f6 ed       	ldi	r31, 0xD6	; 214
    a328:	ef 2e       	mov	r14, r31
    a32a:	f4 e4       	ldi	r31, 0x44	; 68
    a32c:	ff 2e       	mov	r15, r31
arduino_hw_spi_3w_init():
    a32e:	a9 e0       	ldi	r26, 0x09	; 9
    a330:	ca 2e       	mov	r12, r26
u8x8_byte_arduino_3wire_hw_spi():
    a332:	d1 10       	cpse	r13, r1
    a334:	0a c0       	rjmp	.+20     	; 0xa34a <u8x8_byte_arduino_3wire_hw_spi+0x74>
    a336:	81 e0       	ldi	r24, 0x01	; 1
    a338:	df 91       	pop	r29
    a33a:	cf 91       	pop	r28
    a33c:	1f 91       	pop	r17
    a33e:	0f 91       	pop	r16
    a340:	ff 90       	pop	r15
    a342:	ef 90       	pop	r14
    a344:	df 90       	pop	r13
    a346:	cf 90       	pop	r12
    a348:	08 95       	ret
    a34a:	29 91       	ld	r18, Y+
arduino_hw_spi_3w_sendbyte():
    a34c:	80 91 df 44 	lds	r24, 0x44DF	; 0x8044df <arduino_hw_spi_3w_bytepos>
    a350:	e8 2f       	mov	r30, r24
    a352:	f0 e0       	ldi	r31, 0x00	; 0
    a354:	40 91 e0 44 	lds	r20, 0x44E0	; 0x8044e0 <arduino_hw_spi_3w_dc>
    a358:	50 91 e1 44 	lds	r21, 0x44E1	; 0x8044e1 <arduino_hw_spi_3w_dc+0x1>
    a35c:	24 0f       	add	r18, r20
    a35e:	35 2f       	mov	r19, r21
    a360:	31 1d       	adc	r19, r1
    a362:	a8 01       	movw	r20, r16
    a364:	4e 1b       	sub	r20, r30
    a366:	5f 0b       	sbc	r21, r31
    a368:	02 c0       	rjmp	.+4      	; 0xa36e <u8x8_byte_arduino_3wire_hw_spi+0x98>
    a36a:	22 0f       	add	r18, r18
    a36c:	33 1f       	adc	r19, r19
    a36e:	4a 95       	dec	r20
    a370:	e2 f7       	brpl	.-8      	; 0xa36a <u8x8_byte_arduino_3wire_hw_spi+0x94>
    a372:	ea 52       	subi	r30, 0x2A	; 42
    a374:	fb 4b       	sbci	r31, 0xBB	; 187
    a376:	90 81       	ld	r25, Z
    a378:	93 2b       	or	r25, r19
    a37a:	90 83       	st	Z, r25
    a37c:	8f 5f       	subi	r24, 0xFF	; 255
    a37e:	80 93 df 44 	sts	0x44DF, r24	; 0x8044df <arduino_hw_spi_3w_bytepos>
    a382:	e8 2f       	mov	r30, r24
    a384:	f0 e0       	ldi	r31, 0x00	; 0
    a386:	ea 52       	subi	r30, 0x2A	; 42
    a388:	fb 4b       	sbci	r31, 0xBB	; 187
    a38a:	90 81       	ld	r25, Z
    a38c:	29 2b       	or	r18, r25
    a38e:	20 83       	st	Z, r18
    a390:	88 30       	cpi	r24, 0x08	; 8
    a392:	49 f4       	brne	.+18     	; 0xa3a6 <u8x8_byte_arduino_3wire_hw_spi+0xd0>
    a394:	0e 94 34 3e 	call	0x7c68	; 0x7c68 <arduino_hw_spi_3w_flush()>
arduino_hw_spi_3w_init():
    a398:	d7 01       	movw	r26, r14
    a39a:	ec 2d       	mov	r30, r12
    a39c:	1d 92       	st	X+, r1
    a39e:	ea 95       	dec	r30
    a3a0:	e9 f7       	brne	.-6      	; 0xa39c <u8x8_byte_arduino_3wire_hw_spi+0xc6>
    a3a2:	10 92 df 44 	sts	0x44DF, r1	; 0x8044df <arduino_hw_spi_3w_bytepos>
u8x8_byte_arduino_3wire_hw_spi():
    a3a6:	da 94       	dec	r13
    a3a8:	c4 cf       	rjmp	.-120    	; 0xa332 <u8x8_byte_arduino_3wire_hw_spi+0x5c>
    a3aa:	e8 81       	ld	r30, Y
    a3ac:	f9 81       	ldd	r31, Y+1	; 0x01
    a3ae:	8c 85       	ldd	r24, Y+12	; 0x0c
    a3b0:	9d 85       	ldd	r25, Y+13	; 0x0d
    a3b2:	ae 85       	ldd	r26, Y+14	; 0x0e
    a3b4:	bf 85       	ldd	r27, Y+15	; 0x0f
    a3b6:	89 2b       	or	r24, r25
    a3b8:	8a 2b       	or	r24, r26
    a3ba:	8b 2b       	or	r24, r27
    a3bc:	41 f4       	brne	.+16     	; 0xa3ce <u8x8_byte_arduino_3wire_hw_spi+0xf8>
    a3be:	80 85       	ldd	r24, Z+8	; 0x08
    a3c0:	91 85       	ldd	r25, Z+9	; 0x09
    a3c2:	a2 85       	ldd	r26, Z+10	; 0x0a
    a3c4:	b3 85       	ldd	r27, Z+11	; 0x0b
    a3c6:	8c 87       	std	Y+12, r24	; 0x0c
    a3c8:	9d 87       	std	Y+13, r25	; 0x0d
    a3ca:	ae 87       	std	Y+14, r26	; 0x0e
    a3cc:	bf 87       	std	Y+15, r27	; 0x0f
    a3ce:	41 81       	ldd	r20, Z+1	; 0x01
    a3d0:	69 e4       	ldi	r22, 0x49	; 73
    a3d2:	ce 01       	movw	r24, r28
    a3d4:	0e 94 b3 32 	call	0x6566	; 0x6566 <u8x8_gpio_call>
init():
    a3d8:	80 91 7a 47 	lds	r24, 0x477A	; 0x80477a <SPI+0x7>
    a3dc:	81 11       	cpse	r24, r1
    a3de:	0a c0       	rjmp	.+20     	; 0xa3f4 <u8x8_byte_arduino_3wire_hw_spi+0x11e>
    a3e0:	10 92 7b 47 	sts	0x477B, r1	; 0x80477b <SPI+0x8>
    a3e4:	10 92 7d 47 	sts	0x477D, r1	; 0x80477d <SPI+0xa>
    a3e8:	80 e8       	ldi	r24, 0x80	; 128
    a3ea:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <SPI+0x9>
    a3ee:	81 e0       	ldi	r24, 0x01	; 1
    a3f0:	80 93 7a 47 	sts	0x477A, r24	; 0x80477a <SPI+0x7>
begin():
    a3f4:	a0 91 73 47 	lds	r26, 0x4773	; 0x804773 <SPI>
    a3f8:	b0 91 74 47 	lds	r27, 0x4774	; 0x804774 <SPI+0x1>
    a3fc:	90 91 79 47 	lds	r25, 0x4779	; 0x804779 <SPI+0x6>
    a400:	80 91 e4 05 	lds	r24, 0x05E4	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7e05e4>
    a404:	a0 34       	cpi	r26, 0x40	; 64
    a406:	f9 e0       	ldi	r31, 0x09	; 9
    a408:	bf 07       	cpc	r27, r31
    a40a:	c9 f5       	brne	.+114    	; 0xa47e <u8x8_byte_arduino_3wire_hw_spi+0x1a8>
    a40c:	8c 7f       	andi	r24, 0xFC	; 252
    a40e:	89 2b       	or	r24, r25
    a410:	80 93 e4 05 	sts	0x05E4, r24	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7e05e4>
    a414:	80 91 77 47 	lds	r24, 0x4777	; 0x804777 <SPI+0x4>
_pinMode():
    a418:	89 32       	cpi	r24, 0x29	; 41
    a41a:	88 f4       	brcc	.+34     	; 0xa43e <u8x8_byte_arduino_3wire_hw_spi+0x168>
check_valid_digital_pin():
    a41c:	90 e0       	ldi	r25, 0x00	; 0
_pinMode():
    a41e:	fc 01       	movw	r30, r24
    a420:	ec 50       	subi	r30, 0x0C	; 12
    a422:	fe 4b       	sbci	r31, 0xBE	; 190
    a424:	20 81       	ld	r18, Z
    a426:	2f 3f       	cpi	r18, 0xFF	; 255
    a428:	51 f0       	breq	.+20     	; 0xa43e <u8x8_byte_arduino_3wire_hw_spi+0x168>
    a42a:	85 53       	subi	r24, 0x35	; 53
    a42c:	9e 4b       	sbci	r25, 0xBE	; 190
    a42e:	ec 01       	movw	r28, r24
    a430:	e8 81       	ld	r30, Y
    a432:	d0 e2       	ldi	r29, 0x20	; 32
    a434:	ed 9f       	mul	r30, r29
    a436:	f0 01       	movw	r30, r0
    a438:	11 24       	eor	r1, r1
    a43a:	fc 5f       	subi	r31, 0xFC	; 252
    a43c:	21 83       	std	Z+1, r18	; 0x01
begin():
    a43e:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <SPI+0x3>
_pinMode():
    a442:	89 32       	cpi	r24, 0x29	; 41
    a444:	88 f4       	brcc	.+34     	; 0xa468 <u8x8_byte_arduino_3wire_hw_spi+0x192>
check_valid_digital_pin():
    a446:	90 e0       	ldi	r25, 0x00	; 0
_pinMode():
    a448:	fc 01       	movw	r30, r24
    a44a:	ec 50       	subi	r30, 0x0C	; 12
    a44c:	fe 4b       	sbci	r31, 0xBE	; 190
    a44e:	20 81       	ld	r18, Z
    a450:	2f 3f       	cpi	r18, 0xFF	; 255
    a452:	51 f0       	breq	.+20     	; 0xa468 <u8x8_byte_arduino_3wire_hw_spi+0x192>
    a454:	85 53       	subi	r24, 0x35	; 53
    a456:	9e 4b       	sbci	r25, 0xBE	; 190
    a458:	ec 01       	movw	r28, r24
    a45a:	e8 81       	ld	r30, Y
    a45c:	d0 e2       	ldi	r29, 0x20	; 32
    a45e:	ed 9f       	mul	r30, r29
    a460:	f0 01       	movw	r30, r0
    a462:	11 24       	eor	r1, r1
    a464:	fc 5f       	subi	r31, 0xFC	; 252
    a466:	21 83       	std	Z+1, r18	; 0x01
    a468:	90 91 7e 47 	lds	r25, 0x477E	; 0x80477e <DEFAULT_SPI_SETTINGS>
    a46c:	80 91 7f 47 	lds	r24, 0x477F	; 0x80477f <DEFAULT_SPI_SETTINGS+0x1>
config():
    a470:	9c 93       	st	X, r25
    a472:	e0 91 73 47 	lds	r30, 0x4773	; 0x804773 <SPI>
    a476:	f0 91 74 47 	lds	r31, 0x4774	; 0x804774 <SPI+0x1>
    a47a:	81 83       	std	Z+1, r24	; 0x01
    a47c:	5c cf       	rjmp	.-328    	; 0xa336 <u8x8_byte_arduino_3wire_hw_spi+0x60>
begin():
    a47e:	83 7f       	andi	r24, 0xF3	; 243
    a480:	c6 cf       	rjmp	.-116    	; 0xa40e <u8x8_byte_arduino_3wire_hw_spi+0x138>
u8x8_byte_arduino_3wire_hw_spi():
    a482:	e8 81       	ld	r30, Y
    a484:	f9 81       	ldd	r31, Y+1	; 0x01
    a486:	e4 85       	ldd	r30, Z+12	; 0x0c
    a488:	90 e0       	ldi	r25, 0x00	; 0
    a48a:	e4 30       	cpi	r30, 0x04	; 4
    a48c:	20 f4       	brcc	.+8      	; 0xa496 <u8x8_byte_arduino_3wire_hw_spi+0x1c0>
    a48e:	f0 e0       	ldi	r31, 0x00	; 0
    a490:	ed 59       	subi	r30, 0x9D	; 157
    a492:	ff 4b       	sbci	r31, 0xBF	; 191
    a494:	90 81       	ld	r25, Z
    a496:	0c 85       	ldd	r16, Y+12	; 0x0c
    a498:	1d 85       	ldd	r17, Y+13	; 0x0d
    a49a:	2e 85       	ldd	r18, Y+14	; 0x0e
    a49c:	3f 85       	ldd	r19, Y+15	; 0x0f
    a49e:	40 e0       	ldi	r20, 0x00	; 0
    a4a0:	5b e1       	ldi	r21, 0x1B	; 27
    a4a2:	67 eb       	ldi	r22, 0xB7	; 183
    a4a4:	70 e0       	ldi	r23, 0x00	; 0
    a4a6:	80 e0       	ldi	r24, 0x00	; 0
_ZN11SPISettings17init_AlwaysInlineEmhh():
    a4a8:	04 17       	cp	r16, r20
    a4aa:	15 07       	cpc	r17, r21
    a4ac:	26 07       	cpc	r18, r22
    a4ae:	37 07       	cpc	r19, r23
    a4b0:	40 f4       	brcc	.+16     	; 0xa4c2 <u8x8_byte_arduino_3wire_hw_spi+0x1ec>
    a4b2:	76 95       	lsr	r23
    a4b4:	67 95       	ror	r22
    a4b6:	57 95       	ror	r21
    a4b8:	47 95       	ror	r20
    a4ba:	8f 5f       	subi	r24, 0xFF	; 255
    a4bc:	86 30       	cpi	r24, 0x06	; 6
    a4be:	a1 f7       	brne	.-24     	; 0xa4a8 <u8x8_byte_arduino_3wire_hw_spi+0x1d2>
u8x8_byte_arduino_3wire_hw_spi():
    a4c0:	87 e0       	ldi	r24, 0x07	; 7
_ZN11SPISettings17init_AlwaysInlineEmhh():
    a4c2:	21 e0       	ldi	r18, 0x01	; 1
    a4c4:	82 27       	eor	r24, r18
    a4c6:	39 2f       	mov	r19, r25
    a4c8:	34 60       	ori	r19, 0x04	; 4
    a4ca:	28 2f       	mov	r18, r24
    a4cc:	26 70       	andi	r18, 0x06	; 6
    a4ce:	21 62       	ori	r18, 0x21	; 33
    a4d0:	e0 e1       	ldi	r30, 0x10	; 16
    a4d2:	8e 9f       	mul	r24, r30
    a4d4:	c0 01       	movw	r24, r0
    a4d6:	11 24       	eor	r1, r1
    a4d8:	80 71       	andi	r24, 0x10	; 16
    a4da:	82 2b       	or	r24, r18
beginTransaction():
    a4dc:	90 91 7b 47 	lds	r25, 0x477B	; 0x80477b <SPI+0x8>
    a4e0:	99 23       	and	r25, r25
    a4e2:	21 f0       	breq	.+8      	; 0xa4ec <u8x8_byte_arduino_3wire_hw_spi+0x216>
    a4e4:	9f b7       	in	r25, 0x3f	; 63
    a4e6:	90 93 7c 47 	sts	0x477C, r25	; 0x80477c <SPI+0x9>
    a4ea:	f8 94       	cli
    a4ec:	91 e0       	ldi	r25, 0x01	; 1
    a4ee:	90 93 7d 47 	sts	0x477D, r25	; 0x80477d <SPI+0xa>
config():
    a4f2:	e0 91 73 47 	lds	r30, 0x4773	; 0x804773 <SPI>
    a4f6:	f0 91 74 47 	lds	r31, 0x4774	; 0x804774 <SPI+0x1>
    a4fa:	80 83       	st	Z, r24
    a4fc:	e0 91 73 47 	lds	r30, 0x4773	; 0x804773 <SPI>
    a500:	f0 91 74 47 	lds	r31, 0x4774	; 0x804774 <SPI+0x1>
    a504:	31 83       	std	Z+1, r19	; 0x01
u8x8_byte_arduino_3wire_hw_spi():
    a506:	e8 81       	ld	r30, Y
    a508:	f9 81       	ldd	r31, Y+1	; 0x01
    a50a:	40 81       	ld	r20, Z
    a50c:	69 e4       	ldi	r22, 0x49	; 73
    a50e:	ce 01       	movw	r24, r28
    a510:	0e 94 b3 32 	call	0x6566	; 0x6566 <u8x8_gpio_call>
    a514:	a8 81       	ld	r26, Y
    a516:	b9 81       	ldd	r27, Y+1	; 0x01
    a518:	ea 85       	ldd	r30, Y+10	; 0x0a
    a51a:	fb 85       	ldd	r31, Y+11	; 0x0b
    a51c:	30 e0       	ldi	r19, 0x00	; 0
    a51e:	20 e0       	ldi	r18, 0x00	; 0
    a520:	12 96       	adiw	r26, 0x02	; 2
    a522:	4c 91       	ld	r20, X
    a524:	6c e2       	ldi	r22, 0x2C	; 44
    a526:	ce 01       	movw	r24, r28
    a528:	09 95       	icall
arduino_hw_spi_3w_init():
    a52a:	e6 ed       	ldi	r30, 0xD6	; 214
    a52c:	f4 e4       	ldi	r31, 0x44	; 68
    a52e:	89 e0       	ldi	r24, 0x09	; 9
    a530:	df 01       	movw	r26, r30
    a532:	1d 92       	st	X+, r1
    a534:	8a 95       	dec	r24
    a536:	e9 f7       	brne	.-6      	; 0xa532 <u8x8_byte_arduino_3wire_hw_spi+0x25c>
    a538:	10 92 df 44 	sts	0x44DF, r1	; 0x8044df <arduino_hw_spi_3w_bytepos>
    a53c:	fc ce       	rjmp	.-520    	; 0xa336 <u8x8_byte_arduino_3wire_hw_spi+0x60>
u8x8_byte_arduino_3wire_hw_spi():
    a53e:	a8 81       	ld	r26, Y
    a540:	b9 81       	ldd	r27, Y+1	; 0x01
    a542:	ea 85       	ldd	r30, Y+10	; 0x0a
    a544:	fb 85       	ldd	r31, Y+11	; 0x0b
    a546:	30 e0       	ldi	r19, 0x00	; 0
    a548:	20 e0       	ldi	r18, 0x00	; 0
    a54a:	13 96       	adiw	r26, 0x03	; 3
    a54c:	4c 91       	ld	r20, X
    a54e:	6c e2       	ldi	r22, 0x2C	; 44
    a550:	09 95       	icall
    a552:	80 91 df 44 	lds	r24, 0x44DF	; 0x8044df <arduino_hw_spi_3w_bytepos>
    a556:	81 11       	cpse	r24, r1
    a558:	0e 94 34 3e 	call	0x7c68	; 0x7c68 <arduino_hw_spi_3w_flush()>
    a55c:	e8 81       	ld	r30, Y
    a55e:	f9 81       	ldd	r31, Y+1	; 0x01
    a560:	41 81       	ldd	r20, Z+1	; 0x01
    a562:	69 e4       	ldi	r22, 0x49	; 73
    a564:	ce 01       	movw	r24, r28
    a566:	0e 94 b3 32 	call	0x6566	; 0x6566 <u8x8_gpio_call>
endTransaction():
    a56a:	80 91 7d 47 	lds	r24, 0x477D	; 0x80477d <SPI+0xa>
    a56e:	88 23       	and	r24, r24
    a570:	09 f4       	brne	.+2      	; 0xa574 <u8x8_byte_arduino_3wire_hw_spi+0x29e>
    a572:	e1 ce       	rjmp	.-574    	; 0xa336 <u8x8_byte_arduino_3wire_hw_spi+0x60>
    a574:	10 92 7d 47 	sts	0x477D, r1	; 0x80477d <SPI+0xa>
    a578:	80 91 7b 47 	lds	r24, 0x477B	; 0x80477b <SPI+0x8>
    a57c:	88 23       	and	r24, r24
    a57e:	09 f4       	brne	.+2      	; 0xa582 <u8x8_byte_arduino_3wire_hw_spi+0x2ac>
    a580:	da ce       	rjmp	.-588    	; 0xa336 <u8x8_byte_arduino_3wire_hw_spi+0x60>
    a582:	80 91 7c 47 	lds	r24, 0x477C	; 0x80477c <SPI+0x9>
    a586:	8f bf       	out	0x3f, r24	; 63
    a588:	d6 ce       	rjmp	.-596    	; 0xa336 <u8x8_byte_arduino_3wire_hw_spi+0x60>

0000a58a <setup>:
setup():
    a58a:	cf 92       	push	r12
    a58c:	df 92       	push	r13
    a58e:	ef 92       	push	r14
    a590:	ff 92       	push	r15
    a592:	0f 93       	push	r16
    a594:	1f 93       	push	r17
    a596:	cf 93       	push	r28
    a598:	df 93       	push	r29
_ZN9debugUtil5beginEbb():
    a59a:	10 92 e2 47 	sts	0x47E2, r1	; 0x8047e2 <DebugOut+0x4>
    a59e:	10 92 e3 47 	sts	0x47E3, r1	; 0x8047e3 <DebugOut+0x5>
begin():
    a5a2:	80 91 52 40 	lds	r24, 0x4052	; 0x804052 <dxUtil+0x3>
    a5a6:	88 23       	and	r24, r24
    a5a8:	29 f0       	breq	.+10     	; 0xa5b4 <setup+0x2a>
    a5aa:	8c b3       	in	r24, 0x1c	; 28
    a5ac:	80 93 51 40 	sts	0x4051, r24	; 0x804051 <dxUtil+0x2>
    a5b0:	10 92 52 40 	sts	0x4052, r1	; 0x804052 <dxUtil+0x3>
analogReference():
    a5b4:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    a5b8:	88 7f       	andi	r24, 0xF8	; 248
    a5ba:	81 60       	ori	r24, 0x01	; 1
    a5bc:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
analogReadResolution():
    a5c0:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <__TEXT_REGION_LENGTH__+0x7e0600>
    a5c4:	83 7f       	andi	r24, 0xF3	; 243
    a5c6:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x7e0600>
pinConfigure():
    a5ca:	62 e8       	ldi	r22, 0x82	; 130
    a5cc:	72 e0       	ldi	r23, 0x02	; 2
    a5ce:	81 e0       	ldi	r24, 0x01	; 1
    a5d0:	0e 94 99 46 	call	0x8d32	; 0x8d32 <_pinconfigure(unsigned char, unsigned int)>
setup():
    a5d4:	12 9b       	sbis	0x02, 2	; 2
    a5d6:	03 c0       	rjmp	.+6      	; 0xa5de <setup+0x54>
    a5d8:	81 e0       	ldi	r24, 0x01	; 1
    a5da:	80 93 6b 55 	sts	0x556B, r24	; 0x80556b <BTman>
    a5de:	80 91 6b 55 	lds	r24, 0x556B	; 0x80556b <BTman>
    a5e2:	88 23       	and	r24, r24
    a5e4:	09 f4       	brne	.+2      	; 0xa5e8 <setup+0x5e>
    a5e6:	ec c1       	rjmp	.+984    	; 0xa9c0 <setup+0x436>
begin():
    a5e8:	0e 94 35 31 	call	0x626a	; 0x626a <HardwareSerial::begin(unsigned long, unsigned int) [clone .constprop.170]>
_ZN9debugUtil9useSerialEb():
    a5ec:	81 e0       	ldi	r24, 0x01	; 1
    a5ee:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <DebugOut+0x4>
pinConfigure():
    a5f2:	69 e0       	ldi	r22, 0x09	; 9
    a5f4:	70 e0       	ldi	r23, 0x00	; 0
    a5f6:	8c e1       	ldi	r24, 0x1C	; 28
    a5f8:	0e 94 99 46 	call	0x8d32	; 0x8d32 <_pinconfigure(unsigned char, unsigned int)>
setup():
    a5fc:	c1 e0       	ldi	r28, 0x01	; 1
    a5fe:	c0 93 0a 04 	sts	0x040A, r28	; 0x80040a <__TEXT_REGION_LENGTH__+0x7e040a>
    a602:	c0 93 4a 04 	sts	0x044A, r28	; 0x80044a <__TEXT_REGION_LENGTH__+0x7e044a>
    a606:	c0 93 6a 04 	sts	0x046A, r28	; 0x80046a <__TEXT_REGION_LENGTH__+0x7e046a>
    a60a:	c0 93 aa 04 	sts	0x04AA, r28	; 0x8004aa <__TEXT_REGION_LENGTH__+0x7e04aa>
pinConfigure():
    a60e:	62 e8       	ldi	r22, 0x82	; 130
    a610:	71 ea       	ldi	r23, 0xA1	; 161
    a612:	8b e1       	ldi	r24, 0x1B	; 27
    a614:	0e 94 99 46 	call	0x8d32	; 0x8d32 <_pinconfigure(unsigned char, unsigned int)>
    a618:	62 e8       	ldi	r22, 0x82	; 130
    a61a:	71 ea       	ldi	r23, 0xA1	; 161
    a61c:	8d e1       	ldi	r24, 0x1D	; 29
    a61e:	0e 94 99 46 	call	0x8d32	; 0x8d32 <_pinconfigure(unsigned char, unsigned int)>
    a622:	62 e8       	ldi	r22, 0x82	; 130
    a624:	71 ea       	ldi	r23, 0xA1	; 161
    a626:	82 e2       	ldi	r24, 0x22	; 34
    a628:	0e 94 99 46 	call	0x8d32	; 0x8d32 <_pinconfigure(unsigned char, unsigned int)>
    a62c:	62 e8       	ldi	r22, 0x82	; 130
    a62e:	71 ea       	ldi	r23, 0xA1	; 161
    a630:	83 e2       	ldi	r24, 0x23	; 35
    a632:	0e 94 99 46 	call	0x8d32	; 0x8d32 <_pinconfigure(unsigned char, unsigned int)>
    a636:	61 e0       	ldi	r22, 0x01	; 1
    a638:	70 e8       	ldi	r23, 0x80	; 128
    a63a:	8e e1       	ldi	r24, 0x1E	; 30
    a63c:	0e 94 99 46 	call	0x8d32	; 0x8d32 <_pinconfigure(unsigned char, unsigned int)>
digitalWriteFast():
    a640:	88 98       	cbi	0x11, 0	; 17
setupButtonCluster():
    a642:	87 e0       	ldi	r24, 0x07	; 7
    a644:	8f bb       	out	0x1f, r24	; 31
    a646:	8e e9       	ldi	r24, 0x9E	; 158
    a648:	93 e4       	ldi	r25, 0x43	; 67
    a64a:	74 dd       	rcall	.-1304   	; 0xa134 <dumpFifoStatus(char const*)>
    a64c:	6b e1       	ldi	r22, 0x1B	; 27
    a64e:	8a ed       	ldi	r24, 0xDA	; 218
    a650:	97 e4       	ldi	r25, 0x47	; 71
    a652:	0e 94 9a 32 	call	0x6534	; 0x6534 <Event::set_generator(unsigned char)>
set_user():
    a656:	80 91 da 47 	lds	r24, 0x47DA	; 0x8047da <Event2>
    a65a:	8f 5f       	subi	r24, 0xFF	; 255
    a65c:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <__TEXT_REGION_LENGTH__+0x7e0220>
setupButtonCluster():
    a660:	6d e1       	ldi	r22, 0x1D	; 29
    a662:	86 ed       	ldi	r24, 0xD6	; 214
    a664:	97 e4       	ldi	r25, 0x47	; 71
    a666:	0e 94 9a 32 	call	0x6534	; 0x6534 <Event::set_generator(unsigned char)>
set_user():
    a66a:	80 91 d6 47 	lds	r24, 0x47D6	; 0x8047d6 <Event3>
    a66e:	8f 5f       	subi	r24, 0xFF	; 255
    a670:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <__TEXT_REGION_LENGTH__+0x7e0222>
setupButtonCluster():
    a674:	62 e2       	ldi	r22, 0x22	; 34
    a676:	82 ed       	ldi	r24, 0xD2	; 210
    a678:	97 e4       	ldi	r25, 0x47	; 71
    a67a:	0e 94 9a 32 	call	0x6534	; 0x6534 <Event::set_generator(unsigned char)>
set_user():
    a67e:	80 91 d2 47 	lds	r24, 0x47D2	; 0x8047d2 <Event4>
    a682:	8f 5f       	subi	r24, 0xFF	; 255
    a684:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <__TEXT_REGION_LENGTH__+0x7e0224>
setupButtonCluster():
    a688:	63 e2       	ldi	r22, 0x23	; 35
    a68a:	8e ec       	ldi	r24, 0xCE	; 206
    a68c:	97 e4       	ldi	r25, 0x47	; 71
    a68e:	0e 94 9a 32 	call	0x6534	; 0x6534 <Event::set_generator(unsigned char)>
set_user():
    a692:	80 91 ce 47 	lds	r24, 0x47CE	; 0x8047ce <Event5>
    a696:	8f 5f       	subi	r24, 0xFF	; 255
    a698:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <__TEXT_REGION_LENGTH__+0x7e0226>
setupButtonCluster():
    a69c:	c0 93 c1 47 	sts	0x47C1, r28	; 0x8047c1 <Logic0>
    a6a0:	83 e0       	ldi	r24, 0x03	; 3
    a6a2:	f8 2e       	mov	r15, r24
    a6a4:	f0 92 c2 47 	sts	0x47C2, r15	; 0x8047c2 <Logic0+0x1>
    a6a8:	06 e0       	ldi	r16, 0x06	; 6
    a6aa:	00 93 cb 47 	sts	0x47CB, r16	; 0x8047cb <Logic0+0xa>
    a6ae:	12 e0       	ldi	r17, 0x02	; 2
    a6b0:	10 93 c7 47 	sts	0x47C7, r17	; 0x8047c7 <Logic0+0x6>
    a6b4:	d5 e5       	ldi	r29, 0x55	; 85
    a6b6:	d0 93 c9 47 	sts	0x47C9, r29	; 0x8047c9 <Logic0+0x8>
    a6ba:	81 ec       	ldi	r24, 0xC1	; 193
    a6bc:	97 e4       	ldi	r25, 0x47	; 71
    a6be:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <Logic::init() [clone .constprop.121]>
    a6c2:	c0 93 b4 47 	sts	0x47B4, r28	; 0x8047b4 <Logic1>
    a6c6:	f0 92 b5 47 	sts	0x47B5, r15	; 0x8047b5 <Logic1+0x1>
    a6ca:	00 93 be 47 	sts	0x47BE, r16	; 0x8047be <Logic1+0xa>
    a6ce:	10 93 ba 47 	sts	0x47BA, r17	; 0x8047ba <Logic1+0x6>
    a6d2:	d0 93 bc 47 	sts	0x47BC, r29	; 0x8047bc <Logic1+0x8>
    a6d6:	84 eb       	ldi	r24, 0xB4	; 180
    a6d8:	97 e4       	ldi	r25, 0x47	; 71
    a6da:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <Logic::init() [clone .constprop.121]>
    a6de:	c0 93 a7 47 	sts	0x47A7, r28	; 0x8047a7 <Logic2>
    a6e2:	f0 92 a8 47 	sts	0x47A8, r15	; 0x8047a8 <Logic2+0x1>
    a6e6:	00 93 b1 47 	sts	0x47B1, r16	; 0x8047b1 <Logic2+0xa>
    a6ea:	10 93 ad 47 	sts	0x47AD, r17	; 0x8047ad <Logic2+0x6>
    a6ee:	d0 93 af 47 	sts	0x47AF, r29	; 0x8047af <Logic2+0x8>
    a6f2:	87 ea       	ldi	r24, 0xA7	; 167
    a6f4:	97 e4       	ldi	r25, 0x47	; 71
    a6f6:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <Logic::init() [clone .constprop.121]>
    a6fa:	c0 93 9a 47 	sts	0x479A, r28	; 0x80479a <Logic3>
    a6fe:	f0 92 9b 47 	sts	0x479B, r15	; 0x80479b <Logic3+0x1>
    a702:	00 93 a4 47 	sts	0x47A4, r16	; 0x8047a4 <Logic3+0xa>
    a706:	10 93 a0 47 	sts	0x47A0, r17	; 0x8047a0 <Logic3+0x6>
    a70a:	d0 93 a2 47 	sts	0x47A2, r29	; 0x8047a2 <Logic3+0x8>
    a70e:	8a e9       	ldi	r24, 0x9A	; 154
    a710:	97 e4       	ldi	r25, 0x47	; 71
    a712:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <Logic::init() [clone .constprop.121]>
start():
    a716:	e0 91 db 47 	lds	r30, 0x47DB	; 0x8047db <Event2+0x1>
    a71a:	f0 91 dc 47 	lds	r31, 0x47DC	; 0x8047dc <Event2+0x2>
    a71e:	80 91 dd 47 	lds	r24, 0x47DD	; 0x8047dd <Event2+0x3>
    a722:	80 83       	st	Z, r24
    a724:	e0 91 d7 47 	lds	r30, 0x47D7	; 0x8047d7 <Event3+0x1>
    a728:	f0 91 d8 47 	lds	r31, 0x47D8	; 0x8047d8 <Event3+0x2>
    a72c:	80 91 d9 47 	lds	r24, 0x47D9	; 0x8047d9 <Event3+0x3>
    a730:	80 83       	st	Z, r24
    a732:	e0 91 d3 47 	lds	r30, 0x47D3	; 0x8047d3 <Event4+0x1>
    a736:	f0 91 d4 47 	lds	r31, 0x47D4	; 0x8047d4 <Event4+0x2>
    a73a:	80 91 d5 47 	lds	r24, 0x47D5	; 0x8047d5 <Event4+0x3>
    a73e:	80 83       	st	Z, r24
    a740:	e0 91 cf 47 	lds	r30, 0x47CF	; 0x8047cf <Event5+0x1>
    a744:	f0 91 d0 47 	lds	r31, 0x47D0	; 0x8047d0 <Event5+0x2>
    a748:	80 91 d1 47 	lds	r24, 0x47D1	; 0x8047d1 <Event5+0x3>
    a74c:	80 83       	st	Z, r24
setupButtonCluster():
    a74e:	81 ec       	ldi	r24, 0xC1	; 193
    a750:	97 e4       	ldi	r25, 0x47	; 71
    a752:	0e 94 17 2e 	call	0x5c2e	; 0x5c2e <Logic::attachInterrupt(void (*)(), unsigned char) [clone .constprop.124]>
    a756:	84 eb       	ldi	r24, 0xB4	; 180
    a758:	97 e4       	ldi	r25, 0x47	; 71
    a75a:	0e 94 17 2e 	call	0x5c2e	; 0x5c2e <Logic::attachInterrupt(void (*)(), unsigned char) [clone .constprop.124]>
    a75e:	87 ea       	ldi	r24, 0xA7	; 167
    a760:	97 e4       	ldi	r25, 0x47	; 71
    a762:	0e 94 17 2e 	call	0x5c2e	; 0x5c2e <Logic::attachInterrupt(void (*)(), unsigned char) [clone .constprop.124]>
    a766:	8a e9       	ldi	r24, 0x9A	; 154
    a768:	97 e4       	ldi	r25, 0x47	; 71
    a76a:	0e 94 17 2e 	call	0x5c2e	; 0x5c2e <Logic::attachInterrupt(void (*)(), unsigned char) [clone .constprop.124]>
start():
    a76e:	c0 93 c0 01 	sts	0x01C0, r28	; 0x8001c0 <__TEXT_REGION_LENGTH__+0x7e01c0>
setupButtonCluster():
    a772:	0e 94 c2 31 	call	0x6384	; 0x6384 <micros>
    a776:	6b 01       	movw	r12, r22
    a778:	7c 01       	movw	r14, r24
    a77a:	f8 94       	cli
    a77c:	9e b1       	in	r25, 0x0e	; 14
    a77e:	86 b3       	in	r24, 0x16	; 22
    a780:	90 7a       	andi	r25, 0xA0	; 160
    a782:	83 70       	andi	r24, 0x03	; 3
    a784:	89 2b       	or	r24, r25
    a786:	0e 94 33 4a 	call	0x9466	; 0x9466 <fifo_push(unsigned char)>
    a78a:	84 ea       	ldi	r24, 0xA4	; 164
    a78c:	93 e4       	ldi	r25, 0x43	; 67
    a78e:	d2 dc       	rcall	.-1628   	; 0xa134 <dumpFifoStatus(char const*)>
    a790:	0e 94 e7 49 	call	0x93ce	; 0x93ce <fifo_pull()>
    a794:	d8 2f       	mov	r29, r24
    a796:	8a ea       	ldi	r24, 0xAA	; 170
    a798:	93 e4       	ldi	r25, 0x43	; 67
    a79a:	cc dc       	rcall	.-1640   	; 0xa134 <dumpFifoStatus(char const*)>
    a79c:	78 94       	sei
getButtonState():
    a79e:	d5 fb       	bst	r29, 5
    a7a0:	88 27       	eor	r24, r24
    a7a2:	80 f9       	bld	r24, 0
initButton():
    a7a4:	80 93 4b 40 	sts	0x404B, r24	; 0x80404b <buttonState>
    a7a8:	c0 92 ab 45 	sts	0x45AB, r12	; 0x8045ab <startPressed>
    a7ac:	d0 92 ac 45 	sts	0x45AC, r13	; 0x8045ac <startPressed+0x1>
    a7b0:	e0 92 ad 45 	sts	0x45AD, r14	; 0x8045ad <startPressed+0x2>
    a7b4:	f0 92 ae 45 	sts	0x45AE, r15	; 0x8045ae <startPressed+0x3>
    a7b8:	c0 92 8b 45 	sts	0x458B, r12	; 0x80458b <lastHold>
    a7bc:	d0 92 8c 45 	sts	0x458C, r13	; 0x80458c <lastHold+0x1>
    a7c0:	e0 92 8d 45 	sts	0x458D, r14	; 0x80458d <lastHold+0x2>
    a7c4:	f0 92 8e 45 	sts	0x458E, r15	; 0x80458e <lastHold+0x3>
    a7c8:	c0 92 9b 45 	sts	0x459B, r12	; 0x80459b <lastReleased>
    a7cc:	d0 92 9c 45 	sts	0x459C, r13	; 0x80459c <lastReleased+0x1>
    a7d0:	e0 92 9d 45 	sts	0x459D, r14	; 0x80459d <lastReleased+0x2>
    a7d4:	f0 92 9e 45 	sts	0x459E, r15	; 0x80459e <lastReleased+0x3>
getButtonState():
    a7d8:	8d 2f       	mov	r24, r29
    a7da:	88 1f       	adc	r24, r24
    a7dc:	88 27       	eor	r24, r24
    a7de:	88 1f       	adc	r24, r24
initButton():
    a7e0:	80 93 4c 40 	sts	0x404C, r24	; 0x80404c <buttonState+0x1>
    a7e4:	c0 92 af 45 	sts	0x45AF, r12	; 0x8045af <startPressed+0x4>
    a7e8:	d0 92 b0 45 	sts	0x45B0, r13	; 0x8045b0 <startPressed+0x5>
    a7ec:	e0 92 b1 45 	sts	0x45B1, r14	; 0x8045b1 <startPressed+0x6>
    a7f0:	f0 92 b2 45 	sts	0x45B2, r15	; 0x8045b2 <startPressed+0x7>
    a7f4:	c0 92 8f 45 	sts	0x458F, r12	; 0x80458f <lastHold+0x4>
    a7f8:	d0 92 90 45 	sts	0x4590, r13	; 0x804590 <lastHold+0x5>
    a7fc:	e0 92 91 45 	sts	0x4591, r14	; 0x804591 <lastHold+0x6>
    a800:	f0 92 92 45 	sts	0x4592, r15	; 0x804592 <lastHold+0x7>
    a804:	c0 92 9f 45 	sts	0x459F, r12	; 0x80459f <lastReleased+0x4>
    a808:	d0 92 a0 45 	sts	0x45A0, r13	; 0x8045a0 <lastReleased+0x5>
    a80c:	e0 92 a1 45 	sts	0x45A1, r14	; 0x8045a1 <lastReleased+0x6>
    a810:	f0 92 a2 45 	sts	0x45A2, r15	; 0x8045a2 <lastReleased+0x7>
setupButtonCluster():
    a814:	8d 2f       	mov	r24, r29
    a816:	81 70       	andi	r24, 0x01	; 1
initButton():
    a818:	80 93 4d 40 	sts	0x404D, r24	; 0x80404d <buttonState+0x2>
    a81c:	c0 92 b3 45 	sts	0x45B3, r12	; 0x8045b3 <startPressed+0x8>
    a820:	d0 92 b4 45 	sts	0x45B4, r13	; 0x8045b4 <startPressed+0x9>
    a824:	e0 92 b5 45 	sts	0x45B5, r14	; 0x8045b5 <startPressed+0xa>
    a828:	f0 92 b6 45 	sts	0x45B6, r15	; 0x8045b6 <startPressed+0xb>
    a82c:	c0 92 93 45 	sts	0x4593, r12	; 0x804593 <lastHold+0x8>
    a830:	d0 92 94 45 	sts	0x4594, r13	; 0x804594 <lastHold+0x9>
    a834:	e0 92 95 45 	sts	0x4595, r14	; 0x804595 <lastHold+0xa>
    a838:	f0 92 96 45 	sts	0x4596, r15	; 0x804596 <lastHold+0xb>
    a83c:	c0 92 a3 45 	sts	0x45A3, r12	; 0x8045a3 <lastReleased+0x8>
    a840:	d0 92 a4 45 	sts	0x45A4, r13	; 0x8045a4 <lastReleased+0x9>
    a844:	e0 92 a5 45 	sts	0x45A5, r14	; 0x8045a5 <lastReleased+0xa>
    a848:	f0 92 a6 45 	sts	0x45A6, r15	; 0x8045a6 <lastReleased+0xb>
getButtonState():
    a84c:	d6 95       	lsr	r29
    a84e:	d1 70       	andi	r29, 0x01	; 1
initButton():
    a850:	d0 93 4e 40 	sts	0x404E, r29	; 0x80404e <buttonState+0x3>
    a854:	c0 92 b7 45 	sts	0x45B7, r12	; 0x8045b7 <startPressed+0xc>
    a858:	d0 92 b8 45 	sts	0x45B8, r13	; 0x8045b8 <startPressed+0xd>
    a85c:	e0 92 b9 45 	sts	0x45B9, r14	; 0x8045b9 <startPressed+0xe>
    a860:	f0 92 ba 45 	sts	0x45BA, r15	; 0x8045ba <startPressed+0xf>
    a864:	c0 92 97 45 	sts	0x4597, r12	; 0x804597 <lastHold+0xc>
    a868:	d0 92 98 45 	sts	0x4598, r13	; 0x804598 <lastHold+0xd>
    a86c:	e0 92 99 45 	sts	0x4599, r14	; 0x804599 <lastHold+0xe>
    a870:	f0 92 9a 45 	sts	0x459A, r15	; 0x80459a <lastHold+0xf>
    a874:	c0 92 a7 45 	sts	0x45A7, r12	; 0x8045a7 <lastReleased+0xc>
    a878:	d0 92 a8 45 	sts	0x45A8, r13	; 0x8045a8 <lastReleased+0xd>
    a87c:	e0 92 a9 45 	sts	0x45A9, r14	; 0x8045a9 <lastReleased+0xe>
    a880:	f0 92 aa 45 	sts	0x45AA, r15	; 0x8045aa <lastReleased+0xf>
setupButtonCluster():
    a884:	f8 94       	cli
    a886:	9e b1       	in	r25, 0x0e	; 14
    a888:	86 b3       	in	r24, 0x16	; 22
    a88a:	90 7a       	andi	r25, 0xA0	; 160
    a88c:	83 70       	andi	r24, 0x03	; 3
    a88e:	89 2b       	or	r24, r25
    a890:	0e 94 33 4a 	call	0x9466	; 0x9466 <fifo_push(unsigned char)>
    a894:	78 94       	sei
takeOverTCA0():
    a896:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7e0a00>
    a89a:	80 91 42 40 	lds	r24, 0x4042	; 0x804042 <__PeripheralControl>
    a89e:	8f 7e       	andi	r24, 0xEF	; 239
    a8a0:	80 93 42 40 	sts	0x4042, r24	; 0x804042 <__PeripheralControl>
    a8a4:	8f e0       	ldi	r24, 0x0F	; 15
    a8a6:	80 93 05 0a 	sts	0x0A05, r24	; 0x800a05 <__TEXT_REGION_LENGTH__+0x7e0a05>
setupClicktimer():
    a8aa:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7e0a00>
    a8ae:	80 93 05 0a 	sts	0x0A05, r24	; 0x800a05 <__TEXT_REGION_LENGTH__+0x7e0a05>
    a8b2:	10 92 03 0a 	sts	0x0A03, r1	; 0x800a03 <__TEXT_REGION_LENGTH__+0x7e0a03>
    a8b6:	10 92 0a 0a 	sts	0x0A0A, r1	; 0x800a0a <__TEXT_REGION_LENGTH__+0x7e0a0a>
    a8ba:	81 e1       	ldi	r24, 0x11	; 17
    a8bc:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7e0a0b>
setCallback():
    a8c0:	83 e4       	ldi	r24, 0x43	; 67
    a8c2:	9d e4       	ldi	r25, 0x4D	; 77
    a8c4:	80 93 d4 44 	sts	0x44D4, r24	; 0x8044d4 <callBack>
    a8c8:	90 93 d5 44 	sts	0x44D5, r25	; 0x8044d5 <callBack+0x1>
analogRead():
    a8cc:	84 e4       	ldi	r24, 0x44	; 68
    a8ce:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    a8d2:	c0 93 0a 06 	sts	0x060A, r28	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
    a8d6:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
    a8da:	80 ff       	sbrs	r24, 0
    a8dc:	fc cf       	rjmp	.-8      	; 0xa8d6 <setup+0x34c>
    a8de:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
    a8e2:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
    a8e6:	85 e4       	ldi	r24, 0x45	; 69
    a8e8:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    a8ec:	81 e0       	ldi	r24, 0x01	; 1
    a8ee:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
    a8f2:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
    a8f6:	80 ff       	sbrs	r24, 0
    a8f8:	fc cf       	rjmp	.-8      	; 0xa8f2 <setup+0x368>
    a8fa:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
    a8fe:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
setup():
    a902:	0e 94 6d 46 	call	0x8cda	; 0x8cda <dxUtilClass::getTKelvin() [clone .constprop.158]>
_pinMode():
    a906:	c0 e8       	ldi	r28, 0x80	; 128
    a908:	c0 93 01 04 	sts	0x0401, r28	; 0x800401 <__TEXT_REGION_LENGTH__+0x7e0401>
setup():
    a90c:	64 ed       	ldi	r22, 0xD4	; 212
    a90e:	76 e0       	ldi	r23, 0x06	; 6
    a910:	8e ed       	ldi	r24, 0xDE	; 222
    a912:	97 e4       	ldi	r25, 0x47	; 71
    a914:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    a918:	1d ba       	out	0x1d, r1	; 29
    a91a:	1c ba       	out	0x1c, r1	; 28
_pinMode():
    a91c:	9f b7       	in	r25, 0x3f	; 63
    a91e:	f8 94       	cli
    a920:	21 e0       	ldi	r18, 0x01	; 1
    a922:	20 93 42 04 	sts	0x0442, r18	; 0x800442 <__TEXT_REGION_LENGTH__+0x7e0442>
    a926:	80 91 50 04 	lds	r24, 0x0450	; 0x800450 <__TEXT_REGION_LENGTH__+0x7e0450>
    a92a:	87 7f       	andi	r24, 0xF7	; 247
    a92c:	80 93 50 04 	sts	0x0450, r24	; 0x800450 <__TEXT_REGION_LENGTH__+0x7e0450>
    a930:	9f bf       	out	0x3f, r25	; 63
    a932:	9f b7       	in	r25, 0x3f	; 63
    a934:	f8 94       	cli
    a936:	82 e0       	ldi	r24, 0x02	; 2
    a938:	80 93 42 04 	sts	0x0442, r24	; 0x800442 <__TEXT_REGION_LENGTH__+0x7e0442>
    a93c:	80 91 51 04 	lds	r24, 0x0451	; 0x800451 <__TEXT_REGION_LENGTH__+0x7e0451>
    a940:	87 7f       	andi	r24, 0xF7	; 247
    a942:	80 93 51 04 	sts	0x0451, r24	; 0x800451 <__TEXT_REGION_LENGTH__+0x7e0451>
    a946:	9f bf       	out	0x3f, r25	; 63
    a948:	3f b7       	in	r19, 0x3f	; 63
    a94a:	f8 94       	cli
    a94c:	94 e0       	ldi	r25, 0x04	; 4
    a94e:	90 93 42 04 	sts	0x0442, r25	; 0x800442 <__TEXT_REGION_LENGTH__+0x7e0442>
    a952:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <__TEXT_REGION_LENGTH__+0x7e0452>
    a956:	87 7f       	andi	r24, 0xF7	; 247
    a958:	80 93 52 04 	sts	0x0452, r24	; 0x800452 <__TEXT_REGION_LENGTH__+0x7e0452>
    a95c:	3f bf       	out	0x3f, r19	; 63
    a95e:	3f b7       	in	r19, 0x3f	; 63
    a960:	f8 94       	cli
    a962:	88 e0       	ldi	r24, 0x08	; 8
    a964:	80 93 42 04 	sts	0x0442, r24	; 0x800442 <__TEXT_REGION_LENGTH__+0x7e0442>
    a968:	80 91 53 04 	lds	r24, 0x0453	; 0x800453 <__TEXT_REGION_LENGTH__+0x7e0453>
    a96c:	87 7f       	andi	r24, 0xF7	; 247
    a96e:	80 93 53 04 	sts	0x0453, r24	; 0x800453 <__TEXT_REGION_LENGTH__+0x7e0453>
    a972:	3f bf       	out	0x3f, r19	; 63
setup():
    a974:	20 93 60 09 	sts	0x0960, r18	; 0x800960 <__TEXT_REGION_LENGTH__+0x7e0960>
    a978:	c0 93 61 09 	sts	0x0961, r28	; 0x800961 <__TEXT_REGION_LENGTH__+0x7e0961>
    a97c:	85 e2       	ldi	r24, 0x25	; 37
    a97e:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7e0113>
    a982:	8d e1       	ldi	r24, 0x1D	; 29
    a984:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__TEXT_REGION_LENGTH__+0x7e0112>
    a988:	f8 94       	cli
    a98a:	c0 93 62 09 	sts	0x0962, r28	; 0x800962 <__TEXT_REGION_LENGTH__+0x7e0962>
    a98e:	80 91 53 04 	lds	r24, 0x0453	; 0x800453 <__TEXT_REGION_LENGTH__+0x7e0453>
    a992:	88 7f       	andi	r24, 0xF8	; 248
    a994:	81 60       	ori	r24, 0x01	; 1
    a996:	80 93 53 04 	sts	0x0453, r24	; 0x800453 <__TEXT_REGION_LENGTH__+0x7e0453>
    a99a:	78 94       	sei
_pinMode():
    a99c:	80 e1       	ldi	r24, 0x10	; 16
    a99e:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <__TEXT_REGION_LENGTH__+0x7e0401>
swap():
    a9a2:	80 91 7a 47 	lds	r24, 0x477A	; 0x80477a <SPI+0x7>
    a9a6:	88 23       	and	r24, r24
    a9a8:	b1 f0       	breq	.+44     	; 0xa9d6 <setup+0x44c>
setup():
    a9aa:	67 e3       	ldi	r22, 0x37	; 55
    a9ac:	76 e0       	ldi	r23, 0x06	; 6
    a9ae:	8e ed       	ldi	r24, 0xDE	; 222
    a9b0:	97 e4       	ldi	r25, 0x47	; 71
    a9b2:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    a9b6:	8e ed       	ldi	r24, 0xDE	; 222
    a9b8:	97 e4       	ldi	r25, 0x47	; 71
    a9ba:	0e 94 4b 3e 	call	0x7c96	; 0x7c96 <debugUtil::flush()>
    a9be:	ff cf       	rjmp	.-2      	; 0xa9be <setup+0x434>
pinConfigure():
    a9c0:	69 e8       	ldi	r22, 0x89	; 137
    a9c2:	70 e0       	ldi	r23, 0x00	; 0
    a9c4:	80 e0       	ldi	r24, 0x00	; 0
    a9c6:	0e 94 99 46 	call	0x8d32	; 0x8d32 <_pinconfigure(unsigned char, unsigned int)>
    a9ca:	62 e8       	ldi	r22, 0x82	; 130
    a9cc:	72 e0       	ldi	r23, 0x02	; 2
    a9ce:	81 e0       	ldi	r24, 0x01	; 1
    a9d0:	0e 94 99 46 	call	0x8d32	; 0x8d32 <_pinconfigure(unsigned char, unsigned int)>
    a9d4:	0e ce       	rjmp	.-996    	; 0xa5f2 <setup+0x68>
swap():
    a9d6:	10 92 79 47 	sts	0x4779, r1	; 0x804779 <SPI+0x6>
    a9da:	90 93 76 47 	sts	0x4776, r25	; 0x804776 <SPI+0x3>
    a9de:	86 e0       	ldi	r24, 0x06	; 6
    a9e0:	80 93 77 47 	sts	0x4777, r24	; 0x804777 <SPI+0x4>
    a9e4:	80 e4       	ldi	r24, 0x40	; 64
    a9e6:	99 e0       	ldi	r25, 0x09	; 9
    a9e8:	80 93 73 47 	sts	0x4773, r24	; 0x804773 <SPI>
    a9ec:	90 93 74 47 	sts	0x4774, r25	; 0x804774 <SPI+0x1>
_ZN4U8G211setBusClockEm():
    a9f0:	80 e0       	ldi	r24, 0x00	; 0
    a9f2:	9b e1       	ldi	r25, 0x1B	; 27
    a9f4:	a7 eb       	ldi	r26, 0xB7	; 183
    a9f6:	b0 e0       	ldi	r27, 0x00	; 0
    a9f8:	80 93 b3 51 	sts	0x51B3, r24	; 0x8051b3 <u8g2+0x10>
    a9fc:	90 93 b4 51 	sts	0x51B4, r25	; 0x8051b4 <u8g2+0x11>
    aa00:	a0 93 b5 51 	sts	0x51B5, r26	; 0x8051b5 <u8g2+0x12>
    aa04:	b0 93 b6 51 	sts	0x51B6, r27	; 0x8051b6 <u8g2+0x13>
u8x8_InitDisplay():
    aa08:	e0 91 ab 51 	lds	r30, 0x51AB	; 0x8051ab <u8g2+0x8>
    aa0c:	f0 91 ac 51 	lds	r31, 0x51AC	; 0x8051ac <u8g2+0x9>
    aa10:	30 e0       	ldi	r19, 0x00	; 0
    aa12:	20 e0       	ldi	r18, 0x00	; 0
    aa14:	40 e0       	ldi	r20, 0x00	; 0
    aa16:	6a e0       	ldi	r22, 0x0A	; 10
    aa18:	87 ea       	ldi	r24, 0xA7	; 167
    aa1a:	91 e5       	ldi	r25, 0x51	; 81
    aa1c:	09 95       	icall
u8g2_FirstPage():
    aa1e:	80 91 32 52 	lds	r24, 0x5232	; 0x805232 <u8g2+0x8f>
    aa22:	88 23       	and	r24, r24
    aa24:	19 f0       	breq	.+6      	; 0xaa2c <setup+0x4a2>
    aa26:	87 ea       	ldi	r24, 0xA7	; 167
    aa28:	91 e5       	ldi	r25, 0x51	; 81
    aa2a:	0f dc       	rcall	.-2018   	; 0xa24a <u8g2_ClearBuffer>
    aa2c:	80 e0       	ldi	r24, 0x00	; 0
    aa2e:	0e 94 00 2e 	call	0x5c00	; 0x5c00 <u8g2_SetBufferCurrTileRow.constprop.137>
u8g2_NextPage():
    aa32:	87 ea       	ldi	r24, 0xA7	; 167
    aa34:	91 e5       	ldi	r25, 0x51	; 81
    aa36:	0e 94 3b 3c 	call	0x7876	; 0x7876 <u8g2_send_buffer>
    aa3a:	c0 91 e2 51 	lds	r28, 0x51E2	; 0x8051e2 <u8g2+0x3f>
    aa3e:	80 91 e1 51 	lds	r24, 0x51E1	; 0x8051e1 <u8g2+0x3e>
    aa42:	c8 0f       	add	r28, r24
    aa44:	e0 91 a7 51 	lds	r30, 0x51A7	; 0x8051a7 <u8g2+0x4>
    aa48:	f0 91 a8 51 	lds	r31, 0x51A8	; 0x8051a8 <u8g2+0x5>
    aa4c:	81 89       	ldd	r24, Z+17	; 0x11
    aa4e:	c8 17       	cp	r28, r24
    aa50:	08 f4       	brcc	.+2      	; 0xaa54 <setup+0x4ca>
    aa52:	27 c1       	rjmp	.+590    	; 0xaca2 <setup+0x718>
    aa54:	87 ea       	ldi	r24, 0xA7	; 167
    aa56:	91 e5       	ldi	r25, 0x51	; 81
    aa58:	0e 94 ba 32 	call	0x6574	; 0x6574 <u8x8_RefreshDisplay>
u8g2_ClearDisplay():
    aa5c:	80 e0       	ldi	r24, 0x00	; 0
    aa5e:	0e 94 00 2e 	call	0x5c00	; 0x5c00 <u8g2_SetBufferCurrTileRow.constprop.137>
u8x8_SetPowerSave():
    aa62:	e0 91 ab 51 	lds	r30, 0x51AB	; 0x8051ab <u8g2+0x8>
    aa66:	f0 91 ac 51 	lds	r31, 0x51AC	; 0x8051ac <u8g2+0x9>
    aa6a:	30 e0       	ldi	r19, 0x00	; 0
    aa6c:	20 e0       	ldi	r18, 0x00	; 0
    aa6e:	40 e0       	ldi	r20, 0x00	; 0
    aa70:	6b e0       	ldi	r22, 0x0B	; 11
    aa72:	87 ea       	ldi	r24, 0xA7	; 167
    aa74:	91 e5       	ldi	r25, 0x51	; 81
    aa76:	09 95       	icall
_ZN4U8G211setContrastEh():
    aa78:	80 e0       	ldi	r24, 0x00	; 0
    aa7a:	0e 94 ca 2d 	call	0x5b94	; 0x5b94 <u8x8_SetContrast.constprop.148>
setValue():
    aa7e:	10 92 40 51 	sts	0x5140, r1	; 0x805140 <contrastCtrl+0x7>
_ZN4U8G215enableUTF8PrintEv():
    aa82:	83 e6       	ldi	r24, 0x63	; 99
    aa84:	94 e3       	ldi	r25, 0x34	; 52
    aa86:	80 93 33 52 	sts	0x5233, r24	; 0x805233 <u8g2+0x90>
    aa8a:	90 93 34 52 	sts	0x5234, r25	; 0x805234 <u8g2+0x91>
u8log_Init():
    aa8e:	e3 e9       	ldi	r30, 0x93	; 147
    aa90:	f1 e5       	ldi	r31, 0x51	; 81
    aa92:	80 e1       	ldi	r24, 0x10	; 16
    aa94:	df 01       	movw	r26, r30
    aa96:	1d 92       	st	X+, r1
    aa98:	8a 95       	dec	r24
    aa9a:	e9 f7       	brne	.-6      	; 0xaa96 <setup+0x50c>
    aa9c:	8c e1       	ldi	r24, 0x1C	; 28
    aa9e:	80 93 95 51 	sts	0x5195, r24	; 0x805195 <u8g2log+0x6>
    aaa2:	89 e0       	ldi	r24, 0x09	; 9
    aaa4:	80 93 96 51 	sts	0x5196, r24	; 0x805196 <u8g2log+0x7>
    aaa8:	88 ed       	ldi	r24, 0xD8	; 216
    aaaa:	93 e4       	ldi	r25, 0x43	; 67
    aaac:	80 93 99 51 	sts	0x5199, r24	; 0x805199 <u8g2log+0xa>
    aab0:	90 93 9a 51 	sts	0x519A, r25	; 0x80519a <u8g2log+0xb>
    aab4:	fc 01       	movw	r30, r24
    aab6:	84 ed       	ldi	r24, 0xD4	; 212
    aab8:	94 e4       	ldi	r25, 0x44	; 68
u8log_clear_screen():
    aaba:	20 e2       	ldi	r18, 0x20	; 32
    aabc:	21 93       	st	Z+, r18
    aabe:	8e 17       	cp	r24, r30
    aac0:	9f 07       	cpc	r25, r31
    aac2:	e1 f7       	brne	.-8      	; 0xaabc <setup+0x532>
_ZN4U8G211clearBufferEv():
    aac4:	87 ea       	ldi	r24, 0xA7	; 167
    aac6:	91 e5       	ldi	r25, 0x51	; 81
    aac8:	c0 db       	rcall	.-2176   	; 0xa24a <u8g2_ClearBuffer>
_ZN4U8G27setFontEPKh():
    aaca:	64 ec       	ldi	r22, 0xC4	; 196
    aacc:	7b e1       	ldi	r23, 0x1B	; 27
    aace:	87 ea       	ldi	r24, 0xA7	; 167
    aad0:	91 e5       	ldi	r25, 0x51	; 81
    aad2:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
u8g2_SetFontMode():
    aad6:	10 92 10 52 	sts	0x5210, r1	; 0x805210 <u8g2+0x6d>
_ZN4U8G212setDrawColorEh():
    aada:	61 e0       	ldi	r22, 0x01	; 1
    aadc:	87 ea       	ldi	r24, 0xA7	; 167
    aade:	91 e5       	ldi	r25, 0x51	; 81
    aae0:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
u8g2_SetFontPosTop():
    aae4:	80 e1       	ldi	r24, 0x10	; 16
    aae6:	98 e3       	ldi	r25, 0x38	; 56
    aae8:	80 93 03 52 	sts	0x5203, r24	; 0x805203 <u8g2+0x60>
    aaec:	90 93 04 52 	sts	0x5204, r25	; 0x805204 <u8g2+0x61>
u8g2_SetFontRefHeightExtendedText():
    aaf0:	c1 e0       	ldi	r28, 0x01	; 1
    aaf2:	c0 93 2c 52 	sts	0x522C, r28	; 0x80522c <u8g2+0x89>
    aaf6:	87 ea       	ldi	r24, 0xA7	; 167
    aaf8:	91 e5       	ldi	r25, 0x51	; 81
    aafa:	0e 94 19 38 	call	0x7032	; 0x7032 <u8g2_UpdateRefHeight>
u8g2_SetFontDirection():
    aafe:	10 92 13 52 	sts	0x5213, r1	; 0x805213 <u8g2+0x70>
_ZN4U8G210sendBufferEv():
    ab02:	0e 94 95 3c 	call	0x792a	; 0x792a <u8g2_SendBuffer.constprop.142>
setup():
    ab06:	62 e2       	ldi	r22, 0x22	; 34
    ab08:	76 e0       	ldi	r23, 0x06	; 6
    ab0a:	8e ed       	ldi	r24, 0xDE	; 222
    ab0c:	97 e4       	ldi	r25, 0x47	; 71
    ab0e:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
print():
    ab12:	2a e0       	ldi	r18, 0x0A	; 10
    ab14:	42 e0       	ldi	r20, 0x02	; 2
    ab16:	50 e0       	ldi	r21, 0x00	; 0
    ab18:	60 e0       	ldi	r22, 0x00	; 0
    ab1a:	70 e0       	ldi	r23, 0x00	; 0
    ab1c:	8e ed       	ldi	r24, 0xDE	; 222
    ab1e:	97 e4       	ldi	r25, 0x47	; 71
    ab20:	0e 94 52 4a 	call	0x94a4	; 0x94a4 <Print::printNumber(unsigned long, unsigned char)>
println():
    ab24:	8e ed       	ldi	r24, 0xDE	; 222
    ab26:	97 e4       	ldi	r25, 0x47	; 71
    ab28:	0e 94 6b 49 	call	0x92d6	; 0x92d6 <Print::println()>
setValue():
    ab2c:	c0 93 64 51 	sts	0x5164, r28	; 0x805164 <additionalModes+0x6>
    ab30:	c0 93 5d 51 	sts	0x515D, r28	; 0x80515d <reassignStoRcl+0x6>
setupMenus():
    ab34:	8c e2       	ldi	r24, 0x2C	; 44
    ab36:	90 e4       	ldi	r25, 0x40	; 64
    ab38:	80 93 60 52 	sts	0x5260, r24	; 0x805260 <UImainMenu+0x6>
    ab3c:	90 93 61 52 	sts	0x5261, r25	; 0x805261 <UImainMenu+0x7>
    ab40:	db e0       	ldi	r29, 0x0B	; 11
    ab42:	d0 93 62 52 	sts	0x5262, r29	; 0x805262 <UImainMenu+0x8>
    ab46:	8a e5       	ldi	r24, 0x5A	; 90
    ab48:	92 e5       	ldi	r25, 0x52	; 82
    ab4a:	0e 94 d5 2d 	call	0x5baa	; 0x5baa <UImenu::selectFirstItem() [clone .constprop.145]>
setValue():
    ab4e:	10 92 19 51 	sts	0x5119, r1	; 0x805119 <logSkip+0x7>
    ab52:	10 92 11 51 	sts	0x5111, r1	; 0x805111 <logSplitUnit+0x6>
    ab56:	c0 93 0a 51 	sts	0x510A, r28	; 0x80510a <logTimestamp+0x6>
    ab5a:	c0 93 03 51 	sts	0x5103, r28	; 0x805103 <logTamb+0x6>
    ab5e:	80 91 65 55 	lds	r24, 0x5565	; 0x805565 <k197dev+0x300>
    ab62:	80 93 ef 50 	sts	0x50EF, r24	; 0x8050ef <logStatSamples+0x7>
setupMenus():
    ab66:	86 e1       	ldi	r24, 0x16	; 22
    ab68:	90 e4       	ldi	r25, 0x40	; 64
    ab6a:	80 93 55 52 	sts	0x5255, r24	; 0x805255 <UIlogMenu+0x6>
    ab6e:	90 93 56 52 	sts	0x5256, r25	; 0x805256 <UIlogMenu+0x7>
    ab72:	d0 93 57 52 	sts	0x5257, r29	; 0x805257 <UIlogMenu+0x8>
    ab76:	8f e4       	ldi	r24, 0x4F	; 79
    ab78:	92 e5       	ldi	r25, 0x52	; 82
    ab7a:	0e 94 d5 2d 	call	0x5baa	; 0x5baa <UImenu::selectFirstItem() [clone .constprop.145]>
    ab7e:	80 e0       	ldi	r24, 0x00	; 0
    ab80:	90 e4       	ldi	r25, 0x40	; 64
    ab82:	80 93 4a 52 	sts	0x524A, r24	; 0x80524a <UIgraphMenu+0x6>
    ab86:	90 93 4b 52 	sts	0x524B, r25	; 0x80524b <UIgraphMenu+0x7>
    ab8a:	d0 93 4c 52 	sts	0x524C, r29	; 0x80524c <UIgraphMenu+0x8>
    ab8e:	84 e4       	ldi	r24, 0x44	; 68
    ab90:	92 e5       	ldi	r25, 0x52	; 82
    ab92:	0e 94 d5 2d 	call	0x5baa	; 0x5baa <UImenu::selectFirstItem() [clone .constprop.145]>
setValue():
    ab96:	c0 93 ba 50 	sts	0x50BA, r28	; 0x8050ba <gr_xscale_roll_mode+0x6>
    ab9a:	80 91 6a 55 	lds	r24, 0x556A	; 0x80556a <k197dev+0x305>
    ab9e:	80 93 b3 50 	sts	0x50B3, r24	; 0x8050b3 <gr_xscale_autosample+0x6>
setupMenus():
    aba2:	0e 94 a9 4d 	call	0x9b52	; 0x9b52 <permadata::retrieve_from_EEPROM()>
setup():
    aba6:	68 ec       	ldi	r22, 0xC8	; 200
    aba8:	76 e0       	ldi	r23, 0x06	; 6
    abaa:	8f e8       	ldi	r24, 0x8F	; 143
    abac:	91 e5       	ldi	r25, 0x51	; 81
    abae:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
_ZN9debugUtil7useOledEb():
    abb2:	c0 93 e3 47 	sts	0x47E3, r28	; 0x8047e3 <DebugOut+0x5>
printResetFlags():
    abb6:	80 91 51 40 	lds	r24, 0x4051	; 0x804051 <dxUtil+0x2>
    abba:	85 ff       	sbrs	r24, 5
    abbc:	06 c0       	rjmp	.+12     	; 0xabca <setup+0x640>
    abbe:	69 e8       	ldi	r22, 0x89	; 137
    abc0:	76 e0       	ldi	r23, 0x06	; 6
    abc2:	8e ed       	ldi	r24, 0xDE	; 222
    abc4:	97 e4       	ldi	r25, 0x47	; 71
    abc6:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    abca:	80 91 51 40 	lds	r24, 0x4051	; 0x804051 <dxUtil+0x2>
    abce:	83 ff       	sbrs	r24, 3
    abd0:	06 c0       	rjmp	.+12     	; 0xabde <setup+0x654>
    abd2:	6f e7       	ldi	r22, 0x7F	; 127
    abd4:	76 e0       	ldi	r23, 0x06	; 6
    abd6:	8e ed       	ldi	r24, 0xDE	; 222
    abd8:	97 e4       	ldi	r25, 0x47	; 71
    abda:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    abde:	80 91 51 40 	lds	r24, 0x4051	; 0x804051 <dxUtil+0x2>
    abe2:	84 ff       	sbrs	r24, 4
    abe4:	06 c0       	rjmp	.+12     	; 0xabf2 <setup+0x668>
    abe6:	66 e7       	ldi	r22, 0x76	; 118
    abe8:	76 e0       	ldi	r23, 0x06	; 6
    abea:	8e ed       	ldi	r24, 0xDE	; 222
    abec:	97 e4       	ldi	r25, 0x47	; 71
    abee:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    abf2:	80 91 51 40 	lds	r24, 0x4051	; 0x804051 <dxUtil+0x2>
    abf6:	82 ff       	sbrs	r24, 2
    abf8:	06 c0       	rjmp	.+12     	; 0xac06 <setup+0x67c>
    abfa:	6d e6       	ldi	r22, 0x6D	; 109
    abfc:	76 e0       	ldi	r23, 0x06	; 6
    abfe:	8e ed       	ldi	r24, 0xDE	; 222
    ac00:	97 e4       	ldi	r25, 0x47	; 71
    ac02:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    ac06:	80 91 51 40 	lds	r24, 0x4051	; 0x804051 <dxUtil+0x2>
    ac0a:	81 ff       	sbrs	r24, 1
    ac0c:	06 c0       	rjmp	.+12     	; 0xac1a <setup+0x690>
    ac0e:	6e e5       	ldi	r22, 0x5E	; 94
    ac10:	76 e0       	ldi	r23, 0x06	; 6
    ac12:	8e ed       	ldi	r24, 0xDE	; 222
    ac14:	97 e4       	ldi	r25, 0x47	; 71
    ac16:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    ac1a:	80 91 51 40 	lds	r24, 0x4051	; 0x804051 <dxUtil+0x2>
    ac1e:	80 ff       	sbrs	r24, 0
    ac20:	06 c0       	rjmp	.+12     	; 0xac2e <setup+0x6a4>
    ac22:	6f e4       	ldi	r22, 0x4F	; 79
    ac24:	76 e0       	ldi	r23, 0x06	; 6
    ac26:	8e ed       	ldi	r24, 0xDE	; 222
    ac28:	97 e4       	ldi	r25, 0x47	; 71
    ac2a:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
setup():
    ac2e:	0e 94 92 4c 	call	0x9924	; 0x9924 <dxUtilClass::checkVoltages(bool) [clone .constprop.151]>
    ac32:	65 ec       	ldi	r22, 0xC5	; 197
    ac34:	76 e0       	ldi	r23, 0x06	; 6
    ac36:	8e ed       	ldi	r24, 0xDE	; 222
    ac38:	97 e4       	ldi	r25, 0x47	; 71
    ac3a:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
pollMVIOstatus():
    ac3e:	20 91 c2 00 	lds	r18, 0x00C2	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    ac42:	80 91 4f 40 	lds	r24, 0x404F	; 0x80404f <dxUtil>
    ac46:	90 91 50 40 	lds	r25, 0x4050	; 0x804050 <dxUtil+0x1>
    ac4a:	20 ff       	sbrs	r18, 0
    ac4c:	33 c0       	rjmp	.+102    	; 0xacb4 <setup+0x72a>
    ac4e:	01 97       	sbiw	r24, 0x01	; 1
    ac50:	61 f0       	breq	.+24     	; 0xac6a <setup+0x6e0>
    ac52:	6a ea       	ldi	r22, 0xAA	; 170
    ac54:	76 e0       	ldi	r23, 0x06	; 6
    ac56:	8e ed       	ldi	r24, 0xDE	; 222
    ac58:	97 e4       	ldi	r25, 0x47	; 71
    ac5a:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    ac5e:	81 e0       	ldi	r24, 0x01	; 1
    ac60:	90 e0       	ldi	r25, 0x00	; 0
    ac62:	80 93 4f 40 	sts	0x404F, r24	; 0x80404f <dxUtil>
    ac66:	90 93 50 40 	sts	0x4050, r25	; 0x804050 <dxUtil+0x1>
setup():
    ac6a:	0e 94 76 4c 	call	0x98ec	; 0x98ec <dxUtilClass::checkTemperature(bool) [clone .constprop.156]>
    ac6e:	80 91 6b 55 	lds	r24, 0x556B	; 0x80556b <BTman>
    ac72:	6c eb       	ldi	r22, 0xBC	; 188
    ac74:	76 e0       	ldi	r23, 0x06	; 6
    ac76:	81 11       	cpse	r24, r1
    ac78:	02 c0       	rjmp	.+4      	; 0xac7e <setup+0x6f4>
    ac7a:	62 eb       	ldi	r22, 0xB2	; 178
    ac7c:	76 e0       	ldi	r23, 0x06	; 6
    ac7e:	8e ed       	ldi	r24, 0xDE	; 222
    ac80:	97 e4       	ldi	r25, 0x47	; 71
    ac82:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    ac86:	64 e6       	ldi	r22, 0x64	; 100
    ac88:	70 e0       	ldi	r23, 0x00	; 0
    ac8a:	80 e0       	ldi	r24, 0x00	; 0
    ac8c:	90 e0       	ldi	r25, 0x00	; 0
    ac8e:	df 91       	pop	r29
    ac90:	cf 91       	pop	r28
    ac92:	1f 91       	pop	r17
    ac94:	0f 91       	pop	r16
    ac96:	ff 90       	pop	r15
    ac98:	ef 90       	pop	r14
    ac9a:	df 90       	pop	r13
    ac9c:	cf 90       	pop	r12
    ac9e:	0c 94 07 32 	jmp	0x640e	; 0x640e <delay>
u8g2_NextPage():
    aca2:	80 91 32 52 	lds	r24, 0x5232	; 0x805232 <u8g2+0x8f>
    aca6:	88 23       	and	r24, r24
    aca8:	19 f0       	breq	.+6      	; 0xacb0 <setup+0x726>
    acaa:	87 ea       	ldi	r24, 0xA7	; 167
    acac:	91 e5       	ldi	r25, 0x51	; 81
    acae:	cd da       	rcall	.-2662   	; 0xa24a <u8g2_ClearBuffer>
    acb0:	8c 2f       	mov	r24, r28
    acb2:	bd ce       	rjmp	.-646    	; 0xaa2e <setup+0x4a4>
pollMVIOstatus():
    acb4:	89 2b       	or	r24, r25
    acb6:	c9 f2       	breq	.-78     	; 0xac6a <setup+0x6e0>
    acb8:	6d e9       	ldi	r22, 0x9D	; 157
    acba:	76 e0       	ldi	r23, 0x06	; 6
    acbc:	8e ed       	ldi	r24, 0xDE	; 222
    acbe:	97 e4       	ldi	r25, 0x47	; 71
    acc0:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    acc4:	10 92 4f 40 	sts	0x404F, r1	; 0x80404f <dxUtil>
    acc8:	10 92 50 40 	sts	0x4050, r1	; 0x804050 <dxUtil+0x1>
    accc:	ce cf       	rjmp	.-100    	; 0xac6a <setup+0x6e0>

0000acce <__vector_22>:
__vector_22():
    acce:	ef 93       	push	r30
    acd0:	ff 93       	push	r31
    acd2:	f8 98       	cbi	0x1f, 0	; 31
    acd4:	e7 ec       	ldi	r30, 0xC7	; 199
    acd6:	f5 e4       	ldi	r31, 0x45	; 69
    acd8:	0b c0       	rjmp	.+22     	; 0xacf0 <_do_dre()>

0000acda <__vector_21>:
__vector_21():
    acda:	ef 93       	push	r30
    acdc:	ff 93       	push	r31
    acde:	f8 98       	cbi	0x1f, 0	; 31
    ace0:	e7 ec       	ldi	r30, 0xC7	; 199
    ace2:	f5 e4       	ldi	r31, 0x45	; 69
    ace4:	34 c0       	rjmp	.+104    	; 0xad4e <_do_rxc()>

0000ace6 <__vector_23>:
__vector_23():
    ace6:	ef 93       	push	r30
    ace8:	ff 93       	push	r31
    acea:	e7 ec       	ldi	r30, 0xC7	; 199
    acec:	f5 e4       	ldi	r31, 0x45	; 69
    acee:	5f c0       	rjmp	.+190    	; 0xadae <_do_txc()>

0000acf0 <_do_dre()>:
_Z7_do_drev():
    acf0:	2f 93       	push	r18
    acf2:	2f b7       	in	r18, 0x3f	; 63
    acf4:	2f 93       	push	r18
    acf6:	8f 93       	push	r24
    acf8:	9f 93       	push	r25
    acfa:	af 93       	push	r26
    acfc:	bf 93       	push	r27
    acfe:	68 94       	set

0000ad00 <_poll_dre>:
    ad00:	cf 93       	push	r28
    ad02:	df 93       	push	r29
    ad04:	20 e0       	ldi	r18, 0x00	; 0
    ad06:	c0 85       	ldd	r28, Z+8	; 0x08
    ad08:	d8 e0       	ldi	r29, 0x08	; 8
    ad0a:	92 89       	ldd	r25, Z+18	; 0x12
    ad0c:	df 01       	movw	r26, r30
    ad0e:	a9 0f       	add	r26, r25
    ad10:	b2 1f       	adc	r27, r18
    ad12:	ad 5a       	subi	r26, 0xAD	; 173
    ad14:	bf 4f       	sbci	r27, 0xFF	; 255
    ad16:	8c 91       	ld	r24, X
    ad18:	20 e4       	ldi	r18, 0x40	; 64
    ad1a:	2c 83       	std	Y+4, r18	; 0x04
    ad1c:	8a 83       	std	Y+2, r24	; 0x02
    ad1e:	9f 5f       	subi	r25, 0xFF	; 255
    ad20:	9f 73       	andi	r25, 0x3F	; 63
    ad22:	8d 81       	ldd	r24, Y+5	; 0x05
    ad24:	21 89       	ldd	r18, Z+17	; 0x11
    ad26:	29 13       	cpse	r18, r25
    ad28:	02 c0       	rjmp	.+4      	; 0xad2e <_done_dre_irq>
    ad2a:	8f 7d       	andi	r24, 0xDF	; 223
    ad2c:	8d 83       	std	Y+5, r24	; 0x05

0000ad2e <_done_dre_irq>:
    ad2e:	92 8b       	std	Z+18, r25	; 0x12
    ad30:	df 91       	pop	r29
    ad32:	cf 91       	pop	r28
    ad34:	16 f0       	brts	.+4      	; 0xad3a <_done_dre_irq+0xc>
    ad36:	0c 94 bc 30 	jmp	0x6178	; 0x6178 <_poll_dre_done>
    ad3a:	bf 91       	pop	r27
    ad3c:	af 91       	pop	r26
    ad3e:	9f 91       	pop	r25
    ad40:	8f 91       	pop	r24
    ad42:	2f 91       	pop	r18
    ad44:	2f bf       	out	0x3f, r18	; 63
    ad46:	2f 91       	pop	r18
    ad48:	ff 91       	pop	r31
    ad4a:	ef 91       	pop	r30
    ad4c:	18 95       	reti

0000ad4e <_do_rxc()>:
_Z7_do_rxcv():
    ad4e:	2f 93       	push	r18
    ad50:	2f b7       	in	r18, 0x3f	; 63
    ad52:	2f 93       	push	r18
    ad54:	3f 93       	push	r19
    ad56:	8f 93       	push	r24
    ad58:	9f 93       	push	r25
    ad5a:	cf 93       	push	r28
    ad5c:	df 93       	push	r29
    ad5e:	c0 85       	ldd	r28, Z+8	; 0x08
    ad60:	d8 e0       	ldi	r29, 0x08	; 8
    ad62:	2e 81       	ldd	r18, Y+6	; 0x06
    ad64:	2f 7e       	andi	r18, 0xEF	; 239
    ad66:	2e 83       	std	Y+6, r18	; 0x06
    ad68:	89 81       	ldd	r24, Y+1	; 0x01
    ad6a:	98 81       	ld	r25, Y
    ad6c:	86 74       	andi	r24, 0x46	; 70
    ad6e:	88 0f       	add	r24, r24
    ad70:	36 85       	ldd	r19, Z+14	; 0x0e
    ad72:	38 2b       	or	r19, r24
    ad74:	82 fd       	sbrc	r24, 2
    ad76:	0d c0       	rjmp	.+26     	; 0xad92 <_end_rxc>
    ad78:	c7 85       	ldd	r28, Z+15	; 0x0f
    ad7a:	81 e0       	ldi	r24, 0x01	; 1
    ad7c:	8c 0f       	add	r24, r28
    ad7e:	8f 73       	andi	r24, 0x3F	; 63
    ad80:	20 89       	ldd	r18, Z+16	; 0x10
    ad82:	28 17       	cp	r18, r24
    ad84:	91 f0       	breq	.+36     	; 0xadaa <_buff_full_rxc>
    ad86:	ce 0f       	add	r28, r30
    ad88:	df 2f       	mov	r29, r31
    ad8a:	20 e0       	ldi	r18, 0x00	; 0
    ad8c:	d2 1f       	adc	r29, r18
    ad8e:	9b 8b       	std	Y+19, r25	; 0x13
    ad90:	87 87       	std	Z+15, r24	; 0x0f

0000ad92 <_end_rxc>:
    ad92:	36 87       	std	Z+14, r19	; 0x0e
    ad94:	df 91       	pop	r29
    ad96:	cf 91       	pop	r28
    ad98:	9f 91       	pop	r25
    ad9a:	8f 91       	pop	r24
    ad9c:	3f 91       	pop	r19
    ad9e:	2f 91       	pop	r18
    ada0:	2f bf       	out	0x3f, r18	; 63
    ada2:	2f 91       	pop	r18
    ada4:	ff 91       	pop	r31
    ada6:	ef 91       	pop	r30
    ada8:	18 95       	reti

0000adaa <_buff_full_rxc>:
    adaa:	30 64       	ori	r19, 0x40	; 64
    adac:	f2 cf       	rjmp	.-28     	; 0xad92 <_end_rxc>

0000adae <_do_txc()>:
_Z7_do_txcv():
    adae:	8f 93       	push	r24
    adb0:	8f b7       	in	r24, 0x3f	; 63
    adb2:	8f 93       	push	r24
    adb4:	9f 93       	push	r25
    adb6:	cf 93       	push	r28
    adb8:	df 93       	push	r29
    adba:	c0 85       	ldd	r28, Z+8	; 0x08
    adbc:	d8 e0       	ldi	r29, 0x08	; 8
    adbe:	9d 81       	ldd	r25, Y+5	; 0x05

0000adc0 <_txc_flush_rx>:
    adc0:	88 81       	ld	r24, Y
    adc2:	8c 81       	ldd	r24, Y+4	; 0x04
    adc4:	87 fd       	sbrc	r24, 7
    adc6:	fc cf       	rjmp	.-8      	; 0xadc0 <_txc_flush_rx>
    adc8:	9f 7b       	andi	r25, 0xBF	; 191
    adca:	90 68       	ori	r25, 0x80	; 128
    adcc:	9d 83       	std	Y+5, r25	; 0x05
    adce:	df 91       	pop	r29
    add0:	cf 91       	pop	r28
    add2:	9f 91       	pop	r25
    add4:	8f 91       	pop	r24
    add6:	8f bf       	out	0x3f, r24	; 63
    add8:	8f 91       	pop	r24
    adda:	ff 91       	pop	r31
    addc:	ef 91       	pop	r30
    adde:	18 95       	reti

0000ade0 <__vector_31>:
__vector_31():
    ade0:	ef 93       	push	r30
    ade2:	ff 93       	push	r31
    ade4:	eb eb       	ldi	r30, 0xBB	; 187
    ade6:	f5 e4       	ldi	r31, 0x45	; 69
    ade8:	8f 93       	push	r24
    adea:	8f b7       	in	r24, 0x3f	; 63
    adec:	8f 93       	push	r24
    adee:	80 81       	ld	r24, Z
    adf0:	8f 5f       	subi	r24, 0xFF	; 255
    adf2:	80 83       	st	Z, r24
    adf4:	81 81       	ldd	r24, Z+1	; 0x01
    adf6:	8f 4f       	sbci	r24, 0xFF	; 255
    adf8:	81 83       	std	Z+1, r24	; 0x01
    adfa:	82 81       	ldd	r24, Z+2	; 0x02
    adfc:	8f 4f       	sbci	r24, 0xFF	; 255
    adfe:	82 83       	std	Z+2, r24	; 0x02
    ae00:	83 81       	ldd	r24, Z+3	; 0x03
    ae02:	8f 4f       	sbci	r24, 0xFF	; 255
    ae04:	83 83       	std	Z+3, r24	; 0x03
    ae06:	81 e0       	ldi	r24, 0x01	; 1
    ae08:	80 93 26 0b 	sts	0x0B26, r24	; 0x800b26 <__TEXT_REGION_LENGTH__+0x7e0b26>
    ae0c:	8f 91       	pop	r24
    ae0e:	8f bf       	out	0x3f, r24	; 63
    ae10:	8f 91       	pop	r24
    ae12:	ff 91       	pop	r31
    ae14:	ef 91       	pop	r30
    ae16:	18 95       	reti

0000ae18 <__vector_18>:
__vector_18():
    ae18:	1f 92       	push	r1
    ae1a:	0f 92       	push	r0
    ae1c:	0f b6       	in	r0, 0x3f	; 63
    ae1e:	0f 92       	push	r0
    ae20:	11 24       	eor	r1, r1
    ae22:	0b b6       	in	r0, 0x3b	; 59
    ae24:	0f 92       	push	r0
    ae26:	1f 93       	push	r17
    ae28:	2f 93       	push	r18
    ae2a:	3f 93       	push	r19
    ae2c:	4f 93       	push	r20
    ae2e:	5f 93       	push	r21
    ae30:	6f 93       	push	r22
    ae32:	7f 93       	push	r23
    ae34:	8f 93       	push	r24
    ae36:	9f 93       	push	r25
    ae38:	af 93       	push	r26
    ae3a:	bf 93       	push	r27
    ae3c:	cf 93       	push	r28
    ae3e:	df 93       	push	r29
    ae40:	ef 93       	push	r30
    ae42:	ff 93       	push	r31
TWI_HandleSlaveIRQ():
    ae44:	c2 e6       	ldi	r28, 0x62	; 98
    ae46:	d6 e4       	ldi	r29, 0x46	; 70
    ae48:	e8 81       	ld	r30, Y
    ae4a:	f9 81       	ldd	r31, Y+1	; 0x01
    ae4c:	83 85       	ldd	r24, Z+11	; 0x0b
    ae4e:	86 ff       	sbrs	r24, 6
    ae50:	58 c0       	rjmp	.+176    	; 0xaf02 <__vector_18+0xea>
    ae52:	80 ff       	sbrs	r24, 0
    ae54:	43 c0       	rjmp	.+134    	; 0xaedc <__vector_18+0xc4>
    ae56:	15 85       	ldd	r17, Z+13	; 0x0d
    ae58:	81 ff       	sbrs	r24, 1
    ae5a:	3a c0       	rjmp	.+116    	; 0xaed0 <__vector_18+0xb8>
    ae5c:	8e 81       	ldd	r24, Y+6	; 0x06
    ae5e:	88 23       	and	r24, r24
    ae60:	59 f0       	breq	.+22     	; 0xae78 <__vector_18+0x60>
popSleep():
    ae62:	80 91 02 45 	lds	r24, 0x4502	; 0x804502 <sleepStack>
    ae66:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x7e0050>
TWI_HandleSlaveIRQ():
    ae6a:	eb 85       	ldd	r30, Y+11	; 0x0b
    ae6c:	fc 85       	ldd	r31, Y+12	; 0x0c
    ae6e:	30 97       	sbiw	r30, 0x00	; 0
    ae70:	19 f0       	breq	.+6      	; 0xae78 <__vector_18+0x60>
    ae72:	8e 81       	ldd	r24, Y+6	; 0x06
    ae74:	90 e0       	ldi	r25, 0x00	; 0
    ae76:	09 95       	icall
    ae78:	1c 83       	std	Y+4, r17	; 0x04
    ae7a:	1d 82       	std	Y+5, r1	; 0x05
    ae7c:	18 86       	std	Y+8, r1	; 0x08
    ae7e:	e9 85       	ldd	r30, Y+9	; 0x09
    ae80:	fa 85       	ldd	r31, Y+10	; 0x0a
    ae82:	30 97       	sbiw	r30, 0x00	; 0
    ae84:	09 f0       	breq	.+2      	; 0xae88 <__vector_18+0x70>
    ae86:	09 95       	icall
    ae88:	8d 81       	ldd	r24, Y+5	; 0x05
    ae8a:	88 23       	and	r24, r24
    ae8c:	29 f1       	breq	.+74     	; 0xaed8 <__vector_18+0xc0>
__vector_18():
    ae8e:	83 e0       	ldi	r24, 0x03	; 3
pushSleep():
    ae90:	90 91 50 00 	lds	r25, 0x0050	; 0x800050 <__TEXT_REGION_LENGTH__+0x7e0050>
    ae94:	90 93 02 45 	sts	0x4502, r25	; 0x804502 <sleepStack>
    ae98:	91 70       	andi	r25, 0x01	; 1
    ae9a:	90 93 50 00 	sts	0x0050, r25	; 0x800050 <__TEXT_REGION_LENGTH__+0x7e0050>
TWI_HandleSlaveIRQ():
    ae9e:	e8 81       	ld	r30, Y
    aea0:	f9 81       	ldd	r31, Y+1	; 0x01
    aea2:	82 87       	std	Z+10, r24	; 0x0a
__vector_18():
    aea4:	ff 91       	pop	r31
    aea6:	ef 91       	pop	r30
    aea8:	df 91       	pop	r29
    aeaa:	cf 91       	pop	r28
    aeac:	bf 91       	pop	r27
    aeae:	af 91       	pop	r26
    aeb0:	9f 91       	pop	r25
    aeb2:	8f 91       	pop	r24
    aeb4:	7f 91       	pop	r23
    aeb6:	6f 91       	pop	r22
    aeb8:	5f 91       	pop	r21
    aeba:	4f 91       	pop	r20
    aebc:	3f 91       	pop	r19
    aebe:	2f 91       	pop	r18
    aec0:	1f 91       	pop	r17
    aec2:	0f 90       	pop	r0
    aec4:	0b be       	out	0x3b, r0	; 59
    aec6:	0f 90       	pop	r0
    aec8:	0f be       	out	0x3f, r0	; 63
    aeca:	0f 90       	pop	r0
    aecc:	1f 90       	pop	r1
    aece:	18 95       	reti
TWI_HandleSlaveIRQ():
    aed0:	1c 83       	std	Y+4, r17	; 0x04
    aed2:	1e 82       	std	Y+6, r1	; 0x06
    aed4:	1f 82       	std	Y+7, r1	; 0x07
    aed6:	db cf       	rjmp	.-74     	; 0xae8e <__vector_18+0x76>
__vector_18():
    aed8:	86 e0       	ldi	r24, 0x06	; 6
    aeda:	da cf       	rjmp	.-76     	; 0xae90 <__vector_18+0x78>
popSleep():
    aedc:	80 91 02 45 	lds	r24, 0x4502	; 0x804502 <sleepStack>
    aee0:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x7e0050>
TWI_HandleSlaveIRQ():
    aee4:	eb 85       	ldd	r30, Y+11	; 0x0b
    aee6:	fc 85       	ldd	r31, Y+12	; 0x0c
    aee8:	30 97       	sbiw	r30, 0x00	; 0
    aeea:	29 f0       	breq	.+10     	; 0xaef6 <__vector_18+0xde>
    aeec:	8e 81       	ldd	r24, Y+6	; 0x06
    aeee:	88 23       	and	r24, r24
    aef0:	11 f0       	breq	.+4      	; 0xaef6 <__vector_18+0xde>
    aef2:	90 e0       	ldi	r25, 0x00	; 0
    aef4:	09 95       	icall
    aef6:	1e 82       	std	Y+6, r1	; 0x06
    aef8:	1d 82       	std	Y+5, r1	; 0x05
    aefa:	1f 82       	std	Y+7, r1	; 0x07
    aefc:	18 86       	std	Y+8, r1	; 0x08
__vector_18():
    aefe:	82 e0       	ldi	r24, 0x02	; 2
    af00:	ce cf       	rjmp	.-100    	; 0xae9e <__vector_18+0x86>
TWI_HandleSlaveIRQ():
    af02:	87 ff       	sbrs	r24, 7
    af04:	31 c0       	rjmp	.+98     	; 0xaf68 <__vector_18+0x150>
    af06:	81 ff       	sbrs	r24, 1
    af08:	1e c0       	rjmp	.+60     	; 0xaf46 <__vector_18+0x12e>
    af0a:	88 71       	andi	r24, 0x18	; 24
    af0c:	39 f0       	breq	.+14     	; 0xaf1c <__vector_18+0x104>
    af0e:	8a 81       	ldd	r24, Y+2	; 0x02
    af10:	83 ff       	sbrs	r24, 3
    af12:	04 c0       	rjmp	.+8      	; 0xaf1c <__vector_18+0x104>
    af14:	1d 82       	std	Y+5, r1	; 0x05
    af16:	87 7f       	andi	r24, 0xF7	; 247
    af18:	8a 83       	std	Y+2, r24	; 0x02
    af1a:	f1 cf       	rjmp	.-30     	; 0xaefe <__vector_18+0xe6>
    af1c:	8b 81       	ldd	r24, Y+3	; 0x03
    af1e:	8f 5f       	subi	r24, 0xFF	; 255
    af20:	8b 83       	std	Y+3, r24	; 0x03
    af22:	8a 81       	ldd	r24, Y+2	; 0x02
    af24:	88 60       	ori	r24, 0x08	; 8
    af26:	8a 83       	std	Y+2, r24	; 0x02
    af28:	a8 85       	ldd	r26, Y+8	; 0x08
    af2a:	8d 81       	ldd	r24, Y+5	; 0x05
    af2c:	a8 17       	cp	r26, r24
    af2e:	38 f7       	brcc	.-50     	; 0xaefe <__vector_18+0xe6>
    af30:	ac 0f       	add	r26, r28
    af32:	bd 2f       	mov	r27, r29
    af34:	b1 1d       	adc	r27, r1
    af36:	1d 96       	adiw	r26, 0x0d	; 13
    af38:	8c 91       	ld	r24, X
    af3a:	85 87       	std	Z+13, r24	; 0x0d
    af3c:	88 85       	ldd	r24, Y+8	; 0x08
    af3e:	8f 5f       	subi	r24, 0xFF	; 255
    af40:	88 87       	std	Y+8, r24	; 0x08
__vector_18():
    af42:	83 e0       	ldi	r24, 0x03	; 3
    af44:	ac cf       	rjmp	.-168    	; 0xae9e <__vector_18+0x86>
TWI_HandleSlaveIRQ():
    af46:	85 85       	ldd	r24, Z+13	; 0x0d
    af48:	ee 81       	ldd	r30, Y+6	; 0x06
    af4a:	e2 38       	cpi	r30, 0x82	; 130
    af4c:	68 f4       	brcc	.+26     	; 0xaf68 <__vector_18+0x150>
    af4e:	ec 0f       	add	r30, r28
    af50:	fd 2f       	mov	r31, r29
    af52:	f1 1d       	adc	r31, r1
    af54:	e1 57       	subi	r30, 0x71	; 113
    af56:	ff 4f       	sbci	r31, 0xFF	; 255
    af58:	80 83       	st	Z, r24
    af5a:	8e 81       	ldd	r24, Y+6	; 0x06
    af5c:	8f 5f       	subi	r24, 0xFF	; 255
    af5e:	8e 83       	std	Y+6, r24	; 0x06
    af60:	82 38       	cpi	r24, 0x82	; 130
    af62:	78 f3       	brcs	.-34     	; 0xaf42 <__vector_18+0x12a>
__vector_18():
    af64:	86 e0       	ldi	r24, 0x06	; 6
    af66:	9b cf       	rjmp	.-202    	; 0xae9e <__vector_18+0x86>
    af68:	80 e0       	ldi	r24, 0x00	; 0
    af6a:	99 cf       	rjmp	.-206    	; 0xae9e <__vector_18+0x86>

0000af6c <__vector_42>:
__vector_42():
    af6c:	1f 92       	push	r1
    af6e:	0f 92       	push	r0
    af70:	0f b6       	in	r0, 0x3f	; 63
    af72:	0f 92       	push	r0
    af74:	11 24       	eor	r1, r1
    af76:	0b b6       	in	r0, 0x3b	; 59
    af78:	0f 92       	push	r0
    af7a:	2f 93       	push	r18
    af7c:	3f 93       	push	r19
    af7e:	4f 93       	push	r20
    af80:	5f 93       	push	r21
    af82:	6f 93       	push	r22
    af84:	7f 93       	push	r23
    af86:	8f 93       	push	r24
    af88:	9f 93       	push	r25
    af8a:	af 93       	push	r26
    af8c:	bf 93       	push	r27
    af8e:	ef 93       	push	r30
    af90:	ff 93       	push	r31
    af92:	42 df       	rcall	.-380    	; 0xae18 <__vector_18>
    af94:	ff 91       	pop	r31
    af96:	ef 91       	pop	r30
    af98:	bf 91       	pop	r27
    af9a:	af 91       	pop	r26
    af9c:	9f 91       	pop	r25
    af9e:	8f 91       	pop	r24
    afa0:	7f 91       	pop	r23
    afa2:	6f 91       	pop	r22
    afa4:	5f 91       	pop	r21
    afa6:	4f 91       	pop	r20
    afa8:	3f 91       	pop	r19
    afaa:	2f 91       	pop	r18
    afac:	0f 90       	pop	r0
    afae:	0b be       	out	0x3b, r0	; 59
    afb0:	0f 90       	pop	r0
    afb2:	0f be       	out	0x3f, r0	; 63
    afb4:	0f 90       	pop	r0
    afb6:	1f 90       	pop	r1
    afb8:	18 95       	reti

0000afba <__vector_7>:
__vector_7():
    afba:	1f 92       	push	r1
    afbc:	0f 92       	push	r0
    afbe:	0f b6       	in	r0, 0x3f	; 63
    afc0:	0f 92       	push	r0
    afc2:	11 24       	eor	r1, r1
    afc4:	0b b6       	in	r0, 0x3b	; 59
    afc6:	0f 92       	push	r0
    afc8:	2f 93       	push	r18
    afca:	3f 93       	push	r19
    afcc:	4f 93       	push	r20
    afce:	5f 93       	push	r21
    afd0:	6f 93       	push	r22
    afd2:	7f 93       	push	r23
    afd4:	8f 93       	push	r24
    afd6:	9f 93       	push	r25
    afd8:	af 93       	push	r26
    afda:	bf 93       	push	r27
    afdc:	ef 93       	push	r30
    afde:	ff 93       	push	r31
    afe0:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7e01c7>
    afe4:	80 ff       	sbrs	r24, 0
    afe6:	0a c0       	rjmp	.+20     	; 0xaffc <__vector_7+0x42>
    afe8:	e0 91 bf 45 	lds	r30, 0x45BF	; 0x8045bf <_ZL10intFuncCCL.lto_priv.181>
    afec:	f0 91 c0 45 	lds	r31, 0x45C0	; 0x8045c0 <_ZL10intFuncCCL.lto_priv.181+0x1>
    aff0:	09 95       	icall
    aff2:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7e01c7>
    aff6:	81 60       	ori	r24, 0x01	; 1
    aff8:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7e01c7>
    affc:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7e01c7>
    b000:	81 ff       	sbrs	r24, 1
    b002:	0a c0       	rjmp	.+20     	; 0xb018 <__vector_7+0x5e>
    b004:	e0 91 c1 45 	lds	r30, 0x45C1	; 0x8045c1 <_ZL10intFuncCCL.lto_priv.181+0x2>
    b008:	f0 91 c2 45 	lds	r31, 0x45C2	; 0x8045c2 <_ZL10intFuncCCL.lto_priv.181+0x3>
    b00c:	09 95       	icall
    b00e:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7e01c7>
    b012:	82 60       	ori	r24, 0x02	; 2
    b014:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7e01c7>
    b018:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7e01c7>
    b01c:	82 ff       	sbrs	r24, 2
    b01e:	0a c0       	rjmp	.+20     	; 0xb034 <__vector_7+0x7a>
    b020:	e0 91 c3 45 	lds	r30, 0x45C3	; 0x8045c3 <_ZL10intFuncCCL.lto_priv.181+0x4>
    b024:	f0 91 c4 45 	lds	r31, 0x45C4	; 0x8045c4 <_ZL10intFuncCCL.lto_priv.181+0x5>
    b028:	09 95       	icall
    b02a:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7e01c7>
    b02e:	84 60       	ori	r24, 0x04	; 4
    b030:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7e01c7>
    b034:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7e01c7>
    b038:	83 ff       	sbrs	r24, 3
    b03a:	0a c0       	rjmp	.+20     	; 0xb050 <__vector_7+0x96>
    b03c:	e0 91 c5 45 	lds	r30, 0x45C5	; 0x8045c5 <_ZL10intFuncCCL.lto_priv.181+0x6>
    b040:	f0 91 c6 45 	lds	r31, 0x45C6	; 0x8045c6 <_ZL10intFuncCCL.lto_priv.181+0x7>
    b044:	09 95       	icall
    b046:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7e01c7>
    b04a:	88 60       	ori	r24, 0x08	; 8
    b04c:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7e01c7>
    b050:	ff 91       	pop	r31
    b052:	ef 91       	pop	r30
    b054:	bf 91       	pop	r27
    b056:	af 91       	pop	r26
    b058:	9f 91       	pop	r25
    b05a:	8f 91       	pop	r24
    b05c:	7f 91       	pop	r23
    b05e:	6f 91       	pop	r22
    b060:	5f 91       	pop	r21
    b062:	4f 91       	pop	r20
    b064:	3f 91       	pop	r19
    b066:	2f 91       	pop	r18
    b068:	0f 90       	pop	r0
    b06a:	0b be       	out	0x3b, r0	; 59
    b06c:	0f 90       	pop	r0
    b06e:	0f be       	out	0x3f, r0	; 63
    b070:	0f 90       	pop	r0
    b072:	1f 90       	pop	r1
    b074:	18 95       	reti

0000b076 <__vector_37>:
__vector_37():
    b076:	1f 92       	push	r1
    b078:	0f 92       	push	r0
    b07a:	0f b6       	in	r0, 0x3f	; 63
    b07c:	0f 92       	push	r0
    b07e:	11 24       	eor	r1, r1
    b080:	0b b6       	in	r0, 0x3b	; 59
    b082:	0f 92       	push	r0
    b084:	8f 93       	push	r24
    b086:	ef 93       	push	r30
    b088:	ff 93       	push	r31
    b08a:	cf 93       	push	r28
    b08c:	df 93       	push	r29
    b08e:	1f 92       	push	r1
    b090:	cd b7       	in	r28, 0x3d	; 61
    b092:	de b7       	in	r29, 0x3e	; 62
    b094:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <__TEXT_REGION_LENGTH__+0x7e0963>
    b098:	87 ff       	sbrs	r24, 7
    b09a:	12 c0       	rjmp	.+36     	; 0xb0c0 <__vector_37+0x4a>
    b09c:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <__TEXT_REGION_LENGTH__+0x7e0964>
    b0a0:	89 83       	std	Y+1, r24	; 0x01
    b0a2:	8d b3       	in	r24, 0x1d	; 29
    b0a4:	82 31       	cpi	r24, 0x12	; 18
    b0a6:	60 f4       	brcc	.+24     	; 0xb0c0 <__vector_37+0x4a>
    b0a8:	51 99       	sbic	0x0a, 1	; 10
    b0aa:	f4 cf       	rjmp	.-24     	; 0xb094 <__vector_37+0x1e>
    b0ac:	89 81       	ldd	r24, Y+1	; 0x01
    b0ae:	ed b3       	in	r30, 0x1d	; 29
    b0b0:	f0 e0       	ldi	r31, 0x00	; 0
    b0b2:	e1 5a       	subi	r30, 0xA1	; 161
    b0b4:	fa 4b       	sbci	r31, 0xBA	; 186
    b0b6:	80 83       	st	Z, r24
    b0b8:	8d b3       	in	r24, 0x1d	; 29
    b0ba:	8f 5f       	subi	r24, 0xFF	; 255
    b0bc:	8d bb       	out	0x1d, r24	; 29
    b0be:	ea cf       	rjmp	.-44     	; 0xb094 <__vector_37+0x1e>
    b0c0:	0f 90       	pop	r0
    b0c2:	df 91       	pop	r29
    b0c4:	cf 91       	pop	r28
    b0c6:	ff 91       	pop	r31
    b0c8:	ef 91       	pop	r30
    b0ca:	8f 91       	pop	r24
    b0cc:	0f 90       	pop	r0
    b0ce:	0b be       	out	0x3b, r0	; 59
    b0d0:	0f 90       	pop	r0
    b0d2:	0f be       	out	0x3f, r0	; 63
    b0d4:	0f 90       	pop	r0
    b0d6:	1f 90       	pop	r1
    b0d8:	18 95       	reti

0000b0da <__vector_30>:
__vector_30():
    b0da:	1f 92       	push	r1
    b0dc:	0f 92       	push	r0
    b0de:	0f b6       	in	r0, 0x3f	; 63
    b0e0:	0f 92       	push	r0
    b0e2:	11 24       	eor	r1, r1
    b0e4:	5b 9a       	sbi	0x0b, 3	; 11
    b0e6:	53 9b       	sbis	0x0a, 3	; 10
    b0e8:	06 c0       	rjmp	.+12     	; 0xb0f6 <__vector_30+0x1c>
    b0ea:	e0 9a       	sbi	0x1c, 0	; 28
    b0ec:	0f 90       	pop	r0
    b0ee:	0f be       	out	0x3f, r0	; 63
    b0f0:	0f 90       	pop	r0
    b0f2:	1f 90       	pop	r1
    b0f4:	18 95       	reti
    b0f6:	1d ba       	out	0x1d, r1	; 29
    b0f8:	f9 cf       	rjmp	.-14     	; 0xb0ec <__vector_30+0x12>

0000b0fa <__vector_11>:
__vector_11():
    b0fa:	1f 92       	push	r1
    b0fc:	0f 92       	push	r0
    b0fe:	0f b6       	in	r0, 0x3f	; 63
    b100:	0f 92       	push	r0
    b102:	11 24       	eor	r1, r1
    b104:	8f 93       	push	r24
    b106:	80 e1       	ldi	r24, 0x10	; 16
    b108:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7e0a0b>
    b10c:	8f 91       	pop	r24
    b10e:	0f 90       	pop	r0
    b110:	0f be       	out	0x3f, r0	; 63
    b112:	0f 90       	pop	r0
    b114:	1f 90       	pop	r1
    b116:	18 95       	reti

0000b118 <__vector_9>:
__vector_9():
    b118:	1f 92       	push	r1
    b11a:	0f 92       	push	r0
    b11c:	0f b6       	in	r0, 0x3f	; 63
    b11e:	0f 92       	push	r0
    b120:	11 24       	eor	r1, r1
    b122:	8f 93       	push	r24
    b124:	81 e0       	ldi	r24, 0x01	; 1
    b126:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7e0a0b>
    b12a:	8e b3       	in	r24, 0x1e	; 30
    b12c:	88 23       	and	r24, r24
    b12e:	49 f0       	breq	.+18     	; 0xb142 <__vector_9+0x2a>
    b130:	8e b3       	in	r24, 0x1e	; 30
    b132:	81 50       	subi	r24, 0x01	; 1
    b134:	8e bb       	out	0x1e, r24	; 30
    b136:	8f 91       	pop	r24
    b138:	0f 90       	pop	r0
    b13a:	0f be       	out	0x3f, r0	; 63
    b13c:	0f 90       	pop	r0
    b13e:	1f 90       	pop	r1
    b140:	18 95       	reti
    b142:	10 92 0a 0a 	sts	0x0A0A, r1	; 0x800a0a <__TEXT_REGION_LENGTH__+0x7e0a0a>
    b146:	8e e0       	ldi	r24, 0x0E	; 14
    b148:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7e0a00>
    b14c:	f4 cf       	rjmp	.-24     	; 0xb136 <__vector_9+0x1e>

0000b14e <vfprintf>:
vfprintf():
    b14e:	6f 92       	push	r6
    b150:	7f 92       	push	r7
    b152:	8f 92       	push	r8
    b154:	9f 92       	push	r9
    b156:	af 92       	push	r10
    b158:	bf 92       	push	r11
    b15a:	cf 92       	push	r12
    b15c:	df 92       	push	r13
    b15e:	ef 92       	push	r14
    b160:	ff 92       	push	r15
    b162:	0f 93       	push	r16
    b164:	1f 93       	push	r17
    b166:	cf 93       	push	r28
    b168:	df 93       	push	r29
    b16a:	cd b7       	in	r28, 0x3d	; 61
    b16c:	de b7       	in	r29, 0x3e	; 62
    b16e:	2b 97       	sbiw	r28, 0x0b	; 11
    b170:	cd bf       	out	0x3d, r28	; 61
    b172:	de bf       	out	0x3e, r29	; 62
    b174:	6c 01       	movw	r12, r24
    b176:	7b 01       	movw	r14, r22
    b178:	3a 01       	movw	r6, r20
    b17a:	fc 01       	movw	r30, r24
    b17c:	16 82       	std	Z+6, r1	; 0x06
    b17e:	17 82       	std	Z+7, r1	; 0x07
    b180:	83 81       	ldd	r24, Z+3	; 0x03
    b182:	81 ff       	sbrs	r24, 1
    b184:	18 c1       	rjmp	.+560    	; 0xb3b6 <vfprintf+0x268>
    b186:	ce 01       	movw	r24, r28
    b188:	01 96       	adiw	r24, 0x01	; 1
    b18a:	4c 01       	movw	r8, r24
    b18c:	f6 01       	movw	r30, r12
    b18e:	b3 80       	ldd	r11, Z+3	; 0x03
    b190:	f7 01       	movw	r30, r14
    b192:	b3 fc       	sbrc	r11, 3
    b194:	05 91       	lpm	r16, Z+
    b196:	b3 fe       	sbrs	r11, 3
    b198:	01 91       	ld	r16, Z+
    b19a:	7f 01       	movw	r14, r30
    b19c:	00 23       	and	r16, r16
    b19e:	51 f1       	breq	.+84     	; 0xb1f4 <vfprintf+0xa6>
    b1a0:	05 32       	cpi	r16, 0x25	; 37
    b1a2:	39 f4       	brne	.+14     	; 0xb1b2 <vfprintf+0x64>
    b1a4:	b3 fc       	sbrc	r11, 3
    b1a6:	05 91       	lpm	r16, Z+
    b1a8:	b3 fe       	sbrs	r11, 3
    b1aa:	01 91       	ld	r16, Z+
    b1ac:	7f 01       	movw	r14, r30
    b1ae:	05 32       	cpi	r16, 0x25	; 37
    b1b0:	c1 f5       	brne	.+112    	; 0xb222 <vfprintf+0xd4>
    b1b2:	b6 01       	movw	r22, r12
    b1b4:	80 2f       	mov	r24, r16
    b1b6:	90 e0       	ldi	r25, 0x00	; 0
    b1b8:	0e 94 94 71 	call	0xe328	; 0xe328 <fputc>
    b1bc:	53 01       	movw	r10, r6
    b1be:	35 01       	movw	r6, r10
    b1c0:	e5 cf       	rjmp	.-54     	; 0xb18c <vfprintf+0x3e>
    b1c2:	10 68       	ori	r17, 0x80	; 128
    b1c4:	f7 01       	movw	r30, r14
    b1c6:	b3 fc       	sbrc	r11, 3
    b1c8:	05 91       	lpm	r16, Z+
    b1ca:	b3 fe       	sbrs	r11, 3
    b1cc:	01 91       	ld	r16, Z+
    b1ce:	7f 01       	movw	r14, r30
    b1d0:	17 fd       	sbrc	r17, 7
    b1d2:	0e c0       	rjmp	.+28     	; 0xb1f0 <vfprintf+0xa2>
    b1d4:	00 23       	and	r16, r16
    b1d6:	71 f0       	breq	.+28     	; 0xb1f4 <vfprintf+0xa6>
    b1d8:	60 2f       	mov	r22, r16
    b1da:	70 e0       	ldi	r23, 0x00	; 0
    b1dc:	80 e3       	ldi	r24, 0x30	; 48
    b1de:	94 e0       	ldi	r25, 0x04	; 4
    b1e0:	0e 94 73 71 	call	0xe2e6	; 0xe2e6 <strchr_P>
    b1e4:	89 2b       	or	r24, r25
    b1e6:	71 f7       	brne	.-36     	; 0xb1c4 <vfprintf+0x76>
    b1e8:	03 32       	cpi	r16, 0x23	; 35
    b1ea:	c9 f0       	breq	.+50     	; 0xb21e <vfprintf+0xd0>
    b1ec:	0c 36       	cpi	r16, 0x6C	; 108
    b1ee:	49 f3       	breq	.-46     	; 0xb1c2 <vfprintf+0x74>
    b1f0:	01 11       	cpse	r16, r1
    b1f2:	19 c0       	rjmp	.+50     	; 0xb226 <vfprintf+0xd8>
    b1f4:	f6 01       	movw	r30, r12
    b1f6:	86 81       	ldd	r24, Z+6	; 0x06
    b1f8:	97 81       	ldd	r25, Z+7	; 0x07
    b1fa:	2b 96       	adiw	r28, 0x0b	; 11
    b1fc:	cd bf       	out	0x3d, r28	; 61
    b1fe:	de bf       	out	0x3e, r29	; 62
    b200:	df 91       	pop	r29
    b202:	cf 91       	pop	r28
    b204:	1f 91       	pop	r17
    b206:	0f 91       	pop	r16
    b208:	ff 90       	pop	r15
    b20a:	ef 90       	pop	r14
    b20c:	df 90       	pop	r13
    b20e:	cf 90       	pop	r12
    b210:	bf 90       	pop	r11
    b212:	af 90       	pop	r10
    b214:	9f 90       	pop	r9
    b216:	8f 90       	pop	r8
    b218:	7f 90       	pop	r7
    b21a:	6f 90       	pop	r6
    b21c:	08 95       	ret
    b21e:	10 e1       	ldi	r17, 0x10	; 16
    b220:	d1 cf       	rjmp	.-94     	; 0xb1c4 <vfprintf+0x76>
    b222:	10 e0       	ldi	r17, 0x00	; 0
    b224:	d5 cf       	rjmp	.-86     	; 0xb1d0 <vfprintf+0x82>
    b226:	60 2f       	mov	r22, r16
    b228:	70 e0       	ldi	r23, 0x00	; 0
    b22a:	89 e2       	ldi	r24, 0x29	; 41
    b22c:	94 e0       	ldi	r25, 0x04	; 4
    b22e:	0e 94 73 71 	call	0xe2e6	; 0xe2e6 <strchr_P>
    b232:	89 2b       	or	r24, r25
    b234:	51 f0       	breq	.+20     	; 0xb24a <vfprintf+0xfc>
    b236:	53 01       	movw	r10, r6
    b238:	f4 e0       	ldi	r31, 0x04	; 4
    b23a:	af 0e       	add	r10, r31
    b23c:	b1 1c       	adc	r11, r1
    b23e:	b6 01       	movw	r22, r12
    b240:	8f e3       	ldi	r24, 0x3F	; 63
    b242:	90 e0       	ldi	r25, 0x00	; 0
    b244:	0e 94 94 71 	call	0xe328	; 0xe328 <fputc>
    b248:	ba cf       	rjmp	.-140    	; 0xb1be <vfprintf+0x70>
    b24a:	03 36       	cpi	r16, 0x63	; 99
    b24c:	09 f4       	brne	.+2      	; 0xb250 <vfprintf+0x102>
    b24e:	57 c0       	rjmp	.+174    	; 0xb2fe <vfprintf+0x1b0>
    b250:	03 37       	cpi	r16, 0x73	; 115
    b252:	09 f4       	brne	.+2      	; 0xb256 <vfprintf+0x108>
    b254:	5e c0       	rjmp	.+188    	; 0xb312 <vfprintf+0x1c4>
    b256:	03 35       	cpi	r16, 0x53	; 83
    b258:	09 f4       	brne	.+2      	; 0xb25c <vfprintf+0x10e>
    b25a:	5a c0       	rjmp	.+180    	; 0xb310 <vfprintf+0x1c2>
    b25c:	04 36       	cpi	r16, 0x64	; 100
    b25e:	19 f0       	breq	.+6      	; 0xb266 <vfprintf+0x118>
    b260:	09 36       	cpi	r16, 0x69	; 105
    b262:	09 f0       	breq	.+2      	; 0xb266 <vfprintf+0x118>
    b264:	76 c0       	rjmp	.+236    	; 0xb352 <vfprintf+0x204>
    b266:	53 01       	movw	r10, r6
    b268:	17 ff       	sbrs	r17, 7
    b26a:	68 c0       	rjmp	.+208    	; 0xb33c <vfprintf+0x1ee>
    b26c:	f4 e0       	ldi	r31, 0x04	; 4
    b26e:	af 0e       	add	r10, r31
    b270:	b1 1c       	adc	r11, r1
    b272:	f3 01       	movw	r30, r6
    b274:	60 81       	ld	r22, Z
    b276:	71 81       	ldd	r23, Z+1	; 0x01
    b278:	82 81       	ldd	r24, Z+2	; 0x02
    b27a:	93 81       	ldd	r25, Z+3	; 0x03
    b27c:	1f 7e       	andi	r17, 0xEF	; 239
    b27e:	97 ff       	sbrs	r25, 7
    b280:	08 c0       	rjmp	.+16     	; 0xb292 <vfprintf+0x144>
    b282:	90 95       	com	r25
    b284:	80 95       	com	r24
    b286:	70 95       	com	r23
    b288:	61 95       	neg	r22
    b28a:	7f 4f       	sbci	r23, 0xFF	; 255
    b28c:	8f 4f       	sbci	r24, 0xFF	; 255
    b28e:	9f 4f       	sbci	r25, 0xFF	; 255
    b290:	10 64       	ori	r17, 0x40	; 64
    b292:	2a e0       	ldi	r18, 0x0A	; 10
    b294:	30 e0       	ldi	r19, 0x00	; 0
    b296:	a4 01       	movw	r20, r8
    b298:	0e 94 c4 71 	call	0xe388	; 0xe388 <__ultoa_invert>
    b29c:	08 2f       	mov	r16, r24
    b29e:	08 19       	sub	r16, r8
    b2a0:	16 ff       	sbrs	r17, 6
    b2a2:	05 c0       	rjmp	.+10     	; 0xb2ae <vfprintf+0x160>
    b2a4:	b6 01       	movw	r22, r12
    b2a6:	8d e2       	ldi	r24, 0x2D	; 45
    b2a8:	90 e0       	ldi	r25, 0x00	; 0
    b2aa:	0e 94 94 71 	call	0xe328	; 0xe328 <fputc>
    b2ae:	14 ff       	sbrs	r17, 4
    b2b0:	15 c0       	rjmp	.+42     	; 0xb2dc <vfprintf+0x18e>
    b2b2:	fe 01       	movw	r30, r28
    b2b4:	e0 0f       	add	r30, r16
    b2b6:	f1 1d       	adc	r31, r1
    b2b8:	80 81       	ld	r24, Z
    b2ba:	80 33       	cpi	r24, 0x30	; 48
    b2bc:	79 f0       	breq	.+30     	; 0xb2dc <vfprintf+0x18e>
    b2be:	b6 01       	movw	r22, r12
    b2c0:	80 e3       	ldi	r24, 0x30	; 48
    b2c2:	90 e0       	ldi	r25, 0x00	; 0
    b2c4:	0e 94 94 71 	call	0xe328	; 0xe328 <fputc>
    b2c8:	12 ff       	sbrs	r17, 2
    b2ca:	08 c0       	rjmp	.+16     	; 0xb2dc <vfprintf+0x18e>
    b2cc:	10 72       	andi	r17, 0x20	; 32
    b2ce:	81 2f       	mov	r24, r17
    b2d0:	90 e0       	ldi	r25, 0x00	; 0
    b2d2:	b6 01       	movw	r22, r12
    b2d4:	88 5a       	subi	r24, 0xA8	; 168
    b2d6:	9f 4f       	sbci	r25, 0xFF	; 255
    b2d8:	0e 94 94 71 	call	0xe328	; 0xe328 <fputc>
    b2dc:	01 50       	subi	r16, 0x01	; 1
    b2de:	10 e0       	ldi	r17, 0x00	; 0
    b2e0:	0f 5f       	subi	r16, 0xFF	; 255
    b2e2:	1f 4f       	sbci	r17, 0xFF	; 255
    b2e4:	08 0d       	add	r16, r8
    b2e6:	19 1d       	adc	r17, r9
    b2e8:	f8 01       	movw	r30, r16
    b2ea:	82 91       	ld	r24, -Z
    b2ec:	8f 01       	movw	r16, r30
    b2ee:	b6 01       	movw	r22, r12
    b2f0:	90 e0       	ldi	r25, 0x00	; 0
    b2f2:	0e 94 94 71 	call	0xe328	; 0xe328 <fputc>
    b2f6:	08 15       	cp	r16, r8
    b2f8:	19 05       	cpc	r17, r9
    b2fa:	b1 f7       	brne	.-20     	; 0xb2e8 <vfprintf+0x19a>
    b2fc:	60 cf       	rjmp	.-320    	; 0xb1be <vfprintf+0x70>
    b2fe:	53 01       	movw	r10, r6
    b300:	82 e0       	ldi	r24, 0x02	; 2
    b302:	a8 0e       	add	r10, r24
    b304:	b1 1c       	adc	r11, r1
    b306:	b6 01       	movw	r22, r12
    b308:	f3 01       	movw	r30, r6
    b30a:	80 81       	ld	r24, Z
    b30c:	91 81       	ldd	r25, Z+1	; 0x01
    b30e:	9a cf       	rjmp	.-204    	; 0xb244 <vfprintf+0xf6>
    b310:	11 60       	ori	r17, 0x01	; 1
    b312:	53 01       	movw	r10, r6
    b314:	f2 e0       	ldi	r31, 0x02	; 2
    b316:	af 0e       	add	r10, r31
    b318:	b1 1c       	adc	r11, r1
    b31a:	f3 01       	movw	r30, r6
    b31c:	60 80       	ld	r6, Z
    b31e:	71 80       	ldd	r7, Z+1	; 0x01
    b320:	f3 01       	movw	r30, r6
    b322:	10 fd       	sbrc	r17, 0
    b324:	85 91       	lpm	r24, Z+
    b326:	10 ff       	sbrs	r17, 0
    b328:	81 91       	ld	r24, Z+
    b32a:	3f 01       	movw	r6, r30
    b32c:	88 23       	and	r24, r24
    b32e:	09 f4       	brne	.+2      	; 0xb332 <vfprintf+0x1e4>
    b330:	46 cf       	rjmp	.-372    	; 0xb1be <vfprintf+0x70>
    b332:	b6 01       	movw	r22, r12
    b334:	90 e0       	ldi	r25, 0x00	; 0
    b336:	0e 94 94 71 	call	0xe328	; 0xe328 <fputc>
    b33a:	f2 cf       	rjmp	.-28     	; 0xb320 <vfprintf+0x1d2>
    b33c:	f2 e0       	ldi	r31, 0x02	; 2
    b33e:	af 0e       	add	r10, r31
    b340:	b1 1c       	adc	r11, r1
    b342:	f3 01       	movw	r30, r6
    b344:	60 81       	ld	r22, Z
    b346:	71 81       	ldd	r23, Z+1	; 0x01
    b348:	07 2e       	mov	r0, r23
    b34a:	00 0c       	add	r0, r0
    b34c:	88 0b       	sbc	r24, r24
    b34e:	99 0b       	sbc	r25, r25
    b350:	95 cf       	rjmp	.-214    	; 0xb27c <vfprintf+0x12e>
    b352:	00 37       	cpi	r16, 0x70	; 112
    b354:	09 f1       	breq	.+66     	; 0xb398 <vfprintf+0x24a>
    b356:	40 f4       	brcc	.+16     	; 0xb368 <vfprintf+0x21a>
    b358:	08 35       	cpi	r16, 0x58	; 88
    b35a:	01 f1       	breq	.+64     	; 0xb39c <vfprintf+0x24e>
    b35c:	0f 36       	cpi	r16, 0x6F	; 111
    b35e:	09 f0       	breq	.+2      	; 0xb362 <vfprintf+0x214>
    b360:	49 cf       	rjmp	.-366    	; 0xb1f4 <vfprintf+0xa6>
    b362:	28 e0       	ldi	r18, 0x08	; 8
    b364:	30 e0       	ldi	r19, 0x00	; 0
    b366:	0c c0       	rjmp	.+24     	; 0xb380 <vfprintf+0x232>
    b368:	05 37       	cpi	r16, 0x75	; 117
    b36a:	39 f0       	breq	.+14     	; 0xb37a <vfprintf+0x22c>
    b36c:	08 37       	cpi	r16, 0x78	; 120
    b36e:	09 f0       	breq	.+2      	; 0xb372 <vfprintf+0x224>
    b370:	41 cf       	rjmp	.-382    	; 0xb1f4 <vfprintf+0xa6>
    b372:	14 62       	ori	r17, 0x24	; 36
    b374:	20 e1       	ldi	r18, 0x10	; 16
    b376:	30 e0       	ldi	r19, 0x00	; 0
    b378:	03 c0       	rjmp	.+6      	; 0xb380 <vfprintf+0x232>
    b37a:	1f 7e       	andi	r17, 0xEF	; 239
    b37c:	2a e0       	ldi	r18, 0x0A	; 10
    b37e:	30 e0       	ldi	r19, 0x00	; 0
    b380:	53 01       	movw	r10, r6
    b382:	17 ff       	sbrs	r17, 7
    b384:	0f c0       	rjmp	.+30     	; 0xb3a4 <vfprintf+0x256>
    b386:	f4 e0       	ldi	r31, 0x04	; 4
    b388:	af 0e       	add	r10, r31
    b38a:	b1 1c       	adc	r11, r1
    b38c:	f3 01       	movw	r30, r6
    b38e:	60 81       	ld	r22, Z
    b390:	71 81       	ldd	r23, Z+1	; 0x01
    b392:	82 81       	ldd	r24, Z+2	; 0x02
    b394:	93 81       	ldd	r25, Z+3	; 0x03
    b396:	7f cf       	rjmp	.-258    	; 0xb296 <vfprintf+0x148>
    b398:	10 61       	ori	r17, 0x10	; 16
    b39a:	eb cf       	rjmp	.-42     	; 0xb372 <vfprintf+0x224>
    b39c:	14 60       	ori	r17, 0x04	; 4
    b39e:	20 e1       	ldi	r18, 0x10	; 16
    b3a0:	32 e0       	ldi	r19, 0x02	; 2
    b3a2:	ee cf       	rjmp	.-36     	; 0xb380 <vfprintf+0x232>
    b3a4:	f2 e0       	ldi	r31, 0x02	; 2
    b3a6:	af 0e       	add	r10, r31
    b3a8:	b1 1c       	adc	r11, r1
    b3aa:	f3 01       	movw	r30, r6
    b3ac:	60 81       	ld	r22, Z
    b3ae:	71 81       	ldd	r23, Z+1	; 0x01
    b3b0:	90 e0       	ldi	r25, 0x00	; 0
    b3b2:	80 e0       	ldi	r24, 0x00	; 0
    b3b4:	70 cf       	rjmp	.-288    	; 0xb296 <vfprintf+0x148>
    b3b6:	8f ef       	ldi	r24, 0xFF	; 255
    b3b8:	9f ef       	ldi	r25, 0xFF	; 255
    b3ba:	1f cf       	rjmp	.-450    	; 0xb1fa <vfprintf+0xac>

0000b3bc <Logic::Logic(unsigned char)>:
_ZN5LogicC2Eh():
    b3bc:	fc 01       	movw	r30, r24
    b3be:	10 82       	st	Z, r1
    b3c0:	11 82       	std	Z+1, r1	; 0x01
    b3c2:	12 82       	std	Z+2, r1	; 0x02
    b3c4:	13 82       	std	Z+3, r1	; 0x03
    b3c6:	14 82       	std	Z+4, r1	; 0x04
    b3c8:	15 82       	std	Z+5, r1	; 0x05
    b3ca:	16 82       	std	Z+6, r1	; 0x06
    b3cc:	17 82       	std	Z+7, r1	; 0x07
    b3ce:	10 86       	std	Z+8, r1	; 0x08
    b3d0:	11 86       	std	Z+9, r1	; 0x09
    b3d2:	12 86       	std	Z+10, r1	; 0x0a
    b3d4:	86 e1       	ldi	r24, 0x16	; 22
    b3d6:	68 9f       	mul	r22, r24
    b3d8:	b0 01       	movw	r22, r0
    b3da:	11 24       	eor	r1, r1
    b3dc:	62 51       	subi	r22, 0x12	; 18
    b3de:	7f 4b       	sbci	r23, 0xBF	; 191
    b3e0:	63 87       	std	Z+11, r22	; 0x0b
    b3e2:	74 87       	std	Z+12, r23	; 0x0c
    b3e4:	08 95       	ret

0000b3e6 <global constructors keyed to 65535_0_BTmanager.cpp.o.27086>:
_GLOBAL__I_65535_0_BTmanager.cpp.o.27086():
    b3e6:	cf 93       	push	r28
    b3e8:	10 92 c9 45 	sts	0x45C9, r1	; 0x8045c9 <Serial0+0x2>
    b3ec:	10 92 ca 45 	sts	0x45CA, r1	; 0x8045ca <Serial0+0x3>
    b3f0:	88 ee       	ldi	r24, 0xE8	; 232
    b3f2:	93 e0       	ldi	r25, 0x03	; 3
    b3f4:	a0 e0       	ldi	r26, 0x00	; 0
    b3f6:	b0 e0       	ldi	r27, 0x00	; 0
    b3f8:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <Serial0+0x4>
    b3fc:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <Serial0+0x5>
    b400:	a0 93 cd 45 	sts	0x45CD, r26	; 0x8045cd <Serial0+0x6>
    b404:	b0 93 ce 45 	sts	0x45CE, r27	; 0x8045ce <Serial0+0x7>
    b408:	21 e2       	ldi	r18, 0x21	; 33
    b40a:	32 e4       	ldi	r19, 0x42	; 66
    b40c:	20 93 c7 45 	sts	0x45C7, r18	; 0x8045c7 <Serial0>
    b410:	30 93 c8 45 	sts	0x45C8, r19	; 0x8045c8 <Serial0+0x1>
    b414:	20 e0       	ldi	r18, 0x00	; 0
    b416:	38 e0       	ldi	r19, 0x08	; 8
    b418:	20 93 cf 45 	sts	0x45CF, r18	; 0x8045cf <Serial0+0x8>
    b41c:	30 93 d0 45 	sts	0x45D0, r19	; 0x8045d0 <Serial0+0x9>
    b420:	2a ed       	ldi	r18, 0xDA	; 218
    b422:	3b e0       	ldi	r19, 0x0B	; 11
    b424:	20 93 d1 45 	sts	0x45D1, r18	; 0x8045d1 <Serial0+0xa>
    b428:	30 93 d2 45 	sts	0x45D2, r19	; 0x8045d2 <Serial0+0xb>
    b42c:	22 e0       	ldi	r18, 0x02	; 2
    b42e:	20 93 d3 45 	sts	0x45D3, r18	; 0x8045d3 <Serial0+0xc>
    b432:	10 92 d4 45 	sts	0x45D4, r1	; 0x8045d4 <Serial0+0xd>
    b436:	10 92 d5 45 	sts	0x45D5, r1	; 0x8045d5 <Serial0+0xe>
    b43a:	10 92 5c 46 	sts	0x465C, r1	; 0x80465c <Wire+0x2>
    b43e:	10 92 5d 46 	sts	0x465D, r1	; 0x80465d <Wire+0x3>
    b442:	80 93 5e 46 	sts	0x465E, r24	; 0x80465e <Wire+0x4>
    b446:	90 93 5f 46 	sts	0x465F, r25	; 0x80465f <Wire+0x5>
    b44a:	a0 93 60 46 	sts	0x4660, r26	; 0x804660 <Wire+0x6>
    b44e:	b0 93 61 46 	sts	0x4661, r27	; 0x804661 <Wire+0x7>
    b452:	83 e3       	ldi	r24, 0x33	; 51
    b454:	92 e4       	ldi	r25, 0x42	; 66
    b456:	80 93 5a 46 	sts	0x465A, r24	; 0x80465a <Wire>
    b45a:	90 93 5b 46 	sts	0x465B, r25	; 0x80465b <Wire+0x1>
    b45e:	80 e0       	ldi	r24, 0x00	; 0
    b460:	99 e0       	ldi	r25, 0x09	; 9
    b462:	80 93 62 46 	sts	0x4662, r24	; 0x804662 <Wire+0x8>
    b466:	90 93 63 46 	sts	0x4663, r25	; 0x804663 <Wire+0x9>
    b46a:	80 e0       	ldi	r24, 0x00	; 0
    b46c:	40 e0       	ldi	r20, 0x00	; 0
    b46e:	5b e1       	ldi	r21, 0x1B	; 27
    b470:	67 eb       	ldi	r22, 0xB7	; 183
    b472:	70 e0       	ldi	r23, 0x00	; 0
    b474:	76 95       	lsr	r23
    b476:	67 95       	ror	r22
    b478:	57 95       	ror	r21
    b47a:	47 95       	ror	r20
    b47c:	8f 5f       	subi	r24, 0xFF	; 255
    b47e:	86 30       	cpi	r24, 0x06	; 6
    b480:	11 f4       	brne	.+4      	; 0xb486 <global constructors keyed to 65535_0_BTmanager.cpp.o.27086+0xa0>
    b482:	87 e0       	ldi	r24, 0x07	; 7
    b484:	07 c0       	rjmp	.+14     	; 0xb494 <global constructors keyed to 65535_0_BTmanager.cpp.o.27086+0xae>
    b486:	41 30       	cpi	r20, 0x01	; 1
    b488:	99 e0       	ldi	r25, 0x09	; 9
    b48a:	59 07       	cpc	r21, r25
    b48c:	9d e3       	ldi	r25, 0x3D	; 61
    b48e:	69 07       	cpc	r22, r25
    b490:	71 05       	cpc	r23, r1
    b492:	80 f7       	brcc	.-32     	; 0xb474 <global constructors keyed to 65535_0_BTmanager.cpp.o.27086+0x8e>
    b494:	91 e0       	ldi	r25, 0x01	; 1
    b496:	89 27       	eor	r24, r25
    b498:	c4 e0       	ldi	r28, 0x04	; 4
    b49a:	c0 93 7f 47 	sts	0x477F, r28	; 0x80477f <DEFAULT_SPI_SETTINGS+0x1>
    b49e:	90 e1       	ldi	r25, 0x10	; 16
    b4a0:	89 9f       	mul	r24, r25
    b4a2:	90 01       	movw	r18, r0
    b4a4:	11 24       	eor	r1, r1
    b4a6:	20 71       	andi	r18, 0x10	; 16
    b4a8:	86 70       	andi	r24, 0x06	; 6
    b4aa:	81 62       	ori	r24, 0x21	; 33
    b4ac:	82 2b       	or	r24, r18
    b4ae:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <DEFAULT_SPI_SETTINGS>
    b4b2:	80 e4       	ldi	r24, 0x40	; 64
    b4b4:	99 e0       	ldi	r25, 0x09	; 9
    b4b6:	80 93 73 47 	sts	0x4773, r24	; 0x804773 <SPI>
    b4ba:	90 93 74 47 	sts	0x4774, r25	; 0x804774 <SPI+0x1>
    b4be:	c0 93 76 47 	sts	0x4776, r28	; 0x804776 <SPI+0x3>
    b4c2:	86 e0       	ldi	r24, 0x06	; 6
    b4c4:	80 93 77 47 	sts	0x4777, r24	; 0x804777 <SPI+0x4>
    b4c8:	10 92 79 47 	sts	0x4779, r1	; 0x804779 <SPI+0x6>
    b4cc:	10 92 7a 47 	sts	0x477A, r1	; 0x80477a <SPI+0x7>
    b4d0:	60 e0       	ldi	r22, 0x00	; 0
    b4d2:	81 ec       	ldi	r24, 0xC1	; 193
    b4d4:	97 e4       	ldi	r25, 0x47	; 71
    b4d6:	72 df       	rcall	.-284    	; 0xb3bc <Logic::Logic(unsigned char)>
    b4d8:	61 e0       	ldi	r22, 0x01	; 1
    b4da:	84 eb       	ldi	r24, 0xB4	; 180
    b4dc:	97 e4       	ldi	r25, 0x47	; 71
    b4de:	6e df       	rcall	.-292    	; 0xb3bc <Logic::Logic(unsigned char)>
    b4e0:	62 e0       	ldi	r22, 0x02	; 2
    b4e2:	87 ea       	ldi	r24, 0xA7	; 167
    b4e4:	97 e4       	ldi	r25, 0x47	; 71
    b4e6:	6a df       	rcall	.-300    	; 0xb3bc <Logic::Logic(unsigned char)>
    b4e8:	63 e0       	ldi	r22, 0x03	; 3
    b4ea:	8a e9       	ldi	r24, 0x9A	; 154
    b4ec:	97 e4       	ldi	r25, 0x47	; 71
    b4ee:	66 df       	rcall	.-308    	; 0xb3bc <Logic::Logic(unsigned char)>
    b4f0:	64 e0       	ldi	r22, 0x04	; 4
    b4f2:	8d e8       	ldi	r24, 0x8D	; 141
    b4f4:	97 e4       	ldi	r25, 0x47	; 71
    b4f6:	62 df       	rcall	.-316    	; 0xb3bc <Logic::Logic(unsigned char)>
    b4f8:	65 e0       	ldi	r22, 0x05	; 5
    b4fa:	80 e8       	ldi	r24, 0x80	; 128
    b4fc:	97 e4       	ldi	r25, 0x47	; 71
    b4fe:	5e df       	rcall	.-324    	; 0xb3bc <Logic::Logic(unsigned char)>
    b500:	82 e0       	ldi	r24, 0x02	; 2
    b502:	80 93 da 47 	sts	0x47DA, r24	; 0x8047da <Event2>
    b506:	82 e1       	ldi	r24, 0x12	; 18
    b508:	92 e0       	ldi	r25, 0x02	; 2
    b50a:	80 93 db 47 	sts	0x47DB, r24	; 0x8047db <Event2+0x1>
    b50e:	90 93 dc 47 	sts	0x47DC, r25	; 0x8047dc <Event2+0x2>
    b512:	83 e0       	ldi	r24, 0x03	; 3
    b514:	80 93 d6 47 	sts	0x47D6, r24	; 0x8047d6 <Event3>
    b518:	83 e1       	ldi	r24, 0x13	; 19
    b51a:	92 e0       	ldi	r25, 0x02	; 2
    b51c:	80 93 d7 47 	sts	0x47D7, r24	; 0x8047d7 <Event3+0x1>
    b520:	90 93 d8 47 	sts	0x47D8, r25	; 0x8047d8 <Event3+0x2>
    b524:	c0 93 d2 47 	sts	0x47D2, r28	; 0x8047d2 <Event4>
    b528:	84 e1       	ldi	r24, 0x14	; 20
    b52a:	92 e0       	ldi	r25, 0x02	; 2
    b52c:	80 93 d3 47 	sts	0x47D3, r24	; 0x8047d3 <Event4+0x1>
    b530:	90 93 d4 47 	sts	0x47D4, r25	; 0x8047d4 <Event4+0x2>
    b534:	85 e0       	ldi	r24, 0x05	; 5
    b536:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <Event5>
    b53a:	85 e1       	ldi	r24, 0x15	; 21
    b53c:	92 e0       	ldi	r25, 0x02	; 2
    b53e:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <Event5+0x1>
    b542:	90 93 d0 47 	sts	0x47D0, r25	; 0x8047d0 <Event5+0x2>
    b546:	10 92 e0 47 	sts	0x47E0, r1	; 0x8047e0 <DebugOut+0x2>
    b54a:	10 92 e1 47 	sts	0x47E1, r1	; 0x8047e1 <DebugOut+0x3>
    b54e:	85 e4       	ldi	r24, 0x45	; 69
    b550:	92 e4       	ldi	r25, 0x42	; 66
    b552:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <DebugOut>
    b556:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <DebugOut+0x1>
    b55a:	10 92 e2 47 	sts	0x47E2, r1	; 0x8047e2 <DebugOut+0x4>
    b55e:	10 92 e3 47 	sts	0x47E3, r1	; 0x8047e3 <DebugOut+0x5>
    b562:	10 92 5e 52 	sts	0x525E, r1	; 0x80525e <UImainMenu+0x4>
    b566:	10 92 5f 52 	sts	0x525F, r1	; 0x80525f <UImainMenu+0x5>
    b56a:	22 e8       	ldi	r18, 0x82	; 130
    b56c:	30 e0       	ldi	r19, 0x00	; 0
    b56e:	20 93 5c 52 	sts	0x525C, r18	; 0x80525c <UImainMenu+0x2>
    b572:	30 93 5d 52 	sts	0x525D, r19	; 0x80525d <UImainMenu+0x3>
    b576:	8a e5       	ldi	r24, 0x5A	; 90
    b578:	92 e5       	ldi	r25, 0x52	; 82
    b57a:	80 93 e8 4f 	sts	0x4FE8, r24	; 0x804fe8 <UIwindow::currentWindow>
    b57e:	90 93 e9 4f 	sts	0x4FE9, r25	; 0x804fe9 <UIwindow::currentWindow+0x1>
    b582:	83 ea       	ldi	r24, 0xA3	; 163
    b584:	92 e4       	ldi	r25, 0x42	; 66
    b586:	80 93 5a 52 	sts	0x525A, r24	; 0x80525a <UImainMenu>
    b58a:	90 93 5b 52 	sts	0x525B, r25	; 0x80525b <UImainMenu+0x1>
    b58e:	10 92 62 52 	sts	0x5262, r1	; 0x805262 <UImainMenu+0x8>
    b592:	10 92 63 52 	sts	0x5263, r1	; 0x805263 <UImainMenu+0x9>
    b596:	10 92 64 52 	sts	0x5264, r1	; 0x805264 <UImainMenu+0xa>
    b59a:	10 92 53 52 	sts	0x5253, r1	; 0x805253 <UIlogMenu+0x4>
    b59e:	10 92 54 52 	sts	0x5254, r1	; 0x805254 <UIlogMenu+0x5>
    b5a2:	20 93 51 52 	sts	0x5251, r18	; 0x805251 <UIlogMenu+0x2>
    b5a6:	30 93 52 52 	sts	0x5252, r19	; 0x805252 <UIlogMenu+0x3>
    b5aa:	80 93 4f 52 	sts	0x524F, r24	; 0x80524f <UIlogMenu>
    b5ae:	90 93 50 52 	sts	0x5250, r25	; 0x805250 <UIlogMenu+0x1>
    b5b2:	10 92 57 52 	sts	0x5257, r1	; 0x805257 <UIlogMenu+0x8>
    b5b6:	10 92 58 52 	sts	0x5258, r1	; 0x805258 <UIlogMenu+0x9>
    b5ba:	10 92 59 52 	sts	0x5259, r1	; 0x805259 <UIlogMenu+0xa>
    b5be:	10 92 48 52 	sts	0x5248, r1	; 0x805248 <UIgraphMenu+0x4>
    b5c2:	10 92 49 52 	sts	0x5249, r1	; 0x805249 <UIgraphMenu+0x5>
    b5c6:	20 93 46 52 	sts	0x5246, r18	; 0x805246 <UIgraphMenu+0x2>
    b5ca:	30 93 47 52 	sts	0x5247, r19	; 0x805247 <UIgraphMenu+0x3>
    b5ce:	80 93 44 52 	sts	0x5244, r24	; 0x805244 <UIgraphMenu>
    b5d2:	90 93 45 52 	sts	0x5245, r25	; 0x805245 <UIgraphMenu+0x1>
    b5d6:	10 92 4c 52 	sts	0x524C, r1	; 0x80524c <UIgraphMenu+0x8>
    b5da:	10 92 4d 52 	sts	0x524D, r1	; 0x80524d <UIgraphMenu+0x9>
    b5de:	10 92 4e 52 	sts	0x524E, r1	; 0x80524e <UIgraphMenu+0xa>
    b5e2:	10 92 39 52 	sts	0x5239, r1	; 0x805239 <uiman>
    b5e6:	10 92 3a 52 	sts	0x523A, r1	; 0x80523a <uiman+0x1>
    b5ea:	10 92 3b 52 	sts	0x523B, r1	; 0x80523b <uiman+0x2>
    b5ee:	10 92 3c 52 	sts	0x523C, r1	; 0x80523c <uiman+0x3>
    b5f2:	8c e3       	ldi	r24, 0x3C	; 60
    b5f4:	80 93 3d 52 	sts	0x523D, r24	; 0x80523d <uiman+0x4>
    b5f8:	88 e7       	ldi	r24, 0x78	; 120
    b5fa:	80 93 3e 52 	sts	0x523E, r24	; 0x80523e <uiman+0x5>
    b5fe:	10 92 3f 52 	sts	0x523F, r1	; 0x80523f <uiman+0x6>
    b602:	10 92 40 52 	sts	0x5240, r1	; 0x805240 <uiman+0x7>
    b606:	81 e1       	ldi	r24, 0x11	; 17
    b608:	90 e0       	ldi	r25, 0x00	; 0
    b60a:	80 93 41 52 	sts	0x5241, r24	; 0x805241 <uiman+0x8>
    b60e:	90 93 42 52 	sts	0x5242, r25	; 0x805242 <uiman+0x9>
    b612:	10 92 43 52 	sts	0x5243, r1	; 0x805243 <uiman+0xa>
    b616:	10 92 a5 51 	sts	0x51A5, r1	; 0x8051a5 <u8g2+0x2>
    b61a:	10 92 a6 51 	sts	0x51A6, r1	; 0x8051a6 <u8g2+0x3>
    b61e:	8e e4       	ldi	r24, 0x4E	; 78
    b620:	9d e2       	ldi	r25, 0x2D	; 45
    b622:	80 93 33 52 	sts	0x5233, r24	; 0x805233 <u8g2+0x90>
    b626:	90 93 34 52 	sts	0x5234, r25	; 0x805234 <u8g2+0x91>
    b62a:	10 92 35 52 	sts	0x5235, r1	; 0x805235 <u8g2+0x92>
    b62e:	10 92 36 52 	sts	0x5236, r1	; 0x805236 <u8g2+0x93>
    b632:	10 92 37 52 	sts	0x5237, r1	; 0x805237 <u8g2+0x94>
    b636:	10 92 38 52 	sts	0x5238, r1	; 0x805238 <u8g2+0x95>
    b63a:	10 92 bf 51 	sts	0x51BF, r1	; 0x8051bf <u8g2+0x1c>
    b63e:	87 e9       	ldi	r24, 0x97	; 151
    b640:	92 e4       	ldi	r25, 0x42	; 66
    b642:	80 93 a3 51 	sts	0x51A3, r24	; 0x8051a3 <u8g2>
    b646:	90 93 a4 51 	sts	0x51A4, r25	; 0x8051a4 <u8g2+0x1>
    b64a:	10 92 a7 51 	sts	0x51A7, r1	; 0x8051a7 <u8g2+0x4>
    b64e:	10 92 a8 51 	sts	0x51A8, r1	; 0x8051a8 <u8g2+0x5>
    b652:	10 92 bc 51 	sts	0x51BC, r1	; 0x8051bc <u8g2+0x19>
    b656:	10 92 b3 51 	sts	0x51B3, r1	; 0x8051b3 <u8g2+0x10>
    b65a:	10 92 b4 51 	sts	0x51B4, r1	; 0x8051b4 <u8g2+0x11>
    b65e:	10 92 b5 51 	sts	0x51B5, r1	; 0x8051b5 <u8g2+0x12>
    b662:	10 92 b6 51 	sts	0x51B6, r1	; 0x8051b6 <u8g2+0x13>
    b666:	8f ef       	ldi	r24, 0xFF	; 255
    b668:	80 93 bd 51 	sts	0x51BD, r24	; 0x8051bd <u8g2+0x1a>
    b66c:	80 93 c1 51 	sts	0x51C1, r24	; 0x8051c1 <u8g2+0x1e>
    b670:	e5 ec       	ldi	r30, 0xC5	; 197
    b672:	f1 e5       	ldi	r31, 0x51	; 81
    b674:	8b ed       	ldi	r24, 0xDB	; 219
    b676:	91 e5       	ldi	r25, 0x51	; 81
    b678:	cf ef       	ldi	r28, 0xFF	; 255
    b67a:	c1 93       	st	Z+, r28
    b67c:	8e 17       	cp	r24, r30
    b67e:	9f 07       	cpc	r25, r31
    b680:	e1 f7       	brne	.-8      	; 0xb67a <global constructors keyed to 65535_0_BTmanager.cpp.o.27086+0x294>
    b682:	88 e3       	ldi	r24, 0x38	; 56
    b684:	93 e3       	ldi	r25, 0x33	; 51
    b686:	80 93 ab 51 	sts	0x51AB, r24	; 0x8051ab <u8g2+0x8>
    b68a:	90 93 ac 51 	sts	0x51AC, r25	; 0x8051ac <u8g2+0x9>
    b68e:	8d e2       	ldi	r24, 0x2D	; 45
    b690:	94 e3       	ldi	r25, 0x34	; 52
    b692:	80 93 ad 51 	sts	0x51AD, r24	; 0x8051ad <u8g2+0xa>
    b696:	90 93 ae 51 	sts	0x51AE, r25	; 0x8051ae <u8g2+0xb>
    b69a:	8b e6       	ldi	r24, 0x6B	; 107
    b69c:	91 e5       	ldi	r25, 0x51	; 81
    b69e:	80 93 af 51 	sts	0x51AF, r24	; 0x8051af <u8g2+0xc>
    b6a2:	90 93 b0 51 	sts	0x51B0, r25	; 0x8051b0 <u8g2+0xd>
    b6a6:	8f ed       	ldi	r24, 0xDF	; 223
    b6a8:	97 e4       	ldi	r25, 0x47	; 71
    b6aa:	80 93 b1 51 	sts	0x51B1, r24	; 0x8051b1 <u8g2+0xe>
    b6ae:	90 93 b2 51 	sts	0x51B2, r25	; 0x8051b2 <u8g2+0xf>
    b6b2:	30 e0       	ldi	r19, 0x00	; 0
    b6b4:	20 e0       	ldi	r18, 0x00	; 0
    b6b6:	40 e0       	ldi	r20, 0x00	; 0
    b6b8:	69 e0       	ldi	r22, 0x09	; 9
    b6ba:	87 ea       	ldi	r24, 0xA7	; 167
    b6bc:	91 e5       	ldi	r25, 0x51	; 81
    b6be:	0e 94 38 33 	call	0x6670	; 0x6670 <u8x8_d_ssd1322_nhd_256x64>
    b6c2:	10 92 01 52 	sts	0x5201, r1	; 0x805201 <u8g2+0x5e>
    b6c6:	10 92 02 52 	sts	0x5202, r1	; 0x805202 <u8g2+0x5f>
    b6ca:	88 e5       	ldi	r24, 0x58	; 88
    b6cc:	9d e2       	ldi	r25, 0x2D	; 45
    b6ce:	80 93 db 51 	sts	0x51DB, r24	; 0x8051db <u8g2+0x38>
    b6d2:	90 93 dc 51 	sts	0x51DC, r25	; 0x8051dc <u8g2+0x39>
    b6d6:	88 ee       	ldi	r24, 0xE8	; 232
    b6d8:	97 e4       	ldi	r25, 0x47	; 71
    b6da:	80 93 df 51 	sts	0x51DF, r24	; 0x8051df <u8g2+0x3c>
    b6de:	90 93 e0 51 	sts	0x51E0, r25	; 0x8051e0 <u8g2+0x3d>
    b6e2:	88 e0       	ldi	r24, 0x08	; 8
    b6e4:	80 93 e1 51 	sts	0x51E1, r24	; 0x8051e1 <u8g2+0x3e>
    b6e8:	10 92 e2 51 	sts	0x51E2, r1	; 0x8051e2 <u8g2+0x3f>
    b6ec:	10 92 10 52 	sts	0x5210, r1	; 0x805210 <u8g2+0x6d>
    b6f0:	10 92 30 52 	sts	0x5230, r1	; 0x805230 <u8g2+0x8d>
    b6f4:	81 e0       	ldi	r24, 0x01	; 1
    b6f6:	80 93 31 52 	sts	0x5231, r24	; 0x805231 <u8g2+0x8e>
    b6fa:	80 93 32 52 	sts	0x5232, r24	; 0x805232 <u8g2+0x8f>
    b6fe:	81 e6       	ldi	r24, 0x61	; 97
    b700:	93 e4       	ldi	r25, 0x43	; 67
    b702:	80 93 dd 51 	sts	0x51DD, r24	; 0x8051dd <u8g2+0x3a>
    b706:	90 93 de 51 	sts	0x51DE, r25	; 0x8051de <u8g2+0x3b>
    b70a:	87 ea       	ldi	r24, 0xA7	; 167
    b70c:	91 e5       	ldi	r25, 0x51	; 81
    b70e:	0e 94 5c 35 	call	0x6ab8	; 0x6ab8 <u8g2_update_dimension_r0>
    b712:	10 92 f9 51 	sts	0x51F9, r1	; 0x8051f9 <u8g2+0x56>
    b716:	10 92 fa 51 	sts	0x51FA, r1	; 0x8051fa <u8g2+0x57>
    b71a:	10 92 fd 51 	sts	0x51FD, r1	; 0x8051fd <u8g2+0x5a>
    b71e:	10 92 fe 51 	sts	0x51FE, r1	; 0x8051fe <u8g2+0x5b>
    b722:	8f ef       	ldi	r24, 0xFF	; 255
    b724:	9f ef       	ldi	r25, 0xFF	; 255
    b726:	80 93 fb 51 	sts	0x51FB, r24	; 0x8051fb <u8g2+0x58>
    b72a:	90 93 fc 51 	sts	0x51FC, r25	; 0x8051fc <u8g2+0x59>
    b72e:	80 93 ff 51 	sts	0x51FF, r24	; 0x8051ff <u8g2+0x5c>
    b732:	90 93 00 52 	sts	0x5200, r25	; 0x805200 <u8g2+0x5d>
    b736:	e0 91 dd 51 	lds	r30, 0x51DD	; 0x8051dd <u8g2+0x3a>
    b73a:	f0 91 de 51 	lds	r31, 0x51DE	; 0x8051de <u8g2+0x3b>
    b73e:	02 80       	ldd	r0, Z+2	; 0x02
    b740:	f3 81       	ldd	r31, Z+3	; 0x03
    b742:	e0 2d       	mov	r30, r0
    b744:	87 ea       	ldi	r24, 0xA7	; 167
    b746:	91 e5       	ldi	r25, 0x51	; 81
    b748:	09 95       	icall
    b74a:	87 ec       	ldi	r24, 0xC7	; 199
    b74c:	9d e2       	ldi	r25, 0x2D	; 45
    b74e:	80 93 03 52 	sts	0x5203, r24	; 0x805203 <u8g2+0x60>
    b752:	90 93 04 52 	sts	0x5204, r25	; 0x805204 <u8g2+0x61>
    b756:	10 92 13 52 	sts	0x5213, r1	; 0x805213 <u8g2+0x70>
    b75a:	63 e0       	ldi	r22, 0x03	; 3
    b75c:	60 93 ce 51 	sts	0x51CE, r22	; 0x8051ce <u8g2+0x2b>
    b760:	c0 93 d0 51 	sts	0x51D0, r28	; 0x8051d0 <u8g2+0x2d>
    b764:	10 92 91 51 	sts	0x5191, r1	; 0x805191 <u8g2log+0x2>
    b768:	10 92 92 51 	sts	0x5192, r1	; 0x805192 <u8g2log+0x3>
    b76c:	89 e5       	ldi	r24, 0x59	; 89
    b76e:	93 e4       	ldi	r25, 0x43	; 67
    b770:	80 93 8f 51 	sts	0x518F, r24	; 0x80518f <u8g2log>
    b774:	90 93 90 51 	sts	0x5190, r25	; 0x805190 <u8g2log+0x1>
    b778:	10 92 8b 51 	sts	0x518B, r1	; 0x80518b <EEPROM_save_msg_box+0x4>
    b77c:	10 92 8c 51 	sts	0x518C, r1	; 0x80518c <EEPROM_save_msg_box+0x5>
    b780:	24 e6       	ldi	r18, 0x64	; 100
    b782:	30 e0       	ldi	r19, 0x00	; 0
    b784:	20 93 89 51 	sts	0x5189, r18	; 0x805189 <EEPROM_save_msg_box+0x2>
    b788:	30 93 8a 51 	sts	0x518A, r19	; 0x80518a <EEPROM_save_msg_box+0x3>
    b78c:	81 e5       	ldi	r24, 0x51	; 81
    b78e:	93 e4       	ldi	r25, 0x43	; 67
    b790:	80 93 87 51 	sts	0x5187, r24	; 0x805187 <EEPROM_save_msg_box>
    b794:	90 93 88 51 	sts	0x5188, r25	; 0x805188 <EEPROM_save_msg_box+0x1>
    b798:	4e e7       	ldi	r20, 0x7E	; 126
    b79a:	5d e0       	ldi	r21, 0x0D	; 13
    b79c:	40 93 8d 51 	sts	0x518D, r20	; 0x80518d <EEPROM_save_msg_box+0x6>
    b7a0:	50 93 8e 51 	sts	0x518E, r21	; 0x80518e <EEPROM_save_msg_box+0x7>
    b7a4:	10 92 83 51 	sts	0x5183, r1	; 0x805183 <EEPROM_reload_msg_box+0x4>
    b7a8:	10 92 84 51 	sts	0x5184, r1	; 0x805184 <EEPROM_reload_msg_box+0x5>
    b7ac:	20 93 81 51 	sts	0x5181, r18	; 0x805181 <EEPROM_reload_msg_box+0x2>
    b7b0:	30 93 82 51 	sts	0x5182, r19	; 0x805182 <EEPROM_reload_msg_box+0x3>
    b7b4:	80 93 7f 51 	sts	0x517F, r24	; 0x80517f <EEPROM_reload_msg_box>
    b7b8:	90 93 80 51 	sts	0x5180, r25	; 0x805180 <EEPROM_reload_msg_box+0x1>
    b7bc:	4e e6       	ldi	r20, 0x6E	; 110
    b7be:	5d e0       	ldi	r21, 0x0D	; 13
    b7c0:	40 93 85 51 	sts	0x5185, r20	; 0x805185 <EEPROM_reload_msg_box+0x6>
    b7c4:	50 93 86 51 	sts	0x5186, r21	; 0x805186 <EEPROM_reload_msg_box+0x7>
    b7c8:	10 92 7b 51 	sts	0x517B, r1	; 0x80517b <ERROR_msg_box+0x4>
    b7cc:	10 92 7c 51 	sts	0x517C, r1	; 0x80517c <ERROR_msg_box+0x5>
    b7d0:	20 93 79 51 	sts	0x5179, r18	; 0x805179 <ERROR_msg_box+0x2>
    b7d4:	30 93 7a 51 	sts	0x517A, r19	; 0x80517a <ERROR_msg_box+0x3>
    b7d8:	80 93 77 51 	sts	0x5177, r24	; 0x805177 <ERROR_msg_box>
    b7dc:	90 93 78 51 	sts	0x5178, r25	; 0x805178 <ERROR_msg_box+0x1>
    b7e0:	8e e5       	ldi	r24, 0x5E	; 94
    b7e2:	9d e0       	ldi	r25, 0x0D	; 13
    b7e4:	80 93 7d 51 	sts	0x517D, r24	; 0x80517d <ERROR_msg_box+0x6>
    b7e8:	90 93 7e 51 	sts	0x517E, r25	; 0x80517e <ERROR_msg_box+0x7>
    b7ec:	8f e0       	ldi	r24, 0x0F	; 15
    b7ee:	90 e0       	ldi	r25, 0x00	; 0
    b7f0:	80 93 73 51 	sts	0x5173, r24	; 0x805173 <closeMenu+0x2>
    b7f4:	90 93 74 51 	sts	0x5174, r25	; 0x805174 <closeMenu+0x3>
    b7f8:	27 e5       	ldi	r18, 0x57	; 87
    b7fa:	3d e0       	ldi	r19, 0x0D	; 13
    b7fc:	20 93 75 51 	sts	0x5175, r18	; 0x805175 <closeMenu+0x4>
    b800:	30 93 76 51 	sts	0x5176, r19	; 0x805176 <closeMenu+0x5>
    b804:	23 e4       	ldi	r18, 0x43	; 67
    b806:	33 e4       	ldi	r19, 0x43	; 67
    b808:	20 93 71 51 	sts	0x5171, r18	; 0x805171 <closeMenu>
    b80c:	30 93 72 51 	sts	0x5172, r19	; 0x805172 <closeMenu+0x1>
    b810:	80 93 6d 51 	sts	0x516D, r24	; 0x80516d <exitMenu+0x2>
    b814:	90 93 6e 51 	sts	0x516E, r25	; 0x80516e <exitMenu+0x3>
    b818:	22 e5       	ldi	r18, 0x52	; 82
    b81a:	3d e0       	ldi	r19, 0x0D	; 13
    b81c:	20 93 6f 51 	sts	0x516F, r18	; 0x80516f <exitMenu+0x4>
    b820:	30 93 70 51 	sts	0x5170, r19	; 0x805170 <exitMenu+0x5>
    b824:	25 e3       	ldi	r18, 0x35	; 53
    b826:	33 e4       	ldi	r19, 0x43	; 67
    b828:	20 93 6b 51 	sts	0x516B, r18	; 0x80516b <exitMenu>
    b82c:	30 93 6c 51 	sts	0x516C, r19	; 0x80516c <exitMenu+0x1>
    b830:	80 93 67 51 	sts	0x5167, r24	; 0x805167 <mainSeparator0+0x2>
    b834:	90 93 68 51 	sts	0x5168, r25	; 0x805168 <mainSeparator0+0x3>
    b838:	47 e2       	ldi	r20, 0x27	; 39
    b83a:	53 e4       	ldi	r21, 0x43	; 67
    b83c:	40 93 65 51 	sts	0x5165, r20	; 0x805165 <mainSeparator0>
    b840:	50 93 66 51 	sts	0x5166, r21	; 0x805166 <mainSeparator0+0x1>
    b844:	26 e4       	ldi	r18, 0x46	; 70
    b846:	3d e0       	ldi	r19, 0x0D	; 13
    b848:	20 93 69 51 	sts	0x5169, r18	; 0x805169 <mainSeparator0+0x4>
    b84c:	30 93 6a 51 	sts	0x516A, r19	; 0x80516a <mainSeparator0+0x5>
    b850:	80 93 60 51 	sts	0x5160, r24	; 0x805160 <additionalModes+0x2>
    b854:	90 93 61 51 	sts	0x5161, r25	; 0x805161 <additionalModes+0x3>
    b858:	2a e3       	ldi	r18, 0x3A	; 58
    b85a:	3d e0       	ldi	r19, 0x0D	; 13
    b85c:	20 93 62 51 	sts	0x5162, r18	; 0x805162 <additionalModes+0x4>
    b860:	30 93 63 51 	sts	0x5163, r19	; 0x805163 <additionalModes+0x5>
    b864:	25 e1       	ldi	r18, 0x15	; 21
    b866:	33 e4       	ldi	r19, 0x43	; 67
    b868:	20 93 5e 51 	sts	0x515E, r18	; 0x80515e <additionalModes>
    b86c:	30 93 5f 51 	sts	0x515F, r19	; 0x80515f <additionalModes+0x1>
    b870:	10 92 64 51 	sts	0x5164, r1	; 0x805164 <additionalModes+0x6>
    b874:	80 93 59 51 	sts	0x5159, r24	; 0x805159 <reassignStoRcl+0x2>
    b878:	90 93 5a 51 	sts	0x515A, r25	; 0x80515a <reassignStoRcl+0x3>
    b87c:	e9 e2       	ldi	r30, 0x29	; 41
    b87e:	fd e0       	ldi	r31, 0x0D	; 13
    b880:	e0 93 5b 51 	sts	0x515B, r30	; 0x80515b <reassignStoRcl+0x4>
    b884:	f0 93 5c 51 	sts	0x515C, r31	; 0x80515c <reassignStoRcl+0x5>
    b888:	20 93 57 51 	sts	0x5157, r18	; 0x805157 <reassignStoRcl>
    b88c:	30 93 58 51 	sts	0x5158, r19	; 0x805158 <reassignStoRcl+0x1>
    b890:	10 92 5d 51 	sts	0x515D, r1	; 0x80515d <reassignStoRcl+0x6>
    b894:	80 93 51 51 	sts	0x5151, r24	; 0x805151 <btDatalog+0x2>
    b898:	90 93 52 51 	sts	0x5152, r25	; 0x805152 <btDatalog+0x3>
    b89c:	e8 e1       	ldi	r30, 0x18	; 24
    b89e:	fd e0       	ldi	r31, 0x0D	; 13
    b8a0:	e0 93 53 51 	sts	0x5153, r30	; 0x805153 <btDatalog+0x4>
    b8a4:	f0 93 54 51 	sts	0x5154, r31	; 0x805154 <btDatalog+0x5>
    b8a8:	e7 e0       	ldi	r30, 0x07	; 7
    b8aa:	f3 e4       	ldi	r31, 0x43	; 67
    b8ac:	e0 93 4f 51 	sts	0x514F, r30	; 0x80514f <btDatalog>
    b8b0:	f0 93 50 51 	sts	0x5150, r31	; 0x805150 <btDatalog+0x1>
    b8b4:	af e4       	ldi	r26, 0x4F	; 79
    b8b6:	b2 e5       	ldi	r27, 0x52	; 82
    b8b8:	a0 93 55 51 	sts	0x5155, r26	; 0x805155 <btDatalog+0x6>
    b8bc:	b0 93 56 51 	sts	0x5156, r27	; 0x805156 <btDatalog+0x7>
    b8c0:	80 93 49 51 	sts	0x5149, r24	; 0x805149 <btGraphOpt+0x2>
    b8c4:	90 93 4a 51 	sts	0x514A, r25	; 0x80514a <btGraphOpt+0x3>
    b8c8:	a6 e0       	ldi	r26, 0x06	; 6
    b8ca:	bd e0       	ldi	r27, 0x0D	; 13
    b8cc:	a0 93 4b 51 	sts	0x514B, r26	; 0x80514b <btGraphOpt+0x4>
    b8d0:	b0 93 4c 51 	sts	0x514C, r27	; 0x80514c <btGraphOpt+0x5>
    b8d4:	e0 93 47 51 	sts	0x5147, r30	; 0x805147 <btGraphOpt>
    b8d8:	f0 93 48 51 	sts	0x5148, r31	; 0x805148 <btGraphOpt+0x1>
    b8dc:	e4 e4       	ldi	r30, 0x44	; 68
    b8de:	f2 e5       	ldi	r31, 0x52	; 82
    b8e0:	e0 93 4d 51 	sts	0x514D, r30	; 0x80514d <btGraphOpt+0x6>
    b8e4:	f0 93 4e 51 	sts	0x514E, r31	; 0x80514e <btGraphOpt+0x7>
    b8e8:	80 93 43 51 	sts	0x5143, r24	; 0x805143 <bluetoothMenu+0x2>
    b8ec:	90 93 44 51 	sts	0x5144, r25	; 0x805144 <bluetoothMenu+0x3>
    b8f0:	e9 ef       	ldi	r30, 0xF9	; 249
    b8f2:	f2 e4       	ldi	r31, 0x42	; 66
    b8f4:	e0 93 41 51 	sts	0x5141, r30	; 0x805141 <bluetoothMenu>
    b8f8:	f0 93 42 51 	sts	0x5142, r31	; 0x805142 <bluetoothMenu+0x1>
    b8fc:	ec ef       	ldi	r30, 0xFC	; 252
    b8fe:	fc e0       	ldi	r31, 0x0C	; 12
    b900:	e0 93 45 51 	sts	0x5145, r30	; 0x805145 <bluetoothMenu+0x4>
    b904:	f0 93 46 51 	sts	0x5146, r31	; 0x805146 <bluetoothMenu+0x5>
    b908:	80 93 3b 51 	sts	0x513B, r24	; 0x80513b <contrastCtrl+0x2>
    b90c:	90 93 3c 51 	sts	0x513C, r25	; 0x80513c <contrastCtrl+0x3>
    b910:	e7 e0       	ldi	r30, 0x07	; 7
    b912:	fc e0       	ldi	r31, 0x0C	; 12
    b914:	e0 93 3d 51 	sts	0x513D, r30	; 0x80513d <contrastCtrl+0x4>
    b918:	f0 93 3e 51 	sts	0x513E, r31	; 0x80513e <contrastCtrl+0x5>
    b91c:	10 92 3f 51 	sts	0x513F, r1	; 0x80513f <contrastCtrl+0x6>
    b920:	10 92 40 51 	sts	0x5140, r1	; 0x805140 <contrastCtrl+0x7>
    b924:	e5 e8       	ldi	r30, 0x85	; 133
    b926:	f2 e4       	ldi	r31, 0x42	; 66
    b928:	e0 93 39 51 	sts	0x5139, r30	; 0x805139 <contrastCtrl>
    b92c:	f0 93 3a 51 	sts	0x513A, r31	; 0x80513a <contrastCtrl+0x1>
    b930:	80 93 35 51 	sts	0x5135, r24	; 0x805135 <saveSettings+0x2>
    b934:	90 93 36 51 	sts	0x5136, r25	; 0x805136 <saveSettings+0x3>
    b938:	ee ee       	ldi	r30, 0xEE	; 238
    b93a:	fc e0       	ldi	r31, 0x0C	; 12
    b93c:	e0 93 37 51 	sts	0x5137, r30	; 0x805137 <saveSettings+0x4>
    b940:	f0 93 38 51 	sts	0x5138, r31	; 0x805138 <saveSettings+0x5>
    b944:	eb ee       	ldi	r30, 0xEB	; 235
    b946:	f2 e4       	ldi	r31, 0x42	; 66
    b948:	e0 93 33 51 	sts	0x5133, r30	; 0x805133 <saveSettings>
    b94c:	f0 93 34 51 	sts	0x5134, r31	; 0x805134 <saveSettings+0x1>
    b950:	80 93 2f 51 	sts	0x512F, r24	; 0x80512f <reloadSettings+0x2>
    b954:	90 93 30 51 	sts	0x5130, r25	; 0x805130 <reloadSettings+0x3>
    b958:	ee ed       	ldi	r30, 0xDE	; 222
    b95a:	fc e0       	ldi	r31, 0x0C	; 12
    b95c:	e0 93 31 51 	sts	0x5131, r30	; 0x805131 <reloadSettings+0x4>
    b960:	f0 93 32 51 	sts	0x5132, r31	; 0x805132 <reloadSettings+0x5>
    b964:	ed ed       	ldi	r30, 0xDD	; 221
    b966:	f2 e4       	ldi	r31, 0x42	; 66
    b968:	e0 93 2d 51 	sts	0x512D, r30	; 0x80512d <reloadSettings>
    b96c:	f0 93 2e 51 	sts	0x512E, r31	; 0x80512e <reloadSettings+0x1>
    b970:	80 93 29 51 	sts	0x5129, r24	; 0x805129 <openLog+0x2>
    b974:	90 93 2a 51 	sts	0x512A, r25	; 0x80512a <openLog+0x3>
    b978:	e5 ed       	ldi	r30, 0xD5	; 213
    b97a:	fc e0       	ldi	r31, 0x0C	; 12
    b97c:	e0 93 2b 51 	sts	0x512B, r30	; 0x80512b <openLog+0x4>
    b980:	f0 93 2c 51 	sts	0x512C, r31	; 0x80512c <openLog+0x5>
    b984:	ef ec       	ldi	r30, 0xCF	; 207
    b986:	f2 e4       	ldi	r31, 0x42	; 66
    b988:	e0 93 27 51 	sts	0x5127, r30	; 0x805127 <openLog>
    b98c:	f0 93 28 51 	sts	0x5128, r31	; 0x805128 <openLog+0x1>
    b990:	80 93 23 51 	sts	0x5123, r24	; 0x805123 <logSeparator0+0x2>
    b994:	90 93 24 51 	sts	0x5124, r25	; 0x805124 <logSeparator0+0x3>
    b998:	40 93 21 51 	sts	0x5121, r20	; 0x805121 <logSeparator0>
    b99c:	50 93 22 51 	sts	0x5122, r21	; 0x805122 <logSeparator0+0x1>
    b9a0:	e2 ec       	ldi	r30, 0xC2	; 194
    b9a2:	fc e0       	ldi	r31, 0x0C	; 12
    b9a4:	e0 93 25 51 	sts	0x5125, r30	; 0x805125 <logSeparator0+0x4>
    b9a8:	f0 93 26 51 	sts	0x5126, r31	; 0x805126 <logSeparator0+0x5>
    b9ac:	80 93 1c 51 	sts	0x511C, r24	; 0x80511c <logEnable+0x2>
    b9b0:	90 93 1d 51 	sts	0x511D, r25	; 0x80511d <logEnable+0x3>
    b9b4:	ea eb       	ldi	r30, 0xBA	; 186
    b9b6:	fc e0       	ldi	r31, 0x0C	; 12
    b9b8:	e0 93 1e 51 	sts	0x511E, r30	; 0x80511e <logEnable+0x4>
    b9bc:	f0 93 1f 51 	sts	0x511F, r31	; 0x80511f <logEnable+0x5>
    b9c0:	20 93 1a 51 	sts	0x511A, r18	; 0x80511a <logEnable>
    b9c4:	30 93 1b 51 	sts	0x511B, r19	; 0x80511b <logEnable+0x1>
    b9c8:	10 92 20 51 	sts	0x5120, r1	; 0x805120 <logEnable+0x6>
    b9cc:	80 93 14 51 	sts	0x5114, r24	; 0x805114 <logSkip+0x2>
    b9d0:	90 93 15 51 	sts	0x5115, r25	; 0x805115 <logSkip+0x3>
    b9d4:	ea ea       	ldi	r30, 0xAA	; 170
    b9d6:	fc e0       	ldi	r31, 0x0C	; 12
    b9d8:	e0 93 16 51 	sts	0x5116, r30	; 0x805116 <logSkip+0x4>
    b9dc:	f0 93 17 51 	sts	0x5117, r31	; 0x805117 <logSkip+0x5>
    b9e0:	ed eb       	ldi	r30, 0xBD	; 189
    b9e2:	f2 e4       	ldi	r31, 0x42	; 66
    b9e4:	e0 93 12 51 	sts	0x5112, r30	; 0x805112 <logSkip>
    b9e8:	f0 93 13 51 	sts	0x5113, r31	; 0x805113 <logSkip+0x1>
    b9ec:	10 92 18 51 	sts	0x5118, r1	; 0x805118 <logSkip+0x6>
    b9f0:	10 92 19 51 	sts	0x5119, r1	; 0x805119 <logSkip+0x7>
    b9f4:	80 93 0d 51 	sts	0x510D, r24	; 0x80510d <logSplitUnit+0x2>
    b9f8:	90 93 0e 51 	sts	0x510E, r25	; 0x80510e <logSplitUnit+0x3>
    b9fc:	ef e9       	ldi	r30, 0x9F	; 159
    b9fe:	fc e0       	ldi	r31, 0x0C	; 12
    ba00:	e0 93 0f 51 	sts	0x510F, r30	; 0x80510f <logSplitUnit+0x4>
    ba04:	f0 93 10 51 	sts	0x5110, r31	; 0x805110 <logSplitUnit+0x5>
    ba08:	20 93 0b 51 	sts	0x510B, r18	; 0x80510b <logSplitUnit>
    ba0c:	30 93 0c 51 	sts	0x510C, r19	; 0x80510c <logSplitUnit+0x1>
    ba10:	10 92 11 51 	sts	0x5111, r1	; 0x805111 <logSplitUnit+0x6>
    ba14:	80 93 06 51 	sts	0x5106, r24	; 0x805106 <logTimestamp+0x2>
    ba18:	90 93 07 51 	sts	0x5107, r25	; 0x805107 <logTimestamp+0x3>
    ba1c:	e1 e9       	ldi	r30, 0x91	; 145
    ba1e:	fc e0       	ldi	r31, 0x0C	; 12
    ba20:	e0 93 08 51 	sts	0x5108, r30	; 0x805108 <logTimestamp+0x4>
    ba24:	f0 93 09 51 	sts	0x5109, r31	; 0x805109 <logTimestamp+0x5>
    ba28:	20 93 04 51 	sts	0x5104, r18	; 0x805104 <logTimestamp>
    ba2c:	30 93 05 51 	sts	0x5105, r19	; 0x805105 <logTimestamp+0x1>
    ba30:	10 92 0a 51 	sts	0x510A, r1	; 0x80510a <logTimestamp+0x6>
    ba34:	80 93 ff 50 	sts	0x50FF, r24	; 0x8050ff <logTamb+0x2>
    ba38:	90 93 00 51 	sts	0x5100, r25	; 0x805100 <logTamb+0x3>
    ba3c:	e4 e8       	ldi	r30, 0x84	; 132
    ba3e:	fc e0       	ldi	r31, 0x0C	; 12
    ba40:	e0 93 01 51 	sts	0x5101, r30	; 0x805101 <logTamb+0x4>
    ba44:	f0 93 02 51 	sts	0x5102, r31	; 0x805102 <logTamb+0x5>
    ba48:	20 93 fd 50 	sts	0x50FD, r18	; 0x8050fd <logTamb>
    ba4c:	30 93 fe 50 	sts	0x50FE, r19	; 0x8050fe <logTamb+0x1>
    ba50:	10 92 03 51 	sts	0x5103, r1	; 0x805103 <logTamb+0x6>
    ba54:	80 93 f8 50 	sts	0x50F8, r24	; 0x8050f8 <logStat+0x2>
    ba58:	90 93 f9 50 	sts	0x50F9, r25	; 0x8050f9 <logStat+0x3>
    ba5c:	e1 e7       	ldi	r30, 0x71	; 113
    ba5e:	fc e0       	ldi	r31, 0x0C	; 12
    ba60:	e0 93 fa 50 	sts	0x50FA, r30	; 0x8050fa <logStat+0x4>
    ba64:	f0 93 fb 50 	sts	0x50FB, r31	; 0x8050fb <logStat+0x5>
    ba68:	20 93 f6 50 	sts	0x50F6, r18	; 0x8050f6 <logStat>
    ba6c:	30 93 f7 50 	sts	0x50F7, r19	; 0x8050f7 <logStat+0x1>
    ba70:	10 92 fc 50 	sts	0x50FC, r1	; 0x8050fc <logStat+0x6>
    ba74:	80 93 f2 50 	sts	0x50F2, r24	; 0x8050f2 <logSeparator1+0x2>
    ba78:	90 93 f3 50 	sts	0x50F3, r25	; 0x8050f3 <logSeparator1+0x3>
    ba7c:	40 93 f0 50 	sts	0x50F0, r20	; 0x8050f0 <logSeparator1>
    ba80:	50 93 f1 50 	sts	0x50F1, r21	; 0x8050f1 <logSeparator1+0x1>
    ba84:	e2 e6       	ldi	r30, 0x62	; 98
    ba86:	fc e0       	ldi	r31, 0x0C	; 12
    ba88:	e0 93 f4 50 	sts	0x50F4, r30	; 0x8050f4 <logSeparator1+0x4>
    ba8c:	f0 93 f5 50 	sts	0x50F5, r31	; 0x8050f5 <logSeparator1+0x5>
    ba90:	80 93 ea 50 	sts	0x50EA, r24	; 0x8050ea <logStatSamples+0x2>
    ba94:	90 93 eb 50 	sts	0x50EB, r25	; 0x8050eb <logStatSamples+0x3>
    ba98:	ea ef       	ldi	r30, 0xFA	; 250
    ba9a:	fb e0       	ldi	r31, 0x0B	; 11
    ba9c:	e0 93 ec 50 	sts	0x50EC, r30	; 0x8050ec <logStatSamples+0x4>
    baa0:	f0 93 ed 50 	sts	0x50ED, r31	; 0x8050ed <logStatSamples+0x5>
    baa4:	10 92 ee 50 	sts	0x50EE, r1	; 0x8050ee <logStatSamples+0x6>
    baa8:	10 92 ef 50 	sts	0x50EF, r1	; 0x8050ef <logStatSamples+0x7>
    baac:	e3 e7       	ldi	r30, 0x73	; 115
    baae:	f2 e4       	ldi	r31, 0x42	; 66
    bab0:	e0 93 e8 50 	sts	0x50E8, r30	; 0x8050e8 <logStatSamples>
    bab4:	f0 93 e9 50 	sts	0x50E9, r31	; 0x8050e9 <logStatSamples+0x1>
    bab8:	80 93 e4 50 	sts	0x50E4, r24	; 0x8050e4 <graphSeparator0+0x2>
    babc:	90 93 e5 50 	sts	0x50E5, r25	; 0x8050e5 <graphSeparator0+0x3>
    bac0:	40 93 e2 50 	sts	0x50E2, r20	; 0x8050e2 <graphSeparator0>
    bac4:	50 93 e3 50 	sts	0x50E3, r21	; 0x8050e3 <graphSeparator0+0x1>
    bac8:	e0 e5       	ldi	r30, 0x50	; 80
    baca:	fc e0       	ldi	r31, 0x0C	; 12
    bacc:	e0 93 e6 50 	sts	0x50E6, r30	; 0x8050e6 <graphSeparator0+0x4>
    bad0:	f0 93 e7 50 	sts	0x50E7, r31	; 0x8050e7 <graphSeparator0+0x5>
    bad4:	80 93 da 50 	sts	0x50DA, r24	; 0x8050da <opt_gr_type+0x2>
    bad8:	90 93 db 50 	sts	0x50DB, r25	; 0x8050db <opt_gr_type+0x3>
    badc:	e5 e4       	ldi	r30, 0x45	; 69
    bade:	fc e0       	ldi	r31, 0x0C	; 12
    bae0:	e0 93 dc 50 	sts	0x50DC, r30	; 0x8050dc <opt_gr_type+0x4>
    bae4:	f0 93 dd 50 	sts	0x50DD, r31	; 0x8050dd <opt_gr_type+0x5>
    bae8:	e5 e6       	ldi	r30, 0x65	; 101
    baea:	f2 e4       	ldi	r31, 0x42	; 66
    baec:	e0 93 d8 50 	sts	0x50D8, r30	; 0x8050d8 <opt_gr_type>
    baf0:	f0 93 d9 50 	sts	0x50D9, r31	; 0x8050d9 <opt_gr_type+0x1>
    baf4:	ef e5       	ldi	r30, 0x5F	; 95
    baf6:	f0 e4       	ldi	r31, 0x40	; 64
    baf8:	e0 93 de 50 	sts	0x50DE, r30	; 0x8050de <opt_gr_type+0x6>
    bafc:	f0 93 df 50 	sts	0x50DF, r31	; 0x8050df <opt_gr_type+0x7>
    bb00:	72 e0       	ldi	r23, 0x02	; 2
    bb02:	70 93 e0 50 	sts	0x50E0, r23	; 0x8050e0 <opt_gr_type+0x8>
    bb06:	10 92 e1 50 	sts	0x50E1, r1	; 0x8050e1 <opt_gr_type+0x9>
    bb0a:	80 93 d4 50 	sts	0x50D4, r24	; 0x8050d4 <graphSeparator1+0x2>
    bb0e:	90 93 d5 50 	sts	0x50D5, r25	; 0x8050d5 <graphSeparator1+0x3>
    bb12:	40 93 d2 50 	sts	0x50D2, r20	; 0x8050d2 <graphSeparator1>
    bb16:	50 93 d3 50 	sts	0x50D3, r21	; 0x8050d3 <graphSeparator1+0x1>
    bb1a:	ea e3       	ldi	r30, 0x3A	; 58
    bb1c:	fc e0       	ldi	r31, 0x0C	; 12
    bb1e:	e0 93 d6 50 	sts	0x50D6, r30	; 0x8050d6 <graphSeparator1+0x4>
    bb22:	f0 93 d7 50 	sts	0x50D7, r31	; 0x8050d7 <graphSeparator1+0x5>
    bb26:	80 93 ca 50 	sts	0x50CA, r24	; 0x8050ca <opt_gr_yscale+0x2>
    bb2a:	90 93 cb 50 	sts	0x50CB, r25	; 0x8050cb <opt_gr_yscale+0x3>
    bb2e:	e3 ef       	ldi	r30, 0xF3	; 243
    bb30:	fb e0       	ldi	r31, 0x0B	; 11
    bb32:	e0 93 cc 50 	sts	0x50CC, r30	; 0x8050cc <opt_gr_yscale+0x4>
    bb36:	f0 93 cd 50 	sts	0x50CD, r31	; 0x8050cd <opt_gr_yscale+0x5>
    bb3a:	e5 e5       	ldi	r30, 0x55	; 85
    bb3c:	f0 e4       	ldi	r31, 0x40	; 64
    bb3e:	e0 93 ce 50 	sts	0x50CE, r30	; 0x8050ce <opt_gr_yscale+0x6>
    bb42:	f0 93 cf 50 	sts	0x50CF, r31	; 0x8050cf <opt_gr_yscale+0x7>
    bb46:	75 e0       	ldi	r23, 0x05	; 5
    bb48:	70 93 d0 50 	sts	0x50D0, r23	; 0x8050d0 <opt_gr_yscale+0x8>
    bb4c:	10 92 d1 50 	sts	0x50D1, r1	; 0x8050d1 <opt_gr_yscale+0x9>
    bb50:	e5 e6       	ldi	r30, 0x65	; 101
    bb52:	f2 e4       	ldi	r31, 0x42	; 66
    bb54:	e0 93 c8 50 	sts	0x50C8, r30	; 0x8050c8 <opt_gr_yscale>
    bb58:	f0 93 c9 50 	sts	0x50C9, r31	; 0x8050c9 <opt_gr_yscale+0x1>
    bb5c:	80 93 c3 50 	sts	0x50C3, r24	; 0x8050c3 <gr_yscale_show0+0x2>
    bb60:	90 93 c4 50 	sts	0x50C4, r25	; 0x8050c4 <gr_yscale_show0+0x3>
    bb64:	e1 e3       	ldi	r30, 0x31	; 49
    bb66:	fc e0       	ldi	r31, 0x0C	; 12
    bb68:	e0 93 c5 50 	sts	0x50C5, r30	; 0x8050c5 <gr_yscale_show0+0x4>
    bb6c:	f0 93 c6 50 	sts	0x50C6, r31	; 0x8050c6 <gr_yscale_show0+0x5>
    bb70:	20 93 c1 50 	sts	0x50C1, r18	; 0x8050c1 <gr_yscale_show0>
    bb74:	30 93 c2 50 	sts	0x50C2, r19	; 0x8050c2 <gr_yscale_show0+0x1>
    bb78:	10 92 c7 50 	sts	0x50C7, r1	; 0x8050c7 <gr_yscale_show0+0x6>
    bb7c:	80 93 bd 50 	sts	0x50BD, r24	; 0x8050bd <graphSeparator2+0x2>
    bb80:	90 93 be 50 	sts	0x50BE, r25	; 0x8050be <graphSeparator2+0x3>
    bb84:	40 93 bb 50 	sts	0x50BB, r20	; 0x8050bb <graphSeparator2>
    bb88:	50 93 bc 50 	sts	0x50BC, r21	; 0x8050bc <graphSeparator2+0x1>
    bb8c:	46 e2       	ldi	r20, 0x26	; 38
    bb8e:	5c e0       	ldi	r21, 0x0C	; 12
    bb90:	40 93 bf 50 	sts	0x50BF, r20	; 0x8050bf <graphSeparator2+0x4>
    bb94:	50 93 c0 50 	sts	0x50C0, r21	; 0x8050c0 <graphSeparator2+0x5>
    bb98:	80 93 b6 50 	sts	0x50B6, r24	; 0x8050b6 <gr_xscale_roll_mode+0x2>
    bb9c:	90 93 b7 50 	sts	0x50B7, r25	; 0x8050b7 <gr_xscale_roll_mode+0x3>
    bba0:	4c e1       	ldi	r20, 0x1C	; 28
    bba2:	5c e0       	ldi	r21, 0x0C	; 12
    bba4:	40 93 b8 50 	sts	0x50B8, r20	; 0x8050b8 <gr_xscale_roll_mode+0x4>
    bba8:	50 93 b9 50 	sts	0x50B9, r21	; 0x8050b9 <gr_xscale_roll_mode+0x5>
    bbac:	20 93 b4 50 	sts	0x50B4, r18	; 0x8050b4 <gr_xscale_roll_mode>
    bbb0:	30 93 b5 50 	sts	0x50B5, r19	; 0x8050b5 <gr_xscale_roll_mode+0x1>
    bbb4:	10 92 ba 50 	sts	0x50BA, r1	; 0x8050ba <gr_xscale_roll_mode+0x6>
    bbb8:	80 93 af 50 	sts	0x50AF, r24	; 0x8050af <gr_xscale_autosample+0x2>
    bbbc:	90 93 b0 50 	sts	0x50B0, r25	; 0x8050b0 <gr_xscale_autosample+0x3>
    bbc0:	20 e1       	ldi	r18, 0x10	; 16
    bbc2:	3c e0       	ldi	r19, 0x0C	; 12
    bbc4:	20 93 b1 50 	sts	0x50B1, r18	; 0x8050b1 <gr_xscale_autosample+0x4>
    bbc8:	30 93 b2 50 	sts	0x50B2, r19	; 0x8050b2 <gr_xscale_autosample+0x5>
    bbcc:	10 92 b3 50 	sts	0x50B3, r1	; 0x8050b3 <gr_xscale_autosample+0x6>
    bbd0:	2b ea       	ldi	r18, 0xAB	; 171
    bbd2:	32 e4       	ldi	r19, 0x42	; 66
    bbd4:	20 93 ad 50 	sts	0x50AD, r18	; 0x8050ad <gr_xscale_autosample>
    bbd8:	30 93 ae 50 	sts	0x50AE, r19	; 0x8050ae <gr_xscale_autosample+0x1>
    bbdc:	80 93 a7 50 	sts	0x50A7, r24	; 0x8050a7 <gr_sample_time+0x2>
    bbe0:	90 93 a8 50 	sts	0x50A8, r25	; 0x8050a8 <gr_sample_time+0x3>
    bbe4:	83 ee       	ldi	r24, 0xE3	; 227
    bbe6:	9b e0       	ldi	r25, 0x0B	; 11
    bbe8:	80 93 a9 50 	sts	0x50A9, r24	; 0x8050a9 <gr_sample_time+0x4>
    bbec:	90 93 aa 50 	sts	0x50AA, r25	; 0x8050aa <gr_sample_time+0x5>
    bbf0:	10 92 ab 50 	sts	0x50AB, r1	; 0x8050ab <gr_sample_time+0x6>
    bbf4:	10 92 ac 50 	sts	0x50AC, r1	; 0x8050ac <gr_sample_time+0x7>
    bbf8:	83 e5       	ldi	r24, 0x53	; 83
    bbfa:	92 e4       	ldi	r25, 0x42	; 66
    bbfc:	80 93 a5 50 	sts	0x50A5, r24	; 0x8050a5 <gr_sample_time>
    bc00:	90 93 a6 50 	sts	0x50A6, r25	; 0x8050a6 <gr_sample_time+0x1>
    bc04:	10 92 9e 50 	sts	0x509E, r1	; 0x80509e <k197graph+0xb4>
    bc08:	10 92 9f 50 	sts	0x509F, r1	; 0x80509f <k197graph+0xb5>
    bc0c:	10 92 a0 50 	sts	0x50A0, r1	; 0x8050a0 <k197graph+0xb6>
    bc10:	10 92 a1 50 	sts	0x50A1, r1	; 0x8050a1 <k197graph+0xb7>
    bc14:	10 92 a2 50 	sts	0x50A2, r1	; 0x8050a2 <k197graph+0xb8>
    bc18:	10 92 a3 50 	sts	0x50A3, r1	; 0x8050a3 <k197graph+0xb9>
    bc1c:	10 92 a4 50 	sts	0x50A4, r1	; 0x8050a4 <k197graph+0xba>
    bc20:	10 92 65 52 	sts	0x5265, r1	; 0x805265 <k197dev>
    bc24:	10 92 6e 52 	sts	0x526E, r1	; 0x80526e <k197dev+0x9>
    bc28:	10 92 6f 52 	sts	0x526F, r1	; 0x80526f <k197dev+0xa>
    bc2c:	10 92 70 52 	sts	0x5270, r1	; 0x805270 <k197dev+0xb>
    bc30:	10 92 71 52 	sts	0x5271, r1	; 0x805271 <k197dev+0xc>
    bc34:	10 92 72 52 	sts	0x5272, r1	; 0x805272 <k197dev+0xd>
    bc38:	10 92 73 52 	sts	0x5273, r1	; 0x805273 <k197dev+0xe>
    bc3c:	10 92 74 52 	sts	0x5274, r1	; 0x805274 <k197dev+0xf>
    bc40:	10 92 75 52 	sts	0x5275, r1	; 0x805275 <k197dev+0x10>
    bc44:	10 92 76 52 	sts	0x5276, r1	; 0x805276 <k197dev+0x11>
    bc48:	10 92 77 52 	sts	0x5277, r1	; 0x805277 <k197dev+0x12>
    bc4c:	10 92 78 52 	sts	0x5278, r1	; 0x805278 <k197dev+0x13>
    bc50:	10 92 79 52 	sts	0x5279, r1	; 0x805279 <k197dev+0x14>
    bc54:	8b ea       	ldi	r24, 0xAB	; 171
    bc56:	9a ea       	ldi	r25, 0xAA	; 170
    bc58:	aa ea       	ldi	r26, 0xAA	; 170
    bc5a:	be e3       	ldi	r27, 0x3E	; 62
    bc5c:	80 93 7a 52 	sts	0x527A, r24	; 0x80527a <k197dev+0x15>
    bc60:	90 93 7b 52 	sts	0x527B, r25	; 0x80527b <k197dev+0x16>
    bc64:	a0 93 7c 52 	sts	0x527C, r26	; 0x80527c <k197dev+0x17>
    bc68:	b0 93 7d 52 	sts	0x527D, r27	; 0x80527d <k197dev+0x18>
    bc6c:	10 92 7e 52 	sts	0x527E, r1	; 0x80527e <k197dev+0x19>
    bc70:	10 92 7f 52 	sts	0x527F, r1	; 0x80527f <k197dev+0x1a>
    bc74:	10 92 80 52 	sts	0x5280, r1	; 0x805280 <k197dev+0x1b>
    bc78:	10 92 81 52 	sts	0x5281, r1	; 0x805281 <k197dev+0x1c>
    bc7c:	10 92 82 52 	sts	0x5282, r1	; 0x805282 <k197dev+0x1d>
    bc80:	10 92 83 52 	sts	0x5283, r1	; 0x805283 <k197dev+0x1e>
    bc84:	10 92 84 52 	sts	0x5284, r1	; 0x805284 <k197dev+0x1f>
    bc88:	10 92 85 52 	sts	0x5285, r1	; 0x805285 <k197dev+0x20>
    bc8c:	10 92 86 52 	sts	0x5286, r1	; 0x805286 <k197dev+0x21>
    bc90:	10 92 87 52 	sts	0x5287, r1	; 0x805287 <k197dev+0x22>
    bc94:	10 92 88 52 	sts	0x5288, r1	; 0x805288 <k197dev+0x23>
    bc98:	10 92 89 52 	sts	0x5289, r1	; 0x805289 <k197dev+0x24>
    bc9c:	10 92 8a 52 	sts	0x528A, r1	; 0x80528a <k197dev+0x25>
    bca0:	10 92 8b 52 	sts	0x528B, r1	; 0x80528b <k197dev+0x26>
    bca4:	10 92 8c 52 	sts	0x528C, r1	; 0x80528c <k197dev+0x27>
    bca8:	10 92 8d 52 	sts	0x528D, r1	; 0x80528d <k197dev+0x28>
    bcac:	10 92 8e 52 	sts	0x528E, r1	; 0x80528e <k197dev+0x29>
    bcb0:	10 92 8f 52 	sts	0x528F, r1	; 0x80528f <k197dev+0x2a>
    bcb4:	10 92 90 52 	sts	0x5290, r1	; 0x805290 <k197dev+0x2b>
    bcb8:	10 92 91 52 	sts	0x5291, r1	; 0x805291 <k197dev+0x2c>
    bcbc:	83 eb       	ldi	r24, 0xB3	; 179
    bcbe:	80 93 62 55 	sts	0x5562, r24	; 0x805562 <k197dev+0x2fd>
    bcc2:	10 92 63 55 	sts	0x5563, r1	; 0x805563 <k197dev+0x2fe>
    bcc6:	10 92 64 55 	sts	0x5564, r1	; 0x805564 <k197dev+0x2ff>
    bcca:	60 93 65 55 	sts	0x5565, r22	; 0x805565 <k197dev+0x300>
    bcce:	10 92 66 55 	sts	0x5566, r1	; 0x805566 <k197dev+0x301>
    bcd2:	10 92 67 55 	sts	0x5567, r1	; 0x805567 <k197dev+0x302>
    bcd6:	10 92 68 55 	sts	0x5568, r1	; 0x805568 <k197dev+0x303>
    bcda:	10 92 69 55 	sts	0x5569, r1	; 0x805569 <k197dev+0x304>
    bcde:	10 92 6a 55 	sts	0x556A, r1	; 0x80556a <k197dev+0x305>
    bce2:	10 92 66 52 	sts	0x5266, r1	; 0x805266 <k197dev+0x1>
    bce6:	10 92 6b 55 	sts	0x556B, r1	; 0x80556b <BTman>
    bcea:	10 92 6c 55 	sts	0x556C, r1	; 0x80556c <BTman+0x1>
    bcee:	cf 91       	pop	r28
    bcf0:	08 95       	ret

0000bcf2 <main>:
main():
    bcf2:	cf 93       	push	r28
    bcf4:	df 93       	push	r29
    bcf6:	cd b7       	in	r28, 0x3d	; 61
    bcf8:	de b7       	in	r29, 0x3e	; 62
    bcfa:	68 97       	sbiw	r28, 0x18	; 24
    bcfc:	cd bf       	out	0x3d, r28	; 61
    bcfe:	de bf       	out	0x3e, r29	; 62
init_clock():
    bd00:	88 ed       	ldi	r24, 0xD8	; 216
    bd02:	94 e2       	ldi	r25, 0x24	; 36
    bd04:	84 bf       	out	0x34, r24	; 52
    bd06:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
init_TCA0():
    bd0a:	21 e0       	ldi	r18, 0x01	; 1
    bd0c:	20 93 03 0a 	sts	0x0A03, r18	; 0x800a03 <__TEXT_REGION_LENGTH__+0x7e0a03>
    bd10:	8e ef       	ldi	r24, 0xFE	; 254
    bd12:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7e0a26>
    bd16:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7e0a27>
    bd1a:	9b e0       	ldi	r25, 0x0B	; 11
    bd1c:	90 93 00 0a 	sts	0x0A00, r25	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7e0a00>
init_timers():
    bd20:	32 e0       	ldi	r19, 0x02	; 2
    bd22:	30 93 e6 05 	sts	0x05E6, r19	; 0x8005e6 <__TEXT_REGION_LENGTH__+0x7e05e6>
init_TCA1():
    bd26:	20 93 43 0a 	sts	0x0A43, r18	; 0x800a43 <__TEXT_REGION_LENGTH__+0x7e0a43>
    bd2a:	80 93 66 0a 	sts	0x0A66, r24	; 0x800a66 <__TEXT_REGION_LENGTH__+0x7e0a66>
    bd2e:	80 93 67 0a 	sts	0x0A67, r24	; 0x800a67 <__TEXT_REGION_LENGTH__+0x7e0a67>
    bd32:	90 93 40 0a 	sts	0x0A40, r25	; 0x800a40 <__TEXT_REGION_LENGTH__+0x7e0a40>
init_TCBs():
    bd36:	90 93 e7 05 	sts	0x05E7, r25	; 0x8005e7 <__TEXT_REGION_LENGTH__+0x7e05e7>
    bd3a:	37 e0       	ldi	r19, 0x07	; 7
    bd3c:	30 93 01 0b 	sts	0x0B01, r19	; 0x800b01 <__TEXT_REGION_LENGTH__+0x7e0b01>
    bd40:	80 93 0c 0b 	sts	0x0B0C, r24	; 0x800b0c <__TEXT_REGION_LENGTH__+0x7e0b0c>
    bd44:	10 92 0d 0b 	sts	0x0B0D, r1	; 0x800b0d <__TEXT_REGION_LENGTH__+0x7e0b0d>
    bd48:	95 e0       	ldi	r25, 0x05	; 5
    bd4a:	90 93 00 0b 	sts	0x0B00, r25	; 0x800b00 <__TEXT_REGION_LENGTH__+0x7e0b00>
    bd4e:	30 93 11 0b 	sts	0x0B11, r19	; 0x800b11 <__TEXT_REGION_LENGTH__+0x7e0b11>
    bd52:	80 93 1c 0b 	sts	0x0B1C, r24	; 0x800b1c <__TEXT_REGION_LENGTH__+0x7e0b1c>
    bd56:	10 92 1d 0b 	sts	0x0B1D, r1	; 0x800b1d <__TEXT_REGION_LENGTH__+0x7e0b1d>
    bd5a:	90 93 10 0b 	sts	0x0B10, r25	; 0x800b10 <__TEXT_REGION_LENGTH__+0x7e0b10>
    bd5e:	30 93 31 0b 	sts	0x0B31, r19	; 0x800b31 <__TEXT_REGION_LENGTH__+0x7e0b31>
    bd62:	80 93 3c 0b 	sts	0x0B3C, r24	; 0x800b3c <__TEXT_REGION_LENGTH__+0x7e0b3c>
    bd66:	10 92 3d 0b 	sts	0x0B3D, r1	; 0x800b3d <__TEXT_REGION_LENGTH__+0x7e0b3d>
    bd6a:	90 93 30 0b 	sts	0x0B30, r25	; 0x800b30 <__TEXT_REGION_LENGTH__+0x7e0b30>
init_TCD0():
    bd6e:	4f ef       	ldi	r20, 0xFF	; 255
    bd70:	5f e0       	ldi	r21, 0x0F	; 15
    bd72:	40 93 aa 0b 	sts	0x0BAA, r20	; 0x800baa <__TEXT_REGION_LENGTH__+0x7e0baa>
    bd76:	50 93 ab 0b 	sts	0x0BAB, r21	; 0x800bab <__TEXT_REGION_LENGTH__+0x7e0bab>
    bd7a:	80 e8       	ldi	r24, 0x80	; 128
    bd7c:	80 93 82 0b 	sts	0x0B82, r24	; 0x800b82 <__TEXT_REGION_LENGTH__+0x7e0b82>
    bd80:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <__TEXT_REGION_LENGTH__+0x7e0b81>
    bd84:	4b ef       	ldi	r20, 0xFB	; 251
    bd86:	53 e0       	ldi	r21, 0x03	; 3
    bd88:	40 93 ae 0b 	sts	0x0BAE, r20	; 0x800bae <__TEXT_REGION_LENGTH__+0x7e0bae>
    bd8c:	50 93 af 0b 	sts	0x0BAF, r21	; 0x800baf <__TEXT_REGION_LENGTH__+0x7e0baf>
    bd90:	81 e7       	ldi	r24, 0x71	; 113
    bd92:	80 93 80 0b 	sts	0x0B80, r24	; 0x800b80 <__TEXT_REGION_LENGTH__+0x7e0b80>
init_ADC0():
    bd96:	90 93 02 06 	sts	0x0602, r25	; 0x800602 <__TEXT_REGION_LENGTH__+0x7e0602>
    bd9a:	8e e0       	ldi	r24, 0x0E	; 14
    bd9c:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__TEXT_REGION_LENGTH__+0x7e0605>
    bda0:	80 e6       	ldi	r24, 0x60	; 96
    bda2:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <__TEXT_REGION_LENGTH__+0x7e0603>
    bda6:	90 93 00 06 	sts	0x0600, r25	; 0x800600 <__TEXT_REGION_LENGTH__+0x7e0600>
analogReference():
    bdaa:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    bdae:	88 7f       	andi	r24, 0xF8	; 248
    bdb0:	85 60       	ori	r24, 0x05	; 5
    bdb2:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
DACReference():
    bdb6:	80 91 b2 00 	lds	r24, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    bdba:	88 7f       	andi	r24, 0xF8	; 248
    bdbc:	85 60       	ori	r24, 0x05	; 5
    bdbe:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
init_millis():
    bdc2:	8f ed       	ldi	r24, 0xDF	; 223
    bdc4:	9e e2       	ldi	r25, 0x2E	; 46
    bdc6:	80 93 2c 0b 	sts	0x0B2C, r24	; 0x800b2c <__TEXT_REGION_LENGTH__+0x7e0b2c>
    bdca:	90 93 2d 0b 	sts	0x0B2D, r25	; 0x800b2d <__TEXT_REGION_LENGTH__+0x7e0b2d>
    bdce:	20 93 25 0b 	sts	0x0B25, r18	; 0x800b25 <__TEXT_REGION_LENGTH__+0x7e0b25>
    bdd2:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <__TEXT_REGION_LENGTH__+0x7e0b21>
    bdd6:	83 e0       	ldi	r24, 0x03	; 3
    bdd8:	80 93 20 0b 	sts	0x0B20, r24	; 0x800b20 <__TEXT_REGION_LENGTH__+0x7e0b20>
main():
    bddc:	78 94       	sei
    bdde:	0e 94 c5 52 	call	0xa58a	; 0xa58a <setup>
    bde2:	8e 01       	movw	r16, r28
    bde4:	0d 5e       	subi	r16, 0xED	; 237
    bde6:	1f 4f       	sbci	r17, 0xFF	; 255
    bde8:	0b 8b       	std	Y+19, r16	; 0x13
    bdea:	1c 8b       	std	Y+20, r17	; 0x14
checkFifoChanges():
    bdec:	f8 94       	cli
    bdee:	80 91 72 45 	lds	r24, 0x4572	; 0x804572 <fifo_size>
    bdf2:	08 2e       	mov	r0, r24
    bdf4:	00 0c       	add	r0, r0
    bdf6:	99 0b       	sbc	r25, r25
    bdf8:	20 91 03 45 	lds	r18, 0x4503	; 0x804503 <k197ButtonCluster::checkFifoChanges()::oldsize>
    bdfc:	30 91 04 45 	lds	r19, 0x4504	; 0x804504 <k197ButtonCluster::checkFifoChanges()::oldsize+0x1>
    be00:	82 17       	cp	r24, r18
    be02:	93 07       	cpc	r25, r19
    be04:	69 f0       	breq	.+26     	; 0xbe20 <main+0x12e>
    be06:	80 eb       	ldi	r24, 0xB0	; 176
    be08:	93 e4       	ldi	r25, 0x43	; 67
    be0a:	0e 94 9a 50 	call	0xa134	; 0xa134 <dumpFifoStatus(char const*)>
    be0e:	80 91 72 45 	lds	r24, 0x4572	; 0x804572 <fifo_size>
    be12:	08 2e       	mov	r0, r24
    be14:	00 0c       	add	r0, r0
    be16:	99 0b       	sbc	r25, r25
    be18:	80 93 03 45 	sts	0x4503, r24	; 0x804503 <k197ButtonCluster::checkFifoChanges()::oldsize>
    be1c:	90 93 04 45 	sts	0x4504, r25	; 0x804504 <k197ButtonCluster::checkFifoChanges()::oldsize+0x1>
    be20:	78 94       	sei
loop():
    be22:	0e 94 c2 31 	call	0x6384	; 0x6384 <micros>
    be26:	60 93 87 45 	sts	0x4587, r22	; 0x804587 <looptimer>
    be2a:	70 93 88 45 	sts	0x4588, r23	; 0x804588 <looptimer+0x1>
    be2e:	80 93 89 45 	sts	0x4589, r24	; 0x804589 <looptimer+0x2>
    be32:	90 93 8a 45 	sts	0x458A, r25	; 0x80458a <looptimer+0x3>
    be36:	87 ec       	ldi	r24, 0xC7	; 199
    be38:	95 e4       	ldi	r25, 0x45	; 69
    be3a:	0e 94 93 30 	call	0x6126	; 0x6126 <HardwareSerial::available()>
    be3e:	89 2b       	or	r24, r25
    be40:	09 f4       	brne	.+2      	; 0xbe44 <main+0x152>
    be42:	47 c0       	rjmp	.+142    	; 0xbed2 <main+0x1e0>
readBytesUntil():
    be44:	81 e4       	ldi	r24, 0x41	; 65
    be46:	95 e4       	ldi	r25, 0x45	; 69
    be48:	0e 94 38 30 	call	0x6070	; 0x6070 <Stream::readBytesUntil(char, char*, unsigned int) [clone .part.0] [clone .constprop.114]>
handleSerial():
    be4c:	fc 01       	movw	r30, r24
    be4e:	ef 5b       	subi	r30, 0xBF	; 191
    be50:	fa 4b       	sbci	r31, 0xBA	; 186
    be52:	10 82       	st	Z, r1
    be54:	89 2b       	or	r24, r25
    be56:	09 f4       	brne	.+2      	; 0xbe5a <main+0x168>
    be58:	3c c0       	rjmp	.+120    	; 0xbed2 <main+0x1e0>
    be5a:	6b ef       	ldi	r22, 0xFB	; 251
    be5c:	78 e0       	ldi	r23, 0x08	; 8
    be5e:	81 e4       	ldi	r24, 0x41	; 65
    be60:	95 e4       	ldi	r25, 0x45	; 69
    be62:	0e 94 60 71 	call	0xe2c0	; 0xe2c0 <strcasecmp_P>
    be66:	89 2b       	or	r24, r25
    be68:	19 f4       	brne	.+6      	; 0xbe70 <main+0x17e>
printError():
    be6a:	0e 94 69 4e 	call	0x9cd2	; 0x9cd2 <printHelp()>
    be6e:	31 c0       	rjmp	.+98     	; 0xbed2 <main+0x1e0>
handleSerial():
    be70:	67 ef       	ldi	r22, 0xF7	; 247
    be72:	78 e0       	ldi	r23, 0x08	; 8
    be74:	81 e4       	ldi	r24, 0x41	; 65
    be76:	95 e4       	ldi	r25, 0x45	; 69
    be78:	0e 94 60 71 	call	0xe2c0	; 0xe2c0 <strcasecmp_P>
    be7c:	89 2b       	or	r24, r25
    be7e:	91 f4       	brne	.+36     	; 0xbea4 <main+0x1b2>
    be80:	60 ee       	ldi	r22, 0xE0	; 224
    be82:	78 e0       	ldi	r23, 0x08	; 8
    be84:	87 ec       	ldi	r24, 0xC7	; 199
    be86:	95 e4       	ldi	r25, 0x45	; 69
    be88:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    be8c:	87 ec       	ldi	r24, 0xC7	; 199
    be8e:	95 e4       	ldi	r25, 0x45	; 69
    be90:	0e 94 09 31 	call	0x6212	; 0x6212 <HardwareSerial::flush()>
    be94:	88 ed       	ldi	r24, 0xD8	; 216
    be96:	21 e1       	ldi	r18, 0x11	; 17
    be98:	30 e0       	ldi	r19, 0x00	; 0
    be9a:	84 bf       	out	0x34, r24	; 52
    be9c:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__TEXT_REGION_LENGTH__+0x7e0100>
    bea0:	a8 95       	wdr
    bea2:	fe cf       	rjmp	.-4      	; 0xbea0 <main+0x1ae>
    bea4:	6c ed       	ldi	r22, 0xDC	; 220
    bea6:	78 e0       	ldi	r23, 0x08	; 8
    bea8:	81 e4       	ldi	r24, 0x41	; 65
    beaa:	95 e4       	ldi	r25, 0x45	; 69
    beac:	0e 94 60 71 	call	0xe2c0	; 0xe2c0 <strcasecmp_P>
    beb0:	89 2b       	or	r24, r25
    beb2:	71 f5       	brne	.+92     	; 0xbf10 <main+0x21e>
    beb4:	6b ec       	ldi	r22, 0xCB	; 203
    beb6:	78 e0       	ldi	r23, 0x08	; 8
    beb8:	87 ec       	ldi	r24, 0xC7	; 199
    beba:	95 e4       	ldi	r25, 0x45	; 69
    bebc:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    bec0:	87 ec       	ldi	r24, 0xC7	; 199
    bec2:	95 e4       	ldi	r25, 0x45	; 69
    bec4:	0e 94 09 31 	call	0x6212	; 0x6212 <HardwareSerial::flush()>
    bec8:	88 ed       	ldi	r24, 0xD8	; 216
    beca:	91 e0       	ldi	r25, 0x01	; 1
    becc:	84 bf       	out	0x34, r24	; 52
    bece:	90 93 41 00 	sts	0x0041, r25	; 0x800041 <__TEXT_REGION_LENGTH__+0x7e0041>
loop():
    bed2:	e0 9b       	sbis	0x1c, 0	; 28
    bed4:	8f c6       	rjmp	.+3358   	; 0xcbf4 <main+0xf02>
getNewData():
    bed6:	e0 9b       	sbis	0x1c, 0	; 28
    bed8:	fe cf       	rjmp	.-4      	; 0xbed6 <main+0x1e4>
    beda:	82 e1       	ldi	r24, 0x12	; 18
    bedc:	ef e5       	ldi	r30, 0x5F	; 95
    bede:	f5 e4       	ldi	r31, 0x45	; 69
    bee0:	a5 e7       	ldi	r26, 0x75	; 117
    bee2:	b5 e4       	ldi	r27, 0x45	; 69
    bee4:	01 90       	ld	r0, Z+
    bee6:	0d 92       	st	X+, r0
    bee8:	8a 95       	dec	r24
    beea:	e1 f7       	brne	.-8      	; 0xbee4 <main+0x1f2>
    beec:	e0 98       	cbi	0x1c, 0	; 28
    beee:	1d b3       	in	r17, 0x1d	; 29
    bef0:	1d 8b       	std	Y+21, r17	; 0x15
    bef2:	1d ba       	out	0x1d, r1	; 29
getNewReading():
    bef4:	19 30       	cpi	r17, 0x09	; 9
    bef6:	09 f0       	breq	.+2      	; 0xbefa <main+0x208>
    bef8:	a7 c1       	rjmp	.+846    	; 0xc248 <main+0x556>
    befa:	80 91 75 45 	lds	r24, 0x4575	; 0x804575 <DMMReading>
    befe:	80 93 73 52 	sts	0x5273, r24	; 0x805273 <k197dev+0xe>
    bf02:	2d 89       	ldd	r18, Y+21	; 0x15
    bf04:	28 30       	cpi	r18, 0x08	; 8
    bf06:	08 f0       	brcs	.+2      	; 0xbf0a <main+0x218>
    bf08:	b0 c1       	rjmp	.+864    	; 0xc26a <main+0x578>
    bf0a:	10 92 74 52 	sts	0x5274, r1	; 0x805274 <k197dev+0xf>
    bf0e:	b4 c1       	rjmp	.+872    	; 0xc278 <main+0x586>
handleSerial():
    bf10:	66 ec       	ldi	r22, 0xC6	; 198
    bf12:	78 e0       	ldi	r23, 0x08	; 8
    bf14:	81 e4       	ldi	r24, 0x41	; 65
    bf16:	95 e4       	ldi	r25, 0x45	; 69
    bf18:	0e 94 60 71 	call	0xe2c0	; 0xe2c0 <strcasecmp_P>
    bf1c:	89 2b       	or	r24, r25
    bf1e:	69 f4       	brne	.+26     	; 0xbf3a <main+0x248>
    bf20:	62 eb       	ldi	r22, 0xB2	; 178
    bf22:	78 e0       	ldi	r23, 0x08	; 8
    bf24:	87 ec       	ldi	r24, 0xC7	; 199
    bf26:	95 e4       	ldi	r25, 0x45	; 69
    bf28:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    bf2c:	87 ec       	ldi	r24, 0xC7	; 199
    bf2e:	95 e4       	ldi	r25, 0x45	; 69
    bf30:	0e 94 09 31 	call	0x6212	; 0x6212 <HardwareSerial::flush()>
    bf34:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>
    bf38:	cc cf       	rjmp	.-104    	; 0xbed2 <main+0x1e0>
    bf3a:	6d ea       	ldi	r22, 0xAD	; 173
    bf3c:	78 e0       	ldi	r23, 0x08	; 8
    bf3e:	81 e4       	ldi	r24, 0x41	; 65
    bf40:	95 e4       	ldi	r25, 0x45	; 69
    bf42:	0e 94 60 71 	call	0xe2c0	; 0xe2c0 <strcasecmp_P>
    bf46:	89 2b       	or	r24, r25
    bf48:	59 f4       	brne	.+22     	; 0xbf60 <main+0x26e>
    bf4a:	0e 94 92 4c 	call	0x9924	; 0x9924 <dxUtilClass::checkVoltages(bool) [clone .constprop.151]>
    bf4e:	6a ea       	ldi	r22, 0xAA	; 170
    bf50:	78 e0       	ldi	r23, 0x08	; 8
    bf52:	8e ed       	ldi	r24, 0xDE	; 222
    bf54:	97 e4       	ldi	r25, 0x47	; 71
    bf56:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    bf5a:	0e 94 76 4c 	call	0x98ec	; 0x98ec <dxUtilClass::checkTemperature(bool) [clone .constprop.156]>
    bf5e:	b9 cf       	rjmp	.-142    	; 0xbed2 <main+0x1e0>
    bf60:	66 ea       	ldi	r22, 0xA6	; 166
    bf62:	78 e0       	ldi	r23, 0x08	; 8
    bf64:	81 e4       	ldi	r24, 0x41	; 65
    bf66:	95 e4       	ldi	r25, 0x45	; 69
    bf68:	0e 94 60 71 	call	0xe2c0	; 0xe2c0 <strcasecmp_P>
    bf6c:	89 2b       	or	r24, r25
    bf6e:	59 f4       	brne	.+22     	; 0xbf86 <main+0x294>
    bf70:	80 91 74 45 	lds	r24, 0x4574	; 0x804574 <msg_printout>
    bf74:	88 23       	and	r24, r24
    bf76:	19 f0       	breq	.+6      	; 0xbf7e <main+0x28c>
    bf78:	10 92 74 45 	sts	0x4574, r1	; 0x804574 <msg_printout>
    bf7c:	aa cf       	rjmp	.-172    	; 0xbed2 <main+0x1e0>
    bf7e:	81 e0       	ldi	r24, 0x01	; 1
    bf80:	80 93 74 45 	sts	0x4574, r24	; 0x804574 <msg_printout>
    bf84:	a6 cf       	rjmp	.-180    	; 0xbed2 <main+0x1e0>
    bf86:	62 ea       	ldi	r22, 0xA2	; 162
    bf88:	78 e0       	ldi	r23, 0x08	; 8
    bf8a:	81 e4       	ldi	r24, 0x41	; 65
    bf8c:	95 e4       	ldi	r25, 0x45	; 69
    bf8e:	0e 94 60 71 	call	0xe2c0	; 0xe2c0 <strcasecmp_P>
    bf92:	89 2b       	or	r24, r25
    bf94:	51 f4       	brne	.+20     	; 0xbfaa <main+0x2b8>
cmdLog():
    bf96:	80 91 20 51 	lds	r24, 0x5120	; 0x805120 <logEnable+0x6>
    bf9a:	91 e0       	ldi	r25, 0x01	; 1
    bf9c:	89 27       	eor	r24, r25
setLogging():
    bf9e:	11 f4       	brne	.+4      	; 0xbfa4 <main+0x2b2>
    bfa0:	10 92 43 52 	sts	0x5243, r1	; 0x805243 <uiman+0xa>
setValue():
    bfa4:	80 93 20 51 	sts	0x5120, r24	; 0x805120 <logEnable+0x6>
    bfa8:	94 cf       	rjmp	.-216    	; 0xbed2 <main+0x1e0>
handleSerial():
    bfaa:	69 e9       	ldi	r22, 0x99	; 153
    bfac:	78 e0       	ldi	r23, 0x08	; 8
    bfae:	81 e4       	ldi	r24, 0x41	; 65
    bfb0:	95 e4       	ldi	r25, 0x45	; 69
    bfb2:	0e 94 60 71 	call	0xe2c0	; 0xe2c0 <strcasecmp_P>
    bfb6:	89 2b       	or	r24, r25
    bfb8:	31 f5       	brne	.+76     	; 0xc006 <main+0x314>
readBytesUntil():
    bfba:	83 e2       	ldi	r24, 0x23	; 35
    bfbc:	95 e4       	ldi	r25, 0x45	; 69
    bfbe:	0e 94 38 30 	call	0x6070	; 0x6070 <Stream::readBytesUntil(char, char*, unsigned int) [clone .part.0] [clone .constprop.114]>
cmdContrast():
    bfc2:	fc 01       	movw	r30, r24
    bfc4:	ed 5d       	subi	r30, 0xDD	; 221
    bfc6:	fa 4b       	sbci	r31, 0xBA	; 186
    bfc8:	10 82       	st	Z, r1
    bfca:	65 e7       	ldi	r22, 0x75	; 117
    bfcc:	78 e0       	ldi	r23, 0x08	; 8
    bfce:	89 2b       	or	r24, r25
    bfd0:	79 f1       	breq	.+94     	; 0xc030 <main+0x33e>
    bfd2:	83 e2       	ldi	r24, 0x23	; 35
    bfd4:	95 e4       	ldi	r25, 0x45	; 69
    bfd6:	0e 94 43 71 	call	0xe286	; 0xe286 <atoi>
    bfda:	18 2f       	mov	r17, r24
    bfdc:	6b e8       	ldi	r22, 0x8B	; 139
    bfde:	78 e0       	ldi	r23, 0x08	; 8
    bfe0:	87 ec       	ldi	r24, 0xC7	; 199
    bfe2:	95 e4       	ldi	r25, 0x45	; 69
    bfe4:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    bfe8:	61 2f       	mov	r22, r17
    bfea:	87 ec       	ldi	r24, 0xC7	; 199
    bfec:	95 e4       	ldi	r25, 0x45	; 69
    bfee:	0e 94 9d 4a 	call	0x953a	; 0x953a <Print::println(unsigned char, int) [clone .constprop.116]>
    bff2:	87 ec       	ldi	r24, 0xC7	; 199
    bff4:	95 e4       	ldi	r25, 0x45	; 69
    bff6:	0e 94 09 31 	call	0x6212	; 0x6212 <HardwareSerial::flush()>
_ZN4U8G211setContrastEh():
    bffa:	81 2f       	mov	r24, r17
    bffc:	0e 94 ca 2d 	call	0x5b94	; 0x5b94 <u8x8_SetContrast.constprop.148>
setValue():
    c000:	10 93 40 51 	sts	0x5140, r17	; 0x805140 <contrastCtrl+0x7>
    c004:	66 cf       	rjmp	.-308    	; 0xbed2 <main+0x1e0>
handleSerial():
    c006:	67 e9       	ldi	r22, 0x97	; 151
    c008:	78 e0       	ldi	r23, 0x08	; 8
    c00a:	81 e4       	ldi	r24, 0x41	; 65
    c00c:	95 e4       	ldi	r25, 0x45	; 69
    c00e:	0e 94 60 71 	call	0xe2c0	; 0xe2c0 <strcasecmp_P>
    c012:	89 2b       	or	r24, r25
    c014:	09 f0       	breq	.+2      	; 0xc018 <main+0x326>
    c016:	02 c1       	rjmp	.+516    	; 0xc21c <main+0x52a>
readBytesUntil():
    c018:	85 e0       	ldi	r24, 0x05	; 5
    c01a:	95 e4       	ldi	r25, 0x45	; 69
    c01c:	0e 94 38 30 	call	0x6070	; 0x6070 <Stream::readBytesUntil(char, char*, unsigned int) [clone .part.0] [clone .constprop.114]>
cmdTmpScaling():
    c020:	fc 01       	movw	r30, r24
    c022:	eb 5f       	subi	r30, 0xFB	; 251
    c024:	fa 4b       	sbci	r31, 0xBA	; 186
    c026:	10 82       	st	Z, r1
    c028:	89 2b       	or	r24, r25
    c02a:	59 f4       	brne	.+22     	; 0xc042 <main+0x350>
    c02c:	69 e0       	ldi	r22, 0x09	; 9
    c02e:	78 e0       	ldi	r23, 0x08	; 8
    c030:	87 ec       	ldi	r24, 0xC7	; 199
    c032:	95 e4       	ldi	r25, 0x45	; 69
    c034:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    c038:	87 ec       	ldi	r24, 0xC7	; 199
    c03a:	95 e4       	ldi	r25, 0x45	; 69
    c03c:	0e 94 09 31 	call	0x6212	; 0x6212 <HardwareSerial::flush()>
    c040:	48 cf       	rjmp	.-368    	; 0xbed2 <main+0x1e0>
    c042:	85 e0       	ldi	r24, 0x05	; 5
    c044:	95 e4       	ldi	r25, 0x45	; 69
    c046:	0e 94 40 71 	call	0xe280	; 0xe280 <atof>
    c04a:	6b 01       	movw	r12, r22
    c04c:	7c 01       	movw	r14, r24
    c04e:	62 e7       	ldi	r22, 0x72	; 114
    c050:	78 e0       	ldi	r23, 0x08	; 8
    c052:	87 ec       	ldi	r24, 0xC7	; 199
    c054:	95 e4       	ldi	r25, 0x45	; 69
    c056:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c05a:	b7 01       	movw	r22, r14
    c05c:	a6 01       	movw	r20, r12
    c05e:	87 ec       	ldi	r24, 0xC7	; 199
    c060:	95 e4       	ldi	r25, 0x45	; 69
    c062:	0e 94 de 4c 	call	0x99bc	; 0x99bc <Print::println(double, int) [clone .constprop.112]>
    c066:	87 ec       	ldi	r24, 0xC7	; 199
    c068:	95 e4       	ldi	r25, 0x45	; 69
    c06a:	0e 94 09 31 	call	0x6212	; 0x6212 <HardwareSerial::flush()>
_ZN9debugUtil12profileStartEj.isra.17():
    c06e:	0e 94 c2 31 	call	0x6384	; 0x6384 <micros>
    c072:	60 93 e4 47 	sts	0x47E4, r22	; 0x8047e4 <DebugOut+0x6>
    c076:	70 93 e5 47 	sts	0x47E5, r23	; 0x8047e5 <DebugOut+0x7>
    c07a:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <DebugOut+0x8>
    c07e:	90 93 e7 47 	sts	0x47E7, r25	; 0x8047e7 <DebugOut+0x9>
_ZN20k197graph_label_typeC2Ev():
    c082:	1a 86       	std	Y+10, r1	; 0x0a
    c084:	1b 86       	std	Y+11, r1	; 0x0b
troubleshootAutoscale():
    c086:	b7 01       	movw	r22, r14
    c088:	a6 01       	movw	r20, r12
    c08a:	ce 01       	movw	r24, r28
    c08c:	0a 96       	adiw	r24, 0x0a	; 10
    c08e:	0e 94 8a 45 	call	0x8b14	; 0x8b14 <k197graph_label_type::setLog10Ceiling(float)>
    c092:	b7 01       	movw	r22, r14
    c094:	a6 01       	movw	r20, r12
    c096:	ce 01       	movw	r24, r28
    c098:	0a 96       	adiw	r24, 0x0a	; 10
    c09a:	0e 94 c4 44 	call	0x8988	; 0x8988 <k197graph_label_type::setScaleMultiplierDown(float)>
    c09e:	ce 01       	movw	r24, r28
    c0a0:	0a 96       	adiw	r24, 0x0a	; 10
    c0a2:	0e 94 cf 45 	call	0x8b9e	; 0x8b9e <k197graph_label_type::getValue() const>
    c0a6:	2b 01       	movw	r4, r22
    c0a8:	3c 01       	movw	r6, r24
_ZN20k197graph_label_typeC2Ev():
    c0aa:	19 82       	std	Y+1, r1	; 0x01
    c0ac:	1a 82       	std	Y+2, r1	; 0x02
troubleshootAutoscale():
    c0ae:	b7 01       	movw	r22, r14
    c0b0:	a6 01       	movw	r20, r12
    c0b2:	ce 01       	movw	r24, r28
    c0b4:	01 96       	adiw	r24, 0x01	; 1
    c0b6:	0e 94 8a 45 	call	0x8b14	; 0x8b14 <k197graph_label_type::setLog10Ceiling(float)>
    c0ba:	b7 01       	movw	r22, r14
    c0bc:	a6 01       	movw	r20, r12
    c0be:	ce 01       	movw	r24, r28
    c0c0:	01 96       	adiw	r24, 0x01	; 1
    c0c2:	0e 94 27 45 	call	0x8a4e	; 0x8a4e <k197graph_label_type::setScaleMultiplierUp(float)>
    c0c6:	ce 01       	movw	r24, r28
    c0c8:	01 96       	adiw	r24, 0x01	; 1
    c0ca:	0e 94 cf 45 	call	0x8b9e	; 0x8b9e <k197graph_label_type::getValue() const>
    c0ce:	4b 01       	movw	r8, r22
    c0d0:	5c 01       	movw	r10, r24
_ZN9debugUtil11profileStopEj.isra.18():
    c0d2:	0e 94 c2 31 	call	0x6384	; 0x6384 <micros>
    c0d6:	00 91 e4 47 	lds	r16, 0x47E4	; 0x8047e4 <DebugOut+0x6>
    c0da:	10 91 e5 47 	lds	r17, 0x47E5	; 0x8047e5 <DebugOut+0x7>
    c0de:	20 91 e6 47 	lds	r18, 0x47E6	; 0x8047e6 <DebugOut+0x8>
    c0e2:	30 91 e7 47 	lds	r19, 0x47E7	; 0x8047e7 <DebugOut+0x9>
    c0e6:	60 1b       	sub	r22, r16
    c0e8:	71 0b       	sbc	r23, r17
    c0ea:	82 0b       	sbc	r24, r18
    c0ec:	93 0b       	sbc	r25, r19
    c0ee:	60 93 e4 47 	sts	0x47E4, r22	; 0x8047e4 <DebugOut+0x6>
    c0f2:	70 93 e5 47 	sts	0x47E5, r23	; 0x8047e5 <DebugOut+0x7>
    c0f6:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <DebugOut+0x8>
    c0fa:	90 93 e7 47 	sts	0x47E7, r25	; 0x8047e7 <DebugOut+0x9>
_ZN9debugUtil14profilePrintlnEjPK19__FlashStringHelper():
    c0fe:	6c e4       	ldi	r22, 0x4C	; 76
    c100:	78 e0       	ldi	r23, 0x08	; 8
    c102:	8e ed       	ldi	r24, 0xDE	; 222
    c104:	97 e4       	ldi	r25, 0x47	; 71
    c106:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c10a:	6d e3       	ldi	r22, 0x3D	; 61
    c10c:	8e ed       	ldi	r24, 0xDE	; 222
    c10e:	97 e4       	ldi	r25, 0x47	; 71
    c110:	0e 94 bd 2f 	call	0x5f7a	; 0x5f7a <Print::print(char)>
print():
    c114:	40 91 e4 47 	lds	r20, 0x47E4	; 0x8047e4 <DebugOut+0x6>
    c118:	50 91 e5 47 	lds	r21, 0x47E5	; 0x8047e5 <DebugOut+0x7>
    c11c:	60 91 e6 47 	lds	r22, 0x47E6	; 0x8047e6 <DebugOut+0x8>
    c120:	70 91 e7 47 	lds	r23, 0x47E7	; 0x8047e7 <DebugOut+0x9>
    c124:	2a e0       	ldi	r18, 0x0A	; 10
    c126:	8e ed       	ldi	r24, 0xDE	; 222
    c128:	97 e4       	ldi	r25, 0x47	; 71
    c12a:	0e 94 52 4a 	call	0x94a4	; 0x94a4 <Print::printNumber(unsigned long, unsigned char)>
_ZN9debugUtil14profilePrintlnEjPK19__FlashStringHelper():
    c12e:	6f e1       	ldi	r22, 0x1F	; 31
    c130:	78 e0       	ldi	r23, 0x08	; 8
    c132:	8e ed       	ldi	r24, 0xDE	; 222
    c134:	97 e4       	ldi	r25, 0x47	; 71
    c136:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
troubleshootAutoscale():
    c13a:	63 e4       	ldi	r22, 0x43	; 67
    c13c:	78 e0       	ldi	r23, 0x08	; 8
    c13e:	8e ed       	ldi	r24, 0xDE	; 222
    c140:	97 e4       	ldi	r25, 0x47	; 71
    c142:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c146:	b7 01       	movw	r22, r14
    c148:	a6 01       	movw	r20, r12
    c14a:	8e ed       	ldi	r24, 0xDE	; 222
    c14c:	97 e4       	ldi	r25, 0x47	; 71
    c14e:	0e 94 de 4c 	call	0x99bc	; 0x99bc <Print::println(double, int) [clone .constprop.112]>
    c152:	6b e3       	ldi	r22, 0x3B	; 59
    c154:	78 e0       	ldi	r23, 0x08	; 8
    c156:	8e ed       	ldi	r24, 0xDE	; 222
    c158:	97 e4       	ldi	r25, 0x47	; 71
    c15a:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c15e:	6b 85       	ldd	r22, Y+11	; 0x0b
    c160:	06 2e       	mov	r0, r22
    c162:	00 0c       	add	r0, r0
    c164:	77 0b       	sbc	r23, r23
    c166:	4a e0       	ldi	r20, 0x0A	; 10
    c168:	50 e0       	ldi	r21, 0x00	; 0
    c16a:	8e ed       	ldi	r24, 0xDE	; 222
    c16c:	97 e4       	ldi	r25, 0x47	; 71
    c16e:	0e 94 ef 4c 	call	0x99de	; 0x99de <Print::print(int, int)>
    c172:	69 e3       	ldi	r22, 0x39	; 57
    c174:	78 e0       	ldi	r23, 0x08	; 8
    c176:	8e ed       	ldi	r24, 0xDE	; 222
    c178:	97 e4       	ldi	r25, 0x47	; 71
    c17a:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c17e:	6a 85       	ldd	r22, Y+10	; 0x0a
    c180:	06 2e       	mov	r0, r22
    c182:	00 0c       	add	r0, r0
    c184:	77 0b       	sbc	r23, r23
    c186:	4a e0       	ldi	r20, 0x0A	; 10
    c188:	50 e0       	ldi	r21, 0x00	; 0
    c18a:	8e ed       	ldi	r24, 0xDE	; 222
    c18c:	97 e4       	ldi	r25, 0x47	; 71
    c18e:	0e 94 ef 4c 	call	0x99de	; 0x99de <Print::print(int, int)>
    c192:	67 e3       	ldi	r22, 0x37	; 55
    c194:	78 e0       	ldi	r23, 0x08	; 8
    c196:	8e ed       	ldi	r24, 0xDE	; 222
    c198:	97 e4       	ldi	r25, 0x47	; 71
    c19a:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c19e:	b3 01       	movw	r22, r6
    c1a0:	a2 01       	movw	r20, r4
    c1a2:	8e ed       	ldi	r24, 0xDE	; 222
    c1a4:	97 e4       	ldi	r25, 0x47	; 71
    c1a6:	0e 94 de 4c 	call	0x99bc	; 0x99bc <Print::println(double, int) [clone .constprop.112]>
    c1aa:	6e e2       	ldi	r22, 0x2E	; 46
    c1ac:	78 e0       	ldi	r23, 0x08	; 8
    c1ae:	8e ed       	ldi	r24, 0xDE	; 222
    c1b0:	97 e4       	ldi	r25, 0x47	; 71
    c1b2:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c1b6:	b7 01       	movw	r22, r14
    c1b8:	a6 01       	movw	r20, r12
    c1ba:	8e ed       	ldi	r24, 0xDE	; 222
    c1bc:	97 e4       	ldi	r25, 0x47	; 71
    c1be:	0e 94 de 4c 	call	0x99bc	; 0x99bc <Print::println(double, int) [clone .constprop.112]>
    c1c2:	66 e2       	ldi	r22, 0x26	; 38
    c1c4:	78 e0       	ldi	r23, 0x08	; 8
    c1c6:	8e ed       	ldi	r24, 0xDE	; 222
    c1c8:	97 e4       	ldi	r25, 0x47	; 71
    c1ca:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c1ce:	6a 81       	ldd	r22, Y+2	; 0x02
    c1d0:	06 2e       	mov	r0, r22
    c1d2:	00 0c       	add	r0, r0
    c1d4:	77 0b       	sbc	r23, r23
    c1d6:	4a e0       	ldi	r20, 0x0A	; 10
    c1d8:	50 e0       	ldi	r21, 0x00	; 0
    c1da:	8e ed       	ldi	r24, 0xDE	; 222
    c1dc:	97 e4       	ldi	r25, 0x47	; 71
    c1de:	0e 94 ef 4c 	call	0x99de	; 0x99de <Print::print(int, int)>
    c1e2:	64 e2       	ldi	r22, 0x24	; 36
    c1e4:	78 e0       	ldi	r23, 0x08	; 8
    c1e6:	8e ed       	ldi	r24, 0xDE	; 222
    c1e8:	97 e4       	ldi	r25, 0x47	; 71
    c1ea:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c1ee:	69 81       	ldd	r22, Y+1	; 0x01
    c1f0:	06 2e       	mov	r0, r22
    c1f2:	00 0c       	add	r0, r0
    c1f4:	77 0b       	sbc	r23, r23
    c1f6:	4a e0       	ldi	r20, 0x0A	; 10
    c1f8:	50 e0       	ldi	r21, 0x00	; 0
    c1fa:	8e ed       	ldi	r24, 0xDE	; 222
    c1fc:	97 e4       	ldi	r25, 0x47	; 71
    c1fe:	0e 94 ef 4c 	call	0x99de	; 0x99de <Print::print(int, int)>
    c202:	62 e2       	ldi	r22, 0x22	; 34
    c204:	78 e0       	ldi	r23, 0x08	; 8
    c206:	8e ed       	ldi	r24, 0xDE	; 222
    c208:	97 e4       	ldi	r25, 0x47	; 71
    c20a:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c20e:	b5 01       	movw	r22, r10
    c210:	a4 01       	movw	r20, r8
    c212:	8e ed       	ldi	r24, 0xDE	; 222
    c214:	97 e4       	ldi	r25, 0x47	; 71
    c216:	0e 94 de 4c 	call	0x99bc	; 0x99bc <Print::println(double, int) [clone .constprop.112]>
    c21a:	5b ce       	rjmp	.-842    	; 0xbed2 <main+0x1e0>
handleSerial():
    c21c:	65 e9       	ldi	r22, 0x95	; 149
    c21e:	78 e0       	ldi	r23, 0x08	; 8
    c220:	81 e4       	ldi	r24, 0x41	; 65
    c222:	95 e4       	ldi	r25, 0x45	; 69
    c224:	0e 94 60 71 	call	0xe2c0	; 0xe2c0 <strcasecmp_P>
    c228:	89 2b       	or	r24, r25
    c22a:	09 f4       	brne	.+2      	; 0xc22e <main+0x53c>
    c22c:	52 ce       	rjmp	.-860    	; 0xbed2 <main+0x1e0>
printError():
    c22e:	67 ef       	ldi	r22, 0xF7	; 247
    c230:	77 e0       	ldi	r23, 0x07	; 7
    c232:	87 ec       	ldi	r24, 0xC7	; 199
    c234:	95 e4       	ldi	r25, 0x45	; 69
    c236:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c23a:	61 e4       	ldi	r22, 0x41	; 65
    c23c:	75 e4       	ldi	r23, 0x45	; 69
    c23e:	87 ec       	ldi	r24, 0xC7	; 199
    c240:	95 e4       	ldi	r25, 0x45	; 69
    c242:	0e 94 b8 4e 	call	0x9d70	; 0x9d70 <Print::println(char const*)>
    c246:	11 ce       	rjmp	.-990    	; 0xbe6a <main+0x178>
getNewReading():
    c248:	68 ea       	ldi	r22, 0xA8	; 168
    c24a:	79 e0       	ldi	r23, 0x09	; 9
    c24c:	8e ed       	ldi	r24, 0xDE	; 222
    c24e:	97 e4       	ldi	r25, 0x47	; 71
    c250:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c254:	6d 89       	ldd	r22, Y+21	; 0x15
    c256:	8e ed       	ldi	r24, 0xDE	; 222
    c258:	97 e4       	ldi	r25, 0x47	; 71
    c25a:	0e 94 9d 4a 	call	0x953a	; 0x953a <Print::println(unsigned char, int) [clone .constprop.116]>
    c25e:	3d 89       	ldd	r19, Y+21	; 0x15
    c260:	31 11       	cpse	r19, r1
    c262:	4b ce       	rjmp	.-874    	; 0xbefa <main+0x208>
    c264:	10 92 73 52 	sts	0x5273, r1	; 0x805273 <k197dev+0xe>
    c268:	50 ce       	rjmp	.-864    	; 0xbf0a <main+0x218>
    c26a:	80 91 7c 45 	lds	r24, 0x457C	; 0x80457c <DMMReading+0x7>
    c26e:	80 93 74 52 	sts	0x5274, r24	; 0x805274 <k197dev+0xf>
    c272:	4d 89       	ldd	r20, Y+21	; 0x15
    c274:	48 30       	cpi	r20, 0x08	; 8
    c276:	19 f4       	brne	.+6      	; 0xc27e <main+0x58c>
    c278:	10 92 75 52 	sts	0x5275, r1	; 0x805275 <k197dev+0x10>
    c27c:	04 c0       	rjmp	.+8      	; 0xc286 <main+0x594>
    c27e:	80 91 7d 45 	lds	r24, 0x457D	; 0x80457d <DMMReading+0x8>
    c282:	80 93 75 52 	sts	0x5275, r24	; 0x805275 <k197dev+0x10>
    c286:	8e 01       	movw	r16, r28
    c288:	06 5f       	subi	r16, 0xF6	; 246
    c28a:	1f 4f       	sbci	r17, 0xFF	; 255
main():
    c28c:	58 01       	movw	r10, r16
    c28e:	68 01       	movw	r12, r16
getNewReading():
    c290:	d5 01       	movw	r26, r10
    c292:	1d 92       	st	X+, r1
    c294:	5d 01       	movw	r10, r26
    c296:	eb 89       	ldd	r30, Y+19	; 0x13
    c298:	fc 89       	ldd	r31, Y+20	; 0x14
    c29a:	ea 17       	cp	r30, r26
    c29c:	fb 07       	cpc	r31, r27
    c29e:	c1 f7       	brne	.-16     	; 0xc290 <main+0x59e>
    c2a0:	80 e2       	ldi	r24, 0x20	; 32
    c2a2:	80 93 66 52 	sts	0x5266, r24	; 0x805266 <k197dev+0x1>
    c2a6:	10 92 6d 52 	sts	0x526D, r1	; 0x80526d <k197dev+0x8>
    c2aa:	5d 89       	ldd	r21, Y+21	; 0x15
    c2ac:	51 11       	cpse	r21, r1
    c2ae:	03 c0       	rjmp	.+6      	; 0xc2b6 <main+0x5c4>
main():
    c2b0:	f1 2c       	mov	r15, r1
    c2b2:	e1 2c       	mov	r14, r1
    c2b4:	0b c0       	rjmp	.+22     	; 0xc2cc <main+0x5da>
getNewReading():
    c2b6:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    c2ba:	87 ff       	sbrs	r24, 7
    c2bc:	f9 cf       	rjmp	.-14     	; 0xc2b0 <main+0x5be>
    c2be:	8d e2       	ldi	r24, 0x2D	; 45
    c2c0:	80 93 66 52 	sts	0x5266, r24	; 0x805266 <k197dev+0x1>
    c2c4:	8a 87       	std	Y+10, r24	; 0x0a
main():
    c2c6:	ee 24       	eor	r14, r14
    c2c8:	e3 94       	inc	r14
    c2ca:	f1 2c       	mov	r15, r1
getNewReading():
    c2cc:	8d 89       	ldd	r24, Y+21	; 0x15
    c2ce:	88 30       	cpi	r24, 0x08	; 8
    c2d0:	08 f0       	brcs	.+2      	; 0xc2d4 <main+0x5e2>
    c2d2:	87 e0       	ldi	r24, 0x07	; 7
    c2d4:	28 2e       	mov	r2, r24
    c2d6:	31 2c       	mov	r3, r1
    c2d8:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
    c2dc:	82 60       	ori	r24, 0x02	; 2
    c2de:	80 93 65 52 	sts	0x5265, r24	; 0x805265 <k197dev>
    c2e2:	10 92 6e 52 	sts	0x526E, r1	; 0x80526e <k197dev+0x9>
    c2e6:	56 e7       	ldi	r21, 0x76	; 118
    c2e8:	65 2e       	mov	r6, r21
    c2ea:	55 e4       	ldi	r21, 0x45	; 69
    c2ec:	75 2e       	mov	r7, r21
    c2ee:	27 e6       	ldi	r18, 0x67	; 103
    c2f0:	32 e5       	ldi	r19, 0x52	; 82
    c2f2:	2f 8b       	std	Y+23, r18	; 0x17
    c2f4:	38 8f       	std	Y+24, r19	; 0x18
main():
    c2f6:	88 24       	eor	r8, r8
    c2f8:	83 94       	inc	r8
    c2fa:	91 2c       	mov	r9, r1
    c2fc:	41 2c       	mov	r4, r1
getNewReading():
    c2fe:	7e e2       	ldi	r23, 0x2E	; 46
    c300:	57 2e       	mov	r5, r23
    c302:	82 14       	cp	r8, r2
    c304:	93 04       	cpc	r9, r3
    c306:	0c f0       	brlt	.+2      	; 0xc30a <main+0x618>
    c308:	53 c0       	rjmp	.+166    	; 0xc3b0 <main+0x6be>
    c30a:	d3 01       	movw	r26, r6
    c30c:	8c 91       	ld	r24, X
    c30e:	82 ff       	sbrs	r24, 2
    c310:	1c c0       	rjmp	.+56     	; 0xc34a <main+0x658>
    c312:	20 91 6e 52 	lds	r18, 0x526E	; 0x80526e <k197dev+0x9>
    c316:	81 e0       	ldi	r24, 0x01	; 1
    c318:	90 e0       	ldi	r25, 0x00	; 0
    c31a:	a0 e0       	ldi	r26, 0x00	; 0
    c31c:	b0 e0       	ldi	r27, 0x00	; 0
    c31e:	08 2c       	mov	r0, r8
    c320:	04 c0       	rjmp	.+8      	; 0xc32a <main+0x638>
    c322:	88 0f       	add	r24, r24
    c324:	99 1f       	adc	r25, r25
    c326:	aa 1f       	adc	r26, r26
    c328:	bb 1f       	adc	r27, r27
    c32a:	0a 94       	dec	r0
    c32c:	d2 f7       	brpl	.-12     	; 0xc322 <main+0x630>
    c32e:	82 2b       	or	r24, r18
    c330:	80 93 6e 52 	sts	0x526E, r24	; 0x80526e <k197dev+0x9>
    c334:	43 94       	inc	r4
    c336:	b1 e0       	ldi	r27, 0x01	; 1
    c338:	4b 12       	cpse	r4, r27
    c33a:	33 c0       	rjmp	.+102    	; 0xc3a2 <main+0x6b0>
    c33c:	f8 01       	movw	r30, r16
    c33e:	ee 0d       	add	r30, r14
    c340:	ff 1d       	adc	r31, r15
    c342:	50 82       	st	Z, r5
main():
    c344:	f7 01       	movw	r30, r14
    c346:	31 96       	adiw	r30, 0x01	; 1
    c348:	7f 01       	movw	r14, r30
getNewReading():
    c34a:	d3 01       	movw	r26, r6
    c34c:	8d 91       	ld	r24, X+
    c34e:	3d 01       	movw	r6, r26
    c350:	e8 2f       	mov	r30, r24
    c352:	f0 e0       	ldi	r31, 0x00	; 0
    c354:	f5 95       	asr	r31
    c356:	e7 95       	ror	r30
    c358:	ec 77       	andi	r30, 0x7C	; 124
    c35a:	ff 27       	eor	r31, r31
    c35c:	83 70       	andi	r24, 0x03	; 3
    c35e:	e8 2b       	or	r30, r24
    c360:	ef 5e       	subi	r30, 0xEF	; 239
    c362:	f6 4f       	sbci	r31, 0xF6	; 246
    c364:	e4 91       	lpm	r30, Z
    c366:	af 89       	ldd	r26, Y+23	; 0x17
    c368:	b8 8d       	ldd	r27, Y+24	; 0x18
    c36a:	ed 93       	st	X+, r30
    c36c:	af 8b       	std	Y+23, r26	; 0x17
    c36e:	b8 8f       	std	Y+24, r27	; 0x18
    c370:	d8 01       	movw	r26, r16
    c372:	ae 0d       	add	r26, r14
    c374:	bf 1d       	adc	r27, r15
    c376:	ec 93       	st	X, r30
_Z7isDigiti():
    c378:	8e 2f       	mov	r24, r30
    c37a:	0e 2e       	mov	r0, r30
    c37c:	00 0c       	add	r0, r0
    c37e:	99 0b       	sbc	r25, r25
    c380:	c0 97       	sbiw	r24, 0x30	; 48
isDigitOrSpace():
    c382:	0a 97       	sbiw	r24, 0x0a	; 10
    c384:	38 f0       	brcs	.+14     	; 0xc394 <main+0x6a2>
    c386:	e0 32       	cpi	r30, 0x20	; 32
    c388:	29 f0       	breq	.+10     	; 0xc394 <main+0x6a2>
getNewReading():
    c38a:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
    c38e:	8d 7f       	andi	r24, 0xFD	; 253
    c390:	80 93 65 52 	sts	0x5265, r24	; 0x805265 <k197dev>
    c394:	bf ef       	ldi	r27, 0xFF	; 255
    c396:	eb 1a       	sub	r14, r27
    c398:	fb 0a       	sbc	r15, r27
    c39a:	ef ef       	ldi	r30, 0xFF	; 255
    c39c:	8e 1a       	sub	r8, r30
    c39e:	9e 0a       	sbc	r9, r30
    c3a0:	b0 cf       	rjmp	.-160    	; 0xc302 <main+0x610>
    c3a2:	61 e9       	ldi	r22, 0x91	; 145
    c3a4:	79 e0       	ldi	r23, 0x09	; 9
    c3a6:	8e ed       	ldi	r24, 0xDE	; 222
    c3a8:	97 e4       	ldi	r25, 0x47	; 71
    c3aa:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    c3ae:	cd cf       	rjmp	.-102    	; 0xc34a <main+0x658>
    c3b0:	f0 90 65 52 	lds	r15, 0x5265	; 0x805265 <k197dev>
    c3b4:	f1 fe       	sbrs	r15, 1
    c3b6:	70 c1       	rjmp	.+736    	; 0xc698 <main+0x9a6>
    c3b8:	c8 01       	movw	r24, r16
    c3ba:	0f 5f       	subi	r16, 0xFF	; 255
    c3bc:	1f 4f       	sbci	r17, 0xFF	; 255
getMsgValue():
    c3be:	dc 01       	movw	r26, r24
    c3c0:	2c 91       	ld	r18, X
    c3c2:	20 32       	cpi	r18, 0x20	; 32
    c3c4:	09 f4       	brne	.+2      	; 0xc3c8 <main+0x6d6>
    c3c6:	60 c1       	rjmp	.+704    	; 0xc688 <main+0x996>
    c3c8:	0e 94 40 71 	call	0xe280	; 0xe280 <atof>
getNewReading():
    c3cc:	60 93 6f 52 	sts	0x526F, r22	; 0x80526f <k197dev+0xa>
    c3d0:	70 93 70 52 	sts	0x5270, r23	; 0x805270 <k197dev+0xb>
    c3d4:	80 93 71 52 	sts	0x5271, r24	; 0x805271 <k197dev+0xc>
    c3d8:	90 93 72 52 	sts	0x5272, r25	; 0x805272 <k197dev+0xd>
    c3dc:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
    c3e0:	8b 7f       	andi	r24, 0xFB	; 251
    c3e2:	80 93 65 52 	sts	0x5265, r24	; 0x805265 <k197dev>
    c3e6:	0e 94 77 2f 	call	0x5eee	; 0x5eee <K197device::isTKModeActive() [clone .constprop.98]>
    c3ea:	88 23       	and	r24, r24
    c3ec:	09 f4       	brne	.+2      	; 0xc3f0 <main+0x6fe>
    c3ee:	4f c0       	rjmp	.+158    	; 0xc48e <main+0x79c>
    c3f0:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
    c3f4:	81 ff       	sbrs	r24, 1
    c3f6:	4b c0       	rjmp	.+150    	; 0xc48e <main+0x79c>
tkConvertV2C():
    c3f8:	82 fd       	sbrc	r24, 2
    c3fa:	49 c0       	rjmp	.+146    	; 0xc48e <main+0x79c>
getTCelsius():
    c3fc:	0e 94 6d 46 	call	0x8cda	; 0x8cda <dxUtilClass::getTKelvin() [clone .constprop.158]>
    c400:	23 e3       	ldi	r18, 0x33	; 51
    c402:	33 e9       	ldi	r19, 0x93	; 147
    c404:	48 e8       	ldi	r20, 0x88	; 136
    c406:	53 e4       	ldi	r21, 0x43	; 67
    c408:	0e 94 19 77 	call	0xee32	; 0xee32 <__subsf3>
    c40c:	4b 01       	movw	r8, r22
    c40e:	5c 01       	movw	r10, r24
tkConvertV2C():
    c410:	80 92 76 52 	sts	0x5276, r8	; 0x805276 <k197dev+0x11>
    c414:	90 92 77 52 	sts	0x5277, r9	; 0x805277 <k197dev+0x12>
    c418:	a0 92 78 52 	sts	0x5278, r10	; 0x805278 <k197dev+0x13>
    c41c:	b0 92 79 52 	sts	0x5279, r11	; 0x805279 <k197dev+0x14>
    c420:	26 e3       	ldi	r18, 0x36	; 54
    c422:	31 ed       	ldi	r19, 0xD1	; 209
    c424:	41 ec       	ldi	r20, 0xC1	; 193
    c426:	51 e4       	ldi	r21, 0x41	; 65
    c428:	60 91 6f 52 	lds	r22, 0x526F	; 0x80526f <k197dev+0xa>
    c42c:	70 91 70 52 	lds	r23, 0x5270	; 0x805270 <k197dev+0xb>
    c430:	80 91 71 52 	lds	r24, 0x5271	; 0x805271 <k197dev+0xc>
    c434:	90 91 72 52 	lds	r25, 0x5272	; 0x805272 <k197dev+0xd>
    c438:	0e 94 49 76 	call	0xec92	; 0xec92 <__mulsf3>
    c43c:	a5 01       	movw	r20, r10
    c43e:	94 01       	movw	r18, r8
    c440:	0e 94 1a 77 	call	0xee34	; 0xee34 <__addsf3>
    c444:	4b 01       	movw	r8, r22
    c446:	5c 01       	movw	r10, r24
    c448:	20 e0       	ldi	r18, 0x00	; 0
    c44a:	30 e8       	ldi	r19, 0x80	; 128
    c44c:	49 e0       	ldi	r20, 0x09	; 9
    c44e:	55 e4       	ldi	r21, 0x45	; 69
    c450:	0e 94 17 78 	call	0xf02e	; 0xf02e <__gesf2>
    c454:	18 16       	cp	r1, r24
    c456:	0c f0       	brlt	.+2      	; 0xc45a <main+0x768>
    c458:	4b c1       	rjmp	.+662    	; 0xc6f0 <main+0x9fe>
setOverrange():
    c45a:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
    c45e:	84 60       	ori	r24, 0x04	; 4
    c460:	80 93 65 52 	sts	0x5265, r24	; 0x805265 <k197dev>
    c464:	80 e2       	ldi	r24, 0x20	; 32
    c466:	80 93 66 52 	sts	0x5266, r24	; 0x805266 <k197dev+0x1>
    c46a:	80 93 67 52 	sts	0x5267, r24	; 0x805267 <k197dev+0x2>
    c46e:	80 93 68 52 	sts	0x5268, r24	; 0x805268 <k197dev+0x3>
    c472:	90 e3       	ldi	r25, 0x30	; 48
    c474:	90 93 69 52 	sts	0x5269, r25	; 0x805269 <k197dev+0x4>
    c478:	9c e4       	ldi	r25, 0x4C	; 76
    c47a:	90 93 6a 52 	sts	0x526A, r25	; 0x80526a <k197dev+0x5>
    c47e:	80 93 6b 52 	sts	0x526B, r24	; 0x80526b <k197dev+0x6>
    c482:	80 93 6c 52 	sts	0x526C, r24	; 0x80526c <k197dev+0x7>
    c486:	10 92 6d 52 	sts	0x526D, r1	; 0x80526d <k197dev+0x8>
tkConvertV2C():
    c48a:	10 92 6e 52 	sts	0x526E, r1	; 0x80526e <k197dev+0x9>
_ZN10K197device9isNumericEv():
    c48e:	10 91 65 52 	lds	r17, 0x5265	; 0x805265 <k197dev>
updateCache():
    c492:	11 ff       	sbrs	r17, 1
    c494:	c0 c0       	rjmp	.+384    	; 0xc616 <main+0x924>
    c496:	11 70       	andi	r17, 0x01	; 1
    c498:	e0 90 73 52 	lds	r14, 0x5273	; 0x805273 <k197dev+0xe>
    c49c:	f0 90 74 52 	lds	r15, 0x5274	; 0x805274 <k197dev+0xf>
    c4a0:	00 91 75 52 	lds	r16, 0x5275	; 0x805275 <k197dev+0x10>
    c4a4:	80 90 6f 52 	lds	r8, 0x526F	; 0x80526f <k197dev+0xa>
    c4a8:	90 90 70 52 	lds	r9, 0x5270	; 0x805270 <k197dev+0xb>
    c4ac:	a0 90 71 52 	lds	r10, 0x5271	; 0x805271 <k197dev+0xc>
    c4b0:	b0 90 72 52 	lds	r11, 0x5272	; 0x805272 <k197dev+0xd>
    c4b4:	80 91 7e 52 	lds	r24, 0x527E	; 0x80527e <k197dev+0x19>
    c4b8:	81 13       	cpse	r24, r17
    c4ba:	10 c0       	rjmp	.+32     	; 0xc4dc <main+0x7ea>
change0():
    c4bc:	80 91 83 52 	lds	r24, 0x5283	; 0x805283 <k197dev+0x1e>
    c4c0:	8e 25       	eor	r24, r14
    c4c2:	8f 77       	andi	r24, 0x7F	; 127
    c4c4:	99 27       	eor	r25, r25
updateCache():
    c4c6:	89 2b       	or	r24, r25
    c4c8:	49 f4       	brne	.+18     	; 0xc4dc <main+0x7ea>
    c4ca:	80 91 84 52 	lds	r24, 0x5284	; 0x805284 <k197dev+0x1f>
    c4ce:	8f 11       	cpse	r24, r15
    c4d0:	05 c0       	rjmp	.+10     	; 0xc4dc <main+0x7ea>
    c4d2:	80 91 85 52 	lds	r24, 0x5285	; 0x805285 <k197dev+0x20>
    c4d6:	80 17       	cp	r24, r16
    c4d8:	09 f4       	brne	.+2      	; 0xc4dc <main+0x7ea>
    c4da:	33 c1       	rjmp	.+614    	; 0xc742 <main+0xa50>
resetStatistics():
    c4dc:	80 92 86 52 	sts	0x5286, r8	; 0x805286 <k197dev+0x21>
    c4e0:	90 92 87 52 	sts	0x5287, r9	; 0x805287 <k197dev+0x22>
    c4e4:	a0 92 88 52 	sts	0x5288, r10	; 0x805288 <k197dev+0x23>
    c4e8:	b0 92 89 52 	sts	0x5289, r11	; 0x805289 <k197dev+0x24>
    c4ec:	80 92 8a 52 	sts	0x528A, r8	; 0x80528a <k197dev+0x25>
    c4f0:	90 92 8b 52 	sts	0x528B, r9	; 0x80528b <k197dev+0x26>
    c4f4:	a0 92 8c 52 	sts	0x528C, r10	; 0x80528c <k197dev+0x27>
    c4f8:	b0 92 8d 52 	sts	0x528D, r11	; 0x80528d <k197dev+0x28>
    c4fc:	80 92 8e 52 	sts	0x528E, r8	; 0x80528e <k197dev+0x29>
    c500:	90 92 8f 52 	sts	0x528F, r9	; 0x80528f <k197dev+0x2a>
    c504:	a0 92 90 52 	sts	0x5290, r10	; 0x805290 <k197dev+0x2b>
    c508:	b0 92 91 52 	sts	0x5291, r11	; 0x805291 <k197dev+0x2c>
resetGraph():
    c50c:	83 eb       	ldi	r24, 0xB3	; 179
    c50e:	80 93 62 55 	sts	0x5562, r24	; 0x805562 <k197dev+0x2fd>
    c512:	10 92 63 55 	sts	0x5563, r1	; 0x805563 <k197dev+0x2fe>
    c516:	10 92 66 55 	sts	0x5566, r1	; 0x805566 <k197dev+0x301>
    c51a:	10 92 67 55 	sts	0x5567, r1	; 0x805567 <k197dev+0x302>
    c51e:	80 91 6a 55 	lds	r24, 0x556A	; 0x80556a <k197dev+0x305>
    c522:	88 23       	and	r24, r24
    c524:	21 f0       	breq	.+8      	; 0xc52e <main+0x83c>
    c526:	10 92 68 55 	sts	0x5568, r1	; 0x805568 <k197dev+0x303>
    c52a:	10 92 69 55 	sts	0x5569, r1	; 0x805569 <k197dev+0x304>
updateCache():
    c52e:	80 92 7f 52 	sts	0x527F, r8	; 0x80527f <k197dev+0x1a>
    c532:	90 92 80 52 	sts	0x5280, r9	; 0x805280 <k197dev+0x1b>
    c536:	a0 92 81 52 	sts	0x5281, r10	; 0x805281 <k197dev+0x1c>
    c53a:	b0 92 82 52 	sts	0x5282, r11	; 0x805282 <k197dev+0x1d>
    c53e:	10 93 7e 52 	sts	0x527E, r17	; 0x80527e <k197dev+0x19>
    c542:	e0 92 83 52 	sts	0x5283, r14	; 0x805283 <k197dev+0x1e>
    c546:	f0 92 84 52 	sts	0x5284, r15	; 0x805284 <k197dev+0x1f>
    c54a:	00 93 85 52 	sts	0x5285, r16	; 0x805285 <k197dev+0x20>
    c54e:	80 91 6a 55 	lds	r24, 0x556A	; 0x80556a <k197dev+0x305>
    c552:	88 23       	and	r24, r24
    c554:	39 f1       	breq	.+78     	; 0xc5a4 <main+0x8b2>
    c556:	80 91 66 55 	lds	r24, 0x5566	; 0x805566 <k197dev+0x301>
    c55a:	90 91 67 55 	lds	r25, 0x5567	; 0x805567 <k197dev+0x302>
    c55e:	89 2b       	or	r24, r25
    c560:	09 f5       	brne	.+66     	; 0xc5a4 <main+0x8b2>
    c562:	80 91 63 55 	lds	r24, 0x5563	; 0x805563 <k197dev+0x2fe>
    c566:	84 3b       	cpi	r24, 0xB4	; 180
    c568:	e9 f4       	brne	.+58     	; 0xc5a4 <main+0x8b2>
_ZN10K197device14getGraphPeriodEv():
    c56a:	80 91 68 55 	lds	r24, 0x5568	; 0x805568 <k197dev+0x303>
    c56e:	90 91 69 55 	lds	r25, 0x5569	; 0x805569 <k197dev+0x304>
    c572:	63 e0       	ldi	r22, 0x03	; 3
    c574:	70 e0       	ldi	r23, 0x00	; 0
    c576:	0e 94 2c 78 	call	0xf058	; 0xf058 <__udivmodhi4>
updateCache():
    c57a:	62 3d       	cpi	r22, 0xD2	; 210
    c57c:	71 05       	cpc	r23, r1
    c57e:	90 f4       	brcc	.+36     	; 0xc5a4 <main+0x8b2>
    c580:	61 15       	cp	r22, r1
    c582:	71 05       	cpc	r23, r1
    c584:	09 f4       	brne	.+2      	; 0xc588 <main+0x896>
    c586:	2e c1       	rjmp	.+604    	; 0xc7e4 <main+0xaf2>
    c588:	66 0f       	add	r22, r22
    c58a:	77 1f       	adc	r23, r23
    c58c:	63 3d       	cpi	r22, 0xD3	; 211
    c58e:	71 05       	cpc	r23, r1
    c590:	10 f0       	brcs	.+4      	; 0xc596 <main+0x8a4>
    c592:	62 ed       	ldi	r22, 0xD2	; 210
    c594:	70 e0       	ldi	r23, 0x00	; 0
setGraphPeriod():
    c596:	cb 01       	movw	r24, r22
    c598:	88 0f       	add	r24, r24
    c59a:	99 1f       	adc	r25, r25
    c59c:	86 0f       	add	r24, r22
    c59e:	97 1f       	adc	r25, r23
    c5a0:	0e 94 cd 4e 	call	0x9d9a	; 0x9d9a <K197device::k197_cache_struct::resampleGraph(unsigned int) [clone .constprop.70]>
add2graph():
    c5a4:	80 91 66 55 	lds	r24, 0x5566	; 0x805566 <k197dev+0x301>
    c5a8:	90 91 67 55 	lds	r25, 0x5567	; 0x805567 <k197dev+0x302>
    c5ac:	00 97       	sbiw	r24, 0x00	; 0
    c5ae:	19 f5       	brne	.+70     	; 0xc5f6 <main+0x904>
updateCache():
    c5b0:	40 91 6f 52 	lds	r20, 0x526F	; 0x80526f <k197dev+0xa>
    c5b4:	50 91 70 52 	lds	r21, 0x5270	; 0x805270 <k197dev+0xb>
    c5b8:	60 91 71 52 	lds	r22, 0x5271	; 0x805271 <k197dev+0xc>
    c5bc:	70 91 72 52 	lds	r23, 0x5272	; 0x805272 <k197dev+0xd>
add2graph():
    c5c0:	20 91 62 55 	lds	r18, 0x5562	; 0x805562 <k197dev+0x2fd>
    c5c4:	2f 5f       	subi	r18, 0xFF	; 255
    c5c6:	24 3b       	cpi	r18, 0xB4	; 180
    c5c8:	08 f0       	brcs	.+2      	; 0xc5cc <main+0x8da>
    c5ca:	0f c1       	rjmp	.+542    	; 0xc7ea <main+0xaf8>
    c5cc:	20 93 62 55 	sts	0x5562, r18	; 0x805562 <k197dev+0x2fd>
    c5d0:	e0 91 62 55 	lds	r30, 0x5562	; 0x805562 <k197dev+0x2fd>
    c5d4:	b4 e0       	ldi	r27, 0x04	; 4
    c5d6:	eb 9f       	mul	r30, r27
    c5d8:	f0 01       	movw	r30, r0
    c5da:	11 24       	eor	r1, r1
    c5dc:	e3 58       	subi	r30, 0x83	; 131
    c5de:	fd 4a       	sbci	r31, 0xAD	; 173
    c5e0:	45 8b       	std	Z+21, r20	; 0x15
    c5e2:	56 8b       	std	Z+22, r21	; 0x16
    c5e4:	67 8b       	std	Z+23, r22	; 0x17
    c5e6:	70 8f       	std	Z+24, r23	; 0x18
    c5e8:	20 91 63 55 	lds	r18, 0x5563	; 0x805563 <k197dev+0x2fe>
    c5ec:	24 3b       	cpi	r18, 0xB4	; 180
    c5ee:	18 f4       	brcc	.+6      	; 0xc5f6 <main+0x904>
    c5f0:	2f 5f       	subi	r18, 0xFF	; 255
    c5f2:	20 93 63 55 	sts	0x5563, r18	; 0x805563 <k197dev+0x2fe>
    c5f6:	01 96       	adiw	r24, 0x01	; 1
    c5f8:	80 93 66 55 	sts	0x5566, r24	; 0x805566 <k197dev+0x301>
    c5fc:	90 93 67 55 	sts	0x5567, r25	; 0x805567 <k197dev+0x302>
    c600:	20 91 68 55 	lds	r18, 0x5568	; 0x805568 <k197dev+0x303>
    c604:	30 91 69 55 	lds	r19, 0x5569	; 0x805569 <k197dev+0x304>
    c608:	82 17       	cp	r24, r18
    c60a:	93 07       	cpc	r25, r19
    c60c:	20 f0       	brcs	.+8      	; 0xc616 <main+0x924>
    c60e:	10 92 66 55 	sts	0x5566, r1	; 0x805566 <k197dev+0x301>
    c612:	10 92 67 55 	sts	0x5567, r1	; 0x805567 <k197dev+0x302>
loop():
    c616:	80 91 74 45 	lds	r24, 0x4574	; 0x804574 <msg_printout>
    c61a:	88 23       	and	r24, r24
    c61c:	09 f4       	brne	.+2      	; 0xc620 <main+0x92e>
    c61e:	28 c1       	rjmp	.+592    	; 0xc870 <main+0xb7e>
    c620:	6e e8       	ldi	r22, 0x8E	; 142
    c622:	7b e0       	ldi	r23, 0x0B	; 11
    c624:	8e ed       	ldi	r24, 0xDE	; 222
    c626:	97 e4       	ldi	r25, 0x47	; 71
    c628:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c62c:	4a e0       	ldi	r20, 0x0A	; 10
    c62e:	50 e0       	ldi	r21, 0x00	; 0
    c630:	6d 89       	ldd	r22, Y+21	; 0x15
    c632:	8e ed       	ldi	r24, 0xDE	; 222
    c634:	97 e4       	ldi	r25, 0x47	; 71
    c636:	0e 94 97 4a 	call	0x952e	; 0x952e <Print::print(unsigned char, int)>
    c63a:	6b e8       	ldi	r22, 0x8B	; 139
    c63c:	7b e0       	ldi	r23, 0x0B	; 11
    c63e:	8e ed       	ldi	r24, 0xDE	; 222
    c640:	97 e4       	ldi	r25, 0x47	; 71
    c642:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c646:	05 e7       	ldi	r16, 0x75	; 117
    c648:	15 e4       	ldi	r17, 0x45	; 69
debugPrintData():
    c64a:	ed 89       	ldd	r30, Y+21	; 0x15
    c64c:	ee 2e       	mov	r14, r30
    c64e:	f1 2c       	mov	r15, r1
    c650:	c8 01       	movw	r24, r16
    c652:	85 57       	subi	r24, 0x75	; 117
    c654:	95 44       	sbci	r25, 0x45	; 69
    c656:	8e 15       	cp	r24, r14
    c658:	9f 05       	cpc	r25, r15
    c65a:	0c f0       	brlt	.+2      	; 0xc65e <main+0x96c>
    c65c:	c9 c0       	rjmp	.+402    	; 0xc7f0 <main+0xafe>
    c65e:	69 eb       	ldi	r22, 0xB9	; 185
    c660:	79 e0       	ldi	r23, 0x09	; 9
    c662:	8e ed       	ldi	r24, 0xDE	; 222
    c664:	97 e4       	ldi	r25, 0x47	; 71
    c666:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c66a:	d8 01       	movw	r26, r16
    c66c:	6d 91       	ld	r22, X+
    c66e:	8d 01       	movw	r16, r26
    c670:	40 e1       	ldi	r20, 0x10	; 16
    c672:	50 e0       	ldi	r21, 0x00	; 0
    c674:	8e ed       	ldi	r24, 0xDE	; 222
    c676:	97 e4       	ldi	r25, 0x47	; 71
    c678:	0e 94 97 4a 	call	0x952e	; 0x952e <Print::print(unsigned char, int)>
    c67c:	60 e2       	ldi	r22, 0x20	; 32
    c67e:	8e ed       	ldi	r24, 0xDE	; 222
    c680:	97 e4       	ldi	r25, 0x47	; 71
    c682:	0e 94 bd 2f 	call	0x5f7a	; 0x5f7a <Print::print(char)>
    c686:	e4 cf       	rjmp	.-56     	; 0xc650 <main+0x95e>
getMsgValue():
    c688:	a0 16       	cp	r10, r16
    c68a:	b1 06       	cpc	r11, r17
    c68c:	09 f0       	breq	.+2      	; 0xc690 <main+0x99e>
    c68e:	94 ce       	rjmp	.-728    	; 0xc3b8 <main+0x6c6>
main():
    c690:	60 e0       	ldi	r22, 0x00	; 0
    c692:	70 e0       	ldi	r23, 0x00	; 0
    c694:	cb 01       	movw	r24, r22
    c696:	9a ce       	rjmp	.-716    	; 0xc3cc <main+0x6da>
getNewReading():
    c698:	6e e0       	ldi	r22, 0x0E	; 14
    c69a:	79 e0       	ldi	r23, 0x09	; 9
    c69c:	c8 01       	movw	r24, r16
    c69e:	0e 94 60 71 	call	0xe2c0	; 0xe2c0 <strcasecmp_P>
    c6a2:	89 2b       	or	r24, r25
    c6a4:	11 f5       	brne	.+68     	; 0xc6ea <main+0x9f8>
    c6a6:	68 94       	set
    c6a8:	f2 f8       	bld	r15, 2
    c6aa:	f0 92 65 52 	sts	0x5265, r15	; 0x805265 <k197dev>
    c6ae:	10 92 6f 52 	sts	0x526F, r1	; 0x80526f <k197dev+0xa>
    c6b2:	10 92 70 52 	sts	0x5270, r1	; 0x805270 <k197dev+0xb>
    c6b6:	10 92 71 52 	sts	0x5271, r1	; 0x805271 <k197dev+0xc>
    c6ba:	10 92 72 52 	sts	0x5272, r1	; 0x805272 <k197dev+0xd>
    c6be:	44 e0       	ldi	r20, 0x04	; 4
    c6c0:	50 e0       	ldi	r21, 0x00	; 0
    c6c2:	69 e0       	ldi	r22, 0x09	; 9
    c6c4:	79 e0       	ldi	r23, 0x09	; 9
    c6c6:	c8 01       	movw	r24, r16
    c6c8:	0e 94 7e 71 	call	0xe2fc	; 0xe2fc <strncmp_P>
    c6cc:	89 2b       	or	r24, r25
    c6ce:	09 f0       	breq	.+2      	; 0xc6d2 <main+0x9e0>
    c6d0:	8a ce       	rjmp	.-748    	; 0xc3e6 <main+0x6f4>
    c6d2:	80 91 75 52 	lds	r24, 0x5275	; 0x805275 <k197dev+0x10>
    c6d6:	81 60       	ori	r24, 0x01	; 1
    c6d8:	80 93 75 52 	sts	0x5275, r24	; 0x805275 <k197dev+0x10>
    c6dc:	6d ef       	ldi	r22, 0xFD	; 253
    c6de:	78 e0       	ldi	r23, 0x08	; 8
    c6e0:	8e ed       	ldi	r24, 0xDE	; 222
    c6e2:	97 e4       	ldi	r25, 0x47	; 71
    c6e4:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    c6e8:	7e ce       	rjmp	.-772    	; 0xc3e6 <main+0x6f4>
    c6ea:	e8 94       	clt
    c6ec:	f2 f8       	bld	r15, 2
    c6ee:	dd cf       	rjmp	.-70     	; 0xc6aa <main+0x9b8>
tkConvertV2C():
    c6f0:	80 92 6f 52 	sts	0x526F, r8	; 0x80526f <k197dev+0xa>
    c6f4:	90 92 70 52 	sts	0x5270, r9	; 0x805270 <k197dev+0xb>
    c6f8:	a0 92 71 52 	sts	0x5271, r10	; 0x805271 <k197dev+0xc>
    c6fc:	b0 92 72 52 	sts	0x5272, r11	; 0x805272 <k197dev+0xd>
    c700:	8e 01       	movw	r16, r28
    c702:	0f 5f       	subi	r16, 0xFF	; 255
    c704:	1f 4f       	sbci	r17, 0xFF	; 255
    c706:	22 e0       	ldi	r18, 0x02	; 2
    c708:	48 e0       	ldi	r20, 0x08	; 8
    c70a:	c5 01       	movw	r24, r10
    c70c:	b4 01       	movw	r22, r8
    c70e:	0e 94 23 71 	call	0xe246	; 0xe246 <dtostrf>
    c712:	f8 01       	movw	r30, r16
main():
    c714:	90 e0       	ldi	r25, 0x00	; 0
    c716:	80 e0       	ldi	r24, 0x00	; 0
tkConvertV2C():
    c718:	21 91       	ld	r18, Z+
    c71a:	2e 32       	cpi	r18, 0x2E	; 46
    c71c:	31 f0       	breq	.+12     	; 0xc72a <main+0xa38>
    c71e:	dc 01       	movw	r26, r24
    c720:	ab 59       	subi	r26, 0x9B	; 155
    c722:	bd 4a       	sbci	r27, 0xAD	; 173
    c724:	11 96       	adiw	r26, 0x01	; 1
    c726:	2c 93       	st	X, r18
    c728:	01 96       	adiw	r24, 0x01	; 1
    c72a:	88 30       	cpi	r24, 0x08	; 8
    c72c:	91 05       	cpc	r25, r1
    c72e:	1c f4       	brge	.+6      	; 0xc736 <main+0xa44>
    c730:	ce 16       	cp	r12, r30
    c732:	df 06       	cpc	r13, r31
    c734:	89 f7       	brne	.-30     	; 0xc718 <main+0xa26>
    c736:	10 92 6d 52 	sts	0x526D, r1	; 0x80526d <k197dev+0x8>
    c73a:	80 e2       	ldi	r24, 0x20	; 32
    c73c:	80 93 6e 52 	sts	0x526E, r24	; 0x80526e <k197dev+0x9>
    c740:	a6 ce       	rjmp	.-692    	; 0xc48e <main+0x79c>
updateCache():
    c742:	40 90 86 52 	lds	r4, 0x5286	; 0x805286 <k197dev+0x21>
    c746:	50 90 87 52 	lds	r5, 0x5287	; 0x805287 <k197dev+0x22>
    c74a:	60 90 88 52 	lds	r6, 0x5288	; 0x805288 <k197dev+0x23>
    c74e:	70 90 89 52 	lds	r7, 0x5289	; 0x805289 <k197dev+0x24>
    c752:	a3 01       	movw	r20, r6
    c754:	92 01       	movw	r18, r4
    c756:	c5 01       	movw	r24, r10
    c758:	b4 01       	movw	r22, r8
    c75a:	0e 94 19 77 	call	0xee32	; 0xee32 <__subsf3>
    c75e:	20 91 7a 52 	lds	r18, 0x527A	; 0x80527a <k197dev+0x15>
    c762:	30 91 7b 52 	lds	r19, 0x527B	; 0x80527b <k197dev+0x16>
    c766:	40 91 7c 52 	lds	r20, 0x527C	; 0x80527c <k197dev+0x17>
    c76a:	50 91 7d 52 	lds	r21, 0x527D	; 0x80527d <k197dev+0x18>
    c76e:	0e 94 49 76 	call	0xec92	; 0xec92 <__mulsf3>
    c772:	a3 01       	movw	r20, r6
    c774:	92 01       	movw	r18, r4
    c776:	0e 94 1a 77 	call	0xee34	; 0xee34 <__addsf3>
    c77a:	60 93 86 52 	sts	0x5286, r22	; 0x805286 <k197dev+0x21>
    c77e:	70 93 87 52 	sts	0x5287, r23	; 0x805287 <k197dev+0x22>
    c782:	80 93 88 52 	sts	0x5288, r24	; 0x805288 <k197dev+0x23>
    c786:	90 93 89 52 	sts	0x5289, r25	; 0x805289 <k197dev+0x24>
    c78a:	a5 01       	movw	r20, r10
    c78c:	94 01       	movw	r18, r8
    c78e:	60 91 8a 52 	lds	r22, 0x528A	; 0x80528a <k197dev+0x25>
    c792:	70 91 8b 52 	lds	r23, 0x528B	; 0x80528b <k197dev+0x26>
    c796:	80 91 8c 52 	lds	r24, 0x528C	; 0x80528c <k197dev+0x27>
    c79a:	90 91 8d 52 	lds	r25, 0x528D	; 0x80528d <k197dev+0x28>
    c79e:	0e 94 17 78 	call	0xf02e	; 0xf02e <__gesf2>
    c7a2:	18 16       	cp	r1, r24
    c7a4:	44 f4       	brge	.+16     	; 0xc7b6 <main+0xac4>
    c7a6:	80 92 8a 52 	sts	0x528A, r8	; 0x80528a <k197dev+0x25>
    c7aa:	90 92 8b 52 	sts	0x528B, r9	; 0x80528b <k197dev+0x26>
    c7ae:	a0 92 8c 52 	sts	0x528C, r10	; 0x80528c <k197dev+0x27>
    c7b2:	b0 92 8d 52 	sts	0x528D, r11	; 0x80528d <k197dev+0x28>
    c7b6:	a5 01       	movw	r20, r10
    c7b8:	94 01       	movw	r18, r8
    c7ba:	60 91 8e 52 	lds	r22, 0x528E	; 0x80528e <k197dev+0x29>
    c7be:	70 91 8f 52 	lds	r23, 0x528F	; 0x80528f <k197dev+0x2a>
    c7c2:	80 91 90 52 	lds	r24, 0x5290	; 0x805290 <k197dev+0x2b>
    c7c6:	90 91 91 52 	lds	r25, 0x5291	; 0x805291 <k197dev+0x2c>
    c7ca:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
    c7ce:	87 ff       	sbrs	r24, 7
    c7d0:	ae ce       	rjmp	.-676    	; 0xc52e <main+0x83c>
    c7d2:	80 92 8e 52 	sts	0x528E, r8	; 0x80528e <k197dev+0x29>
    c7d6:	90 92 8f 52 	sts	0x528F, r9	; 0x80528f <k197dev+0x2a>
    c7da:	a0 92 90 52 	sts	0x5290, r10	; 0x805290 <k197dev+0x2b>
    c7de:	b0 92 91 52 	sts	0x5291, r11	; 0x805291 <k197dev+0x2c>
    c7e2:	a5 ce       	rjmp	.-694    	; 0xc52e <main+0x83c>
main():
    c7e4:	61 e0       	ldi	r22, 0x01	; 1
    c7e6:	70 e0       	ldi	r23, 0x00	; 0
    c7e8:	d6 ce       	rjmp	.-596    	; 0xc596 <main+0x8a4>
add2graph():
    c7ea:	10 92 62 55 	sts	0x5562, r1	; 0x805562 <k197dev+0x2fd>
    c7ee:	f0 ce       	rjmp	.-544    	; 0xc5d0 <main+0x8de>
loop():
    c7f0:	8e ed       	ldi	r24, 0xDE	; 222
    c7f2:	97 e4       	ldi	r25, 0x47	; 71
    c7f4:	0e 94 6b 49 	call	0x92d6	; 0x92d6 <Print::println()>
    c7f8:	65 e8       	ldi	r22, 0x85	; 133
    c7fa:	7b e0       	ldi	r23, 0x0B	; 11
    c7fc:	8e ed       	ldi	r24, 0xDE	; 222
    c7fe:	97 e4       	ldi	r25, 0x47	; 71
    c800:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c804:	66 e6       	ldi	r22, 0x66	; 102
    c806:	72 e5       	ldi	r23, 0x52	; 82
    c808:	8e ed       	ldi	r24, 0xDE	; 222
    c80a:	97 e4       	ldi	r25, 0x47	; 71
    c80c:	0e 94 b8 4e 	call	0x9d70	; 0x9d70 <Print::println(char const*)>
debugPrint():
    c810:	66 e6       	ldi	r22, 0x66	; 102
    c812:	72 e5       	ldi	r23, 0x52	; 82
    c814:	8e ed       	ldi	r24, 0xDE	; 222
    c816:	97 e4       	ldi	r25, 0x47	; 71
    c818:	0e 94 93 50 	call	0xa126	; 0xa126 <Print::print(char const*)>
    c81c:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
    c820:	81 ff       	sbrs	r24, 1
    c822:	21 c1       	rjmp	.+578    	; 0xca66 <main+0xd74>
    c824:	6c ec       	ldi	r22, 0xCC	; 204
    c826:	79 e0       	ldi	r23, 0x09	; 9
    c828:	8e ed       	ldi	r24, 0xDE	; 222
    c82a:	97 e4       	ldi	r25, 0x47	; 71
    c82c:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
print():
    c830:	40 91 6f 52 	lds	r20, 0x526F	; 0x80526f <k197dev+0xa>
    c834:	50 91 70 52 	lds	r21, 0x5270	; 0x805270 <k197dev+0xb>
    c838:	60 91 71 52 	lds	r22, 0x5271	; 0x805271 <k197dev+0xc>
    c83c:	70 91 72 52 	lds	r23, 0x5272	; 0x805272 <k197dev+0xd>
    c840:	26 e0       	ldi	r18, 0x06	; 6
    c842:	8e ed       	ldi	r24, 0xDE	; 222
    c844:	97 e4       	ldi	r25, 0x47	; 71
    c846:	0e 94 93 4b 	call	0x9726	; 0x9726 <Print::printFloat(double, unsigned char)>
debugPrint():
    c84a:	69 e2       	ldi	r22, 0x29	; 41
    c84c:	8e ed       	ldi	r24, 0xDE	; 222
    c84e:	97 e4       	ldi	r25, 0x47	; 71
    c850:	0e 94 bd 2f 	call	0x5f7a	; 0x5f7a <Print::print(char)>
    c854:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
    c858:	82 ff       	sbrs	r24, 2
    c85a:	06 c0       	rjmp	.+12     	; 0xc868 <main+0xb76>
    c85c:	6c eb       	ldi	r22, 0xBC	; 188
    c85e:	79 e0       	ldi	r23, 0x09	; 9
    c860:	8e ed       	ldi	r24, 0xDE	; 222
    c862:	97 e4       	ldi	r25, 0x47	; 71
    c864:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c868:	8e ed       	ldi	r24, 0xDE	; 222
    c86a:	97 e4       	ldi	r25, 0x47	; 71
    c86c:	0e 94 6b 49 	call	0x92d6	; 0x92d6 <Print::println()>
loop():
    c870:	bd 89       	ldd	r27, Y+21	; 0x15
    c872:	b9 30       	cpi	r27, 0x09	; 9
    c874:	09 f0       	breq	.+2      	; 0xc878 <main+0xb86>
    c876:	3c c1       	rjmp	.+632    	; 0xcaf0 <main+0xdfe>
_ZN10K197device5isCalEv():
    c878:	80 91 75 52 	lds	r24, 0x5275	; 0x805275 <k197dev+0x10>
    c87c:	80 fd       	sbrc	r24, 0
    c87e:	b1 c4       	rjmp	.+2402   	; 0xd1e2 <main+0x14f0>
_ZN9UImanager12isFullScreenEv.isra.29():
    c880:	80 91 41 52 	lds	r24, 0x5241	; 0x805241 <uiman+0x8>
    c884:	90 91 42 52 	lds	r25, 0x5242	; 0x805242 <uiman+0x9>
    c888:	84 fd       	sbrc	r24, 4
    c88a:	f9 c2       	rjmp	.+1522   	; 0xce7e <main+0x118c>
_ZN4U8G27setFontEPKh():
    c88c:	65 ee       	ldi	r22, 0xE5	; 229
    c88e:	70 e5       	ldi	r23, 0x50	; 80
    c890:	87 ea       	ldi	r24, 0xA7	; 167
    c892:	91 e5       	ldi	r25, 0x51	; 81
    c894:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
_ZN4U8G29setCursorEjj():
    c898:	ec e8       	ldi	r30, 0x8C	; 140
    c89a:	f0 e0       	ldi	r31, 0x00	; 0
    c89c:	e0 93 35 52 	sts	0x5235, r30	; 0x805235 <u8g2+0x92>
    c8a0:	f0 93 36 52 	sts	0x5236, r31	; 0x805236 <u8g2+0x93>
    c8a4:	05 e0       	ldi	r16, 0x05	; 5
    c8a6:	10 e0       	ldi	r17, 0x00	; 0
    c8a8:	00 93 37 52 	sts	0x5237, r16	; 0x805237 <u8g2+0x94>
    c8ac:	10 93 38 52 	sts	0x5238, r17	; 0x805238 <u8g2+0x95>
updateSplitScreen():
    c8b0:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    c8b4:	68 ef       	ldi	r22, 0xF8	; 248
    c8b6:	7a e0       	ldi	r23, 0x0A	; 10
    c8b8:	80 fd       	sbrc	r24, 0
    c8ba:	02 c0       	rjmp	.+4      	; 0xc8c0 <main+0xbce>
    c8bc:	62 ef       	ldi	r22, 0xF2	; 242
    c8be:	7a e0       	ldi	r23, 0x0A	; 10
    c8c0:	83 ea       	ldi	r24, 0xA3	; 163
    c8c2:	91 e5       	ldi	r25, 0x51	; 81
    c8c4:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c8c8:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    c8cc:	6d ee       	ldi	r22, 0xED	; 237
    c8ce:	7a e0       	ldi	r23, 0x0A	; 10
    c8d0:	86 fd       	sbrc	r24, 6
    c8d2:	02 c0       	rjmp	.+4      	; 0xc8d8 <main+0xbe6>
    c8d4:	68 ee       	ldi	r22, 0xE8	; 232
    c8d6:	7a e0       	ldi	r23, 0x0A	; 10
    c8d8:	83 ea       	ldi	r24, 0xA3	; 163
    c8da:	91 e5       	ldi	r25, 0x51	; 81
    c8dc:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c8e0:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    c8e4:	63 ee       	ldi	r22, 0xE3	; 227
    c8e6:	7a e0       	ldi	r23, 0x0A	; 10
    c8e8:	81 fd       	sbrc	r24, 1
    c8ea:	02 c0       	rjmp	.+4      	; 0xc8f0 <main+0xbfe>
    c8ec:	6e ed       	ldi	r22, 0xDE	; 222
    c8ee:	7a e0       	ldi	r23, 0x0A	; 10
    c8f0:	83 ea       	ldi	r24, 0xA3	; 163
    c8f2:	91 e5       	ldi	r25, 0x51	; 81
    c8f4:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN10K197device5isCalEv():
    c8f8:	80 91 75 52 	lds	r24, 0x5275	; 0x805275 <k197dev+0x10>
updateSplitScreen():
    c8fc:	67 ed       	ldi	r22, 0xD7	; 215
    c8fe:	7a e0       	ldi	r23, 0x0A	; 10
_ZN10K197device5isCalEv():
    c900:	80 fd       	sbrc	r24, 0
    c902:	02 c0       	rjmp	.+4      	; 0xc908 <main+0xc16>
updateSplitScreen():
    c904:	60 ed       	ldi	r22, 0xD0	; 208
    c906:	7a e0       	ldi	r23, 0x0A	; 10
    c908:	83 ea       	ldi	r24, 0xA3	; 163
    c90a:	91 e5       	ldi	r25, 0x51	; 81
    c90c:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c910:	00 91 1e 52 	lds	r16, 0x521E	; 0x80521e <u8g2+0x7b>
    c914:	00 2e       	mov	r0, r16
    c916:	00 0c       	add	r0, r0
    c918:	11 0b       	sbc	r17, r17
    c91a:	0b 5f       	subi	r16, 0xFB	; 251
    c91c:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN4U8G29setCursorEjj():
    c91e:	2c e8       	ldi	r18, 0x8C	; 140
    c920:	30 e0       	ldi	r19, 0x00	; 0
    c922:	20 93 35 52 	sts	0x5235, r18	; 0x805235 <u8g2+0x92>
    c926:	30 93 36 52 	sts	0x5236, r19	; 0x805236 <u8g2+0x93>
    c92a:	00 93 37 52 	sts	0x5237, r16	; 0x805237 <u8g2+0x94>
    c92e:	10 93 38 52 	sts	0x5238, r17	; 0x805238 <u8g2+0x95>
_ZN4U8G27setFontEPKh():
    c932:	6b ea       	ldi	r22, 0xAB	; 171
    c934:	7e e2       	ldi	r23, 0x2E	; 46
    c936:	87 ea       	ldi	r24, 0xA7	; 167
    c938:	91 e5       	ldi	r25, 0x51	; 81
    c93a:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
_ZN10K197device9isNumericEv():
    c93e:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
updateSplitScreen():
    c942:	66 e6       	ldi	r22, 0x66	; 102
    c944:	72 e5       	ldi	r23, 0x52	; 82
    c946:	81 ff       	sbrs	r24, 1
    c948:	0d c0       	rjmp	.+26     	; 0xc964 <main+0xc72>
    c94a:	40 91 6f 52 	lds	r20, 0x526F	; 0x80526f <k197dev+0xa>
    c94e:	50 91 70 52 	lds	r21, 0x5270	; 0x805270 <k197dev+0xb>
    c952:	60 91 71 52 	lds	r22, 0x5271	; 0x805271 <k197dev+0xc>
    c956:	70 91 72 52 	lds	r23, 0x5272	; 0x805272 <k197dev+0xd>
    c95a:	ce 01       	movw	r24, r28
    c95c:	01 96       	adiw	r24, 0x01	; 1
    c95e:	0e 94 cd 48 	call	0x919a	; 0x919a <UImanager::formatNumber(char*, float)>
    c962:	bc 01       	movw	r22, r24
    c964:	83 ea       	ldi	r24, 0xA3	; 163
    c966:	91 e5       	ldi	r25, 0x51	; 81
    c968:	0e 94 93 50 	call	0xa126	; 0xa126 <Print::print(char const*)>
    c96c:	60 e2       	ldi	r22, 0x20	; 32
    c96e:	83 ea       	ldi	r24, 0xA3	; 163
    c970:	91 e5       	ldi	r25, 0x51	; 81
    c972:	0e 94 bd 2f 	call	0x5f7a	; 0x5f7a <Print::print(char)>
_ZN4U8G27setFontEPKh():
    c976:	6b ea       	ldi	r22, 0xAB	; 171
    c978:	7e e2       	ldi	r23, 0x2E	; 46
    c97a:	87 ea       	ldi	r24, 0xA7	; 167
    c97c:	91 e5       	ldi	r25, 0x51	; 81
    c97e:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
updateSplitScreen():
    c982:	81 e0       	ldi	r24, 0x01	; 1
    c984:	0e 94 31 2f 	call	0x5e62	; 0x5e62 <K197device::getUnit(bool) [clone .constprop.99]>
    c988:	bc 01       	movw	r22, r24
    c98a:	83 ea       	ldi	r24, 0xA3	; 163
    c98c:	91 e5       	ldi	r25, 0x51	; 81
    c98e:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c992:	80 91 1e 52 	lds	r24, 0x521E	; 0x80521e <u8g2+0x7b>
    c996:	08 0f       	add	r16, r24
    c998:	11 1d       	adc	r17, r1
    c99a:	87 fd       	sbrc	r24, 7
    c99c:	1a 95       	dec	r17
_ZN4U8G27setFontEPKh():
    c99e:	6b ea       	ldi	r22, 0xAB	; 171
    c9a0:	7e e2       	ldi	r23, 0x2E	; 46
    c9a2:	87 ea       	ldi	r24, 0xA7	; 167
    c9a4:	91 e5       	ldi	r25, 0x51	; 81
    c9a6:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
updateSplitScreen():
    c9aa:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    c9ae:	69 ec       	ldi	r22, 0xC9	; 201
    c9b0:	7a e0       	ldi	r23, 0x0A	; 10
    c9b2:	84 fd       	sbrc	r24, 4
    c9b4:	02 c0       	rjmp	.+4      	; 0xc9ba <main+0xcc8>
    c9b6:	62 ec       	ldi	r22, 0xC2	; 194
    c9b8:	7a e0       	ldi	r23, 0x0A	; 10
    c9ba:	83 ea       	ldi	r24, 0xA3	; 163
    c9bc:	91 e5       	ldi	r25, 0x51	; 81
    c9be:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN4U8G29setCursorEjj():
    c9c2:	4c e8       	ldi	r20, 0x8C	; 140
    c9c4:	50 e0       	ldi	r21, 0x00	; 0
    c9c6:	40 93 35 52 	sts	0x5235, r20	; 0x805235 <u8g2+0x92>
    c9ca:	50 93 36 52 	sts	0x5236, r21	; 0x805236 <u8g2+0x93>
    c9ce:	00 93 37 52 	sts	0x5237, r16	; 0x805237 <u8g2+0x94>
    c9d2:	10 93 38 52 	sts	0x5238, r17	; 0x805238 <u8g2+0x95>
_ZN4U8G27setFontEPKh():
    c9d6:	65 ee       	ldi	r22, 0xE5	; 229
    c9d8:	70 e5       	ldi	r23, 0x50	; 80
    c9da:	87 ea       	ldi	r24, 0xA7	; 167
    c9dc:	91 e5       	ldi	r25, 0x51	; 81
    c9de:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
updateSplitScreen():
    c9e2:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    c9e6:	6d eb       	ldi	r22, 0xBD	; 189
    c9e8:	7a e0       	ldi	r23, 0x0A	; 10
    c9ea:	82 fd       	sbrc	r24, 2
    c9ec:	02 c0       	rjmp	.+4      	; 0xc9f2 <main+0xd00>
    c9ee:	68 eb       	ldi	r22, 0xB8	; 184
    c9f0:	7a e0       	ldi	r23, 0x0A	; 10
    c9f2:	83 ea       	ldi	r24, 0xA3	; 163
    c9f4:	91 e5       	ldi	r25, 0x51	; 81
    c9f6:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    c9fa:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    c9fe:	63 eb       	ldi	r22, 0xB3	; 179
    ca00:	7a e0       	ldi	r23, 0x0A	; 10
    ca02:	85 fd       	sbrc	r24, 5
    ca04:	02 c0       	rjmp	.+4      	; 0xca0a <main+0xd18>
    ca06:	6e ea       	ldi	r22, 0xAE	; 174
    ca08:	7a e0       	ldi	r23, 0x0A	; 10
    ca0a:	83 ea       	ldi	r24, 0xA3	; 163
    ca0c:	91 e5       	ldi	r25, 0x51	; 81
    ca0e:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    ca12:	80 91 75 52 	lds	r24, 0x5275	; 0x805275 <k197dev+0x10>
    ca16:	67 ea       	ldi	r22, 0xA7	; 167
    ca18:	7a e0       	ldi	r23, 0x0A	; 10
    ca1a:	85 fd       	sbrc	r24, 5
    ca1c:	02 c0       	rjmp	.+4      	; 0xca22 <main+0xd30>
    ca1e:	60 ea       	ldi	r22, 0xA0	; 160
    ca20:	7a e0       	ldi	r23, 0x0A	; 10
    ca22:	83 ea       	ldi	r24, 0xA3	; 163
    ca24:	91 e5       	ldi	r25, 0x51	; 81
    ca26:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN10K197device5isCalEv():
    ca2a:	80 91 75 52 	lds	r24, 0x5275	; 0x805275 <k197dev+0x10>
    ca2e:	80 fd       	sbrc	r24, 0
    ca30:	45 c0       	rjmp	.+138    	; 0xcabc <main+0xdca>
_ZN9UImanager12isFullScreenEv.isra.29():
    ca32:	80 91 41 52 	lds	r24, 0x5241	; 0x805241 <uiman+0x8>
    ca36:	84 fd       	sbrc	r24, 4
    ca38:	41 c0       	rjmp	.+130    	; 0xcabc <main+0xdca>
_ZN9UImanager13isMenuVisibleEv.isra.31():
    ca3a:	85 fd       	sbrc	r24, 5
    ca3c:	3f c0       	rjmp	.+126    	; 0xcabc <main+0xdca>
_ZN4U8G27setFontEPKh():
    ca3e:	61 e9       	ldi	r22, 0x91	; 145
    ca40:	76 e5       	ldi	r23, 0x56	; 86
    ca42:	87 ea       	ldi	r24, 0xA7	; 167
    ca44:	91 e5       	ldi	r25, 0x51	; 81
    ca46:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
u8g2_SetFontDirection():
    ca4a:	10 92 13 52 	sts	0x5213, r1	; 0x805213 <u8g2+0x70>
main():
    ca4e:	d1 2c       	mov	r13, r1
    ca50:	10 e0       	ldi	r17, 0x00	; 0
    ca52:	00 e0       	ldi	r16, 0x00	; 0
u8g2_DrawLog():
    ca54:	80 91 96 51 	lds	r24, 0x5196	; 0x805196 <u8g2log+0x7>
    ca58:	d8 16       	cp	r13, r24
    ca5a:	08 f0       	brcs	.+2      	; 0xca5e <main+0xd6c>
    ca5c:	40 c0       	rjmp	.+128    	; 0xcade <main+0xdec>
main():
    ca5e:	c1 2c       	mov	r12, r1
    ca60:	f1 2c       	mov	r15, r1
    ca62:	e1 2c       	mov	r14, r1
    ca64:	f3 c1       	rjmp	.+998    	; 0xce4c <main+0x115a>
    ca66:	05 e6       	ldi	r16, 0x65	; 101
    ca68:	12 e5       	ldi	r17, 0x52	; 82
    ca6a:	8d e6       	ldi	r24, 0x6D	; 109
    ca6c:	e8 2e       	mov	r14, r24
    ca6e:	82 e5       	ldi	r24, 0x52	; 82
    ca70:	f8 2e       	mov	r15, r24
debugPrint():
    ca72:	68 ec       	ldi	r22, 0xC8	; 200
    ca74:	79 e0       	ldi	r23, 0x09	; 9
    ca76:	8e ed       	ldi	r24, 0xDE	; 222
    ca78:	97 e4       	ldi	r25, 0x47	; 71
    ca7a:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    ca7e:	f8 01       	movw	r30, r16
    ca80:	81 81       	ldd	r24, Z+1	; 0x01
    ca82:	80 31       	cpi	r24, 0x10	; 16
    ca84:	2c f4       	brge	.+10     	; 0xca90 <main+0xd9e>
    ca86:	60 e3       	ldi	r22, 0x30	; 48
    ca88:	8e ed       	ldi	r24, 0xDE	; 222
    ca8a:	97 e4       	ldi	r25, 0x47	; 71
    ca8c:	0e 94 bd 2f 	call	0x5f7a	; 0x5f7a <Print::print(char)>
    ca90:	d8 01       	movw	r26, r16
    ca92:	11 96       	adiw	r26, 0x01	; 1
    ca94:	6c 91       	ld	r22, X
    ca96:	06 2e       	mov	r0, r22
    ca98:	00 0c       	add	r0, r0
    ca9a:	77 0b       	sbc	r23, r23
    ca9c:	40 e1       	ldi	r20, 0x10	; 16
    ca9e:	50 e0       	ldi	r21, 0x00	; 0
    caa0:	8e ed       	ldi	r24, 0xDE	; 222
    caa2:	97 e4       	ldi	r25, 0x47	; 71
    caa4:	0e 94 ef 4c 	call	0x99de	; 0x99de <Print::print(int, int)>
    caa8:	0f 5f       	subi	r16, 0xFF	; 255
    caaa:	1f 4f       	sbci	r17, 0xFF	; 255
    caac:	e0 16       	cp	r14, r16
    caae:	f1 06       	cpc	r15, r17
    cab0:	01 f7       	brne	.-64     	; 0xca72 <main+0xd80>
    cab2:	8e ed       	ldi	r24, 0xDE	; 222
    cab4:	97 e4       	ldi	r25, 0x47	; 71
    cab6:	0e 94 6b 49 	call	0x92d6	; 0x92d6 <Print::println()>
    caba:	cc ce       	rjmp	.-616    	; 0xc854 <main+0xb62>
_ZN8UIwindow16getcurrentWindowEv():
    cabc:	80 91 e8 4f 	lds	r24, 0x4FE8	; 0x804fe8 <UIwindow::currentWindow>
    cac0:	90 91 e9 4f 	lds	r25, 0x4FE9	; 0x804fe9 <UIwindow::currentWindow+0x1>
updateSplitScreen():
    cac4:	dc 01       	movw	r26, r24
    cac6:	ed 91       	ld	r30, X+
    cac8:	fc 91       	ld	r31, X
    caca:	01 90       	ld	r0, Z+
    cacc:	f0 81       	ld	r31, Z
    cace:	e0 2d       	mov	r30, r0
    cad0:	2a e0       	ldi	r18, 0x0A	; 10
    cad2:	30 e0       	ldi	r19, 0x00	; 0
    cad4:	50 e0       	ldi	r21, 0x00	; 0
    cad6:	40 e0       	ldi	r20, 0x00	; 0
    cad8:	63 ea       	ldi	r22, 0xA3	; 163
    cada:	71 e5       	ldi	r23, 0x51	; 81
    cadc:	09 95       	icall
_ZN4U8G210sendBufferEv():
    cade:	0e 94 95 3c 	call	0x792a	; 0x792a <u8g2_SendBuffer.constprop.142>
_ZN10K197device5isCalEv():
    cae2:	80 91 75 52 	lds	r24, 0x5275	; 0x805275 <k197dev+0x10>
    cae6:	80 fd       	sbrc	r24, 0
    cae8:	02 c0       	rjmp	.+4      	; 0xcaee <main+0xdfc>
    caea:	0c 94 e4 6f 	jmp	0xdfc8	; 0xdfc8 <main+0x22d6>
loop():
    caee:	a8 95       	wdr
digitalReadFast():
    caf0:	92 b1       	in	r25, 0x02	; 2
    caf2:	81 e0       	ldi	r24, 0x01	; 1
    caf4:	29 2f       	mov	r18, r25
    caf6:	24 70       	andi	r18, 0x04	; 4
    caf8:	92 ff       	sbrs	r25, 2
    cafa:	80 e0       	ldi	r24, 0x00	; 0
checkPresence():
    cafc:	90 91 6b 55 	lds	r25, 0x556B	; 0x80556b <BTman>
    cb00:	98 17       	cp	r25, r24
    cb02:	89 f0       	breq	.+34     	; 0xcb26 <main+0xe34>
    cb04:	80 93 6b 55 	sts	0x556B, r24	; 0x80556b <BTman>
    cb08:	22 23       	and	r18, r18
    cb0a:	11 f4       	brne	.+4      	; 0xcb10 <main+0xe1e>
    cb0c:	0c 94 f3 70 	jmp	0xe1e6	; 0xe1e6 <main+0x24f4>
begin():
    cb10:	0e 94 35 31 	call	0x626a	; 0x626a <HardwareSerial::begin(unsigned long, unsigned int) [clone .constprop.170]>
_ZN9debugUtil9useSerialEb():
    cb14:	81 e0       	ldi	r24, 0x01	; 1
    cb16:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <DebugOut+0x4>
checkPresence():
    cb1a:	64 e1       	ldi	r22, 0x14	; 20
    cb1c:	7b e0       	ldi	r23, 0x0B	; 11
    cb1e:	8e ed       	ldi	r24, 0xDE	; 222
    cb20:	97 e4       	ldi	r25, 0x47	; 71
    cb22:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
checkConnection():
    cb26:	15 9b       	sbis	0x02, 5	; 2
    cb28:	02 c0       	rjmp	.+4      	; 0xcb2e <main+0xe3c>
    cb2a:	0c 94 08 71 	jmp	0xe210	; 0xe210 <main+0x251e>
    cb2e:	80 91 6b 55 	lds	r24, 0x556B	; 0x80556b <BTman>
    cb32:	90 91 6c 55 	lds	r25, 0x556C	; 0x80556c <BTman+0x1>
    cb36:	98 17       	cp	r25, r24
    cb38:	41 f0       	breq	.+16     	; 0xcb4a <main+0xe58>
    cb3a:	80 93 6c 55 	sts	0x556C, r24	; 0x80556c <BTman+0x1>
    cb3e:	81 11       	cpse	r24, r1
    cb40:	04 c0       	rjmp	.+8      	; 0xcb4a <main+0xe58>
setLogging():
    cb42:	10 92 43 52 	sts	0x5243, r1	; 0x805243 <uiman+0xa>
setValue():
    cb46:	10 92 20 51 	sts	0x5120, r1	; 0x805120 <logEnable+0x6>
    cb4a:	80 91 41 52 	lds	r24, 0x5241	; 0x805241 <uiman+0x8>
    cb4e:	90 91 42 52 	lds	r25, 0x5242	; 0x805242 <uiman+0x9>
_ZN10K197device5isCalEv():
    cb52:	20 91 75 52 	lds	r18, 0x5275	; 0x805275 <k197dev+0x10>
    cb56:	20 fd       	sbrc	r18, 0
    cb58:	02 c0       	rjmp	.+4      	; 0xcb5e <main+0xe6c>
_ZN9UImanager12isFullScreenEv.isra.29():
    cb5a:	84 ff       	sbrs	r24, 4
    cb5c:	4b c0       	rjmp	.+150    	; 0xcbf4 <main+0xf02>
_ZN9UImanager13getScreenModeEv():
    cb5e:	8f 70       	andi	r24, 0x0F	; 15
    cb60:	99 27       	eor	r25, r25
updateBtStatus():
    cb62:	01 97       	sbiw	r24, 0x01	; 1
    cb64:	09 f0       	breq	.+2      	; 0xcb68 <main+0xe76>
    cb66:	46 c0       	rjmp	.+140    	; 0xcbf4 <main+0xf02>
_ZN4U8G29setCursorEjj():
    cb68:	ef e5       	ldi	r30, 0x5F	; 95
    cb6a:	f0 e0       	ldi	r31, 0x00	; 0
    cb6c:	e0 93 35 52 	sts	0x5235, r30	; 0x805235 <u8g2+0x92>
    cb70:	f0 93 36 52 	sts	0x5236, r31	; 0x805236 <u8g2+0x93>
    cb74:	02 e0       	ldi	r16, 0x02	; 2
    cb76:	10 e0       	ldi	r17, 0x00	; 0
    cb78:	00 93 37 52 	sts	0x5237, r16	; 0x805237 <u8g2+0x94>
    cb7c:	10 93 38 52 	sts	0x5238, r17	; 0x805238 <u8g2+0x95>
_ZN4U8G27setFontEPKh():
    cb80:	61 e9       	ldi	r22, 0x91	; 145
    cb82:	76 e5       	ldi	r23, 0x56	; 86
    cb84:	87 ea       	ldi	r24, 0xA7	; 167
    cb86:	91 e5       	ldi	r25, 0x51	; 81
    cb88:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
updateBtStatus():
    cb8c:	80 91 6b 55 	lds	r24, 0x556B	; 0x80556b <BTman>
    cb90:	6f e3       	ldi	r22, 0x3F	; 63
    cb92:	7b e0       	ldi	r23, 0x0B	; 11
    cb94:	81 11       	cpse	r24, r1
    cb96:	02 c0       	rjmp	.+4      	; 0xcb9c <main+0xeaa>
    cb98:	6b e3       	ldi	r22, 0x3B	; 59
    cb9a:	7b e0       	ldi	r23, 0x0B	; 11
    cb9c:	83 ea       	ldi	r24, 0xA3	; 163
    cb9e:	91 e5       	ldi	r25, 0x51	; 81
    cba0:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
u8g2_GetStrWidth():
    cba4:	2e e4       	ldi	r18, 0x4E	; 78
    cba6:	3d e2       	ldi	r19, 0x2D	; 45
    cba8:	20 93 a9 51 	sts	0x51A9, r18	; 0x8051a9 <u8g2+0x6>
    cbac:	30 93 aa 51 	sts	0x51AA, r19	; 0x8051aa <u8g2+0x7>
    cbb0:	0e 94 5e 3a 	call	0x74bc	; 0x74bc <u8g2_string_width.constprop.103>
updateBtStatus():
    cbb4:	81 5a       	subi	r24, 0xA1	; 161
    cbb6:	9f 4f       	sbci	r25, 0xFF	; 255
_ZN4U8G29setCursorEjj():
    cbb8:	80 93 35 52 	sts	0x5235, r24	; 0x805235 <u8g2+0x92>
    cbbc:	90 93 36 52 	sts	0x5236, r25	; 0x805236 <u8g2+0x93>
    cbc0:	42 e0       	ldi	r20, 0x02	; 2
    cbc2:	50 e0       	ldi	r21, 0x00	; 0
    cbc4:	40 93 37 52 	sts	0x5237, r20	; 0x805237 <u8g2+0x94>
    cbc8:	50 93 38 52 	sts	0x5238, r21	; 0x805238 <u8g2+0x95>
updateBtStatus():
    cbcc:	80 91 6c 55 	lds	r24, 0x556C	; 0x80556c <BTman+0x1>
    cbd0:	6f e2       	ldi	r22, 0x2F	; 47
    cbd2:	7b e0       	ldi	r23, 0x0B	; 11
    cbd4:	88 23       	and	r24, r24
    cbd6:	41 f0       	breq	.+16     	; 0xcbe8 <main+0xef6>
    cbd8:	80 91 20 51 	lds	r24, 0x5120	; 0x805120 <logEnable+0x6>
    cbdc:	67 e3       	ldi	r22, 0x37	; 55
    cbde:	7b e0       	ldi	r23, 0x0B	; 11
    cbe0:	81 11       	cpse	r24, r1
    cbe2:	02 c0       	rjmp	.+4      	; 0xcbe8 <main+0xef6>
    cbe4:	63 e3       	ldi	r22, 0x33	; 51
    cbe6:	7b e0       	ldi	r23, 0x0B	; 11
    cbe8:	83 ea       	ldi	r24, 0xA3	; 163
    cbea:	91 e5       	ldi	r25, 0x51	; 81
    cbec:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN4U8G210sendBufferEv():
    cbf0:	0e 94 95 3c 	call	0x792a	; 0x792a <u8g2_SendBuffer.constprop.142>
_ZN9SPIdevice17collisionDetectedEv.isra.0():
    cbf4:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <__TEXT_REGION_LENGTH__+0x7e0963>
    cbf8:	81 70       	andi	r24, 0x01	; 1
loop():
    cbfa:	90 91 73 45 	lds	r25, 0x4573	; 0x804573 <collisionStatus>
    cbfe:	98 17       	cp	r25, r24
    cc00:	a1 f0       	breq	.+40     	; 0xcc2a <main+0xf38>
    cc02:	80 93 73 45 	sts	0x4573, r24	; 0x804573 <collisionStatus>
    cc06:	6a e7       	ldi	r22, 0x7A	; 122
    cc08:	7b e0       	ldi	r23, 0x0B	; 11
    cc0a:	8e ed       	ldi	r24, 0xDE	; 222
    cc0c:	97 e4       	ldi	r25, 0x47	; 71
    cc0e:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    cc12:	80 91 73 45 	lds	r24, 0x4573	; 0x804573 <collisionStatus>
    cc16:	61 e7       	ldi	r22, 0x71	; 113
    cc18:	7b e0       	ldi	r23, 0x0B	; 11
    cc1a:	81 11       	cpse	r24, r1
    cc1c:	02 c0       	rjmp	.+4      	; 0xcc22 <main+0xf30>
    cc1e:	69 e6       	ldi	r22, 0x69	; 105
    cc20:	7b e0       	ldi	r23, 0x0B	; 11
    cc22:	8e ed       	ldi	r24, 0xDE	; 222
    cc24:	97 e4       	ldi	r25, 0x47	; 71
    cc26:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
checkNew():
    cc2a:	0e 94 c2 31 	call	0x6384	; 0x6384 <micros>
    cc2e:	2b 01       	movw	r4, r22
    cc30:	3c 01       	movw	r6, r24
    cc32:	3b e4       	ldi	r19, 0x4B	; 75
    cc34:	a3 2e       	mov	r10, r19
    cc36:	30 e4       	ldi	r19, 0x40	; 64
    cc38:	b3 2e       	mov	r11, r19
    cc3a:	4b ea       	ldi	r20, 0xAB	; 171
    cc3c:	c4 2e       	mov	r12, r20
    cc3e:	45 e4       	ldi	r20, 0x45	; 69
    cc40:	d4 2e       	mov	r13, r20
main():
    cc42:	10 e0       	ldi	r17, 0x00	; 0
    cc44:	00 e0       	ldi	r16, 0x00	; 0
checkNew():
    cc46:	d5 01       	movw	r26, r10
    cc48:	8d 91       	ld	r24, X+
    cc4a:	5d 01       	movw	r10, r26
    cc4c:	81 11       	cpse	r24, r1
    cc4e:	30 c0       	rjmp	.+96     	; 0xccb0 <main+0xfbe>
checkPressed():
    cc50:	f6 01       	movw	r30, r12
    cc52:	40 81       	ld	r20, Z
    cc54:	51 81       	ldd	r21, Z+1	; 0x01
    cc56:	62 81       	ldd	r22, Z+2	; 0x02
    cc58:	73 81       	ldd	r23, Z+3	; 0x03
    cc5a:	d3 01       	movw	r26, r6
    cc5c:	c2 01       	movw	r24, r4
    cc5e:	84 1b       	sub	r24, r20
    cc60:	95 0b       	sbc	r25, r21
    cc62:	a6 0b       	sbc	r26, r22
    cc64:	b7 0b       	sbc	r27, r23
    cc66:	81 32       	cpi	r24, 0x21	; 33
    cc68:	91 4a       	sbci	r25, 0xA1	; 161
    cc6a:	a7 40       	sbci	r26, 0x07	; 7
    cc6c:	b1 05       	cpc	r27, r1
    cc6e:	00 f1       	brcs	.+64     	; 0xccb0 <main+0xfbe>
    cc70:	c8 01       	movw	r24, r16
    cc72:	88 0f       	add	r24, r24
    cc74:	99 1f       	adc	r25, r25
    cc76:	88 0f       	add	r24, r24
    cc78:	99 1f       	adc	r25, r25
    cc7a:	9c 01       	movw	r18, r24
    cc7c:	25 57       	subi	r18, 0x75	; 117
    cc7e:	3a 4b       	sbci	r19, 0xBA	; 186
    cc80:	79 01       	movw	r14, r18
    cc82:	f9 01       	movw	r30, r18
    cc84:	80 81       	ld	r24, Z
    cc86:	91 81       	ldd	r25, Z+1	; 0x01
    cc88:	a2 81       	ldd	r26, Z+2	; 0x02
    cc8a:	b3 81       	ldd	r27, Z+3	; 0x03
    cc8c:	48 17       	cp	r20, r24
    cc8e:	59 07       	cpc	r21, r25
    cc90:	6a 07       	cpc	r22, r26
    cc92:	7b 07       	cpc	r23, r27
    cc94:	11 f0       	breq	.+4      	; 0xcc9a <main+0xfa8>
    cc96:	0c 94 0b 71 	jmp	0xe216	; 0xe216 <main+0x2524>
    cc9a:	62 e1       	ldi	r22, 0x12	; 18
    cc9c:	70 e0       	ldi	r23, 0x00	; 0
    cc9e:	c8 01       	movw	r24, r16
    cca0:	0e 94 f3 45 	call	0x8be6	; 0x8be6 <invoke_callback(int, K197UIeventType)>
    cca4:	d7 01       	movw	r26, r14
    cca6:	4d 92       	st	X+, r4
    cca8:	5d 92       	st	X+, r5
    ccaa:	6d 92       	st	X+, r6
    ccac:	7c 92       	st	X, r7
    ccae:	13 97       	sbiw	r26, 0x03	; 3
checkNew():
    ccb0:	0f 5f       	subi	r16, 0xFF	; 255
    ccb2:	1f 4f       	sbci	r17, 0xFF	; 255
    ccb4:	b4 e0       	ldi	r27, 0x04	; 4
    ccb6:	cb 0e       	add	r12, r27
    ccb8:	d1 1c       	adc	r13, r1
    ccba:	04 30       	cpi	r16, 0x04	; 4
    ccbc:	11 05       	cpc	r17, r1
    ccbe:	19 f6       	brne	.-122    	; 0xcc46 <main+0xf54>
    ccc0:	f8 94       	cli
main():
    ccc2:	30 e0       	ldi	r19, 0x00	; 0
    ccc4:	20 e0       	ldi	r18, 0x00	; 0
    ccc6:	90 e0       	ldi	r25, 0x00	; 0
    ccc8:	80 e0       	ldi	r24, 0x00	; 0
fifo_getSize():
    ccca:	fc 01       	movw	r30, r24
    cccc:	ed 5b       	subi	r30, 0xBD	; 189
    ccce:	ff 4b       	sbci	r31, 0xBF	; 191
    ccd0:	40 81       	ld	r20, Z
    ccd2:	4f 3f       	cpi	r20, 0xFF	; 255
    ccd4:	11 f0       	breq	.+4      	; 0xccda <main+0xfe8>
    ccd6:	2f 5f       	subi	r18, 0xFF	; 255
    ccd8:	3f 4f       	sbci	r19, 0xFF	; 255
    ccda:	01 96       	adiw	r24, 0x01	; 1
    ccdc:	88 30       	cpi	r24, 0x08	; 8
    ccde:	91 05       	cpc	r25, r1
    cce0:	a1 f7       	brne	.-24     	; 0xccca <main+0xfd8>
    cce2:	80 91 72 45 	lds	r24, 0x4572	; 0x804572 <fifo_size>
    cce6:	08 2e       	mov	r0, r24
    cce8:	00 0c       	add	r0, r0
    ccea:	99 0b       	sbc	r25, r25
    ccec:	82 17       	cp	r24, r18
    ccee:	93 07       	cpc	r25, r19
    ccf0:	31 f0       	breq	.+12     	; 0xccfe <main+0x100c>
    ccf2:	63 e4       	ldi	r22, 0x43	; 67
    ccf4:	7b e0       	ldi	r23, 0x0B	; 11
    ccf6:	8e ed       	ldi	r24, 0xDE	; 222
    ccf8:	97 e4       	ldi	r25, 0x47	; 71
    ccfa:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    ccfe:	00 91 72 45 	lds	r16, 0x4572	; 0x804572 <fifo_size>
checkNew():
    cd02:	0e 94 19 4a 	call	0x9432	; 0x9432 <fifo_isFull()>
    cd06:	f8 2e       	mov	r15, r24
    cd08:	0e 94 e7 49 	call	0x93ce	; 0x93ce <fifo_pull()>
    cd0c:	18 2f       	mov	r17, r24
    cd0e:	78 94       	sei
    cd10:	ff 20       	and	r15, r15
    cd12:	81 f1       	breq	.+96     	; 0xcd74 <main+0x1082>
    cd14:	6f e5       	ldi	r22, 0x5F	; 95
    cd16:	7b e0       	ldi	r23, 0x0B	; 11
    cd18:	8e ed       	ldi	r24, 0xDE	; 222
    cd1a:	97 e4       	ldi	r25, 0x47	; 71
    cd1c:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    cd20:	f8 94       	cli
    cd22:	8e eb       	ldi	r24, 0xBE	; 190
    cd24:	93 e4       	ldi	r25, 0x43	; 67
    cd26:	0e 94 9a 50 	call	0xa134	; 0xa134 <dumpFifoStatus(char const*)>
fifo_getSize():
    cd2a:	60 2f       	mov	r22, r16
    cd2c:	00 0f       	add	r16, r16
    cd2e:	77 0b       	sbc	r23, r23
checkNew():
    cd30:	4a e0       	ldi	r20, 0x0A	; 10
    cd32:	50 e0       	ldi	r21, 0x00	; 0
    cd34:	8e ed       	ldi	r24, 0xDE	; 222
    cd36:	97 e4       	ldi	r25, 0x47	; 71
    cd38:	0e 94 ef 4c 	call	0x99de	; 0x99de <Print::print(int, int)>
clearFifo():
    cd3c:	8f ef       	ldi	r24, 0xFF	; 255
    cd3e:	80 93 43 40 	sts	0x4043, r24	; 0x804043 <fifo_records>
    cd42:	80 93 44 40 	sts	0x4044, r24	; 0x804044 <fifo_records+0x1>
    cd46:	80 93 45 40 	sts	0x4045, r24	; 0x804045 <fifo_records+0x2>
    cd4a:	80 93 46 40 	sts	0x4046, r24	; 0x804046 <fifo_records+0x3>
    cd4e:	80 93 47 40 	sts	0x4047, r24	; 0x804047 <fifo_records+0x4>
    cd52:	80 93 48 40 	sts	0x4048, r24	; 0x804048 <fifo_records+0x5>
    cd56:	80 93 49 40 	sts	0x4049, r24	; 0x804049 <fifo_records+0x6>
    cd5a:	80 93 4a 40 	sts	0x404A, r24	; 0x80404a <fifo_records+0x7>
    cd5e:	10 92 72 45 	sts	0x4572, r1	; 0x804572 <fifo_size>
    cd62:	10 92 71 45 	sts	0x4571, r1	; 0x804571 <fifo_front>
    cd66:	87 e0       	ldi	r24, 0x07	; 7
    cd68:	8f bb       	out	0x1f, r24	; 31
checkNew():
    cd6a:	8e eb       	ldi	r24, 0xBE	; 190
    cd6c:	93 e4       	ldi	r25, 0x43	; 67
    cd6e:	0e 94 9a 50 	call	0xa134	; 0xa134 <dumpFifoStatus(char const*)>
    cd72:	78 94       	sei
    cd74:	1f 3f       	cpi	r17, 0xFF	; 255
    cd76:	21 f1       	breq	.+72     	; 0xcdc0 <main+0x10ce>
    cd78:	0e 94 c2 31 	call	0x6384	; 0x6384 <micros>
    cd7c:	6b 01       	movw	r12, r22
    cd7e:	7c 01       	movw	r14, r24
getButtonState():
    cd80:	15 fb       	bst	r17, 5
    cd82:	66 27       	eor	r22, r22
    cd84:	60 f9       	bld	r22, 0
checkNew():
    cd86:	ac 01       	movw	r20, r24
    cd88:	96 01       	movw	r18, r12
    cd8a:	80 e0       	ldi	r24, 0x00	; 0
    cd8c:	0e 94 02 46 	call	0x8c04	; 0x8c04 <k197ButtonCluster::checkNew(unsigned char, unsigned char, unsigned long) [clone .constprop.107]>
getButtonState():
    cd90:	61 2f       	mov	r22, r17
    cd92:	66 1f       	adc	r22, r22
    cd94:	66 27       	eor	r22, r22
    cd96:	66 1f       	adc	r22, r22
checkNew():
    cd98:	a7 01       	movw	r20, r14
    cd9a:	96 01       	movw	r18, r12
    cd9c:	81 e0       	ldi	r24, 0x01	; 1
    cd9e:	0e 94 02 46 	call	0x8c04	; 0x8c04 <k197ButtonCluster::checkNew(unsigned char, unsigned char, unsigned long) [clone .constprop.107]>
    cda2:	61 2f       	mov	r22, r17
    cda4:	61 70       	andi	r22, 0x01	; 1
    cda6:	a7 01       	movw	r20, r14
    cda8:	96 01       	movw	r18, r12
    cdaa:	82 e0       	ldi	r24, 0x02	; 2
    cdac:	0e 94 02 46 	call	0x8c04	; 0x8c04 <k197ButtonCluster::checkNew(unsigned char, unsigned char, unsigned long) [clone .constprop.107]>
getButtonState():
    cdb0:	11 fb       	bst	r17, 1
    cdb2:	66 27       	eor	r22, r22
    cdb4:	60 f9       	bld	r22, 0
checkNew():
    cdb6:	a7 01       	movw	r20, r14
    cdb8:	96 01       	movw	r18, r12
    cdba:	83 e0       	ldi	r24, 0x03	; 3
    cdbc:	0e 94 02 46 	call	0x8c04	; 0x8c04 <k197ButtonCluster::checkNew(unsigned char, unsigned char, unsigned long) [clone .constprop.107]>
loop():
    cdc0:	0e 94 c2 31 	call	0x6384	; 0x6384 <micros>
    cdc4:	00 91 87 45 	lds	r16, 0x4587	; 0x804587 <looptimer>
    cdc8:	10 91 88 45 	lds	r17, 0x4588	; 0x804588 <looptimer+0x1>
    cdcc:	20 91 89 45 	lds	r18, 0x4589	; 0x804589 <looptimer+0x2>
    cdd0:	30 91 8a 45 	lds	r19, 0x458A	; 0x80458a <looptimer+0x3>
    cdd4:	dc 01       	movw	r26, r24
    cdd6:	cb 01       	movw	r24, r22
    cdd8:	80 1b       	sub	r24, r16
    cdda:	91 0b       	sbc	r25, r17
    cddc:	a2 0b       	sbc	r26, r18
    cdde:	b3 0b       	sbc	r27, r19
    cde0:	80 93 87 45 	sts	0x4587, r24	; 0x804587 <looptimer>
    cde4:	90 93 88 45 	sts	0x4588, r25	; 0x804588 <looptimer+0x1>
    cde8:	a0 93 89 45 	sts	0x4589, r26	; 0x804589 <looptimer+0x2>
    cdec:	b0 93 8a 45 	sts	0x458A, r27	; 0x80458a <looptimer+0x3>
    cdf0:	00 91 39 52 	lds	r16, 0x5239	; 0x805239 <uiman>
    cdf4:	10 91 3a 52 	lds	r17, 0x523A	; 0x80523a <uiman+0x1>
    cdf8:	20 91 3b 52 	lds	r18, 0x523B	; 0x80523b <uiman+0x2>
    cdfc:	30 91 3c 52 	lds	r19, 0x523C	; 0x80523c <uiman+0x3>
    ce00:	08 17       	cp	r16, r24
    ce02:	19 07       	cpc	r17, r25
    ce04:	2a 07       	cpc	r18, r26
    ce06:	3b 07       	cpc	r19, r27
    ce08:	10 f0       	brcs	.+4      	; 0xce0e <main+0x111c>
    ce0a:	0c 94 f6 5e 	jmp	0xbdec	; 0xbdec <main+0xfa>
    ce0e:	80 93 39 52 	sts	0x5239, r24	; 0x805239 <uiman>
    ce12:	90 93 3a 52 	sts	0x523A, r25	; 0x80523a <uiman+0x1>
    ce16:	a0 93 3b 52 	sts	0x523B, r26	; 0x80523b <uiman+0x2>
    ce1a:	b0 93 3c 52 	sts	0x523C, r27	; 0x80523c <uiman+0x3>
    ce1e:	0c 94 f6 5e 	jmp	0xbdec	; 0xbdec <main+0xfa>
u8g2_DrawLog():
    ce22:	e0 91 99 51 	lds	r30, 0x5199	; 0x805199 <u8g2log+0xa>
    ce26:	f0 91 9a 51 	lds	r31, 0x519A	; 0x80519a <u8g2log+0xb>
    ce2a:	d8 9e       	mul	r13, r24
    ce2c:	e0 0d       	add	r30, r0
    ce2e:	f1 1d       	adc	r31, r1
    ce30:	11 24       	eor	r1, r1
    ce32:	ec 0d       	add	r30, r12
    ce34:	f1 1d       	adc	r31, r1
    ce36:	20 81       	ld	r18, Z
    ce38:	30 e0       	ldi	r19, 0x00	; 0
    ce3a:	a8 01       	movw	r20, r16
    ce3c:	b7 01       	movw	r22, r14
    ce3e:	87 ea       	ldi	r24, 0xA7	; 167
    ce40:	91 e5       	ldi	r25, 0x51	; 81
    ce42:	0e 94 cc 3a 	call	0x7598	; 0x7598 <u8g2_DrawGlyph>
    ce46:	e8 0e       	add	r14, r24
    ce48:	f9 1e       	adc	r15, r25
    ce4a:	c3 94       	inc	r12
    ce4c:	80 91 95 51 	lds	r24, 0x5195	; 0x805195 <u8g2log+0x6>
    ce50:	c8 16       	cp	r12, r24
    ce52:	38 f3       	brcs	.-50     	; 0xce22 <main+0x1130>
    ce54:	80 91 2d 52 	lds	r24, 0x522D	; 0x80522d <u8g2+0x8a>
    ce58:	08 2e       	mov	r0, r24
    ce5a:	00 0c       	add	r0, r0
    ce5c:	99 0b       	sbc	r25, r25
    ce5e:	20 91 2e 52 	lds	r18, 0x522E	; 0x80522e <u8g2+0x8b>
    ce62:	82 1b       	sub	r24, r18
    ce64:	91 09       	sbc	r25, r1
    ce66:	27 fd       	sbrc	r18, 7
    ce68:	93 95       	inc	r25
    ce6a:	20 91 9c 51 	lds	r18, 0x519C	; 0x80519c <u8g2log+0xd>
    ce6e:	82 0f       	add	r24, r18
    ce70:	91 1d       	adc	r25, r1
    ce72:	27 fd       	sbrc	r18, 7
    ce74:	9a 95       	dec	r25
    ce76:	08 0f       	add	r16, r24
    ce78:	19 1f       	adc	r17, r25
    ce7a:	d3 94       	inc	r13
    ce7c:	eb cd       	rjmp	.-1066   	; 0xca54 <main+0xd62>
_ZN9UImanager13getScreenModeEv():
    ce7e:	8f 70       	andi	r24, 0x0F	; 15
    ce80:	99 27       	eor	r25, r25
updateDisplay():
    ce82:	81 30       	cpi	r24, 0x01	; 1
    ce84:	91 05       	cpc	r25, r1
    ce86:	09 f4       	brne	.+2      	; 0xce8a <main+0x1198>
    ce88:	ac c1       	rjmp	.+856    	; 0xd1e2 <main+0x14f0>
    ce8a:	02 97       	sbiw	r24, 0x02	; 2
    ce8c:	09 f0       	breq	.+2      	; 0xce90 <main+0x119e>
    ce8e:	75 c3       	rjmp	.+1770   	; 0xd57a <main+0x1888>
_ZN4U8G27setFontEPKh():
    ce90:	6b e8       	ldi	r22, 0x8B	; 139
    ce92:	7d e0       	ldi	r23, 0x0D	; 13
    ce94:	87 ea       	ldi	r24, 0xA7	; 167
    ce96:	91 e5       	ldi	r25, 0x51	; 81
    ce98:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
_ZN10K197device14getDisplayHoldEv():
    ce9c:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
updateMinMaxScreen():
    cea0:	83 fd       	sbrc	r24, 3
    cea2:	7d c1       	rjmp	.+762    	; 0xd19e <main+0x14ac>
u8g2_DrawStr():
    cea4:	ae e4       	ldi	r26, 0x4E	; 78
    cea6:	bd e2       	ldi	r27, 0x2D	; 45
    cea8:	a0 93 a9 51 	sts	0x51A9, r26	; 0x8051a9 <u8g2+0x6>
    ceac:	b0 93 aa 51 	sts	0x51AA, r27	; 0x8051aa <u8g2+0x7>
    ceb0:	82 e8       	ldi	r24, 0x82	; 130
    ceb2:	90 e0       	ldi	r25, 0x00	; 0
    ceb4:	0e 94 ef 3b 	call	0x77de	; 0x77de <u8g2_draw_string.constprop.83>
    ceb8:	ee 24       	eor	r14, r14
    ceba:	e3 94       	inc	r14
    cebc:	f1 2c       	mov	r15, r1
_ZN10K197device12isDecPointOnEh():
    cebe:	80 91 6e 52 	lds	r24, 0x526E	; 0x80526e <k197dev+0x9>
    cec2:	90 e0       	ldi	r25, 0x00	; 0
    cec4:	0e 2c       	mov	r0, r14
    cec6:	02 c0       	rjmp	.+4      	; 0xcecc <main+0x11da>
    cec8:	95 95       	asr	r25
    ceca:	87 95       	ror	r24
    cecc:	0a 94       	dec	r0
    cece:	e2 f7       	brpl	.-8      	; 0xcec8 <main+0x11d6>
updateMinMaxScreen():
    ced0:	80 ff       	sbrs	r24, 0
    ced2:	19 c0       	rjmp	.+50     	; 0xcf06 <main+0x1214>
    ced4:	40 91 2d 52 	lds	r20, 0x522D	; 0x80522d <u8g2+0x8a>
    ced8:	04 2e       	mov	r0, r20
    ceda:	00 0c       	add	r0, r0
    cedc:	55 0b       	sbc	r21, r21
    cede:	43 5f       	subi	r20, 0xF3	; 243
    cee0:	5f 4f       	sbci	r21, 0xFF	; 255
    cee2:	20 91 1d 52 	lds	r18, 0x521D	; 0x80521d <u8g2+0x7a>
    cee6:	87 01       	movw	r16, r14
    cee8:	20 03       	mulsu	r18, r16
    ceea:	b0 01       	movw	r22, r0
    ceec:	21 9f       	mul	r18, r17
    ceee:	70 0d       	add	r23, r0
    cef0:	11 24       	eor	r1, r1
    cef2:	60 58       	subi	r22, 0x80	; 128
    cef4:	7f 4f       	sbci	r23, 0xFF	; 255
_ZN4U8G27drawBoxEjjjj():
    cef6:	03 e0       	ldi	r16, 0x03	; 3
    cef8:	10 e0       	ldi	r17, 0x00	; 0
    cefa:	23 e0       	ldi	r18, 0x03	; 3
    cefc:	30 e0       	ldi	r19, 0x00	; 0
    cefe:	87 ea       	ldi	r24, 0xA7	; 167
    cf00:	91 e5       	ldi	r25, 0x51	; 81
    cf02:	0e 94 01 3e 	call	0x7c02	; 0x7c02 <u8g2_DrawBox>
    cf06:	1f ef       	ldi	r17, 0xFF	; 255
    cf08:	e1 1a       	sub	r14, r17
    cf0a:	f1 0a       	sbc	r15, r17
updateMinMaxScreen():
    cf0c:	28 e0       	ldi	r18, 0x08	; 8
    cf0e:	e2 16       	cp	r14, r18
    cf10:	f1 04       	cpc	r15, r1
    cf12:	a9 f6       	brne	.-86     	; 0xcebe <main+0x11cc>
_ZN4U8G27setFontEPKh():
    cf14:	6b ea       	ldi	r22, 0xAB	; 171
    cf16:	7e e2       	ldi	r23, 0x2E	; 46
    cf18:	87 ea       	ldi	r24, 0xA7	; 167
    cf1a:	91 e5       	ldi	r25, 0x51	; 81
    cf1c:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
_ZN4U8G29setCursorEjj():
    cf20:	45 ee       	ldi	r20, 0xE5	; 229
    cf22:	50 e0       	ldi	r21, 0x00	; 0
    cf24:	40 93 35 52 	sts	0x5235, r20	; 0x805235 <u8g2+0x92>
    cf28:	50 93 36 52 	sts	0x5236, r21	; 0x805236 <u8g2+0x93>
    cf2c:	84 e1       	ldi	r24, 0x14	; 20
    cf2e:	90 e0       	ldi	r25, 0x00	; 0
    cf30:	80 93 37 52 	sts	0x5237, r24	; 0x805237 <u8g2+0x94>
    cf34:	90 93 38 52 	sts	0x5238, r25	; 0x805238 <u8g2+0x95>
updateMinMaxScreen():
    cf38:	81 e0       	ldi	r24, 0x01	; 1
    cf3a:	0e 94 31 2f 	call	0x5e62	; 0x5e62 <K197device::getUnit(bool) [clone .constprop.99]>
    cf3e:	bc 01       	movw	r22, r24
    cf40:	83 ea       	ldi	r24, 0xA3	; 163
    cf42:	91 e5       	ldi	r25, 0x51	; 81
    cf44:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN4U8G27setFontEPKh():
    cf48:	6b ea       	ldi	r22, 0xAB	; 171
    cf4a:	7e e2       	ldi	r23, 0x2E	; 46
    cf4c:	87 ea       	ldi	r24, 0xA7	; 167
    cf4e:	91 e5       	ldi	r25, 0x51	; 81
    cf50:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
    cf54:	00 91 1e 52 	lds	r16, 0x521E	; 0x80521e <u8g2+0x7b>
_ZN4U8G29setCursorEjj():
    cf58:	a5 ee       	ldi	r26, 0xE5	; 229
    cf5a:	b0 e0       	ldi	r27, 0x00	; 0
    cf5c:	a0 93 35 52 	sts	0x5235, r26	; 0x805235 <u8g2+0x92>
    cf60:	b0 93 36 52 	sts	0x5236, r27	; 0x805236 <u8g2+0x93>
    cf64:	83 e2       	ldi	r24, 0x23	; 35
    cf66:	90 e0       	ldi	r25, 0x00	; 0
    cf68:	80 93 37 52 	sts	0x5237, r24	; 0x805237 <u8g2+0x94>
    cf6c:	90 93 38 52 	sts	0x5238, r25	; 0x805238 <u8g2+0x95>
updateMinMaxScreen():
    cf70:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    cf74:	63 e4       	ldi	r22, 0x43	; 67
    cf76:	7a e0       	ldi	r23, 0x0A	; 10
    cf78:	84 fd       	sbrc	r24, 4
    cf7a:	02 c0       	rjmp	.+4      	; 0xcf80 <main+0x128e>
    cf7c:	60 e4       	ldi	r22, 0x40	; 64
    cf7e:	7a e0       	ldi	r23, 0x0A	; 10
    cf80:	83 ea       	ldi	r24, 0xA3	; 163
    cf82:	91 e5       	ldi	r25, 0x51	; 81
    cf84:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN4U8G27setFontEPKh():
    cf88:	6c e1       	ldi	r22, 0x1C	; 28
    cf8a:	77 e1       	ldi	r23, 0x17	; 23
    cf8c:	87 ea       	ldi	r24, 0xA7	; 167
    cf8e:	91 e5       	ldi	r25, 0x51	; 81
    cf90:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
_ZN4U8G29setCursorEjj():
    cf94:	10 92 35 52 	sts	0x5235, r1	; 0x805235 <u8g2+0x92>
    cf98:	10 92 36 52 	sts	0x5236, r1	; 0x805236 <u8g2+0x93>
    cf9c:	e5 e0       	ldi	r30, 0x05	; 5
    cf9e:	f0 e0       	ldi	r31, 0x00	; 0
    cfa0:	e0 93 37 52 	sts	0x5237, r30	; 0x805237 <u8g2+0x94>
    cfa4:	f0 93 38 52 	sts	0x5238, r31	; 0x805238 <u8g2+0x95>
updateMinMaxScreen():
    cfa8:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    cfac:	6c e3       	ldi	r22, 0x3C	; 60
    cfae:	7a e0       	ldi	r23, 0x0A	; 10
    cfb0:	81 fd       	sbrc	r24, 1
    cfb2:	02 c0       	rjmp	.+4      	; 0xcfb8 <main+0x12c6>
    cfb4:	68 e3       	ldi	r22, 0x38	; 56
    cfb6:	7a e0       	ldi	r23, 0x0A	; 10
    cfb8:	83 ea       	ldi	r24, 0xA3	; 163
    cfba:	91 e5       	ldi	r25, 0x51	; 81
    cfbc:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN4U8G27setFontEPKh():
    cfc0:	61 e9       	ldi	r22, 0x91	; 145
    cfc2:	76 e5       	ldi	r23, 0x56	; 86
    cfc4:	87 ea       	ldi	r24, 0xA7	; 167
    cfc6:	91 e5       	ldi	r25, 0x51	; 81
    cfc8:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
updateMinMaxScreen():
    cfcc:	e0 90 35 52 	lds	r14, 0x5235	; 0x805235 <u8g2+0x92>
    cfd0:	f0 90 36 52 	lds	r15, 0x5236	; 0x805236 <u8g2+0x93>
    cfd4:	fa e0       	ldi	r31, 0x0A	; 10
    cfd6:	ef 0e       	add	r14, r31
    cfd8:	f1 1c       	adc	r15, r1
_ZN4U8G29setCursorEjj():
    cfda:	e0 92 35 52 	sts	0x5235, r14	; 0x805235 <u8g2+0x92>
    cfde:	f0 92 36 52 	sts	0x5236, r15	; 0x805236 <u8g2+0x93>
    cfe2:	25 e0       	ldi	r18, 0x05	; 5
    cfe4:	30 e0       	ldi	r19, 0x00	; 0
    cfe6:	20 93 37 52 	sts	0x5237, r18	; 0x805237 <u8g2+0x94>
    cfea:	30 93 38 52 	sts	0x5238, r19	; 0x805238 <u8g2+0x95>
updateMinMaxScreen():
    cfee:	63 e3       	ldi	r22, 0x33	; 51
    cff0:	7a e0       	ldi	r23, 0x0A	; 10
    cff2:	83 ea       	ldi	r24, 0xA3	; 163
    cff4:	91 e5       	ldi	r25, 0x51	; 81
    cff6:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    cffa:	00 2e       	mov	r0, r16
    cffc:	00 0c       	add	r0, r0
    cffe:	11 0b       	sbc	r17, r17
    d000:	58 01       	movw	r10, r16
    d002:	35 e0       	ldi	r19, 0x05	; 5
    d004:	a3 0e       	add	r10, r19
    d006:	b1 1c       	adc	r11, r1
_ZN4U8G29setCursorEjj():
    d008:	e0 92 35 52 	sts	0x5235, r14	; 0x805235 <u8g2+0x92>
    d00c:	f0 92 36 52 	sts	0x5236, r15	; 0x805236 <u8g2+0x93>
    d010:	a0 92 37 52 	sts	0x5237, r10	; 0x805237 <u8g2+0x94>
    d014:	b0 92 38 52 	sts	0x5238, r11	; 0x805238 <u8g2+0x95>
updateMinMaxScreen():
    d018:	6e e2       	ldi	r22, 0x2E	; 46
    d01a:	7a e0       	ldi	r23, 0x0A	; 10
    d01c:	83 ea       	ldi	r24, 0xA3	; 163
    d01e:	91 e5       	ldi	r25, 0x51	; 81
    d020:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN4U8G29setCursorEjj():
    d024:	e0 92 35 52 	sts	0x5235, r14	; 0x805235 <u8g2+0x92>
    d028:	f0 92 36 52 	sts	0x5236, r15	; 0x805236 <u8g2+0x93>
updateMinMaxScreen():
    d02c:	a0 0e       	add	r10, r16
    d02e:	b1 1e       	adc	r11, r17
_ZN4U8G29setCursorEjj():
    d030:	a0 92 37 52 	sts	0x5237, r10	; 0x805237 <u8g2+0x94>
    d034:	b0 92 38 52 	sts	0x5238, r11	; 0x805238 <u8g2+0x95>
updateMinMaxScreen():
    d038:	69 e2       	ldi	r22, 0x29	; 41
    d03a:	7a e0       	ldi	r23, 0x0A	; 10
    d03c:	83 ea       	ldi	r24, 0xA3	; 163
    d03e:	91 e5       	ldi	r25, 0x51	; 81
    d040:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN4U8G27setFontEPKh():
    d044:	6b ea       	ldi	r22, 0xAB	; 171
    d046:	7e e2       	ldi	r23, 0x2E	; 46
    d048:	87 ea       	ldi	r24, 0xA7	; 167
    d04a:	91 e5       	ldi	r25, 0x51	; 81
    d04c:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
updateMinMaxScreen():
    d050:	a0 90 35 52 	lds	r10, 0x5235	; 0x805235 <u8g2+0x92>
    d054:	b0 90 36 52 	lds	r11, 0x5236	; 0x805236 <u8g2+0x93>
_ZN4U8G29setCursorEjj():
    d058:	83 e0       	ldi	r24, 0x03	; 3
    d05a:	90 e0       	ldi	r25, 0x00	; 0
    d05c:	80 93 37 52 	sts	0x5237, r24	; 0x805237 <u8g2+0x94>
    d060:	90 93 38 52 	sts	0x5238, r25	; 0x805238 <u8g2+0x95>
updateMinMaxScreen():
    d064:	40 91 8e 52 	lds	r20, 0x528E	; 0x80528e <k197dev+0x29>
    d068:	50 91 8f 52 	lds	r21, 0x528F	; 0x80528f <k197dev+0x2a>
    d06c:	60 91 90 52 	lds	r22, 0x5290	; 0x805290 <k197dev+0x2b>
    d070:	70 91 91 52 	lds	r23, 0x5291	; 0x805291 <k197dev+0x2c>
    d074:	c6 01       	movw	r24, r12
    d076:	0e 94 cd 48 	call	0x919a	; 0x919a <UImanager::formatNumber(char*, float)>
    d07a:	bc 01       	movw	r22, r24
    d07c:	83 ea       	ldi	r24, 0xA3	; 163
    d07e:	91 e5       	ldi	r25, 0x51	; 81
    d080:	0e 94 93 50 	call	0xa126	; 0xa126 <Print::print(char const*)>
    d084:	78 01       	movw	r14, r16
    d086:	43 e0       	ldi	r20, 0x03	; 3
    d088:	e4 0e       	add	r14, r20
    d08a:	f1 1c       	adc	r15, r1
_ZN4U8G29setCursorEjj():
    d08c:	a0 92 35 52 	sts	0x5235, r10	; 0x805235 <u8g2+0x92>
    d090:	b0 92 36 52 	sts	0x5236, r11	; 0x805236 <u8g2+0x93>
    d094:	e0 92 37 52 	sts	0x5237, r14	; 0x805237 <u8g2+0x94>
    d098:	f0 92 38 52 	sts	0x5238, r15	; 0x805238 <u8g2+0x95>
updateMinMaxScreen():
    d09c:	40 91 86 52 	lds	r20, 0x5286	; 0x805286 <k197dev+0x21>
    d0a0:	50 91 87 52 	lds	r21, 0x5287	; 0x805287 <k197dev+0x22>
    d0a4:	60 91 88 52 	lds	r22, 0x5288	; 0x805288 <k197dev+0x23>
    d0a8:	70 91 89 52 	lds	r23, 0x5289	; 0x805289 <k197dev+0x24>
    d0ac:	c6 01       	movw	r24, r12
    d0ae:	0e 94 cd 48 	call	0x919a	; 0x919a <UImanager::formatNumber(char*, float)>
    d0b2:	bc 01       	movw	r22, r24
    d0b4:	83 ea       	ldi	r24, 0xA3	; 163
    d0b6:	91 e5       	ldi	r25, 0x51	; 81
    d0b8:	0e 94 93 50 	call	0xa126	; 0xa126 <Print::print(char const*)>
_ZN4U8G29setCursorEjj():
    d0bc:	a0 92 35 52 	sts	0x5235, r10	; 0x805235 <u8g2+0x92>
    d0c0:	b0 92 36 52 	sts	0x5236, r11	; 0x805236 <u8g2+0x93>
updateMinMaxScreen():
    d0c4:	0e 0d       	add	r16, r14
    d0c6:	1f 1d       	adc	r17, r15
_ZN4U8G29setCursorEjj():
    d0c8:	00 93 37 52 	sts	0x5237, r16	; 0x805237 <u8g2+0x94>
    d0cc:	10 93 38 52 	sts	0x5238, r17	; 0x805238 <u8g2+0x95>
updateMinMaxScreen():
    d0d0:	40 91 8a 52 	lds	r20, 0x528A	; 0x80528a <k197dev+0x25>
    d0d4:	50 91 8b 52 	lds	r21, 0x528B	; 0x80528b <k197dev+0x26>
    d0d8:	60 91 8c 52 	lds	r22, 0x528C	; 0x80528c <k197dev+0x27>
    d0dc:	70 91 8d 52 	lds	r23, 0x528D	; 0x80528d <k197dev+0x28>
    d0e0:	c6 01       	movw	r24, r12
    d0e2:	0e 94 cd 48 	call	0x919a	; 0x919a <UImanager::formatNumber(char*, float)>
    d0e6:	bc 01       	movw	r22, r24
    d0e8:	83 ea       	ldi	r24, 0xA3	; 163
    d0ea:	91 e5       	ldi	r25, 0x51	; 81
    d0ec:	0e 94 93 50 	call	0xa126	; 0xa126 <Print::print(char const*)>
_ZN4U8G29setCursorEjj():
    d0f0:	8a ea       	ldi	r24, 0xAA	; 170
    d0f2:	90 e0       	ldi	r25, 0x00	; 0
    d0f4:	80 93 35 52 	sts	0x5235, r24	; 0x805235 <u8g2+0x92>
    d0f8:	90 93 36 52 	sts	0x5236, r25	; 0x805236 <u8g2+0x93>
    d0fc:	82 e0       	ldi	r24, 0x02	; 2
    d0fe:	90 e0       	ldi	r25, 0x00	; 0
    d100:	80 93 37 52 	sts	0x5237, r24	; 0x805237 <u8g2+0x94>
    d104:	90 93 38 52 	sts	0x5238, r25	; 0x805238 <u8g2+0x95>
_ZN4U8G27setFontEPKh():
    d108:	61 e9       	ldi	r22, 0x91	; 145
    d10a:	76 e5       	ldi	r23, 0x56	; 86
    d10c:	87 ea       	ldi	r24, 0xA7	; 167
    d10e:	91 e5       	ldi	r25, 0x51	; 81
    d110:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
updateMinMaxScreen():
    d114:	0e 94 77 2f 	call	0x5eee	; 0x5eee <K197device::isTKModeActive() [clone .constprop.98]>
    d118:	6e e1       	ldi	r22, 0x1E	; 30
    d11a:	7a e0       	ldi	r23, 0x0A	; 10
    d11c:	88 23       	and	r24, r24
    d11e:	d9 f1       	breq	.+118    	; 0xd196 <main+0x14a4>
getTColdJunction():
    d120:	c0 90 76 52 	lds	r12, 0x5276	; 0x805276 <k197dev+0x11>
    d124:	d0 90 77 52 	lds	r13, 0x5277	; 0x805277 <k197dev+0x12>
    d128:	e0 90 78 52 	lds	r14, 0x5278	; 0x805278 <k197dev+0x13>
    d12c:	f0 90 79 52 	lds	r15, 0x5279	; 0x805279 <k197dev+0x14>
    d130:	c7 01       	movw	r24, r14
    d132:	b6 01       	movw	r22, r12
    d134:	0e 94 e6 77 	call	0xefcc	; 0xefcc <__fixsfsi>
    d138:	9b 01       	movw	r18, r22
    d13a:	77 ff       	sbrs	r23, 7
    d13c:	04 c0       	rjmp	.+8      	; 0xd146 <main+0x1454>
    d13e:	22 27       	eor	r18, r18
    d140:	33 27       	eor	r19, r19
    d142:	26 1b       	sub	r18, r22
    d144:	37 0b       	sbc	r19, r23
    d146:	b9 01       	movw	r22, r18
    d148:	33 0f       	add	r19, r19
    d14a:	88 0b       	sbc	r24, r24
    d14c:	99 0b       	sbc	r25, r25
    d14e:	0e 94 ea 75 	call	0xebd4	; 0xebd4 <__floatsisf>
    d152:	2c e5       	ldi	r18, 0x5C	; 92
    d154:	3f ef       	ldi	r19, 0xFF	; 255
    d156:	49 e7       	ldi	r20, 0x79	; 121
    d158:	54 e4       	ldi	r21, 0x44	; 68
    d15a:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
    d15e:	87 fd       	sbrc	r24, 7
    d160:	08 c0       	rjmp	.+16     	; 0xd172 <main+0x1480>
main():
    d162:	ec e5       	ldi	r30, 0x5C	; 92
    d164:	ce 2e       	mov	r12, r30
    d166:	dd 24       	eor	r13, r13
    d168:	da 94       	dec	r13
    d16a:	e9 e7       	ldi	r30, 0x79	; 121
    d16c:	ee 2e       	mov	r14, r30
    d16e:	e4 e4       	ldi	r30, 0x44	; 68
    d170:	fe 2e       	mov	r15, r30
updateMinMaxScreen():
    d172:	8e 01       	movw	r16, r28
    d174:	0f 5f       	subi	r16, 0xFF	; 255
    d176:	1f 4f       	sbci	r17, 0xFF	; 255
    d178:	22 e0       	ldi	r18, 0x02	; 2
    d17a:	48 e0       	ldi	r20, 0x08	; 8
    d17c:	c7 01       	movw	r24, r14
    d17e:	b6 01       	movw	r22, r12
    d180:	0e 94 23 71 	call	0xe246	; 0xe246 <dtostrf>
    d184:	b8 01       	movw	r22, r16
    d186:	83 ea       	ldi	r24, 0xA3	; 163
    d188:	91 e5       	ldi	r25, 0x51	; 81
    d18a:	0e 94 93 50 	call	0xa126	; 0xa126 <Print::print(char const*)>
    d18e:	80 e0       	ldi	r24, 0x00	; 0
    d190:	0e 94 31 2f 	call	0x5e62	; 0x5e62 <K197device::getUnit(bool) [clone .constprop.99]>
    d194:	bc 01       	movw	r22, r24
    d196:	83 ea       	ldi	r24, 0xA3	; 163
    d198:	91 e5       	ldi	r25, 0x51	; 81
    d19a:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN4U8G27setFontEPKh():
    d19e:	65 ee       	ldi	r22, 0xE5	; 229
    d1a0:	70 e5       	ldi	r23, 0x50	; 80
    d1a2:	87 ea       	ldi	r24, 0xA7	; 167
    d1a4:	91 e5       	ldi	r25, 0x51	; 81
    d1a6:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
updateMinMaxScreen():
    d1aa:	80 91 1e 52 	lds	r24, 0x521E	; 0x80521e <u8g2+0x7b>
    d1ae:	88 0f       	add	r24, r24
    d1b0:	99 0b       	sbc	r25, r25
    d1b2:	05 96       	adiw	r24, 0x05	; 5
_ZN4U8G29setCursorEjj():
    d1b4:	10 92 35 52 	sts	0x5235, r1	; 0x805235 <u8g2+0x92>
    d1b8:	10 92 36 52 	sts	0x5236, r1	; 0x805236 <u8g2+0x93>
    d1bc:	80 93 37 52 	sts	0x5237, r24	; 0x805237 <u8g2+0x94>
    d1c0:	90 93 38 52 	sts	0x5238, r25	; 0x805238 <u8g2+0x95>
_ZN4U8G27setFontEPKh():
    d1c4:	61 e9       	ldi	r22, 0x91	; 145
    d1c6:	76 e5       	ldi	r23, 0x56	; 86
    d1c8:	87 ea       	ldi	r24, 0xA7	; 167
    d1ca:	91 e5       	ldi	r25, 0x51	; 81
    d1cc:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
_ZN10K197device14getDisplayHoldEv():
    d1d0:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
updateMinMaxScreen():
    d1d4:	69 e1       	ldi	r22, 0x19	; 25
    d1d6:	7a e0       	ldi	r23, 0x0A	; 10
    d1d8:	83 fd       	sbrc	r24, 3
    d1da:	ca c1       	rjmp	.+916    	; 0xd570 <main+0x187e>
    d1dc:	64 e1       	ldi	r22, 0x14	; 20
    d1de:	7a e0       	ldi	r23, 0x0A	; 10
    d1e0:	c7 c1       	rjmp	.+910    	; 0xd570 <main+0x187e>
_ZN4U8G27setFontEPKh():
    d1e2:	64 ec       	ldi	r22, 0xC4	; 196
    d1e4:	7b e1       	ldi	r23, 0x1B	; 27
    d1e6:	87 ea       	ldi	r24, 0xA7	; 167
    d1e8:	91 e5       	ldi	r25, 0x51	; 81
    d1ea:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
_ZN10K197device14getDisplayHoldEv():
    d1ee:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
updateNormalScreen():
    d1f2:	83 fd       	sbrc	r24, 3
    d1f4:	70 c0       	rjmp	.+224    	; 0xd2d6 <main+0x15e4>
u8g2_DrawStr():
    d1f6:	ee e4       	ldi	r30, 0x4E	; 78
    d1f8:	fd e2       	ldi	r31, 0x2D	; 45
    d1fa:	e0 93 a9 51 	sts	0x51A9, r30	; 0x8051a9 <u8g2+0x6>
    d1fe:	f0 93 aa 51 	sts	0x51AA, r31	; 0x8051aa <u8g2+0x7>
    d202:	81 e3       	ldi	r24, 0x31	; 49
    d204:	90 e0       	ldi	r25, 0x00	; 0
    d206:	0e 94 ef 3b 	call	0x77de	; 0x77de <u8g2_draw_string.constprop.83>
    d20a:	ee 24       	eor	r14, r14
    d20c:	e3 94       	inc	r14
    d20e:	f1 2c       	mov	r15, r1
_ZN10K197device12isDecPointOnEh():
    d210:	80 91 6e 52 	lds	r24, 0x526E	; 0x80526e <k197dev+0x9>
    d214:	90 e0       	ldi	r25, 0x00	; 0
    d216:	0e 2c       	mov	r0, r14
    d218:	02 c0       	rjmp	.+4      	; 0xd21e <main+0x152c>
    d21a:	95 95       	asr	r25
    d21c:	87 95       	ror	r24
    d21e:	0a 94       	dec	r0
    d220:	e2 f7       	brpl	.-8      	; 0xd21a <main+0x1528>
updateNormalScreen():
    d222:	80 ff       	sbrs	r24, 0
    d224:	19 c0       	rjmp	.+50     	; 0xd258 <main+0x1566>
    d226:	40 91 2d 52 	lds	r20, 0x522D	; 0x80522d <u8g2+0x8a>
    d22a:	04 2e       	mov	r0, r20
    d22c:	00 0c       	add	r0, r0
    d22e:	55 0b       	sbc	r21, r21
    d230:	43 5f       	subi	r20, 0xF3	; 243
    d232:	5f 4f       	sbci	r21, 0xFF	; 255
    d234:	20 91 1d 52 	lds	r18, 0x521D	; 0x80521d <u8g2+0x7a>
    d238:	87 01       	movw	r16, r14
    d23a:	20 03       	mulsu	r18, r16
    d23c:	b0 01       	movw	r22, r0
    d23e:	21 9f       	mul	r18, r17
    d240:	70 0d       	add	r23, r0
    d242:	11 24       	eor	r1, r1
    d244:	61 5d       	subi	r22, 0xD1	; 209
    d246:	7f 4f       	sbci	r23, 0xFF	; 255
_ZN4U8G27drawBoxEjjjj():
    d248:	03 e0       	ldi	r16, 0x03	; 3
    d24a:	10 e0       	ldi	r17, 0x00	; 0
    d24c:	23 e0       	ldi	r18, 0x03	; 3
    d24e:	30 e0       	ldi	r19, 0x00	; 0
    d250:	87 ea       	ldi	r24, 0xA7	; 167
    d252:	91 e5       	ldi	r25, 0x51	; 81
    d254:	0e 94 01 3e 	call	0x7c02	; 0x7c02 <u8g2_DrawBox>
    d258:	1f ef       	ldi	r17, 0xFF	; 255
    d25a:	e1 1a       	sub	r14, r17
    d25c:	f1 0a       	sbc	r15, r17
updateNormalScreen():
    d25e:	28 e0       	ldi	r18, 0x08	; 8
    d260:	e2 16       	cp	r14, r18
    d262:	f1 04       	cpc	r15, r1
    d264:	a9 f6       	brne	.-86     	; 0xd210 <main+0x151e>
_ZN4U8G27setFontEPKh():
    d266:	6b ea       	ldi	r22, 0xAB	; 171
    d268:	7e e2       	ldi	r23, 0x2E	; 46
    d26a:	87 ea       	ldi	r24, 0xA7	; 167
    d26c:	91 e5       	ldi	r25, 0x51	; 81
    d26e:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
_ZN4U8G29setCursorEjj():
    d272:	45 ee       	ldi	r20, 0xE5	; 229
    d274:	50 e0       	ldi	r21, 0x00	; 0
    d276:	40 93 35 52 	sts	0x5235, r20	; 0x805235 <u8g2+0x92>
    d27a:	50 93 36 52 	sts	0x5236, r21	; 0x805236 <u8g2+0x93>
    d27e:	84 e1       	ldi	r24, 0x14	; 20
    d280:	90 e0       	ldi	r25, 0x00	; 0
    d282:	80 93 37 52 	sts	0x5237, r24	; 0x805237 <u8g2+0x94>
    d286:	90 93 38 52 	sts	0x5238, r25	; 0x805238 <u8g2+0x95>
updateNormalScreen():
    d28a:	80 e0       	ldi	r24, 0x00	; 0
    d28c:	0e 94 31 2f 	call	0x5e62	; 0x5e62 <K197device::getUnit(bool) [clone .constprop.99]>
    d290:	bc 01       	movw	r22, r24
    d292:	83 ea       	ldi	r24, 0xA3	; 163
    d294:	91 e5       	ldi	r25, 0x51	; 81
    d296:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN4U8G27setFontEPKh():
    d29a:	6b ea       	ldi	r22, 0xAB	; 171
    d29c:	7e e2       	ldi	r23, 0x2E	; 46
    d29e:	87 ea       	ldi	r24, 0xA7	; 167
    d2a0:	91 e5       	ldi	r25, 0x51	; 81
    d2a2:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
_ZN4U8G29setCursorEjj():
    d2a6:	84 e3       	ldi	r24, 0x34	; 52
    d2a8:	90 e0       	ldi	r25, 0x00	; 0
    d2aa:	80 93 35 52 	sts	0x5235, r24	; 0x805235 <u8g2+0x92>
    d2ae:	90 93 36 52 	sts	0x5236, r25	; 0x805236 <u8g2+0x93>
    d2b2:	88 e2       	ldi	r24, 0x28	; 40
    d2b4:	90 e0       	ldi	r25, 0x00	; 0
    d2b6:	80 93 37 52 	sts	0x5237, r24	; 0x805237 <u8g2+0x94>
    d2ba:	90 93 38 52 	sts	0x5238, r25	; 0x805238 <u8g2+0x95>
updateNormalScreen():
    d2be:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    d2c2:	6d e9       	ldi	r22, 0x9D	; 157
    d2c4:	7a e0       	ldi	r23, 0x0A	; 10
    d2c6:	84 fd       	sbrc	r24, 4
    d2c8:	02 c0       	rjmp	.+4      	; 0xd2ce <main+0x15dc>
    d2ca:	6a e9       	ldi	r22, 0x9A	; 154
    d2cc:	7a e0       	ldi	r23, 0x0A	; 10
    d2ce:	83 ea       	ldi	r24, 0xA3	; 163
    d2d0:	91 e5       	ldi	r25, 0x51	; 81
    d2d2:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN4U8G27setFontEPKh():
    d2d6:	65 ee       	ldi	r22, 0xE5	; 229
    d2d8:	70 e5       	ldi	r23, 0x50	; 80
    d2da:	87 ea       	ldi	r24, 0xA7	; 167
    d2dc:	91 e5       	ldi	r25, 0x51	; 81
    d2de:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
_ZN4U8G29setCursorEjj():
    d2e2:	10 92 35 52 	sts	0x5235, r1	; 0x805235 <u8g2+0x92>
    d2e6:	10 92 36 52 	sts	0x5236, r1	; 0x805236 <u8g2+0x93>
    d2ea:	a5 e0       	ldi	r26, 0x05	; 5
    d2ec:	b0 e0       	ldi	r27, 0x00	; 0
    d2ee:	a0 93 37 52 	sts	0x5237, r26	; 0x805237 <u8g2+0x94>
    d2f2:	b0 93 38 52 	sts	0x5238, r27	; 0x805238 <u8g2+0x95>
updateNormalScreen():
    d2f6:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    d2fa:	65 e9       	ldi	r22, 0x95	; 149
    d2fc:	7a e0       	ldi	r23, 0x0A	; 10
    d2fe:	80 fd       	sbrc	r24, 0
    d300:	02 c0       	rjmp	.+4      	; 0xd306 <main+0x1614>
    d302:	60 e9       	ldi	r22, 0x90	; 144
    d304:	7a e0       	ldi	r23, 0x0A	; 10
    d306:	83 ea       	ldi	r24, 0xA3	; 163
    d308:	91 e5       	ldi	r25, 0x51	; 81
    d30a:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    d30e:	80 91 35 52 	lds	r24, 0x5235	; 0x805235 <u8g2+0x92>
    d312:	90 91 36 52 	lds	r25, 0x5236	; 0x805236 <u8g2+0x93>
    d316:	00 91 1d 52 	lds	r16, 0x521D	; 0x80521d <u8g2+0x7a>
    d31a:	00 0f       	add	r16, r16
    d31c:	11 0b       	sbc	r17, r17
    d31e:	08 0f       	add	r16, r24
    d320:	19 1f       	adc	r17, r25
_ZN4U8G27setFontEPKh():
    d322:	6c e1       	ldi	r22, 0x1C	; 28
    d324:	77 e1       	ldi	r23, 0x17	; 23
    d326:	87 ea       	ldi	r24, 0xA7	; 167
    d328:	91 e5       	ldi	r25, 0x51	; 81
    d32a:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
_ZN4U8G29setCursorEjj():
    d32e:	00 93 35 52 	sts	0x5235, r16	; 0x805235 <u8g2+0x92>
    d332:	10 93 36 52 	sts	0x5236, r17	; 0x805236 <u8g2+0x93>
    d336:	e5 e0       	ldi	r30, 0x05	; 5
    d338:	f0 e0       	ldi	r31, 0x00	; 0
    d33a:	e0 93 37 52 	sts	0x5237, r30	; 0x805237 <u8g2+0x94>
    d33e:	f0 93 38 52 	sts	0x5238, r31	; 0x805238 <u8g2+0x95>
updateNormalScreen():
    d342:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    d346:	6c e8       	ldi	r22, 0x8C	; 140
    d348:	7a e0       	ldi	r23, 0x0A	; 10
    d34a:	86 fd       	sbrc	r24, 6
    d34c:	02 c0       	rjmp	.+4      	; 0xd352 <main+0x1660>
    d34e:	68 e8       	ldi	r22, 0x88	; 136
    d350:	7a e0       	ldi	r23, 0x0A	; 10
    d352:	83 ea       	ldi	r24, 0xA3	; 163
    d354:	91 e5       	ldi	r25, 0x51	; 81
    d356:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN4U8G27setFontEPKh():
    d35a:	65 ee       	ldi	r22, 0xE5	; 229
    d35c:	70 e5       	ldi	r23, 0x50	; 80
    d35e:	87 ea       	ldi	r24, 0xA7	; 167
    d360:	91 e5       	ldi	r25, 0x51	; 81
    d362:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
updateNormalScreen():
    d366:	00 91 1e 52 	lds	r16, 0x521E	; 0x80521e <u8g2+0x7b>
    d36a:	00 2e       	mov	r0, r16
    d36c:	00 0c       	add	r0, r0
    d36e:	11 0b       	sbc	r17, r17
    d370:	0b 5f       	subi	r16, 0xFB	; 251
    d372:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN4U8G29setCursorEjj():
    d374:	10 92 35 52 	sts	0x5235, r1	; 0x805235 <u8g2+0x92>
    d378:	10 92 36 52 	sts	0x5236, r1	; 0x805236 <u8g2+0x93>
    d37c:	00 93 37 52 	sts	0x5237, r16	; 0x805237 <u8g2+0x94>
    d380:	10 93 38 52 	sts	0x5238, r17	; 0x805238 <u8g2+0x95>
_ZN10K197device14getDisplayHoldEv():
    d384:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
updateNormalScreen():
    d388:	83 fd       	sbrc	r24, 3
    d38a:	2d c0       	rjmp	.+90     	; 0xd3e6 <main+0x16f4>
    d38c:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    d390:	64 e8       	ldi	r22, 0x84	; 132
    d392:	7a e0       	ldi	r23, 0x0A	; 10
    d394:	81 fd       	sbrc	r24, 1
    d396:	02 c0       	rjmp	.+4      	; 0xd39c <main+0x16aa>
    d398:	60 e8       	ldi	r22, 0x80	; 128
    d39a:	7a e0       	ldi	r23, 0x0A	; 10
    d39c:	83 ea       	ldi	r24, 0xA3	; 163
    d39e:	91 e5       	ldi	r25, 0x51	; 81
    d3a0:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    d3a4:	20 91 35 52 	lds	r18, 0x5235	; 0x805235 <u8g2+0x92>
    d3a8:	30 91 36 52 	lds	r19, 0x5236	; 0x805236 <u8g2+0x93>
    d3ac:	80 91 1d 52 	lds	r24, 0x521D	; 0x80521d <u8g2+0x7a>
    d3b0:	87 fd       	sbrc	r24, 7
    d3b2:	8f 5f       	subi	r24, 0xFF	; 255
    d3b4:	85 95       	asr	r24
    d3b6:	28 0f       	add	r18, r24
    d3b8:	31 1d       	adc	r19, r1
    d3ba:	87 fd       	sbrc	r24, 7
    d3bc:	3a 95       	dec	r19
_ZN4U8G29setCursorEjj():
    d3be:	20 93 35 52 	sts	0x5235, r18	; 0x805235 <u8g2+0x92>
    d3c2:	30 93 36 52 	sts	0x5236, r19	; 0x805236 <u8g2+0x93>
    d3c6:	00 93 37 52 	sts	0x5237, r16	; 0x805237 <u8g2+0x94>
    d3ca:	10 93 38 52 	sts	0x5238, r17	; 0x805238 <u8g2+0x95>
updateNormalScreen():
    d3ce:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    d3d2:	6d e7       	ldi	r22, 0x7D	; 125
    d3d4:	7a e0       	ldi	r23, 0x0A	; 10
    d3d6:	83 fd       	sbrc	r24, 3
    d3d8:	02 c0       	rjmp	.+4      	; 0xd3de <main+0x16ec>
    d3da:	6a e7       	ldi	r22, 0x7A	; 122
    d3dc:	7a e0       	ldi	r23, 0x0A	; 10
    d3de:	83 ea       	ldi	r24, 0xA3	; 163
    d3e0:	91 e5       	ldi	r25, 0x51	; 81
    d3e2:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    d3e6:	80 91 1e 52 	lds	r24, 0x521E	; 0x80521e <u8g2+0x7b>
    d3ea:	08 0f       	add	r16, r24
    d3ec:	11 1d       	adc	r17, r1
    d3ee:	87 fd       	sbrc	r24, 7
    d3f0:	1a 95       	dec	r17
_ZN4U8G29setCursorEjj():
    d3f2:	10 92 35 52 	sts	0x5235, r1	; 0x805235 <u8g2+0x92>
    d3f6:	10 92 36 52 	sts	0x5236, r1	; 0x805236 <u8g2+0x93>
    d3fa:	00 93 37 52 	sts	0x5237, r16	; 0x805237 <u8g2+0x94>
    d3fe:	10 93 38 52 	sts	0x5238, r17	; 0x805238 <u8g2+0x95>
_ZN10K197device14getDisplayHoldEv():
    d402:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
updateNormalScreen():
    d406:	65 e7       	ldi	r22, 0x75	; 117
    d408:	7a e0       	ldi	r23, 0x0A	; 10
    d40a:	83 fd       	sbrc	r24, 3
    d40c:	22 c0       	rjmp	.+68     	; 0xd452 <main+0x1760>
    d40e:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    d412:	60 e7       	ldi	r22, 0x70	; 112
    d414:	7a e0       	ldi	r23, 0x0A	; 10
    d416:	82 fd       	sbrc	r24, 2
    d418:	02 c0       	rjmp	.+4      	; 0xd41e <main+0x172c>
    d41a:	6b e6       	ldi	r22, 0x6B	; 107
    d41c:	7a e0       	ldi	r23, 0x0A	; 10
    d41e:	83 ea       	ldi	r24, 0xA3	; 163
    d420:	91 e5       	ldi	r25, 0x51	; 81
    d422:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    d426:	80 91 1e 52 	lds	r24, 0x521E	; 0x80521e <u8g2+0x7b>
    d42a:	08 0f       	add	r16, r24
    d42c:	11 1d       	adc	r17, r1
    d42e:	87 fd       	sbrc	r24, 7
    d430:	1a 95       	dec	r17
_ZN4U8G29setCursorEjj():
    d432:	10 92 35 52 	sts	0x5235, r1	; 0x805235 <u8g2+0x92>
    d436:	10 92 36 52 	sts	0x5236, r1	; 0x805236 <u8g2+0x93>
    d43a:	00 93 37 52 	sts	0x5237, r16	; 0x805237 <u8g2+0x94>
    d43e:	10 93 38 52 	sts	0x5238, r17	; 0x805238 <u8g2+0x95>
updateNormalScreen():
    d442:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    d446:	66 e6       	ldi	r22, 0x66	; 102
    d448:	7a e0       	ldi	r23, 0x0A	; 10
    d44a:	85 fd       	sbrc	r24, 5
    d44c:	02 c0       	rjmp	.+4      	; 0xd452 <main+0x1760>
    d44e:	61 e6       	ldi	r22, 0x61	; 97
    d450:	7a e0       	ldi	r23, 0x0A	; 10
    d452:	83 ea       	ldi	r24, 0xA3	; 163
    d454:	91 e5       	ldi	r25, 0x51	; 81
    d456:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN4U8G29setCursorEjj():
    d45a:	05 ee       	ldi	r16, 0xE5	; 229
    d45c:	10 e0       	ldi	r17, 0x00	; 0
    d45e:	00 93 35 52 	sts	0x5235, r16	; 0x805235 <u8g2+0x92>
    d462:	10 93 36 52 	sts	0x5236, r17	; 0x805236 <u8g2+0x93>
    d466:	10 92 37 52 	sts	0x5237, r1	; 0x805237 <u8g2+0x94>
    d46a:	10 92 38 52 	sts	0x5238, r1	; 0x805238 <u8g2+0x95>
_ZN10K197device5isCalEv():
    d46e:	80 91 75 52 	lds	r24, 0x5275	; 0x805275 <k197dev+0x10>
updateNormalScreen():
    d472:	6d e5       	ldi	r22, 0x5D	; 93
    d474:	7a e0       	ldi	r23, 0x0A	; 10
_ZN10K197device5isCalEv():
    d476:	80 fd       	sbrc	r24, 0
    d478:	02 c0       	rjmp	.+4      	; 0xd47e <main+0x178c>
updateNormalScreen():
    d47a:	69 e5       	ldi	r22, 0x59	; 89
    d47c:	7a e0       	ldi	r23, 0x0A	; 10
    d47e:	83 ea       	ldi	r24, 0xA3	; 163
    d480:	91 e5       	ldi	r25, 0x51	; 81
    d482:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    d486:	80 91 1e 52 	lds	r24, 0x521E	; 0x80521e <u8g2+0x7b>
    d48a:	13 e0       	ldi	r17, 0x03	; 3
    d48c:	81 02       	muls	r24, r17
    d48e:	c0 01       	movw	r24, r0
    d490:	11 24       	eor	r1, r1
_ZN4U8G29setCursorEjj():
    d492:	25 ee       	ldi	r18, 0xE5	; 229
    d494:	30 e0       	ldi	r19, 0x00	; 0
    d496:	20 93 35 52 	sts	0x5235, r18	; 0x805235 <u8g2+0x92>
    d49a:	30 93 36 52 	sts	0x5236, r19	; 0x805236 <u8g2+0x93>
    d49e:	80 93 37 52 	sts	0x5237, r24	; 0x805237 <u8g2+0x94>
    d4a2:	90 93 38 52 	sts	0x5238, r25	; 0x805238 <u8g2+0x95>
updateNormalScreen():
    d4a6:	80 91 75 52 	lds	r24, 0x5275	; 0x805275 <k197dev+0x10>
    d4aa:	65 e5       	ldi	r22, 0x55	; 85
    d4ac:	7a e0       	ldi	r23, 0x0A	; 10
    d4ae:	85 fd       	sbrc	r24, 5
    d4b0:	02 c0       	rjmp	.+4      	; 0xd4b6 <main+0x17c4>
    d4b2:	61 e5       	ldi	r22, 0x51	; 81
    d4b4:	7a e0       	ldi	r23, 0x0A	; 10
    d4b6:	83 ea       	ldi	r24, 0xA3	; 163
    d4b8:	91 e5       	ldi	r25, 0x51	; 81
    d4ba:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN4U8G29setCursorEjj():
    d4be:	4c e8       	ldi	r20, 0x8C	; 140
    d4c0:	50 e0       	ldi	r21, 0x00	; 0
    d4c2:	40 93 35 52 	sts	0x5235, r20	; 0x805235 <u8g2+0x92>
    d4c6:	50 93 36 52 	sts	0x5236, r21	; 0x805236 <u8g2+0x93>
    d4ca:	82 e0       	ldi	r24, 0x02	; 2
    d4cc:	90 e0       	ldi	r25, 0x00	; 0
    d4ce:	80 93 37 52 	sts	0x5237, r24	; 0x805237 <u8g2+0x94>
    d4d2:	90 93 38 52 	sts	0x5238, r25	; 0x805238 <u8g2+0x95>
_ZN4U8G27setFontEPKh():
    d4d6:	61 e9       	ldi	r22, 0x91	; 145
    d4d8:	76 e5       	ldi	r23, 0x56	; 86
    d4da:	87 ea       	ldi	r24, 0xA7	; 167
    d4dc:	91 e5       	ldi	r25, 0x51	; 81
    d4de:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
updateNormalScreen():
    d4e2:	0e 94 77 2f 	call	0x5eee	; 0x5eee <K197device::isTKModeActive() [clone .constprop.98]>
    d4e6:	90 91 65 52 	lds	r25, 0x5265	; 0x805265 <k197dev>
    d4ea:	88 23       	and	r24, r24
    d4ec:	11 f0       	breq	.+4      	; 0xd4f2 <main+0x1800>
    d4ee:	93 ff       	sbrs	r25, 3
    d4f0:	05 c0       	rjmp	.+10     	; 0xd4fc <main+0x180a>
    d4f2:	93 fd       	sbrc	r25, 3
    d4f4:	f4 ca       	rjmp	.-2584   	; 0xcade <main+0xdec>
    d4f6:	66 e4       	ldi	r22, 0x46	; 70
    d4f8:	7a e0       	ldi	r23, 0x0A	; 10
    d4fa:	3a c0       	rjmp	.+116    	; 0xd570 <main+0x187e>
getTColdJunction():
    d4fc:	c0 90 76 52 	lds	r12, 0x5276	; 0x805276 <k197dev+0x11>
    d500:	d0 90 77 52 	lds	r13, 0x5277	; 0x805277 <k197dev+0x12>
    d504:	e0 90 78 52 	lds	r14, 0x5278	; 0x805278 <k197dev+0x13>
    d508:	f0 90 79 52 	lds	r15, 0x5279	; 0x805279 <k197dev+0x14>
    d50c:	c7 01       	movw	r24, r14
    d50e:	b6 01       	movw	r22, r12
    d510:	0e 94 e6 77 	call	0xefcc	; 0xefcc <__fixsfsi>
    d514:	9b 01       	movw	r18, r22
    d516:	77 ff       	sbrs	r23, 7
    d518:	04 c0       	rjmp	.+8      	; 0xd522 <main+0x1830>
    d51a:	22 27       	eor	r18, r18
    d51c:	33 27       	eor	r19, r19
    d51e:	26 1b       	sub	r18, r22
    d520:	37 0b       	sbc	r19, r23
    d522:	b9 01       	movw	r22, r18
    d524:	33 0f       	add	r19, r19
    d526:	88 0b       	sbc	r24, r24
    d528:	99 0b       	sbc	r25, r25
    d52a:	0e 94 ea 75 	call	0xebd4	; 0xebd4 <__floatsisf>
    d52e:	2c e5       	ldi	r18, 0x5C	; 92
    d530:	3f ef       	ldi	r19, 0xFF	; 255
    d532:	49 e7       	ldi	r20, 0x79	; 121
    d534:	54 e4       	ldi	r21, 0x44	; 68
    d536:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
    d53a:	87 fd       	sbrc	r24, 7
    d53c:	08 c0       	rjmp	.+16     	; 0xd54e <main+0x185c>
main():
    d53e:	ac e5       	ldi	r26, 0x5C	; 92
    d540:	ca 2e       	mov	r12, r26
    d542:	dd 24       	eor	r13, r13
    d544:	da 94       	dec	r13
    d546:	a9 e7       	ldi	r26, 0x79	; 121
    d548:	ea 2e       	mov	r14, r26
    d54a:	a4 e4       	ldi	r26, 0x44	; 68
    d54c:	fa 2e       	mov	r15, r26
updateNormalScreen():
    d54e:	8e 01       	movw	r16, r28
    d550:	0f 5f       	subi	r16, 0xFF	; 255
    d552:	1f 4f       	sbci	r17, 0xFF	; 255
    d554:	22 e0       	ldi	r18, 0x02	; 2
    d556:	48 e0       	ldi	r20, 0x08	; 8
    d558:	c7 01       	movw	r24, r14
    d55a:	b6 01       	movw	r22, r12
    d55c:	74 d6       	rcall	.+3304   	; 0xe246 <dtostrf>
    d55e:	b8 01       	movw	r22, r16
    d560:	83 ea       	ldi	r24, 0xA3	; 163
    d562:	91 e5       	ldi	r25, 0x51	; 81
    d564:	0e 94 93 50 	call	0xa126	; 0xa126 <Print::print(char const*)>
    d568:	80 e0       	ldi	r24, 0x00	; 0
    d56a:	0e 94 31 2f 	call	0x5e62	; 0x5e62 <K197device::getUnit(bool) [clone .constprop.99]>
    d56e:	bc 01       	movw	r22, r24
drawGraphScreenNormalPanel():
    d570:	83 ea       	ldi	r24, 0xA3	; 163
    d572:	91 e5       	ldi	r25, 0x51	; 81
    d574:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    d578:	b2 ca       	rjmp	.-2716   	; 0xcade <main+0xdec>
_ZN4U8G212setDrawColorEh():
    d57a:	60 e0       	ldi	r22, 0x00	; 0
    d57c:	87 ea       	ldi	r24, 0xA7	; 167
    d57e:	91 e5       	ldi	r25, 0x51	; 81
    d580:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
_ZN4U8G27drawBoxEjjjj():
    d584:	00 e4       	ldi	r16, 0x40	; 64
    d586:	10 e0       	ldi	r17, 0x00	; 0
    d588:	24 eb       	ldi	r18, 0xB4	; 180
    d58a:	30 e0       	ldi	r19, 0x00	; 0
    d58c:	50 e0       	ldi	r21, 0x00	; 0
    d58e:	40 e0       	ldi	r20, 0x00	; 0
    d590:	70 e0       	ldi	r23, 0x00	; 0
    d592:	60 e0       	ldi	r22, 0x00	; 0
    d594:	87 ea       	ldi	r24, 0xA7	; 167
    d596:	91 e5       	ldi	r25, 0x51	; 81
    d598:	0e 94 01 3e 	call	0x7c02	; 0x7c02 <u8g2_DrawBox>
_ZN4U8G212setDrawColorEh():
    d59c:	61 e0       	ldi	r22, 0x01	; 1
    d59e:	87 ea       	ldi	r24, 0xA7	; 167
    d5a0:	91 e5       	ldi	r25, 0x51	; 81
    d5a2:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
_ZN21__class_opt_gr_yscale8getValueEv():
    d5a6:	00 91 d1 50 	lds	r16, 0x50D1	; 0x8050d1 <opt_gr_yscale+0x9>
    d5aa:	10 e0       	ldi	r17, 0x00	; 0
fillGraphDisplayData():
    d5ac:	80 91 63 55 	lds	r24, 0x5563	; 0x805563 <k197dev+0x2fe>
    d5b0:	88 23       	and	r24, r24
    d5b2:	e1 f1       	breq	.+120    	; 0xd62c <main+0x193a>
    d5b4:	20 90 92 52 	lds	r2, 0x5292	; 0x805292 <k197dev+0x2d>
    d5b8:	30 90 93 52 	lds	r3, 0x5293	; 0x805293 <k197dev+0x2e>
    d5bc:	40 90 94 52 	lds	r4, 0x5294	; 0x805294 <k197dev+0x2f>
    d5c0:	50 90 95 52 	lds	r5, 0x5295	; 0x805295 <k197dev+0x30>
    d5c4:	a6 e9       	ldi	r26, 0x96	; 150
    d5c6:	b2 e5       	ldi	r27, 0x52	; 82
    d5c8:	ad 8b       	std	Y+21, r26	; 0x15
    d5ca:	be 8b       	std	Y+22, r27	; 0x16
main():
    d5cc:	31 01       	movw	r6, r2
    d5ce:	52 01       	movw	r10, r4
    d5d0:	88 24       	eor	r8, r8
    d5d2:	83 94       	inc	r8
    d5d4:	91 2c       	mov	r9, r1
fillGraphDisplayData():
    d5d6:	e8 2f       	mov	r30, r24
    d5d8:	f0 e0       	ldi	r31, 0x00	; 0
    d5da:	ef 8b       	std	Y+23, r30	; 0x17
    d5dc:	f8 8f       	std	Y+24, r31	; 0x18
    d5de:	2f 89       	ldd	r18, Y+23	; 0x17
    d5e0:	38 8d       	ldd	r19, Y+24	; 0x18
    d5e2:	82 16       	cp	r8, r18
    d5e4:	93 06       	cpc	r9, r19
    d5e6:	54 f5       	brge	.+84     	; 0xd63c <main+0x194a>
    d5e8:	ad 89       	ldd	r26, Y+21	; 0x15
    d5ea:	be 89       	ldd	r27, Y+22	; 0x16
    d5ec:	cd 90       	ld	r12, X+
    d5ee:	dd 90       	ld	r13, X+
    d5f0:	ed 90       	ld	r14, X+
    d5f2:	fd 90       	ld	r15, X+
    d5f4:	ad 8b       	std	Y+21, r26	; 0x15
    d5f6:	be 8b       	std	Y+22, r27	; 0x16
    d5f8:	91 01       	movw	r18, r2
    d5fa:	a2 01       	movw	r20, r4
    d5fc:	c7 01       	movw	r24, r14
    d5fe:	b6 01       	movw	r22, r12
    d600:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
    d604:	87 ff       	sbrs	r24, 7
    d606:	02 c0       	rjmp	.+4      	; 0xd60c <main+0x191a>
main():
    d608:	16 01       	movw	r2, r12
    d60a:	27 01       	movw	r4, r14
fillGraphDisplayData():
    d60c:	93 01       	movw	r18, r6
    d60e:	a5 01       	movw	r20, r10
    d610:	c7 01       	movw	r24, r14
    d612:	b6 01       	movw	r22, r12
    d614:	0e 94 17 78 	call	0xf02e	; 0xf02e <__gesf2>
    d618:	18 16       	cp	r1, r24
    d61a:	14 f0       	brlt	.+4      	; 0xd620 <main+0x192e>
    d61c:	63 01       	movw	r12, r6
    d61e:	75 01       	movw	r14, r10
    d620:	bf ef       	ldi	r27, 0xFF	; 255
    d622:	8b 1a       	sub	r8, r27
    d624:	9b 0a       	sbc	r9, r27
    d626:	36 01       	movw	r6, r12
    d628:	57 01       	movw	r10, r14
    d62a:	d9 cf       	rjmp	.-78     	; 0xd5de <main+0x18ec>
main():
    d62c:	61 2c       	mov	r6, r1
    d62e:	71 2c       	mov	r7, r1
    d630:	a1 2c       	mov	r10, r1
    d632:	b1 2c       	mov	r11, r1
    d634:	21 2c       	mov	r2, r1
    d636:	31 2c       	mov	r3, r1
    d638:	41 2c       	mov	r4, r1
    d63a:	51 2c       	mov	r5, r1
setScale():
    d63c:	a1 01       	movw	r20, r2
    d63e:	b2 01       	movw	r22, r4
    d640:	82 ea       	ldi	r24, 0xA2	; 162
    d642:	90 e5       	ldi	r25, 0x50	; 80
    d644:	0e 94 8a 45 	call	0x8b14	; 0x8b14 <k197graph_label_type::setLog10Ceiling(float)>
    d648:	a3 01       	movw	r20, r6
    d64a:	b5 01       	movw	r22, r10
    d64c:	80 ea       	ldi	r24, 0xA0	; 160
    d64e:	90 e5       	ldi	r25, 0x50	; 80
    d650:	0e 94 8a 45 	call	0x8b14	; 0x8b14 <k197graph_label_type::setLog10Ceiling(float)>
    d654:	a1 01       	movw	r20, r2
    d656:	b2 01       	movw	r22, r4
    d658:	82 ea       	ldi	r24, 0xA2	; 162
    d65a:	90 e5       	ldi	r25, 0x50	; 80
    d65c:	0e 94 c4 44 	call	0x8988	; 0x8988 <k197graph_label_type::setScaleMultiplierDown(float)>
    d660:	a3 01       	movw	r20, r6
    d662:	b5 01       	movw	r22, r10
    d664:	80 ea       	ldi	r24, 0xA0	; 160
    d666:	90 e5       	ldi	r25, 0x50	; 80
    d668:	0e 94 27 45 	call	0x8a4e	; 0x8a4e <k197graph_label_type::setScaleMultiplierUp(float)>
    d66c:	90 91 a2 50 	lds	r25, 0x50A2	; 0x8050a2 <k197graph+0xb8>
_ZNK20k197graph_label_type12isNormalizedEv():
    d670:	89 e0       	ldi	r24, 0x09	; 9
    d672:	89 0f       	add	r24, r25
operator==():
    d674:	83 31       	cpi	r24, 0x13	; 19
    d676:	30 f5       	brcc	.+76     	; 0xd6c4 <main+0x19d2>
    d678:	80 91 a0 50 	lds	r24, 0x50A0	; 0x8050a0 <k197graph+0xb6>
_ZNK20k197graph_label_type12isNormalizedEv():
    d67c:	29 e0       	ldi	r18, 0x09	; 9
    d67e:	28 0f       	add	r18, r24
operator==():
    d680:	23 31       	cpi	r18, 0x13	; 19
    d682:	00 f5       	brcc	.+64     	; 0xd6c4 <main+0x19d2>
    d684:	98 13       	cpse	r25, r24
    d686:	06 c0       	rjmp	.+12     	; 0xd694 <main+0x19a2>
    d688:	90 91 a3 50 	lds	r25, 0x50A3	; 0x8050a3 <k197graph+0xb9>
    d68c:	80 91 a1 50 	lds	r24, 0x50A1	; 0x8050a1 <k197graph+0xb7>
    d690:	98 17       	cp	r25, r24
    d692:	51 f1       	breq	.+84     	; 0xd6e8 <main+0x19f6>
setScale():
    d694:	01 30       	cpi	r16, 0x01	; 1
    d696:	11 05       	cpc	r17, r1
    d698:	21 f0       	breq	.+8      	; 0xd6a2 <main+0x19b0>
    d69a:	03 30       	cpi	r16, 0x03	; 3
    d69c:	11 05       	cpc	r17, r1
    d69e:	09 f0       	breq	.+2      	; 0xd6a2 <main+0x19b0>
    d6a0:	4c c0       	rjmp	.+152    	; 0xd73a <main+0x1a48>
    d6a2:	80 91 a2 50 	lds	r24, 0x50A2	; 0x8050a2 <k197graph+0xb8>
    d6a6:	18 16       	cp	r1, r24
    d6a8:	24 f4       	brge	.+8      	; 0xd6b2 <main+0x19c0>
_ZN20k197graph_label_type5resetEv():
    d6aa:	10 92 a2 50 	sts	0x50A2, r1	; 0x8050a2 <k197graph+0xb8>
    d6ae:	10 92 a3 50 	sts	0x50A3, r1	; 0x8050a3 <k197graph+0xb9>
setScale():
    d6b2:	80 91 a0 50 	lds	r24, 0x50A0	; 0x8050a0 <k197graph+0xb6>
    d6b6:	87 ff       	sbrs	r24, 7
    d6b8:	40 c0       	rjmp	.+128    	; 0xd73a <main+0x1a48>
_ZN20k197graph_label_type5resetEv():
    d6ba:	10 92 a0 50 	sts	0x50A0, r1	; 0x8050a0 <k197graph+0xb6>
    d6be:	10 92 a1 50 	sts	0x50A1, r1	; 0x8050a1 <k197graph+0xb7>
    d6c2:	3b c0       	rjmp	.+118    	; 0xd73a <main+0x1a48>
operator==():
    d6c4:	82 ea       	ldi	r24, 0xA2	; 162
    d6c6:	90 e5       	ldi	r25, 0x50	; 80
    d6c8:	0e 94 cf 45 	call	0x8b9e	; 0x8b9e <k197graph_label_type::getValue() const>
    d6cc:	6b 01       	movw	r12, r22
    d6ce:	7c 01       	movw	r14, r24
    d6d0:	80 ea       	ldi	r24, 0xA0	; 160
    d6d2:	90 e5       	ldi	r25, 0x50	; 80
    d6d4:	0e 94 cf 45 	call	0x8b9e	; 0x8b9e <k197graph_label_type::getValue() const>
    d6d8:	9b 01       	movw	r18, r22
    d6da:	ac 01       	movw	r20, r24
setScale():
    d6dc:	c7 01       	movw	r24, r14
    d6de:	b6 01       	movw	r22, r12
    d6e0:	0e 94 e4 75 	call	0xebc8	; 0xebc8 <__cmpsf2>
    d6e4:	81 11       	cpse	r24, r1
    d6e6:	d6 cf       	rjmp	.-84     	; 0xd694 <main+0x19a2>
    d6e8:	80 91 a0 50 	lds	r24, 0x50A0	; 0x8050a0 <k197graph+0xb6>
    d6ec:	18 16       	cp	r1, r24
    d6ee:	5c f0       	brlt	.+22     	; 0xd706 <main+0x1a14>
    d6f0:	88 23       	and	r24, r24
    d6f2:	a1 f0       	breq	.+40     	; 0xd71c <main+0x1a2a>
_ZN20k197graph_label_typemmEv():
    d6f4:	80 91 a1 50 	lds	r24, 0x50A1	; 0x8050a1 <k197graph+0xb7>
    d6f8:	81 50       	subi	r24, 0x01	; 1
    d6fa:	80 93 a1 50 	sts	0x50A1, r24	; 0x8050a1 <k197graph+0xb7>
_ZN20k197graph_label_typeppEv():
    d6fe:	80 91 a3 50 	lds	r24, 0x50A3	; 0x8050a3 <k197graph+0xb9>
    d702:	8f 5f       	subi	r24, 0xFF	; 255
    d704:	08 c0       	rjmp	.+16     	; 0xd716 <main+0x1a24>
    d706:	80 91 a1 50 	lds	r24, 0x50A1	; 0x8050a1 <k197graph+0xb7>
    d70a:	8f 5f       	subi	r24, 0xFF	; 255
    d70c:	80 93 a1 50 	sts	0x50A1, r24	; 0x8050a1 <k197graph+0xb7>
_ZN20k197graph_label_typemmEv():
    d710:	80 91 a3 50 	lds	r24, 0x50A3	; 0x8050a3 <k197graph+0xb9>
    d714:	81 50       	subi	r24, 0x01	; 1
_ZN20k197graph_label_typeppEv():
    d716:	80 93 a3 50 	sts	0x50A3, r24	; 0x8050a3 <k197graph+0xb9>
    d71a:	bc cf       	rjmp	.-136    	; 0xd694 <main+0x19a2>
_ZN20k197graph_label_type8setValueEaa():
    d71c:	81 e0       	ldi	r24, 0x01	; 1
    d71e:	80 93 a0 50 	sts	0x50A0, r24	; 0x8050a0 <k197graph+0xb6>
    d722:	8a ef       	ldi	r24, 0xFA	; 250
    d724:	80 93 a1 50 	sts	0x50A1, r24	; 0x8050a1 <k197graph+0xb7>
    d728:	9f ef       	ldi	r25, 0xFF	; 255
    d72a:	90 93 a2 50 	sts	0x50A2, r25	; 0x8050a2 <k197graph+0xb8>
    d72e:	80 93 a3 50 	sts	0x50A3, r24	; 0x8050a3 <k197graph+0xb9>
setScale():
    d732:	01 30       	cpi	r16, 0x01	; 1
    d734:	11 05       	cpc	r17, r1
    d736:	09 f0       	breq	.+2      	; 0xd73a <main+0x1a48>
    d738:	81 c5       	rjmp	.+2818   	; 0xe23c <main+0x254a>
    d73a:	c8 01       	movw	r24, r16
    d73c:	02 97       	sbiw	r24, 0x02	; 2
    d73e:	02 97       	sbiw	r24, 0x02	; 2
    d740:	48 f5       	brcc	.+82     	; 0xd794 <main+0x1aa2>
    d742:	80 91 a2 50 	lds	r24, 0x50A2	; 0x8050a2 <k197graph+0xb8>
    d746:	87 ff       	sbrs	r24, 7
    d748:	38 c0       	rjmp	.+112    	; 0xd7ba <main+0x1ac8>
    d74a:	90 91 a0 50 	lds	r25, 0x50A0	; 0x8050a0 <k197graph+0xb6>
    d74e:	19 16       	cp	r1, r25
    d750:	a4 f5       	brge	.+104    	; 0xd7ba <main+0x1ac8>
_ZNK20k197graph_label_type13__builtin_absEv():
    d752:	90 91 a3 50 	lds	r25, 0x50A3	; 0x8050a3 <k197graph+0xb9>
setScale():
    d756:	89 83       	std	Y+1, r24	; 0x01
    d758:	9a 83       	std	Y+2, r25	; 0x02
operator>():
    d75a:	ce 01       	movw	r24, r28
    d75c:	01 96       	adiw	r24, 0x01	; 1
    d75e:	0e 94 cf 45 	call	0x8b9e	; 0x8b9e <k197graph_label_type::getValue() const>
    d762:	6b 01       	movw	r12, r22
    d764:	7c 01       	movw	r14, r24
    d766:	80 ea       	ldi	r24, 0xA0	; 160
    d768:	90 e5       	ldi	r25, 0x50	; 80
    d76a:	0e 94 cf 45 	call	0x8b9e	; 0x8b9e <k197graph_label_type::getValue() const>
    d76e:	9b 01       	movw	r18, r22
    d770:	ac 01       	movw	r20, r24
setScale():
    d772:	c7 01       	movw	r24, r14
    d774:	b6 01       	movw	r22, r12
    d776:	0e 94 17 78 	call	0xf02e	; 0xf02e <__gesf2>
    d77a:	18 16       	cp	r1, r24
    d77c:	0c f0       	brlt	.+2      	; 0xd780 <main+0x1a8e>
    d77e:	b1 c0       	rjmp	.+354    	; 0xd8e2 <main+0x1bf0>
operator-():
    d780:	90 91 a3 50 	lds	r25, 0x50A3	; 0x8050a3 <k197graph+0xb9>
    d784:	80 91 a2 50 	lds	r24, 0x50A2	; 0x8050a2 <k197graph+0xb8>
    d788:	81 95       	neg	r24
_ZN20k197graph_label_type8setValueES_():
    d78a:	80 93 a0 50 	sts	0x50A0, r24	; 0x8050a0 <k197graph+0xb6>
    d78e:	90 93 a1 50 	sts	0x50A1, r25	; 0x8050a1 <k197graph+0xb7>
    d792:	13 c0       	rjmp	.+38     	; 0xd7ba <main+0x1ac8>
setScale():
    d794:	04 30       	cpi	r16, 0x04	; 4
    d796:	11 05       	cpc	r17, r1
    d798:	81 f4       	brne	.+32     	; 0xd7ba <main+0x1ac8>
    d79a:	90 91 a0 50 	lds	r25, 0x50A0	; 0x8050a0 <k197graph+0xb6>
    d79e:	80 91 a2 50 	lds	r24, 0x50A2	; 0x8050a2 <k197graph+0xb8>
    d7a2:	19 16       	cp	r1, r25
    d7a4:	0c f0       	brlt	.+2      	; 0xd7a8 <main+0x1ab6>
    d7a6:	90 c0       	rjmp	.+288    	; 0xd8c8 <main+0x1bd6>
    d7a8:	18 16       	cp	r1, r24
    d7aa:	9c f6       	brge	.-90     	; 0xd752 <main+0x1a60>
operator-():
    d7ac:	80 91 a1 50 	lds	r24, 0x50A1	; 0x8050a1 <k197graph+0xb7>
    d7b0:	91 95       	neg	r25
_ZN20k197graph_label_type8setValueES_():
    d7b2:	90 93 a2 50 	sts	0x50A2, r25	; 0x8050a2 <k197graph+0xb8>
    d7b6:	80 93 a3 50 	sts	0x50A3, r24	; 0x8050a3 <k197graph+0xb9>
fillGraphDisplayData():
    d7ba:	82 ea       	ldi	r24, 0xA2	; 162
    d7bc:	90 e5       	ldi	r25, 0x50	; 80
    d7be:	0e 94 cf 45 	call	0x8b9e	; 0x8b9e <k197graph_label_type::getValue() const>
    d7c2:	6b 01       	movw	r12, r22
    d7c4:	7c 01       	movw	r14, r24
    d7c6:	80 ea       	ldi	r24, 0xA0	; 160
    d7c8:	90 e5       	ldi	r25, 0x50	; 80
    d7ca:	0e 94 cf 45 	call	0x8b9e	; 0x8b9e <k197graph_label_type::getValue() const>
    d7ce:	a7 01       	movw	r20, r14
    d7d0:	96 01       	movw	r18, r12
    d7d2:	0e 94 19 77 	call	0xee32	; 0xee32 <__subsf3>
    d7d6:	9b 01       	movw	r18, r22
    d7d8:	ac 01       	movw	r20, r24
    d7da:	60 e0       	ldi	r22, 0x00	; 0
    d7dc:	70 e0       	ldi	r23, 0x00	; 0
    d7de:	8c e7       	ldi	r24, 0x7C	; 124
    d7e0:	92 e4       	ldi	r25, 0x42	; 66
    d7e2:	0e 94 7e 77 	call	0xeefc	; 0xeefc <__divsf3>
    d7e6:	2b 01       	movw	r4, r22
    d7e8:	3c 01       	movw	r6, r24
    d7ea:	a0 90 63 55 	lds	r10, 0x5563	; 0x805563 <k197dev+0x2fe>
    d7ee:	b1 2c       	mov	r11, r1
    d7f0:	52 e9       	ldi	r21, 0x92	; 146
    d7f2:	25 2e       	mov	r2, r21
    d7f4:	52 e5       	ldi	r21, 0x52	; 82
    d7f6:	35 2e       	mov	r3, r21
    d7f8:	6a ee       	ldi	r22, 0xEA	; 234
    d7fa:	86 2e       	mov	r8, r22
    d7fc:	6f e4       	ldi	r22, 0x4F	; 79
    d7fe:	96 2e       	mov	r9, r22
main():
    d800:	10 e0       	ldi	r17, 0x00	; 0
    d802:	00 e0       	ldi	r16, 0x00	; 0
fillGraphDisplayData():
    d804:	0a 15       	cp	r16, r10
    d806:	1b 05       	cpc	r17, r11
    d808:	9c f5       	brge	.+102    	; 0xd870 <main+0x1b7e>
    d80a:	04 3b       	cpi	r16, 0xB4	; 180
    d80c:	11 05       	cpc	r17, r1
    d80e:	09 f0       	breq	.+2      	; 0xd812 <main+0x1b20>
    d810:	72 c0       	rjmp	.+228    	; 0xd8f6 <main+0x1c04>
    d812:	61 e1       	ldi	r22, 0x11	; 17
    d814:	7a e0       	ldi	r23, 0x0A	; 10
    d816:	8e ed       	ldi	r24, 0xDE	; 222
    d818:	97 e4       	ldi	r25, 0x47	; 71
    d81a:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    d81e:	4a e0       	ldi	r20, 0x0A	; 10
    d820:	50 e0       	ldi	r21, 0x00	; 0
    d822:	64 eb       	ldi	r22, 0xB4	; 180
    d824:	70 e0       	ldi	r23, 0x00	; 0
    d826:	8e ed       	ldi	r24, 0xDE	; 222
    d828:	97 e4       	ldi	r25, 0x47	; 71
    d82a:	0e 94 ef 4c 	call	0x99de	; 0x99de <Print::print(int, int)>
    d82e:	6c e0       	ldi	r22, 0x0C	; 12
    d830:	7a e0       	ldi	r23, 0x0A	; 10
    d832:	8e ed       	ldi	r24, 0xDE	; 222
    d834:	97 e4       	ldi	r25, 0x47	; 71
    d836:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    d83a:	4a e0       	ldi	r20, 0x0A	; 10
    d83c:	50 e0       	ldi	r21, 0x00	; 0
    d83e:	60 91 63 55 	lds	r22, 0x5563	; 0x805563 <k197dev+0x2fe>
    d842:	8e ed       	ldi	r24, 0xDE	; 222
    d844:	97 e4       	ldi	r25, 0x47	; 71
    d846:	0e 94 97 4a 	call	0x952e	; 0x952e <Print::print(unsigned char, int)>
    d84a:	67 e0       	ldi	r22, 0x07	; 7
    d84c:	7a e0       	ldi	r23, 0x0A	; 10
    d84e:	8e ed       	ldi	r24, 0xDE	; 222
    d850:	97 e4       	ldi	r25, 0x47	; 71
    d852:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    d856:	4a e0       	ldi	r20, 0x0A	; 10
    d858:	50 e0       	ldi	r21, 0x00	; 0
    d85a:	64 eb       	ldi	r22, 0xB4	; 180
    d85c:	8e ed       	ldi	r24, 0xDE	; 222
    d85e:	97 e4       	ldi	r25, 0x47	; 71
    d860:	0e 94 97 4a 	call	0x952e	; 0x952e <Print::print(unsigned char, int)>
    d864:	6b ef       	ldi	r22, 0xFB	; 251
    d866:	79 e0       	ldi	r23, 0x09	; 9
    d868:	8e ed       	ldi	r24, 0xDE	; 222
    d86a:	97 e4       	ldi	r25, 0x47	; 71
    d86c:	0e 94 6e 49 	call	0x92dc	; 0x92dc <Print::println(__FlashStringHelper const*)>
    d870:	80 91 a2 50 	lds	r24, 0x50A2	; 0x8050a2 <k197graph+0xb8>
    d874:	87 ff       	sbrs	r24, 7
    d876:	5b c0       	rjmp	.+182    	; 0xd92e <main+0x1c3c>
    d878:	80 91 a0 50 	lds	r24, 0x50A0	; 0x8050a0 <k197graph+0xb6>
    d87c:	18 16       	cp	r1, r24
    d87e:	0c f0       	brlt	.+2      	; 0xd882 <main+0x1b90>
    d880:	56 c0       	rjmp	.+172    	; 0xd92e <main+0x1c3c>
    d882:	a3 01       	movw	r20, r6
    d884:	92 01       	movw	r18, r4
    d886:	c7 01       	movw	r24, r14
    d888:	b6 01       	movw	r22, r12
    d88a:	0e 94 49 76 	call	0xec92	; 0xec92 <__mulsf3>
    d88e:	9b 01       	movw	r18, r22
    d890:	ac 01       	movw	r20, r24
    d892:	60 e0       	ldi	r22, 0x00	; 0
    d894:	70 e0       	ldi	r23, 0x00	; 0
    d896:	80 e0       	ldi	r24, 0x00	; 0
    d898:	9f e3       	ldi	r25, 0x3F	; 63
    d89a:	0e 94 19 77 	call	0xee32	; 0xee32 <__subsf3>
    d89e:	0e 94 eb 77 	call	0xefd6	; 0xefd6 <__fixunssfsi>
    d8a2:	60 93 a4 50 	sts	0x50A4, r22	; 0x8050a4 <k197graph+0xba>
    d8a6:	80 91 62 55 	lds	r24, 0x5562	; 0x805562 <k197dev+0x2fd>
    d8aa:	80 93 9e 50 	sts	0x509E, r24	; 0x80509e <k197graph+0xb4>
    d8ae:	20 91 63 55 	lds	r18, 0x5563	; 0x805563 <k197dev+0x2fe>
    d8b2:	20 93 9f 50 	sts	0x509F, r18	; 0x80509f <k197graph+0xb5>
main():
    d8b6:	80 e1       	ldi	r24, 0x10	; 16
    d8b8:	90 e0       	ldi	r25, 0x00	; 0
updateGraphScreen():
    d8ba:	30 e0       	ldi	r19, 0x00	; 0
    d8bc:	82 17       	cp	r24, r18
    d8be:	93 07       	cpc	r25, r19
    d8c0:	c8 f5       	brcc	.+114    	; 0xd934 <main+0x1c42>
    d8c2:	88 0f       	add	r24, r24
    d8c4:	99 1f       	adc	r25, r25
    d8c6:	fa cf       	rjmp	.-12     	; 0xd8bc <main+0x1bca>
    d8c8:	20 91 a3 50 	lds	r18, 0x50A3	; 0x8050a3 <k197graph+0xb9>
setScale():
    d8cc:	99 23       	and	r25, r25
    d8ce:	09 f4       	brne	.+2      	; 0xd8d2 <main+0x1be0>
    d8d0:	40 cf       	rjmp	.-384    	; 0xd752 <main+0x1a60>
    d8d2:	87 ff       	sbrs	r24, 7
    d8d4:	3e cf       	rjmp	.-388    	; 0xd752 <main+0x1a60>
operator-():
    d8d6:	81 95       	neg	r24
_ZN20k197graph_label_type8setValueES_():
    d8d8:	80 93 a0 50 	sts	0x50A0, r24	; 0x8050a0 <k197graph+0xb6>
    d8dc:	20 93 a1 50 	sts	0x50A1, r18	; 0x8050a1 <k197graph+0xb7>
    d8e0:	6c cf       	rjmp	.-296    	; 0xd7ba <main+0x1ac8>
operator-():
    d8e2:	90 91 a1 50 	lds	r25, 0x50A1	; 0x8050a1 <k197graph+0xb7>
    d8e6:	80 91 a0 50 	lds	r24, 0x50A0	; 0x8050a0 <k197graph+0xb6>
    d8ea:	81 95       	neg	r24
_ZN20k197graph_label_type8setValueES_():
    d8ec:	80 93 a2 50 	sts	0x50A2, r24	; 0x8050a2 <k197graph+0xb8>
    d8f0:	90 93 a3 50 	sts	0x50A3, r25	; 0x8050a3 <k197graph+0xb9>
    d8f4:	62 cf       	rjmp	.-316    	; 0xd7ba <main+0x1ac8>
fillGraphDisplayData():
    d8f6:	f1 01       	movw	r30, r2
    d8f8:	61 91       	ld	r22, Z+
    d8fa:	71 91       	ld	r23, Z+
    d8fc:	81 91       	ld	r24, Z+
    d8fe:	91 91       	ld	r25, Z+
    d900:	1f 01       	movw	r2, r30
    d902:	a7 01       	movw	r20, r14
    d904:	96 01       	movw	r18, r12
    d906:	0e 94 19 77 	call	0xee32	; 0xee32 <__subsf3>
    d90a:	a3 01       	movw	r20, r6
    d90c:	92 01       	movw	r18, r4
    d90e:	0e 94 49 76 	call	0xec92	; 0xec92 <__mulsf3>
    d912:	20 e0       	ldi	r18, 0x00	; 0
    d914:	30 e0       	ldi	r19, 0x00	; 0
    d916:	40 e0       	ldi	r20, 0x00	; 0
    d918:	5f e3       	ldi	r21, 0x3F	; 63
    d91a:	0e 94 1a 77 	call	0xee34	; 0xee34 <__addsf3>
    d91e:	0e 94 eb 77 	call	0xefd6	; 0xefd6 <__fixunssfsi>
    d922:	d4 01       	movw	r26, r8
    d924:	6d 93       	st	X+, r22
    d926:	4d 01       	movw	r8, r26
    d928:	0f 5f       	subi	r16, 0xFF	; 255
    d92a:	1f 4f       	sbci	r17, 0xFF	; 255
    d92c:	6b cf       	rjmp	.-298    	; 0xd804 <main+0x1b12>
    d92e:	10 92 a4 50 	sts	0x50A4, r1	; 0x8050a4 <k197graph+0xba>
    d932:	b9 cf       	rjmp	.-142    	; 0xd8a6 <main+0x1bb4>
    d934:	6c 01       	movw	r12, r24
    d936:	85 3b       	cpi	r24, 0xB5	; 181
    d938:	91 05       	cpc	r25, r1
    d93a:	18 f0       	brcs	.+6      	; 0xd942 <main+0x1c50>
    d93c:	34 eb       	ldi	r19, 0xB4	; 180
    d93e:	c3 2e       	mov	r12, r19
    d940:	d1 2c       	mov	r13, r1
updateGraphScreen():
    d942:	84 eb       	ldi	r24, 0xB4	; 180
    d944:	90 e0       	ldi	r25, 0x00	; 0
    d946:	b6 01       	movw	r22, r12
    d948:	0e 94 2c 78 	call	0xf058	; 0xf058 <__udivmodhi4>
    d94c:	7b 01       	movw	r14, r22
    d94e:	56 2e       	mov	r5, r22
_ZN4U8G28drawLineEjjjj():
    d950:	10 e0       	ldi	r17, 0x00	; 0
    d952:	00 e0       	ldi	r16, 0x00	; 0
    d954:	24 eb       	ldi	r18, 0xB4	; 180
    d956:	30 e0       	ldi	r19, 0x00	; 0
    d958:	4f e3       	ldi	r20, 0x3F	; 63
    d95a:	50 e0       	ldi	r21, 0x00	; 0
    d95c:	64 eb       	ldi	r22, 0xB4	; 180
    d95e:	70 e0       	ldi	r23, 0x00	; 0
    d960:	87 ea       	ldi	r24, 0xA7	; 167
    d962:	91 e5       	ldi	r25, 0x51	; 81
    d964:	0e 94 65 37 	call	0x6eca	; 0x6eca <u8g2_DrawLine>
updateGraphScreen():
    d968:	80 91 c7 50 	lds	r24, 0x50C7	; 0x8050c7 <gr_yscale_show0+0x6>
    d96c:	88 23       	and	r24, r24
    d96e:	39 f1       	breq	.+78     	; 0xd9be <main+0x1ccc>
    d970:	80 91 a2 50 	lds	r24, 0x50A2	; 0x8050a2 <k197graph+0xb8>
    d974:	87 ff       	sbrs	r24, 7
    d976:	23 c0       	rjmp	.+70     	; 0xd9be <main+0x1ccc>
    d978:	80 91 a0 50 	lds	r24, 0x50A0	; 0x8050a0 <k197graph+0xb6>
    d97c:	18 16       	cp	r1, r24
    d97e:	fc f4       	brge	.+62     	; 0xd9be <main+0x1ccc>
    d980:	80 91 a4 50 	lds	r24, 0x50A4	; 0x8050a4 <k197graph+0xba>
    d984:	2f e3       	ldi	r18, 0x3F	; 63
    d986:	30 e0       	ldi	r19, 0x00	; 0
    d988:	49 01       	movw	r8, r18
    d98a:	88 1a       	sub	r8, r24
    d98c:	91 08       	sbc	r9, r1
    d98e:	b1 2c       	mov	r11, r1
    d990:	a1 2c       	mov	r10, r1
_ZN4U8G28drawLineEjjjj():
    d992:	95 01       	movw	r18, r10
    d994:	26 5f       	subi	r18, 0xF6	; 246
    d996:	3f 4f       	sbci	r19, 0xFF	; 255
    d998:	25 3b       	cpi	r18, 0xB5	; 181
    d99a:	31 05       	cpc	r19, r1
    d99c:	10 f0       	brcs	.+4      	; 0xd9a2 <main+0x1cb0>
    d99e:	24 eb       	ldi	r18, 0xB4	; 180
    d9a0:	30 e0       	ldi	r19, 0x00	; 0
    d9a2:	84 01       	movw	r16, r8
    d9a4:	a4 01       	movw	r20, r8
    d9a6:	b5 01       	movw	r22, r10
    d9a8:	87 ea       	ldi	r24, 0xA7	; 167
    d9aa:	91 e5       	ldi	r25, 0x51	; 81
    d9ac:	0e 94 65 37 	call	0x6eca	; 0x6eca <u8g2_DrawLine>
drawDottedHLine():
    d9b0:	e4 e1       	ldi	r30, 0x14	; 20
    d9b2:	ae 0e       	add	r10, r30
    d9b4:	b1 1c       	adc	r11, r1
    d9b6:	f8 ec       	ldi	r31, 0xC8	; 200
    d9b8:	af 16       	cp	r10, r31
    d9ba:	b1 04       	cpc	r11, r1
    d9bc:	51 f7       	brne	.-44     	; 0xd992 <main+0x1ca0>
_ZN4U8G27setFontEPKh():
    d9be:	6c e1       	ldi	r22, 0x1C	; 28
    d9c0:	77 e1       	ldi	r23, 0x17	; 23
    d9c2:	87 ea       	ldi	r24, 0xA7	; 167
    d9c4:	91 e5       	ldi	r25, 0x51	; 81
    d9c6:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
_ZN4U8G212setDrawColorEh():
    d9ca:	60 e0       	ldi	r22, 0x00	; 0
    d9cc:	87 ea       	ldi	r24, 0xA7	; 167
    d9ce:	91 e5       	ldi	r25, 0x51	; 81
    d9d0:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
updateGraphScreen():
    d9d4:	80 91 1e 52 	lds	r24, 0x521E	; 0x80521e <u8g2+0x7b>
    d9d8:	2f e3       	ldi	r18, 0x3F	; 63
    d9da:	a2 2e       	mov	r10, r18
    d9dc:	b1 2c       	mov	r11, r1
    d9de:	a5 01       	movw	r20, r10
    d9e0:	48 1b       	sub	r20, r24
    d9e2:	51 09       	sbc	r21, r1
    d9e4:	87 fd       	sbrc	r24, 7
    d9e6:	53 95       	inc	r21
_ZN4U8G27drawBoxEjjjj():
    d9e8:	0f e3       	ldi	r16, 0x3F	; 63
    d9ea:	10 e0       	ldi	r17, 0x00	; 0
    d9ec:	20 e0       	ldi	r18, 0x00	; 0
    d9ee:	31 e0       	ldi	r19, 0x01	; 1
    d9f0:	66 eb       	ldi	r22, 0xB6	; 182
    d9f2:	70 e0       	ldi	r23, 0x00	; 0
    d9f4:	87 ea       	ldi	r24, 0xA7	; 167
    d9f6:	91 e5       	ldi	r25, 0x51	; 81
    d9f8:	0e 94 01 3e 	call	0x7c02	; 0x7c02 <u8g2_DrawBox>
updateGraphScreen():
    d9fc:	00 91 1e 52 	lds	r16, 0x521E	; 0x80521e <u8g2+0x7b>
    da00:	00 2e       	mov	r0, r16
    da02:	00 0c       	add	r0, r0
    da04:	11 0b       	sbc	r17, r17
_ZN4U8G27drawBoxEjjjj():
    da06:	20 e0       	ldi	r18, 0x00	; 0
    da08:	31 e0       	ldi	r19, 0x01	; 1
    da0a:	50 e0       	ldi	r21, 0x00	; 0
    da0c:	40 e0       	ldi	r20, 0x00	; 0
    da0e:	66 eb       	ldi	r22, 0xB6	; 182
    da10:	70 e0       	ldi	r23, 0x00	; 0
    da12:	87 ea       	ldi	r24, 0xA7	; 167
    da14:	91 e5       	ldi	r25, 0x51	; 81
    da16:	0e 94 01 3e 	call	0x7c02	; 0x7c02 <u8g2_DrawBox>
_ZN4U8G212setDrawColorEh():
    da1a:	61 e0       	ldi	r22, 0x01	; 1
    da1c:	87 ea       	ldi	r24, 0xA7	; 167
    da1e:	91 e5       	ldi	r25, 0x51	; 81
    da20:	0e 94 94 36 	call	0x6d28	; 0x6d28 <u8g2_SetDrawColor>
updateGraphScreen():
    da24:	80 91 1e 52 	lds	r24, 0x521E	; 0x80521e <u8g2+0x7b>
    da28:	a8 1a       	sub	r10, r24
    da2a:	b1 08       	sbc	r11, r1
    da2c:	87 fd       	sbrc	r24, 7
    da2e:	b3 94       	inc	r11
_ZN4U8G29setCursorEjj():
    da30:	86 eb       	ldi	r24, 0xB6	; 182
    da32:	90 e0       	ldi	r25, 0x00	; 0
    da34:	80 93 35 52 	sts	0x5235, r24	; 0x805235 <u8g2+0x92>
    da38:	90 93 36 52 	sts	0x5236, r25	; 0x805236 <u8g2+0x93>
    da3c:	a0 92 37 52 	sts	0x5237, r10	; 0x805237 <u8g2+0x94>
    da40:	b0 92 38 52 	sts	0x5238, r11	; 0x805238 <u8g2+0x95>
_ZN10K197device14getGraphPeriodEv():
    da44:	80 91 68 55 	lds	r24, 0x5568	; 0x805568 <k197dev+0x303>
    da48:	90 91 69 55 	lds	r25, 0x5569	; 0x805569 <k197dev+0x304>
    da4c:	23 e0       	ldi	r18, 0x03	; 3
    da4e:	30 e0       	ldi	r19, 0x00	; 0
    da50:	b9 01       	movw	r22, r18
    da52:	0e 94 2c 78 	call	0xf058	; 0xf058 <__udivmodhi4>
    da56:	cb 01       	movw	r24, r22
    da58:	99 27       	eor	r25, r25
updateGraphScreen():
    da5a:	00 97       	sbiw	r24, 0x00	; 0
    da5c:	b1 f5       	brne	.+108    	; 0xdaca <main+0x1dd8>
    da5e:	c6 01       	movw	r24, r12
    da60:	b9 01       	movw	r22, r18
    da62:	0e 94 2c 78 	call	0xf058	; 0xf058 <__udivmodhi4>
    da66:	10 91 a2 50 	lds	r17, 0x50A2	; 0x8050a2 <k197graph+0xb8>
    da6a:	d0 90 a3 50 	lds	r13, 0x50A3	; 0x8050a3 <k197graph+0xb9>
print():
    da6e:	ab 01       	movw	r20, r22
    da70:	70 e0       	ldi	r23, 0x00	; 0
    da72:	60 e0       	ldi	r22, 0x00	; 0
    da74:	2a e0       	ldi	r18, 0x0A	; 10
    da76:	83 ea       	ldi	r24, 0xA3	; 163
    da78:	91 e5       	ldi	r25, 0x51	; 81
    da7a:	0e 94 52 4a 	call	0x94a4	; 0x94a4 <Print::printNumber(unsigned long, unsigned char)>
printXYLabel():
    da7e:	68 ef       	ldi	r22, 0xF8	; 248
    da80:	79 e0       	ldi	r23, 0x09	; 9
    da82:	83 ea       	ldi	r24, 0xA3	; 163
    da84:	91 e5       	ldi	r25, 0x51	; 81
    da86:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    da8a:	0e 94 8b 2f 	call	0x5f16	; 0x5f16 <K197device::getUnitPow10() [clone .constprop.91]>
    da8e:	d8 0e       	add	r13, r24
    da90:	61 2f       	mov	r22, r17
    da92:	11 0f       	add	r17, r17
    da94:	77 0b       	sbc	r23, r23
    da96:	4a e0       	ldi	r20, 0x0A	; 10
    da98:	50 e0       	ldi	r21, 0x00	; 0
    da9a:	83 ea       	ldi	r24, 0xA3	; 163
    da9c:	91 e5       	ldi	r25, 0x51	; 81
    da9e:	0e 94 ef 4c 	call	0x99de	; 0x99de <Print::print(int, int)>
getZeroes():
    daa2:	d7 fc       	sbrc	r13, 7
    daa4:	1a c0       	rjmp	.+52     	; 0xdada <main+0x1de8>
    daa6:	8d 2d       	mov	r24, r13
    daa8:	63 e0       	ldi	r22, 0x03	; 3
    daaa:	0e 94 1f 78 	call	0xf03e	; 0xf03e <__divmodqi4>
main():
    daae:	c1 2c       	mov	r12, r1
printXYLabel():
    dab0:	09 2f       	mov	r16, r25
    dab2:	99 0f       	add	r25, r25
    dab4:	11 0b       	sbc	r17, r17
    dab6:	c0 16       	cp	r12, r16
    dab8:	11 06       	cpc	r1, r17
    daba:	dc f4       	brge	.+54     	; 0xdaf2 <main+0x1e00>
    dabc:	60 e3       	ldi	r22, 0x30	; 48
    dabe:	83 ea       	ldi	r24, 0xA3	; 163
    dac0:	91 e5       	ldi	r25, 0x51	; 81
    dac2:	0e 94 bd 2f 	call	0x5f7a	; 0x5f7a <Print::print(char)>
    dac6:	c3 94       	inc	r12
    dac8:	f6 cf       	rjmp	.-20     	; 0xdab6 <main+0x1dc4>
updateGraphScreen():
    daca:	8c 9d       	mul	r24, r12
    dacc:	b0 01       	movw	r22, r0
    dace:	8d 9d       	mul	r24, r13
    dad0:	70 0d       	add	r23, r0
    dad2:	9c 9d       	mul	r25, r12
    dad4:	70 0d       	add	r23, r0
    dad6:	11 24       	eor	r1, r1
    dad8:	c6 cf       	rjmp	.-116    	; 0xda66 <main+0x1d74>
getZeroes():
    dada:	8d 2d       	mov	r24, r13
    dadc:	0d 2c       	mov	r0, r13
    dade:	00 0c       	add	r0, r0
    dae0:	99 0b       	sbc	r25, r25
    dae2:	01 96       	adiw	r24, 0x01	; 1
    dae4:	63 e0       	ldi	r22, 0x03	; 3
    dae6:	70 e0       	ldi	r23, 0x00	; 0
    dae8:	0e 94 40 78 	call	0xf080	; 0xf080 <__divmodhi4>
    daec:	92 e0       	ldi	r25, 0x02	; 2
    daee:	98 0f       	add	r25, r24
    daf0:	de cf       	rjmp	.-68     	; 0xdaae <main+0x1dbc>
getPrefix():
    daf2:	d7 fc       	sbrc	r13, 7
    daf4:	3e c0       	rjmp	.+124    	; 0xdb72 <main+0x1e80>
    daf6:	8d 2d       	mov	r24, r13
    daf8:	63 e0       	ldi	r22, 0x03	; 3
    dafa:	0e 94 1f 78 	call	0xf03e	; 0xf03e <__divmodqi4>
    dafe:	e3 e0       	ldi	r30, 0x03	; 3
    db00:	e8 0f       	add	r30, r24
    db02:	0e 2e       	mov	r0, r30
    db04:	00 0c       	add	r0, r0
    db06:	ff 0b       	sbc	r31, r31
    db08:	e5 56       	subi	r30, 0x65	; 101
    db0a:	fe 4b       	sbci	r31, 0xBE	; 190
printXYLabel():
    db0c:	60 81       	ld	r22, Z
    db0e:	83 ea       	ldi	r24, 0xA3	; 163
    db10:	91 e5       	ldi	r25, 0x51	; 81
    db12:	0e 94 bd 2f 	call	0x5f7a	; 0x5f7a <Print::print(char)>
_ZN4U8G29setCursorEjj():
    db16:	86 eb       	ldi	r24, 0xB6	; 182
    db18:	90 e0       	ldi	r25, 0x00	; 0
    db1a:	80 93 35 52 	sts	0x5235, r24	; 0x805235 <u8g2+0x92>
    db1e:	90 93 36 52 	sts	0x5236, r25	; 0x805236 <u8g2+0x93>
    db22:	10 92 37 52 	sts	0x5237, r1	; 0x805237 <u8g2+0x94>
    db26:	10 92 38 52 	sts	0x5238, r1	; 0x805238 <u8g2+0x95>
    db2a:	10 91 a0 50 	lds	r17, 0x50A0	; 0x8050a0 <k197graph+0xb6>
printYLabel():
    db2e:	0e 94 8b 2f 	call	0x5f16	; 0x5f16 <K197device::getUnitPow10() [clone .constprop.91]>
    db32:	d0 90 a1 50 	lds	r13, 0x50A1	; 0x8050a1 <k197graph+0xb7>
    db36:	d8 0e       	add	r13, r24
    db38:	61 2f       	mov	r22, r17
    db3a:	11 0f       	add	r17, r17
    db3c:	77 0b       	sbc	r23, r23
    db3e:	4a e0       	ldi	r20, 0x0A	; 10
    db40:	50 e0       	ldi	r21, 0x00	; 0
    db42:	83 ea       	ldi	r24, 0xA3	; 163
    db44:	91 e5       	ldi	r25, 0x51	; 81
    db46:	0e 94 ef 4c 	call	0x99de	; 0x99de <Print::print(int, int)>
getZeroes():
    db4a:	d7 fc       	sbrc	r13, 7
    db4c:	1d c0       	rjmp	.+58     	; 0xdb88 <main+0x1e96>
    db4e:	8d 2d       	mov	r24, r13
    db50:	63 e0       	ldi	r22, 0x03	; 3
    db52:	0e 94 1f 78 	call	0xf03e	; 0xf03e <__divmodqi4>
main():
    db56:	c1 2c       	mov	r12, r1
printYLabel():
    db58:	09 2f       	mov	r16, r25
    db5a:	99 0f       	add	r25, r25
    db5c:	11 0b       	sbc	r17, r17
    db5e:	c0 16       	cp	r12, r16
    db60:	11 06       	cpc	r1, r17
    db62:	f4 f4       	brge	.+60     	; 0xdba0 <main+0x1eae>
    db64:	60 e3       	ldi	r22, 0x30	; 48
    db66:	83 ea       	ldi	r24, 0xA3	; 163
    db68:	91 e5       	ldi	r25, 0x51	; 81
    db6a:	0e 94 bd 2f 	call	0x5f7a	; 0x5f7a <Print::print(char)>
    db6e:	c3 94       	inc	r12
    db70:	f6 cf       	rjmp	.-20     	; 0xdb5e <main+0x1e6c>
getPrefix():
    db72:	8d 2d       	mov	r24, r13
    db74:	dd 0c       	add	r13, r13
    db76:	99 0b       	sbc	r25, r25
    db78:	01 96       	adiw	r24, 0x01	; 1
    db7a:	63 e0       	ldi	r22, 0x03	; 3
    db7c:	70 e0       	ldi	r23, 0x00	; 0
    db7e:	0e 94 40 78 	call	0xf080	; 0xf080 <__divmodhi4>
    db82:	e2 e0       	ldi	r30, 0x02	; 2
    db84:	e6 0f       	add	r30, r22
    db86:	bd cf       	rjmp	.-134    	; 0xdb02 <main+0x1e10>
getZeroes():
    db88:	8d 2d       	mov	r24, r13
    db8a:	0d 2c       	mov	r0, r13
    db8c:	00 0c       	add	r0, r0
    db8e:	99 0b       	sbc	r25, r25
    db90:	01 96       	adiw	r24, 0x01	; 1
    db92:	63 e0       	ldi	r22, 0x03	; 3
    db94:	70 e0       	ldi	r23, 0x00	; 0
    db96:	0e 94 40 78 	call	0xf080	; 0xf080 <__divmodhi4>
    db9a:	92 e0       	ldi	r25, 0x02	; 2
    db9c:	98 0f       	add	r25, r24
    db9e:	db cf       	rjmp	.-74     	; 0xdb56 <main+0x1e64>
getPrefix():
    dba0:	d7 fc       	sbrc	r13, 7
    dba2:	46 c0       	rjmp	.+140    	; 0xdc30 <main+0x1f3e>
    dba4:	8d 2d       	mov	r24, r13
    dba6:	63 e0       	ldi	r22, 0x03	; 3
    dba8:	0e 94 1f 78 	call	0xf03e	; 0xf03e <__divmodqi4>
    dbac:	e3 e0       	ldi	r30, 0x03	; 3
    dbae:	e8 0f       	add	r30, r24
    dbb0:	0e 2e       	mov	r0, r30
    dbb2:	00 0c       	add	r0, r0
    dbb4:	ff 0b       	sbc	r31, r31
    dbb6:	e5 56       	subi	r30, 0x65	; 101
    dbb8:	fe 4b       	sbci	r31, 0xBE	; 190
printYLabel():
    dbba:	60 81       	ld	r22, Z
    dbbc:	83 ea       	ldi	r24, 0xA3	; 163
    dbbe:	91 e5       	ldi	r25, 0x51	; 81
    dbc0:	0e 94 bd 2f 	call	0x5f7a	; 0x5f7a <Print::print(char)>
updateGraphScreen():
    dbc4:	60 90 35 52 	lds	r6, 0x5235	; 0x805235 <u8g2+0x92>
    dbc8:	70 90 36 52 	lds	r7, 0x5236	; 0x805236 <u8g2+0x93>
    dbcc:	90 91 e1 50 	lds	r25, 0x50E1	; 0x8050e1 <opt_gr_type+0x9>
    dbd0:	80 91 9f 50 	lds	r24, 0x509F	; 0x80509f <k197graph+0xb5>
    dbd4:	01 e0       	ldi	r16, 0x01	; 1
    dbd6:	50 12       	cpse	r5, r16
    dbd8:	06 c0       	rjmp	.+12     	; 0xdbe6 <main+0x1ef4>
    dbda:	84 3b       	cpi	r24, 0xB4	; 180
    dbdc:	21 f4       	brne	.+8      	; 0xdbe6 <main+0x1ef4>
    dbde:	20 91 ba 50 	lds	r18, 0x50BA	; 0x8050ba <gr_xscale_roll_mode+0x6>
    dbe2:	21 11       	cpse	r18, r1
    dbe4:	30 c0       	rjmp	.+96     	; 0xdc46 <main+0x1f54>
    dbe6:	91 30       	cpi	r25, 0x01	; 1
    dbe8:	09 f0       	breq	.+2      	; 0xdbec <main+0x1efa>
    dbea:	91 c0       	rjmp	.+290    	; 0xdd0e <main+0x201c>
    dbec:	ba ee       	ldi	r27, 0xEA	; 234
    dbee:	ab 2e       	mov	r10, r27
    dbf0:	bf e4       	ldi	r27, 0x4F	; 79
    dbf2:	bb 2e       	mov	r11, r27
    dbf4:	70 e0       	ldi	r23, 0x00	; 0
    dbf6:	60 e0       	ldi	r22, 0x00	; 0
    dbf8:	1f e3       	ldi	r17, 0x3F	; 63
    dbfa:	c1 2e       	mov	r12, r17
    dbfc:	d1 2c       	mov	r13, r1
    dbfe:	87 01       	movw	r16, r14
    dc00:	06 0f       	add	r16, r22
    dc02:	17 1f       	adc	r17, r23
    dc04:	20 91 9f 50 	lds	r18, 0x509F	; 0x80509f <k197graph+0xb5>
    dc08:	c5 01       	movw	r24, r10
    dc0a:	8a 5e       	subi	r24, 0xEA	; 234
    dc0c:	9f 44       	sbci	r25, 0x4F	; 79
    dc0e:	28 17       	cp	r18, r24
    dc10:	19 06       	cpc	r1, r25
    dc12:	09 f0       	breq	.+2      	; 0xdc16 <main+0x1f24>
    dc14:	0c f4       	brge	.+2      	; 0xdc18 <main+0x1f26>
    dc16:	a7 c0       	rjmp	.+334    	; 0xdd66 <main+0x2074>
    dc18:	d5 01       	movw	r26, r10
    dc1a:	8d 91       	ld	r24, X+
    dc1c:	5d 01       	movw	r10, r26
    dc1e:	a6 01       	movw	r20, r12
    dc20:	48 1b       	sub	r20, r24
    dc22:	51 09       	sbc	r21, r1
_ZN4U8G29drawPixelEjj():
    dc24:	87 ea       	ldi	r24, 0xA7	; 167
    dc26:	91 e5       	ldi	r25, 0x51	; 81
    dc28:	0e 94 44 37 	call	0x6e88	; 0x6e88 <u8g2_DrawPixel>
    dc2c:	b8 01       	movw	r22, r16
    dc2e:	e7 cf       	rjmp	.-50     	; 0xdbfe <main+0x1f0c>
getPrefix():
    dc30:	8d 2d       	mov	r24, r13
    dc32:	dd 0c       	add	r13, r13
    dc34:	99 0b       	sbc	r25, r25
    dc36:	01 96       	adiw	r24, 0x01	; 1
    dc38:	63 e0       	ldi	r22, 0x03	; 3
    dc3a:	70 e0       	ldi	r23, 0x00	; 0
    dc3c:	0e 94 40 78 	call	0xf080	; 0xf080 <__divmodhi4>
    dc40:	e2 e0       	ldi	r30, 0x02	; 2
    dc42:	e6 0f       	add	r30, r22
    dc44:	b5 cf       	rjmp	.-150    	; 0xdbb0 <main+0x1ebe>
updateGraphScreen():
    dc46:	91 30       	cpi	r25, 0x01	; 1
    dc48:	39 f5       	brne	.+78     	; 0xdc98 <main+0x1fa6>
    dc4a:	b1 2c       	mov	r11, r1
    dc4c:	a1 2c       	mov	r10, r1
_ZN14k197graph_type3idxEj():
    dc4e:	94 eb       	ldi	r25, 0xB4	; 180
    dc50:	c9 2e       	mov	r12, r25
    dc52:	d1 2c       	mov	r13, r1
updateGraphScreen():
    dc54:	0f e3       	ldi	r16, 0x3F	; 63
    dc56:	10 e0       	ldi	r17, 0x00	; 0
    dc58:	80 91 9f 50 	lds	r24, 0x509F	; 0x80509f <k197graph+0xb5>
    dc5c:	8a 15       	cp	r24, r10
    dc5e:	1b 04       	cpc	r1, r11
    dc60:	09 f0       	breq	.+2      	; 0xdc64 <main+0x1f72>
    dc62:	0c f4       	brge	.+2      	; 0xdc66 <main+0x1f74>
    dc64:	96 c0       	rjmp	.+300    	; 0xdd92 <main+0x20a0>
_ZN14k197graph_type3idxEj():
    dc66:	80 91 9e 50 	lds	r24, 0x509E	; 0x80509e <k197graph+0xb4>
    dc6a:	90 e0       	ldi	r25, 0x00	; 0
    dc6c:	01 96       	adiw	r24, 0x01	; 1
    dc6e:	8a 0d       	add	r24, r10
    dc70:	9b 1d       	adc	r25, r11
    dc72:	b6 01       	movw	r22, r12
    dc74:	0e 94 2c 78 	call	0xf058	; 0xf058 <__udivmodhi4>
updateGraphScreen():
    dc78:	fc 01       	movw	r30, r24
    dc7a:	e6 51       	subi	r30, 0x16	; 22
    dc7c:	f0 4b       	sbci	r31, 0xB0	; 176
    dc7e:	80 81       	ld	r24, Z
    dc80:	a8 01       	movw	r20, r16
    dc82:	48 1b       	sub	r20, r24
    dc84:	51 09       	sbc	r21, r1
_ZN4U8G29drawPixelEjj():
    dc86:	b5 01       	movw	r22, r10
    dc88:	87 ea       	ldi	r24, 0xA7	; 167
    dc8a:	91 e5       	ldi	r25, 0x51	; 81
    dc8c:	0e 94 44 37 	call	0x6e88	; 0x6e88 <u8g2_DrawPixel>
updateGraphScreen():
    dc90:	2f ef       	ldi	r18, 0xFF	; 255
    dc92:	a2 1a       	sub	r10, r18
    dc94:	b2 0a       	sbc	r11, r18
    dc96:	e0 cf       	rjmp	.-64     	; 0xdc58 <main+0x1f66>
main():
    dc98:	d1 2c       	mov	r13, r1
    dc9a:	c1 2c       	mov	r12, r1
_ZN14k197graph_type3idxEj():
    dc9c:	04 eb       	ldi	r16, 0xB4	; 180
    dc9e:	80 2e       	mov	r8, r16
    dca0:	91 2c       	mov	r9, r1
updateGraphScreen():
    dca2:	8f e3       	ldi	r24, 0x3F	; 63
    dca4:	a8 2e       	mov	r10, r24
    dca6:	b1 2c       	mov	r11, r1
    dca8:	80 91 9f 50 	lds	r24, 0x509F	; 0x80509f <k197graph+0xb5>
    dcac:	81 50       	subi	r24, 0x01	; 1
    dcae:	99 0b       	sbc	r25, r25
    dcb0:	c8 16       	cp	r12, r24
    dcb2:	d9 06       	cpc	r13, r25
    dcb4:	0c f0       	brlt	.+2      	; 0xdcb8 <main+0x1fc6>
    dcb6:	6d c0       	rjmp	.+218    	; 0xdd92 <main+0x20a0>
    dcb8:	3f ef       	ldi	r19, 0xFF	; 255
    dcba:	c3 1a       	sub	r12, r19
    dcbc:	d3 0a       	sbc	r13, r19
_ZN14k197graph_type3idxEj():
    dcbe:	20 91 9e 50 	lds	r18, 0x509E	; 0x80509e <k197graph+0xb4>
    dcc2:	30 e0       	ldi	r19, 0x00	; 0
    dcc4:	2f 5f       	subi	r18, 0xFF	; 255
    dcc6:	3f 4f       	sbci	r19, 0xFF	; 255
    dcc8:	f6 01       	movw	r30, r12
    dcca:	31 97       	sbiw	r30, 0x01	; 1
    dccc:	c6 01       	movw	r24, r12
    dcce:	82 0f       	add	r24, r18
    dcd0:	93 1f       	adc	r25, r19
    dcd2:	b4 01       	movw	r22, r8
    dcd4:	0e 94 2c 78 	call	0xf058	; 0xf058 <__udivmodhi4>
updateGraphScreen():
    dcd8:	dc 01       	movw	r26, r24
    dcda:	a6 51       	subi	r26, 0x16	; 22
    dcdc:	b0 4b       	sbci	r27, 0xB0	; 176
    dcde:	8c 91       	ld	r24, X
    dce0:	85 01       	movw	r16, r10
    dce2:	08 1b       	sub	r16, r24
    dce4:	11 09       	sbc	r17, r1
_ZN14k197graph_type3idxEj():
    dce6:	cf 01       	movw	r24, r30
    dce8:	82 0f       	add	r24, r18
    dcea:	93 1f       	adc	r25, r19
    dcec:	b4 01       	movw	r22, r8
    dcee:	0e 94 2c 78 	call	0xf058	; 0xf058 <__udivmodhi4>
updateGraphScreen():
    dcf2:	dc 01       	movw	r26, r24
    dcf4:	a6 51       	subi	r26, 0x16	; 22
    dcf6:	b0 4b       	sbci	r27, 0xB0	; 176
    dcf8:	8c 91       	ld	r24, X
    dcfa:	a5 01       	movw	r20, r10
    dcfc:	48 1b       	sub	r20, r24
    dcfe:	51 09       	sbc	r21, r1
_ZN4U8G28drawLineEjjjj():
    dd00:	96 01       	movw	r18, r12
    dd02:	bf 01       	movw	r22, r30
    dd04:	87 ea       	ldi	r24, 0xA7	; 167
    dd06:	91 e5       	ldi	r25, 0x51	; 81
    dd08:	0e 94 65 37 	call	0x6eca	; 0x6eca <u8g2_DrawLine>
    dd0c:	cd cf       	rjmp	.-102    	; 0xdca8 <main+0x1fb6>
updateGraphScreen():
    dd0e:	82 30       	cpi	r24, 0x02	; 2
    dd10:	08 f4       	brcc	.+2      	; 0xdd14 <main+0x2022>
    dd12:	6c cf       	rjmp	.-296    	; 0xdbec <main+0x1efa>
    dd14:	fa ee       	ldi	r31, 0xEA	; 234
    dd16:	cf 2e       	mov	r12, r31
    dd18:	ff e4       	ldi	r31, 0x4F	; 79
    dd1a:	df 2e       	mov	r13, r31
    dd1c:	70 e0       	ldi	r23, 0x00	; 0
    dd1e:	60 e0       	ldi	r22, 0x00	; 0
    dd20:	af e3       	ldi	r26, 0x3F	; 63
    dd22:	8a 2e       	mov	r8, r26
    dd24:	91 2c       	mov	r9, r1
    dd26:	57 01       	movw	r10, r14
    dd28:	a6 0e       	add	r10, r22
    dd2a:	b7 1e       	adc	r11, r23
    dd2c:	80 91 9f 50 	lds	r24, 0x509F	; 0x80509f <k197graph+0xb5>
    dd30:	81 50       	subi	r24, 0x01	; 1
    dd32:	99 0b       	sbc	r25, r25
    dd34:	96 01       	movw	r18, r12
    dd36:	2a 5e       	subi	r18, 0xEA	; 234
    dd38:	3f 44       	sbci	r19, 0x4F	; 79
    dd3a:	28 17       	cp	r18, r24
    dd3c:	39 07       	cpc	r19, r25
    dd3e:	9c f4       	brge	.+38     	; 0xdd66 <main+0x2074>
    dd40:	f6 01       	movw	r30, r12
    dd42:	81 81       	ldd	r24, Z+1	; 0x01
    dd44:	bf ef       	ldi	r27, 0xFF	; 255
    dd46:	cb 1a       	sub	r12, r27
    dd48:	db 0a       	sbc	r13, r27
    dd4a:	84 01       	movw	r16, r8
    dd4c:	08 1b       	sub	r16, r24
    dd4e:	11 09       	sbc	r17, r1
    dd50:	80 81       	ld	r24, Z
    dd52:	a4 01       	movw	r20, r8
    dd54:	48 1b       	sub	r20, r24
    dd56:	51 09       	sbc	r21, r1
_ZN4U8G28drawLineEjjjj():
    dd58:	95 01       	movw	r18, r10
    dd5a:	87 ea       	ldi	r24, 0xA7	; 167
    dd5c:	91 e5       	ldi	r25, 0x51	; 81
    dd5e:	0e 94 65 37 	call	0x6eca	; 0x6eca <u8g2_DrawLine>
    dd62:	b5 01       	movw	r22, r10
    dd64:	e0 cf       	rjmp	.-64     	; 0xdd26 <main+0x2034>
updateGraphScreen():
    dd66:	80 91 9e 50 	lds	r24, 0x509E	; 0x80509e <k197graph+0xb4>
    dd6a:	90 e0       	ldi	r25, 0x00	; 0
    dd6c:	fc 01       	movw	r30, r24
    dd6e:	e6 51       	subi	r30, 0x16	; 22
    dd70:	f0 4b       	sbci	r31, 0xB0	; 176
    dd72:	20 81       	ld	r18, Z
    dd74:	6f e3       	ldi	r22, 0x3F	; 63
    dd76:	70 e0       	ldi	r23, 0x00	; 0
    dd78:	62 1b       	sub	r22, r18
    dd7a:	71 09       	sbc	r23, r1
    dd7c:	4b e2       	ldi	r20, 0x2B	; 43
    dd7e:	fc 01       	movw	r30, r24
    dd80:	ee 9e       	mul	r14, r30
    dd82:	c0 01       	movw	r24, r0
    dd84:	ef 9e       	mul	r14, r31
    dd86:	90 0d       	add	r25, r0
    dd88:	fe 9e       	mul	r15, r30
    dd8a:	90 0d       	add	r25, r0
    dd8c:	11 24       	eor	r1, r1
    dd8e:	0e 94 ee 3c 	call	0x79dc	; 0x79dc <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]>
_ZN9UImanager17areCursorsVisibleEv():
    dd92:	80 91 41 52 	lds	r24, 0x5241	; 0x805241 <uiman+0x8>
updateGraphScreen():
    dd96:	86 ff       	sbrs	r24, 6
    dd98:	47 c0       	rjmp	.+142    	; 0xde28 <main+0x2136>
    dd9a:	40 91 9f 50 	lds	r20, 0x509F	; 0x80509f <k197graph+0xb5>
    dd9e:	44 23       	and	r20, r20
    dda0:	09 f4       	brne	.+2      	; 0xdda4 <main+0x20b2>
    dda2:	42 c0       	rjmp	.+132    	; 0xde28 <main+0x2136>
    dda4:	80 91 3d 52 	lds	r24, 0x523D	; 0x80523d <uiman+0x4>
    dda8:	90 e0       	ldi	r25, 0x00	; 0
    ddaa:	48 17       	cp	r20, r24
    ddac:	20 f4       	brcc	.+8      	; 0xddb6 <main+0x20c4>
    ddae:	04 2f       	mov	r16, r20
    ddb0:	01 50       	subi	r16, 0x01	; 1
    ddb2:	11 0b       	sbc	r17, r17
    ddb4:	c8 01       	movw	r24, r16
    ddb6:	00 91 3e 52 	lds	r16, 0x523E	; 0x80523e <uiman+0x5>
    ddba:	10 e0       	ldi	r17, 0x00	; 0
    ddbc:	40 17       	cp	r20, r16
    ddbe:	20 f4       	brcc	.+8      	; 0xddc8 <main+0x20d6>
    ddc0:	24 2f       	mov	r18, r20
    ddc2:	21 50       	subi	r18, 0x01	; 1
    ddc4:	33 0b       	sbc	r19, r19
    ddc6:	89 01       	movw	r16, r18
    ddc8:	e8 9e       	mul	r14, r24
    ddca:	90 01       	movw	r18, r0
    ddcc:	e9 9e       	mul	r14, r25
    ddce:	30 0d       	add	r19, r0
    ddd0:	f8 9e       	mul	r15, r24
    ddd2:	30 0d       	add	r19, r0
    ddd4:	11 24       	eor	r1, r1
    ddd6:	e0 9e       	mul	r14, r16
    ddd8:	60 01       	movw	r12, r0
    ddda:	e1 9e       	mul	r14, r17
    dddc:	d0 0c       	add	r13, r0
    ddde:	f0 9e       	mul	r15, r16
    dde0:	d0 0c       	add	r13, r0
    dde2:	11 24       	eor	r1, r1
    dde4:	51 e0       	ldi	r21, 0x01	; 1
    dde6:	55 12       	cpse	r5, r21
    dde8:	06 c0       	rjmp	.+12     	; 0xddf6 <main+0x2104>
    ddea:	44 3b       	cpi	r20, 0xB4	; 180
    ddec:	21 f4       	brne	.+8      	; 0xddf6 <main+0x2104>
    ddee:	40 91 ba 50 	lds	r20, 0x50BA	; 0x8050ba <gr_xscale_roll_mode+0x6>
    ddf2:	41 11       	cpse	r20, r1
    ddf4:	c3 c0       	rjmp	.+390    	; 0xdf7c <main+0x228a>
    ddf6:	86 51       	subi	r24, 0x16	; 22
    ddf8:	90 4b       	sbci	r25, 0xB0	; 176
    ddfa:	dc 01       	movw	r26, r24
    ddfc:	8c 91       	ld	r24, X
    ddfe:	ef e3       	ldi	r30, 0x3F	; 63
    de00:	ee 2e       	mov	r14, r30
    de02:	f1 2c       	mov	r15, r1
    de04:	b7 01       	movw	r22, r14
    de06:	68 1b       	sub	r22, r24
    de08:	71 09       	sbc	r23, r1
    de0a:	41 e4       	ldi	r20, 0x41	; 65
    de0c:	c9 01       	movw	r24, r18
    de0e:	0e 94 ee 3c 	call	0x79dc	; 0x79dc <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]>
    de12:	f8 01       	movw	r30, r16
    de14:	e6 51       	subi	r30, 0x16	; 22
    de16:	f0 4b       	sbci	r31, 0xB0	; 176
    de18:	80 81       	ld	r24, Z
    de1a:	b7 01       	movw	r22, r14
    de1c:	68 1b       	sub	r22, r24
    de1e:	71 09       	sbc	r23, r1
    de20:	42 e4       	ldi	r20, 0x42	; 66
    de22:	c6 01       	movw	r24, r12
    de24:	0e 94 ee 3c 	call	0x79dc	; 0x79dc <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]>
_ZN9UImanager17areCursorsVisibleEv():
    de28:	80 91 41 52 	lds	r24, 0x5241	; 0x805241 <uiman+0x8>
updateGraphScreen():
    de2c:	86 ff       	sbrs	r24, 6
    de2e:	05 c0       	rjmp	.+10     	; 0xde3a <main+0x2148>
    de30:	80 91 9f 50 	lds	r24, 0x509F	; 0x80509f <k197graph+0xb5>
    de34:	81 11       	cpse	r24, r1
    de36:	0c 94 6f 65 	jmp	0xcade	; 0xcade <main+0xdec>
_ZN4U8G27setFontEPKh():
    de3a:	61 e9       	ldi	r22, 0x91	; 145
    de3c:	76 e5       	ldi	r23, 0x56	; 86
    de3e:	87 ea       	ldi	r24, 0xA7	; 167
    de40:	91 e5       	ldi	r25, 0x51	; 81
    de42:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
drawGraphScreenNormalPanel():
    de46:	00 91 1e 52 	lds	r16, 0x521E	; 0x80521e <u8g2+0x7b>
    de4a:	00 2e       	mov	r0, r16
    de4c:	00 0c       	add	r0, r0
    de4e:	11 0b       	sbc	r17, r17
    de50:	0d 5f       	subi	r16, 0xFD	; 253
    de52:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN4U8G29setCursorEjj():
    de54:	83 ec       	ldi	r24, 0xC3	; 195
    de56:	90 e0       	ldi	r25, 0x00	; 0
    de58:	80 93 35 52 	sts	0x5235, r24	; 0x805235 <u8g2+0x92>
    de5c:	90 93 36 52 	sts	0x5236, r25	; 0x805236 <u8g2+0x93>
    de60:	00 93 37 52 	sts	0x5237, r16	; 0x805237 <u8g2+0x94>
    de64:	10 93 38 52 	sts	0x5238, r17	; 0x805238 <u8g2+0x95>
_ZN4U8G27setFontEPKh():
    de68:	6b ea       	ldi	r22, 0xAB	; 171
    de6a:	7e e2       	ldi	r23, 0x2E	; 46
    de6c:	87 ea       	ldi	r24, 0xA7	; 167
    de6e:	91 e5       	ldi	r25, 0x51	; 81
    de70:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
drawGraphScreenNormalPanel():
    de74:	81 e0       	ldi	r24, 0x01	; 1
    de76:	0e 94 31 2f 	call	0x5e62	; 0x5e62 <K197device::getUnit(bool) [clone .constprop.99]>
    de7a:	bc 01       	movw	r22, r24
    de7c:	83 ea       	ldi	r24, 0xA3	; 163
    de7e:	91 e5       	ldi	r25, 0x51	; 81
    de80:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    de84:	80 91 1e 52 	lds	r24, 0x521E	; 0x80521e <u8g2+0x7b>
    de88:	08 0f       	add	r16, r24
    de8a:	11 1d       	adc	r17, r1
    de8c:	87 fd       	sbrc	r24, 7
    de8e:	1a 95       	dec	r17
_ZN4U8G27setFontEPKh():
    de90:	6c e1       	ldi	r22, 0x1C	; 28
    de92:	77 e1       	ldi	r23, 0x17	; 23
    de94:	87 ea       	ldi	r24, 0xA7	; 167
    de96:	91 e5       	ldi	r25, 0x51	; 81
    de98:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
drawGraphScreenNormalPanel():
    de9c:	80 91 37 52 	lds	r24, 0x5237	; 0x805237 <u8g2+0x94>
    dea0:	90 91 38 52 	lds	r25, 0x5238	; 0x805238 <u8g2+0x95>
    dea4:	01 96       	adiw	r24, 0x01	; 1
_ZN4U8G29setCursorEjj():
    dea6:	80 93 37 52 	sts	0x5237, r24	; 0x805237 <u8g2+0x94>
    deaa:	90 93 38 52 	sts	0x5238, r25	; 0x805238 <u8g2+0x95>
drawGraphScreenNormalPanel():
    deae:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    deb2:	64 ef       	ldi	r22, 0xF4	; 244
    deb4:	79 e0       	ldi	r23, 0x09	; 9
    deb6:	84 fd       	sbrc	r24, 4
    deb8:	02 c0       	rjmp	.+4      	; 0xdebe <main+0x21cc>
    deba:	60 ef       	ldi	r22, 0xF0	; 240
    debc:	79 e0       	ldi	r23, 0x09	; 9
    debe:	83 ea       	ldi	r24, 0xA3	; 163
    dec0:	91 e5       	ldi	r25, 0x51	; 81
    dec2:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    dec6:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    deca:	6b ee       	ldi	r22, 0xEB	; 235
    decc:	79 e0       	ldi	r23, 0x09	; 9
    dece:	81 fd       	sbrc	r24, 1
    ded0:	02 c0       	rjmp	.+4      	; 0xded6 <main+0x21e4>
    ded2:	66 ee       	ldi	r22, 0xE6	; 230
    ded4:	79 e0       	ldi	r23, 0x09	; 9
    ded6:	83 ea       	ldi	r24, 0xA3	; 163
    ded8:	91 e5       	ldi	r25, 0x51	; 81
    deda:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN4U8G29setCursorEjj():
    dede:	8e eb       	ldi	r24, 0xBE	; 190
    dee0:	90 e0       	ldi	r25, 0x00	; 0
    dee2:	80 93 35 52 	sts	0x5235, r24	; 0x805235 <u8g2+0x92>
    dee6:	90 93 36 52 	sts	0x5236, r25	; 0x805236 <u8g2+0x93>
    deea:	00 93 37 52 	sts	0x5237, r16	; 0x805237 <u8g2+0x94>
    deee:	10 93 38 52 	sts	0x5238, r17	; 0x805238 <u8g2+0x95>
_ZN4U8G27setFontEPKh():
    def2:	65 ee       	ldi	r22, 0xE5	; 229
    def4:	70 e5       	ldi	r23, 0x50	; 80
    def6:	87 ea       	ldi	r24, 0xA7	; 167
    def8:	91 e5       	ldi	r25, 0x51	; 81
    defa:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
_ZN10K197device9isNumericEv():
    defe:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
drawGraphScreenNormalPanel():
    df02:	66 e6       	ldi	r22, 0x66	; 102
    df04:	72 e5       	ldi	r23, 0x52	; 82
    df06:	81 ff       	sbrs	r24, 1
    df08:	0d c0       	rjmp	.+26     	; 0xdf24 <main+0x2232>
    df0a:	40 91 6f 52 	lds	r20, 0x526F	; 0x80526f <k197dev+0xa>
    df0e:	50 91 70 52 	lds	r21, 0x5270	; 0x805270 <k197dev+0xb>
    df12:	60 91 71 52 	lds	r22, 0x5271	; 0x805271 <k197dev+0xc>
    df16:	70 91 72 52 	lds	r23, 0x5272	; 0x805272 <k197dev+0xd>
    df1a:	ce 01       	movw	r24, r28
    df1c:	01 96       	adiw	r24, 0x01	; 1
    df1e:	0e 94 cd 48 	call	0x919a	; 0x919a <UImanager::formatNumber(char*, float)>
    df22:	bc 01       	movw	r22, r24
    df24:	83 ea       	ldi	r24, 0xA3	; 163
    df26:	91 e5       	ldi	r25, 0x51	; 81
    df28:	0e 94 93 50 	call	0xa126	; 0xa126 <Print::print(char const*)>
_ZN4U8G27setFontEPKh():
    df2c:	61 e9       	ldi	r22, 0x91	; 145
    df2e:	76 e5       	ldi	r23, 0x56	; 86
    df30:	87 ea       	ldi	r24, 0xA7	; 167
    df32:	91 e5       	ldi	r25, 0x51	; 81
    df34:	0e 94 59 39 	call	0x72b2	; 0x72b2 <u8g2_SetFont>
drawGraphScreenNormalPanel():
    df38:	b5 e0       	ldi	r27, 0x05	; 5
    df3a:	6b 0e       	add	r6, r27
    df3c:	71 1c       	adc	r7, r1
_ZN4U8G29setCursorEjj():
    df3e:	60 92 35 52 	sts	0x5235, r6	; 0x805235 <u8g2+0x92>
    df42:	70 92 36 52 	sts	0x5236, r7	; 0x805236 <u8g2+0x93>
    df46:	81 e0       	ldi	r24, 0x01	; 1
    df48:	90 e0       	ldi	r25, 0x00	; 0
    df4a:	80 93 37 52 	sts	0x5237, r24	; 0x805237 <u8g2+0x94>
    df4e:	90 93 38 52 	sts	0x5238, r25	; 0x805238 <u8g2+0x95>
drawGraphScreenNormalPanel():
    df52:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    df56:	61 ee       	ldi	r22, 0xE1	; 225
    df58:	79 e0       	ldi	r23, 0x09	; 9
    df5a:	80 fd       	sbrc	r24, 0
    df5c:	02 c0       	rjmp	.+4      	; 0xdf62 <main+0x2270>
    df5e:	6c ed       	ldi	r22, 0xDC	; 220
    df60:	79 e0       	ldi	r23, 0x09	; 9
    df62:	83 ea       	ldi	r24, 0xA3	; 163
    df64:	91 e5       	ldi	r25, 0x51	; 81
    df66:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN10K197device14getDisplayHoldEv():
    df6a:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
drawGraphScreenNormalPanel():
    df6e:	60 ed       	ldi	r22, 0xD0	; 208
    df70:	79 e0       	ldi	r23, 0x09	; 9
    df72:	83 ff       	sbrs	r24, 3
    df74:	fd ca       	rjmp	.-2566   	; 0xd570 <main+0x187e>
    df76:	66 ed       	ldi	r22, 0xD6	; 214
    df78:	79 e0       	ldi	r23, 0x09	; 9
    df7a:	fa ca       	rjmp	.-2572   	; 0xd570 <main+0x187e>
_ZN14k197graph_type3idxEj():
    df7c:	40 91 9e 50 	lds	r20, 0x509E	; 0x80509e <k197graph+0xb4>
    df80:	50 e0       	ldi	r21, 0x00	; 0
    df82:	4f 5f       	subi	r20, 0xFF	; 255
    df84:	5f 4f       	sbci	r21, 0xFF	; 255
    df86:	84 0f       	add	r24, r20
    df88:	95 1f       	adc	r25, r21
    df8a:	64 eb       	ldi	r22, 0xB4	; 180
    df8c:	a6 2e       	mov	r10, r22
    df8e:	b1 2c       	mov	r11, r1
    df90:	b5 01       	movw	r22, r10
    df92:	0e 94 2c 78 	call	0xf058	; 0xf058 <__udivmodhi4>
updateGraphScreen():
    df96:	fc 01       	movw	r30, r24
    df98:	e6 51       	subi	r30, 0x16	; 22
    df9a:	f0 4b       	sbci	r31, 0xB0	; 176
    df9c:	80 81       	ld	r24, Z
    df9e:	7f e3       	ldi	r23, 0x3F	; 63
    dfa0:	e7 2e       	mov	r14, r23
    dfa2:	f1 2c       	mov	r15, r1
    dfa4:	b7 01       	movw	r22, r14
    dfa6:	68 1b       	sub	r22, r24
    dfa8:	71 09       	sbc	r23, r1
    dfaa:	41 e4       	ldi	r20, 0x41	; 65
    dfac:	c9 01       	movw	r24, r18
    dfae:	0e 94 ee 3c 	call	0x79dc	; 0x79dc <UImanager::drawMarker(unsigned int, unsigned int, char) [clone .constprop.92]>
_ZN14k197graph_type3idxEj():
    dfb2:	80 91 9e 50 	lds	r24, 0x509E	; 0x80509e <k197graph+0xb4>
    dfb6:	90 e0       	ldi	r25, 0x00	; 0
    dfb8:	01 96       	adiw	r24, 0x01	; 1
    dfba:	80 0f       	add	r24, r16
    dfbc:	91 1f       	adc	r25, r17
    dfbe:	b5 01       	movw	r22, r10
    dfc0:	0e 94 2c 78 	call	0xf058	; 0xf058 <__udivmodhi4>
updateGraphScreen():
    dfc4:	fc 01       	movw	r30, r24
    dfc6:	26 cf       	rjmp	.-436    	; 0xde14 <main+0x2122>
logData():
    dfc8:	80 91 20 51 	lds	r24, 0x5120	; 0x805120 <logEnable+0x6>
    dfcc:	88 23       	and	r24, r24
    dfce:	11 f4       	brne	.+4      	; 0xdfd4 <main+0x22e2>
    dfd0:	0c 94 77 65 	jmp	0xcaee	; 0xcaee <main+0xdfc>
validconnection():
    dfd4:	80 91 6b 55 	lds	r24, 0x556B	; 0x80556b <BTman>
    dfd8:	88 23       	and	r24, r24
    dfda:	11 f4       	brne	.+4      	; 0xdfe0 <main+0x22ee>
    dfdc:	0c 94 77 65 	jmp	0xcaee	; 0xcaee <main+0xdfc>
    dfe0:	80 91 6c 55 	lds	r24, 0x556C	; 0x80556c <BTman+0x1>
    dfe4:	88 23       	and	r24, r24
    dfe6:	11 f4       	brne	.+4      	; 0xdfec <main+0x22fa>
    dfe8:	0c 94 77 65 	jmp	0xcaee	; 0xcaee <main+0xdfc>
logData():
    dfec:	80 91 43 52 	lds	r24, 0x5243	; 0x805243 <uiman+0xa>
    dff0:	90 91 19 51 	lds	r25, 0x5119	; 0x805119 <logSkip+0x7>
    dff4:	89 17       	cp	r24, r25
    dff6:	28 f4       	brcc	.+10     	; 0xe002 <main+0x2310>
    dff8:	8f 5f       	subi	r24, 0xFF	; 255
    dffa:	80 93 43 52 	sts	0x5243, r24	; 0x805243 <uiman+0xa>
    dffe:	0c 94 77 65 	jmp	0xcaee	; 0xcaee <main+0xdfc>
    e002:	10 92 43 52 	sts	0x5243, r1	; 0x805243 <uiman+0xa>
    e006:	80 91 0a 51 	lds	r24, 0x510A	; 0x80510a <logTimestamp+0x6>
    e00a:	88 23       	and	r24, r24
    e00c:	c1 f0       	breq	.+48     	; 0xe03e <main+0x234c>
millis():
    e00e:	8f b7       	in	r24, 0x3f	; 63
    e010:	f8 94       	cli
    e012:	40 91 bb 45 	lds	r20, 0x45BB	; 0x8045bb <timingStruct>
    e016:	50 91 bc 45 	lds	r21, 0x45BC	; 0x8045bc <timingStruct+0x1>
    e01a:	60 91 bd 45 	lds	r22, 0x45BD	; 0x8045bd <timingStruct+0x2>
    e01e:	70 91 be 45 	lds	r23, 0x45BE	; 0x8045be <timingStruct+0x3>
    e022:	8f bf       	out	0x3f, r24	; 63
print():
    e024:	2a e0       	ldi	r18, 0x0A	; 10
    e026:	87 ec       	ldi	r24, 0xC7	; 199
    e028:	95 e4       	ldi	r25, 0x45	; 69
    e02a:	0e 94 52 4a 	call	0x94a4	; 0x94a4 <Print::printNumber(unsigned long, unsigned char)>
logData():
    e02e:	0e 94 34 43 	call	0x8668	; 0x8668 <logU2U()>
    e032:	6e e0       	ldi	r22, 0x0E	; 14
    e034:	7b e0       	ldi	r23, 0x0B	; 11
    e036:	87 ec       	ldi	r24, 0xC7	; 199
    e038:	95 e4       	ldi	r25, 0x45	; 69
    e03a:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
_ZN10K197device9isNumericEv():
    e03e:	80 91 65 52 	lds	r24, 0x5265	; 0x805265 <k197dev>
logData():
    e042:	66 e6       	ldi	r22, 0x66	; 102
    e044:	72 e5       	ldi	r23, 0x52	; 82
    e046:	81 ff       	sbrs	r24, 1
    e048:	0d c0       	rjmp	.+26     	; 0xe064 <main+0x2372>
    e04a:	40 91 6f 52 	lds	r20, 0x526F	; 0x80526f <k197dev+0xa>
    e04e:	50 91 70 52 	lds	r21, 0x5270	; 0x805270 <k197dev+0xb>
    e052:	60 91 71 52 	lds	r22, 0x5271	; 0x805271 <k197dev+0xc>
    e056:	70 91 72 52 	lds	r23, 0x5272	; 0x805272 <k197dev+0xd>
    e05a:	ce 01       	movw	r24, r28
    e05c:	01 96       	adiw	r24, 0x01	; 1
    e05e:	0e 94 cd 48 	call	0x919a	; 0x919a <UImanager::formatNumber(char*, float)>
    e062:	bc 01       	movw	r22, r24
    e064:	87 ec       	ldi	r24, 0xC7	; 199
    e066:	95 e4       	ldi	r25, 0x45	; 69
    e068:	0e 94 93 50 	call	0xa126	; 0xa126 <Print::print(char const*)>
    e06c:	0e 94 34 43 	call	0x8668	; 0x8668 <logU2U()>
    e070:	81 e0       	ldi	r24, 0x01	; 1
    e072:	0e 94 31 2f 	call	0x5e62	; 0x5e62 <K197device::getUnit(bool) [clone .constprop.99]>
    e076:	8c 01       	movw	r16, r24
    e078:	bc 01       	movw	r22, r24
    e07a:	87 ec       	ldi	r24, 0xC7	; 199
    e07c:	95 e4       	ldi	r25, 0x45	; 69
    e07e:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    e082:	80 91 73 52 	lds	r24, 0x5273	; 0x805273 <k197dev+0xe>
    e086:	84 ff       	sbrs	r24, 4
    e088:	06 c0       	rjmp	.+12     	; 0xe096 <main+0x23a4>
    e08a:	6a e0       	ldi	r22, 0x0A	; 10
    e08c:	7b e0       	ldi	r23, 0x0B	; 11
    e08e:	87 ec       	ldi	r24, 0xC7	; 199
    e090:	95 e4       	ldi	r25, 0x45	; 69
    e092:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    e096:	0e 94 77 2f 	call	0x5eee	; 0x5eee <K197device::isTKModeActive() [clone .constprop.98]>
    e09a:	88 23       	and	r24, r24
    e09c:	09 f4       	brne	.+2      	; 0xe0a0 <main+0x23ae>
    e09e:	3e c0       	rjmp	.+124    	; 0xe11c <main+0x242a>
    e0a0:	80 91 03 51 	lds	r24, 0x5103	; 0x805103 <logTamb+0x6>
    e0a4:	88 23       	and	r24, r24
    e0a6:	d1 f1       	breq	.+116    	; 0xe11c <main+0x242a>
    e0a8:	67 e0       	ldi	r22, 0x07	; 7
    e0aa:	7b e0       	ldi	r23, 0x0B	; 11
    e0ac:	87 ec       	ldi	r24, 0xC7	; 199
    e0ae:	95 e4       	ldi	r25, 0x45	; 69
    e0b0:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
getTColdJunction():
    e0b4:	c0 90 76 52 	lds	r12, 0x5276	; 0x805276 <k197dev+0x11>
    e0b8:	d0 90 77 52 	lds	r13, 0x5277	; 0x805277 <k197dev+0x12>
    e0bc:	e0 90 78 52 	lds	r14, 0x5278	; 0x805278 <k197dev+0x13>
    e0c0:	f0 90 79 52 	lds	r15, 0x5279	; 0x805279 <k197dev+0x14>
    e0c4:	c7 01       	movw	r24, r14
    e0c6:	b6 01       	movw	r22, r12
    e0c8:	81 d7       	rcall	.+3842   	; 0xefcc <__fixsfsi>
    e0ca:	9b 01       	movw	r18, r22
    e0cc:	77 ff       	sbrs	r23, 7
    e0ce:	04 c0       	rjmp	.+8      	; 0xe0d8 <main+0x23e6>
    e0d0:	22 27       	eor	r18, r18
    e0d2:	33 27       	eor	r19, r19
    e0d4:	26 1b       	sub	r18, r22
    e0d6:	37 0b       	sbc	r19, r23
    e0d8:	b9 01       	movw	r22, r18
    e0da:	33 0f       	add	r19, r19
    e0dc:	88 0b       	sbc	r24, r24
    e0de:	99 0b       	sbc	r25, r25
    e0e0:	79 d5       	rcall	.+2802   	; 0xebd4 <__floatsisf>
    e0e2:	2c e5       	ldi	r18, 0x5C	; 92
    e0e4:	3f ef       	ldi	r19, 0xFF	; 255
    e0e6:	49 e7       	ldi	r20, 0x79	; 121
    e0e8:	54 e4       	ldi	r21, 0x44	; 68
    e0ea:	6e d5       	rcall	.+2780   	; 0xebc8 <__cmpsf2>
    e0ec:	87 fd       	sbrc	r24, 7
    e0ee:	08 c0       	rjmp	.+16     	; 0xe100 <main+0x240e>
main():
    e0f0:	5c e5       	ldi	r21, 0x5C	; 92
    e0f2:	c5 2e       	mov	r12, r21
    e0f4:	dd 24       	eor	r13, r13
    e0f6:	da 94       	dec	r13
    e0f8:	59 e7       	ldi	r21, 0x79	; 121
    e0fa:	e5 2e       	mov	r14, r21
    e0fc:	54 e4       	ldi	r21, 0x44	; 68
    e0fe:	f5 2e       	mov	r15, r21
print():
    e100:	22 e0       	ldi	r18, 0x02	; 2
    e102:	b7 01       	movw	r22, r14
    e104:	a6 01       	movw	r20, r12
    e106:	87 ec       	ldi	r24, 0xC7	; 199
    e108:	95 e4       	ldi	r25, 0x45	; 69
    e10a:	0e 94 93 4b 	call	0x9726	; 0x9726 <Print::printFloat(double, unsigned char)>
logData():
    e10e:	0e 94 34 43 	call	0x8668	; 0x8668 <logU2U()>
    e112:	b8 01       	movw	r22, r16
    e114:	87 ec       	ldi	r24, 0xC7	; 199
    e116:	95 e4       	ldi	r25, 0x45	; 69
    e118:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    e11c:	80 91 fc 50 	lds	r24, 0x50FC	; 0x8050fc <logStat+0x6>
    e120:	88 23       	and	r24, r24
    e122:	09 f4       	brne	.+2      	; 0xe126 <main+0x2434>
    e124:	5a c0       	rjmp	.+180    	; 0xe1da <main+0x24e8>
    e126:	64 e0       	ldi	r22, 0x04	; 4
    e128:	7b e0       	ldi	r23, 0x0B	; 11
    e12a:	87 ec       	ldi	r24, 0xC7	; 199
    e12c:	95 e4       	ldi	r25, 0x45	; 69
    e12e:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    e132:	40 91 8a 52 	lds	r20, 0x528A	; 0x80528a <k197dev+0x25>
    e136:	50 91 8b 52 	lds	r21, 0x528B	; 0x80528b <k197dev+0x26>
    e13a:	60 91 8c 52 	lds	r22, 0x528C	; 0x80528c <k197dev+0x27>
    e13e:	70 91 8d 52 	lds	r23, 0x528D	; 0x80528d <k197dev+0x28>
    e142:	ce 01       	movw	r24, r28
    e144:	01 96       	adiw	r24, 0x01	; 1
    e146:	0e 94 cd 48 	call	0x919a	; 0x919a <UImanager::formatNumber(char*, float)>
    e14a:	bc 01       	movw	r22, r24
    e14c:	87 ec       	ldi	r24, 0xC7	; 199
    e14e:	95 e4       	ldi	r25, 0x45	; 69
    e150:	0e 94 93 50 	call	0xa126	; 0xa126 <Print::print(char const*)>
    e154:	0e 94 34 43 	call	0x8668	; 0x8668 <logU2U()>
    e158:	b8 01       	movw	r22, r16
    e15a:	87 ec       	ldi	r24, 0xC7	; 199
    e15c:	95 e4       	ldi	r25, 0x45	; 69
    e15e:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    e162:	61 e0       	ldi	r22, 0x01	; 1
    e164:	7b e0       	ldi	r23, 0x0B	; 11
    e166:	87 ec       	ldi	r24, 0xC7	; 199
    e168:	95 e4       	ldi	r25, 0x45	; 69
    e16a:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    e16e:	40 91 86 52 	lds	r20, 0x5286	; 0x805286 <k197dev+0x21>
    e172:	50 91 87 52 	lds	r21, 0x5287	; 0x805287 <k197dev+0x22>
    e176:	60 91 88 52 	lds	r22, 0x5288	; 0x805288 <k197dev+0x23>
    e17a:	70 91 89 52 	lds	r23, 0x5289	; 0x805289 <k197dev+0x24>
    e17e:	ce 01       	movw	r24, r28
    e180:	01 96       	adiw	r24, 0x01	; 1
    e182:	0e 94 cd 48 	call	0x919a	; 0x919a <UImanager::formatNumber(char*, float)>
    e186:	bc 01       	movw	r22, r24
    e188:	87 ec       	ldi	r24, 0xC7	; 199
    e18a:	95 e4       	ldi	r25, 0x45	; 69
    e18c:	0e 94 93 50 	call	0xa126	; 0xa126 <Print::print(char const*)>
    e190:	0e 94 34 43 	call	0x8668	; 0x8668 <logU2U()>
    e194:	b8 01       	movw	r22, r16
    e196:	87 ec       	ldi	r24, 0xC7	; 199
    e198:	95 e4       	ldi	r25, 0x45	; 69
    e19a:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    e19e:	6e ef       	ldi	r22, 0xFE	; 254
    e1a0:	7a e0       	ldi	r23, 0x0A	; 10
    e1a2:	87 ec       	ldi	r24, 0xC7	; 199
    e1a4:	95 e4       	ldi	r25, 0x45	; 69
    e1a6:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    e1aa:	40 91 8e 52 	lds	r20, 0x528E	; 0x80528e <k197dev+0x29>
    e1ae:	50 91 8f 52 	lds	r21, 0x528F	; 0x80528f <k197dev+0x2a>
    e1b2:	60 91 90 52 	lds	r22, 0x5290	; 0x805290 <k197dev+0x2b>
    e1b6:	70 91 91 52 	lds	r23, 0x5291	; 0x805291 <k197dev+0x2c>
    e1ba:	ce 01       	movw	r24, r28
    e1bc:	01 96       	adiw	r24, 0x01	; 1
    e1be:	0e 94 cd 48 	call	0x919a	; 0x919a <UImanager::formatNumber(char*, float)>
    e1c2:	bc 01       	movw	r22, r24
    e1c4:	87 ec       	ldi	r24, 0xC7	; 199
    e1c6:	95 e4       	ldi	r25, 0x45	; 69
    e1c8:	0e 94 93 50 	call	0xa126	; 0xa126 <Print::print(char const*)>
    e1cc:	0e 94 34 43 	call	0x8668	; 0x8668 <logU2U()>
    e1d0:	b8 01       	movw	r22, r16
    e1d2:	87 ec       	ldi	r24, 0xC7	; 199
    e1d4:	95 e4       	ldi	r25, 0x45	; 69
    e1d6:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Print::print(__FlashStringHelper const*)>
    e1da:	87 ec       	ldi	r24, 0xC7	; 199
    e1dc:	95 e4       	ldi	r25, 0x45	; 69
    e1de:	0e 94 6b 49 	call	0x92d6	; 0x92d6 <Print::println()>
    e1e2:	0c 94 77 65 	jmp	0xcaee	; 0xcaee <main+0xdfc>
checkPresence():
    e1e6:	0e 94 1d 31 	call	0x623a	; 0x623a <HardwareSerial::end() [clone .constprop.171]>
    e1ea:	80 91 06 08 	lds	r24, 0x0806	; 0x800806 <__TEXT_REGION_LENGTH__+0x7e0806>
    e1ee:	8f 73       	andi	r24, 0x3F	; 63
    e1f0:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x7e0806>
pinConfigure():
    e1f4:	69 e8       	ldi	r22, 0x89	; 137
    e1f6:	70 e0       	ldi	r23, 0x00	; 0
    e1f8:	80 e0       	ldi	r24, 0x00	; 0
    e1fa:	0e 94 99 46 	call	0x8d32	; 0x8d32 <_pinconfigure(unsigned char, unsigned int)>
    e1fe:	62 e0       	ldi	r22, 0x02	; 2
    e200:	72 e0       	ldi	r23, 0x02	; 2
    e202:	81 e0       	ldi	r24, 0x01	; 1
    e204:	0e 94 99 46 	call	0x8d32	; 0x8d32 <_pinconfigure(unsigned char, unsigned int)>
checkPresence():
    e208:	61 e2       	ldi	r22, 0x21	; 33
    e20a:	7b e0       	ldi	r23, 0x0B	; 11
    e20c:	0c 94 8f 65 	jmp	0xcb1e	; 0xcb1e <main+0xe2c>
main():
    e210:	80 e0       	ldi	r24, 0x00	; 0
    e212:	0c 94 99 65 	jmp	0xcb32	; 0xcb32 <main+0xe40>
checkPressed():
    e216:	a3 01       	movw	r20, r6
    e218:	92 01       	movw	r18, r4
    e21a:	28 1b       	sub	r18, r24
    e21c:	39 0b       	sbc	r19, r25
    e21e:	4a 0b       	sbc	r20, r26
    e220:	5b 0b       	sbc	r21, r27
    e222:	da 01       	movw	r26, r20
    e224:	c9 01       	movw	r24, r18
    e226:	81 34       	cpi	r24, 0x41	; 65
    e228:	9d 40       	sbci	r25, 0x0D	; 13
    e22a:	a3 40       	sbci	r26, 0x03	; 3
    e22c:	b1 05       	cpc	r27, r1
    e22e:	10 f4       	brcc	.+4      	; 0xe234 <main+0x2542>
    e230:	0c 94 58 66 	jmp	0xccb0	; 0xccb0 <main+0xfbe>
    e234:	63 e1       	ldi	r22, 0x13	; 19
    e236:	70 e0       	ldi	r23, 0x00	; 0
    e238:	0c 94 4f 66 	jmp	0xcc9e	; 0xcc9e <main+0xfac>
setScale():
    e23c:	03 30       	cpi	r16, 0x03	; 3
    e23e:	11 05       	cpc	r17, r1
    e240:	09 f0       	breq	.+2      	; 0xe244 <main+0x2552>
    e242:	7b ca       	rjmp	.-2826   	; 0xd73a <main+0x1a48>
    e244:	36 ca       	rjmp	.-2964   	; 0xd6b2 <main+0x19c0>

0000e246 <dtostrf>:
dtostrf():
    e246:	ef 92       	push	r14
    e248:	0f 93       	push	r16
    e24a:	1f 93       	push	r17
    e24c:	cf 93       	push	r28
    e24e:	df 93       	push	r29
    e250:	e8 01       	movw	r28, r16
    e252:	34 e0       	ldi	r19, 0x04	; 4
    e254:	47 fd       	sbrc	r20, 7
    e256:	34 e1       	ldi	r19, 0x14	; 20
    e258:	04 2e       	mov	r0, r20
    e25a:	00 0c       	add	r0, r0
    e25c:	55 0b       	sbc	r21, r21
    e25e:	57 ff       	sbrs	r21, 7
    e260:	03 c0       	rjmp	.+6      	; 0xe268 <dtostrf+0x22>
    e262:	51 95       	neg	r21
    e264:	41 95       	neg	r20
    e266:	51 09       	sbc	r21, r1
    e268:	e3 2e       	mov	r14, r19
    e26a:	02 2f       	mov	r16, r18
    e26c:	24 2f       	mov	r18, r20
    e26e:	ae 01       	movw	r20, r28
    e270:	e9 d0       	rcall	.+466    	; 0xe444 <dtoa_prf>
    e272:	ce 01       	movw	r24, r28
    e274:	df 91       	pop	r29
    e276:	cf 91       	pop	r28
    e278:	1f 91       	pop	r17
    e27a:	0f 91       	pop	r16
    e27c:	ef 90       	pop	r14
    e27e:	08 95       	ret

0000e280 <atof>:
atof():
    e280:	66 27       	eor	r22, r22
    e282:	77 27       	eor	r23, r23
    e284:	54 c2       	rjmp	.+1192   	; 0xe72e <strtod>

0000e286 <atoi>:
atoi():
    e286:	fc 01       	movw	r30, r24
    e288:	88 27       	eor	r24, r24
    e28a:	99 27       	eor	r25, r25
    e28c:	e8 94       	clt
    e28e:	21 91       	ld	r18, Z+
    e290:	20 32       	cpi	r18, 0x20	; 32
    e292:	e9 f3       	breq	.-6      	; 0xe28e <atoi+0x8>
    e294:	29 30       	cpi	r18, 0x09	; 9
    e296:	10 f0       	brcs	.+4      	; 0xe29c <atoi+0x16>
    e298:	2e 30       	cpi	r18, 0x0E	; 14
    e29a:	c8 f3       	brcs	.-14     	; 0xe28e <atoi+0x8>
    e29c:	2b 32       	cpi	r18, 0x2B	; 43
    e29e:	39 f0       	breq	.+14     	; 0xe2ae <atoi+0x28>
    e2a0:	2d 32       	cpi	r18, 0x2D	; 45
    e2a2:	31 f4       	brne	.+12     	; 0xe2b0 <atoi+0x2a>
    e2a4:	68 94       	set
    e2a6:	03 c0       	rjmp	.+6      	; 0xe2ae <atoi+0x28>
    e2a8:	37 d0       	rcall	.+110    	; 0xe318 <__mulhi_const_10>
    e2aa:	82 0f       	add	r24, r18
    e2ac:	91 1d       	adc	r25, r1
    e2ae:	21 91       	ld	r18, Z+
    e2b0:	20 53       	subi	r18, 0x30	; 48
    e2b2:	2a 30       	cpi	r18, 0x0A	; 10
    e2b4:	c8 f3       	brcs	.-14     	; 0xe2a8 <atoi+0x22>
    e2b6:	1e f4       	brtc	.+6      	; 0xe2be <atoi+0x38>
    e2b8:	90 95       	com	r25
    e2ba:	81 95       	neg	r24
    e2bc:	9f 4f       	sbci	r25, 0xFF	; 255
    e2be:	08 95       	ret

0000e2c0 <strcasecmp_P>:
strcasecmp_P():
    e2c0:	fb 01       	movw	r30, r22
    e2c2:	dc 01       	movw	r26, r24
    e2c4:	8d 91       	ld	r24, X+
    e2c6:	81 34       	cpi	r24, 0x41	; 65
    e2c8:	1c f0       	brlt	.+6      	; 0xe2d0 <strcasecmp_P+0x10>
    e2ca:	8b 35       	cpi	r24, 0x5B	; 91
    e2cc:	0c f4       	brge	.+2      	; 0xe2d0 <strcasecmp_P+0x10>
    e2ce:	80 5e       	subi	r24, 0xE0	; 224
    e2d0:	65 91       	lpm	r22, Z+
    e2d2:	61 34       	cpi	r22, 0x41	; 65
    e2d4:	1c f0       	brlt	.+6      	; 0xe2dc <strcasecmp_P+0x1c>
    e2d6:	6b 35       	cpi	r22, 0x5B	; 91
    e2d8:	0c f4       	brge	.+2      	; 0xe2dc <strcasecmp_P+0x1c>
    e2da:	60 5e       	subi	r22, 0xE0	; 224
    e2dc:	86 1b       	sub	r24, r22
    e2de:	61 11       	cpse	r22, r1
    e2e0:	89 f3       	breq	.-30     	; 0xe2c4 <strcasecmp_P+0x4>
    e2e2:	99 0b       	sbc	r25, r25
    e2e4:	08 95       	ret

0000e2e6 <strchr_P>:
strchr_P():
    e2e6:	fc 01       	movw	r30, r24
    e2e8:	05 90       	lpm	r0, Z+
    e2ea:	06 16       	cp	r0, r22
    e2ec:	21 f0       	breq	.+8      	; 0xe2f6 <strchr_P+0x10>
    e2ee:	00 20       	and	r0, r0
    e2f0:	d9 f7       	brne	.-10     	; 0xe2e8 <strchr_P+0x2>
    e2f2:	c0 01       	movw	r24, r0
    e2f4:	08 95       	ret
    e2f6:	31 97       	sbiw	r30, 0x01	; 1
    e2f8:	cf 01       	movw	r24, r30
    e2fa:	08 95       	ret

0000e2fc <strncmp_P>:
strncmp_P():
    e2fc:	fb 01       	movw	r30, r22
    e2fe:	dc 01       	movw	r26, r24
    e300:	41 50       	subi	r20, 0x01	; 1
    e302:	50 40       	sbci	r21, 0x00	; 0
    e304:	30 f0       	brcs	.+12     	; 0xe312 <strncmp_P+0x16>
    e306:	8d 91       	ld	r24, X+
    e308:	05 90       	lpm	r0, Z+
    e30a:	80 19       	sub	r24, r0
    e30c:	19 f4       	brne	.+6      	; 0xe314 <strncmp_P+0x18>
    e30e:	00 20       	and	r0, r0
    e310:	b9 f7       	brne	.-18     	; 0xe300 <strncmp_P+0x4>
    e312:	88 1b       	sub	r24, r24
    e314:	99 0b       	sbc	r25, r25
    e316:	08 95       	ret

0000e318 <__mulhi_const_10>:
__mulhi_const_10():
    e318:	7a e0       	ldi	r23, 0x0A	; 10
    e31a:	97 9f       	mul	r25, r23
    e31c:	90 2d       	mov	r25, r0
    e31e:	87 9f       	mul	r24, r23
    e320:	80 2d       	mov	r24, r0
    e322:	91 0d       	add	r25, r1
    e324:	11 24       	eor	r1, r1
    e326:	08 95       	ret

0000e328 <fputc>:
fputc():
    e328:	0f 93       	push	r16
    e32a:	1f 93       	push	r17
    e32c:	cf 93       	push	r28
    e32e:	df 93       	push	r29
    e330:	18 2f       	mov	r17, r24
    e332:	09 2f       	mov	r16, r25
    e334:	eb 01       	movw	r28, r22
    e336:	8b 81       	ldd	r24, Y+3	; 0x03
    e338:	81 fd       	sbrc	r24, 1
    e33a:	09 c0       	rjmp	.+18     	; 0xe34e <fputc+0x26>
    e33c:	1f ef       	ldi	r17, 0xFF	; 255
    e33e:	0f ef       	ldi	r16, 0xFF	; 255
    e340:	81 2f       	mov	r24, r17
    e342:	90 2f       	mov	r25, r16
    e344:	df 91       	pop	r29
    e346:	cf 91       	pop	r28
    e348:	1f 91       	pop	r17
    e34a:	0f 91       	pop	r16
    e34c:	08 95       	ret
    e34e:	82 ff       	sbrs	r24, 2
    e350:	14 c0       	rjmp	.+40     	; 0xe37a <fputc+0x52>
    e352:	2e 81       	ldd	r18, Y+6	; 0x06
    e354:	3f 81       	ldd	r19, Y+7	; 0x07
    e356:	8c 81       	ldd	r24, Y+4	; 0x04
    e358:	9d 81       	ldd	r25, Y+5	; 0x05
    e35a:	28 17       	cp	r18, r24
    e35c:	39 07       	cpc	r19, r25
    e35e:	3c f4       	brge	.+14     	; 0xe36e <fputc+0x46>
    e360:	e8 81       	ld	r30, Y
    e362:	f9 81       	ldd	r31, Y+1	; 0x01
    e364:	cf 01       	movw	r24, r30
    e366:	01 96       	adiw	r24, 0x01	; 1
    e368:	88 83       	st	Y, r24
    e36a:	99 83       	std	Y+1, r25	; 0x01
    e36c:	10 83       	st	Z, r17
    e36e:	8e 81       	ldd	r24, Y+6	; 0x06
    e370:	9f 81       	ldd	r25, Y+7	; 0x07
    e372:	01 96       	adiw	r24, 0x01	; 1
    e374:	8e 83       	std	Y+6, r24	; 0x06
    e376:	9f 83       	std	Y+7, r25	; 0x07
    e378:	e3 cf       	rjmp	.-58     	; 0xe340 <fputc+0x18>
    e37a:	e8 85       	ldd	r30, Y+8	; 0x08
    e37c:	f9 85       	ldd	r31, Y+9	; 0x09
    e37e:	81 2f       	mov	r24, r17
    e380:	09 95       	icall
    e382:	89 2b       	or	r24, r25
    e384:	a1 f3       	breq	.-24     	; 0xe36e <fputc+0x46>
    e386:	da cf       	rjmp	.-76     	; 0xe33c <fputc+0x14>

0000e388 <__ultoa_invert>:
__ultoa_invert():
    e388:	fa 01       	movw	r30, r20
    e38a:	aa 27       	eor	r26, r26
    e38c:	28 30       	cpi	r18, 0x08	; 8
    e38e:	51 f1       	breq	.+84     	; 0xe3e4 <__ultoa_invert+0x5c>
    e390:	20 31       	cpi	r18, 0x10	; 16
    e392:	81 f1       	breq	.+96     	; 0xe3f4 <__ultoa_invert+0x6c>
    e394:	e8 94       	clt
    e396:	6f 93       	push	r22
    e398:	6e 7f       	andi	r22, 0xFE	; 254
    e39a:	6e 5f       	subi	r22, 0xFE	; 254
    e39c:	7f 4f       	sbci	r23, 0xFF	; 255
    e39e:	8f 4f       	sbci	r24, 0xFF	; 255
    e3a0:	9f 4f       	sbci	r25, 0xFF	; 255
    e3a2:	af 4f       	sbci	r26, 0xFF	; 255
    e3a4:	b1 e0       	ldi	r27, 0x01	; 1
    e3a6:	3e d0       	rcall	.+124    	; 0xe424 <__ultoa_invert+0x9c>
    e3a8:	b4 e0       	ldi	r27, 0x04	; 4
    e3aa:	3c d0       	rcall	.+120    	; 0xe424 <__ultoa_invert+0x9c>
    e3ac:	67 0f       	add	r22, r23
    e3ae:	78 1f       	adc	r23, r24
    e3b0:	89 1f       	adc	r24, r25
    e3b2:	9a 1f       	adc	r25, r26
    e3b4:	a1 1d       	adc	r26, r1
    e3b6:	68 0f       	add	r22, r24
    e3b8:	79 1f       	adc	r23, r25
    e3ba:	8a 1f       	adc	r24, r26
    e3bc:	91 1d       	adc	r25, r1
    e3be:	a1 1d       	adc	r26, r1
    e3c0:	6a 0f       	add	r22, r26
    e3c2:	71 1d       	adc	r23, r1
    e3c4:	81 1d       	adc	r24, r1
    e3c6:	91 1d       	adc	r25, r1
    e3c8:	a1 1d       	adc	r26, r1
    e3ca:	20 d0       	rcall	.+64     	; 0xe40c <__ultoa_invert+0x84>
    e3cc:	09 f4       	brne	.+2      	; 0xe3d0 <__ultoa_invert+0x48>
    e3ce:	68 94       	set
    e3d0:	3f 91       	pop	r19
    e3d2:	2a e0       	ldi	r18, 0x0A	; 10
    e3d4:	26 9f       	mul	r18, r22
    e3d6:	11 24       	eor	r1, r1
    e3d8:	30 19       	sub	r19, r0
    e3da:	30 5d       	subi	r19, 0xD0	; 208
    e3dc:	31 93       	st	Z+, r19
    e3de:	de f6       	brtc	.-74     	; 0xe396 <__ultoa_invert+0xe>
    e3e0:	cf 01       	movw	r24, r30
    e3e2:	08 95       	ret
    e3e4:	46 2f       	mov	r20, r22
    e3e6:	47 70       	andi	r20, 0x07	; 7
    e3e8:	40 5d       	subi	r20, 0xD0	; 208
    e3ea:	41 93       	st	Z+, r20
    e3ec:	b3 e0       	ldi	r27, 0x03	; 3
    e3ee:	0f d0       	rcall	.+30     	; 0xe40e <__ultoa_invert+0x86>
    e3f0:	c9 f7       	brne	.-14     	; 0xe3e4 <__ultoa_invert+0x5c>
    e3f2:	f6 cf       	rjmp	.-20     	; 0xe3e0 <__ultoa_invert+0x58>
    e3f4:	46 2f       	mov	r20, r22
    e3f6:	4f 70       	andi	r20, 0x0F	; 15
    e3f8:	40 5d       	subi	r20, 0xD0	; 208
    e3fa:	4a 33       	cpi	r20, 0x3A	; 58
    e3fc:	18 f0       	brcs	.+6      	; 0xe404 <__ultoa_invert+0x7c>
    e3fe:	49 5d       	subi	r20, 0xD9	; 217
    e400:	31 fd       	sbrc	r19, 1
    e402:	40 52       	subi	r20, 0x20	; 32
    e404:	41 93       	st	Z+, r20
    e406:	02 d0       	rcall	.+4      	; 0xe40c <__ultoa_invert+0x84>
    e408:	a9 f7       	brne	.-22     	; 0xe3f4 <__ultoa_invert+0x6c>
    e40a:	ea cf       	rjmp	.-44     	; 0xe3e0 <__ultoa_invert+0x58>
    e40c:	b4 e0       	ldi	r27, 0x04	; 4
    e40e:	a6 95       	lsr	r26
    e410:	97 95       	ror	r25
    e412:	87 95       	ror	r24
    e414:	77 95       	ror	r23
    e416:	67 95       	ror	r22
    e418:	ba 95       	dec	r27
    e41a:	c9 f7       	brne	.-14     	; 0xe40e <__ultoa_invert+0x86>
    e41c:	00 97       	sbiw	r24, 0x00	; 0
    e41e:	61 05       	cpc	r22, r1
    e420:	71 05       	cpc	r23, r1
    e422:	08 95       	ret
    e424:	9b 01       	movw	r18, r22
    e426:	ac 01       	movw	r20, r24
    e428:	0a 2e       	mov	r0, r26
    e42a:	06 94       	lsr	r0
    e42c:	57 95       	ror	r21
    e42e:	47 95       	ror	r20
    e430:	37 95       	ror	r19
    e432:	27 95       	ror	r18
    e434:	ba 95       	dec	r27
    e436:	c9 f7       	brne	.-14     	; 0xe42a <__ultoa_invert+0xa2>
    e438:	62 0f       	add	r22, r18
    e43a:	73 1f       	adc	r23, r19
    e43c:	84 1f       	adc	r24, r20
    e43e:	95 1f       	adc	r25, r21
    e440:	a0 1d       	adc	r26, r0
    e442:	08 95       	ret

0000e444 <dtoa_prf>:
dtoa_prf():
    e444:	8f 92       	push	r8
    e446:	9f 92       	push	r9
    e448:	af 92       	push	r10
    e44a:	bf 92       	push	r11
    e44c:	cf 92       	push	r12
    e44e:	df 92       	push	r13
    e450:	ef 92       	push	r14
    e452:	ff 92       	push	r15
    e454:	0f 93       	push	r16
    e456:	1f 93       	push	r17
    e458:	cf 93       	push	r28
    e45a:	df 93       	push	r29
    e45c:	cd b7       	in	r28, 0x3d	; 61
    e45e:	de b7       	in	r29, 0x3e	; 62
    e460:	29 97       	sbiw	r28, 0x09	; 9
    e462:	cd bf       	out	0x3d, r28	; 61
    e464:	de bf       	out	0x3e, r29	; 62
    e466:	6a 01       	movw	r12, r20
    e468:	f2 2e       	mov	r15, r18
    e46a:	b0 2e       	mov	r11, r16
    e46c:	10 2f       	mov	r17, r16
    e46e:	fb e3       	ldi	r31, 0x3B	; 59
    e470:	af 2e       	mov	r10, r31
    e472:	a0 16       	cp	r10, r16
    e474:	08 f4       	brcc	.+2      	; 0xe478 <dtoa_prf+0x34>
    e476:	1b e3       	ldi	r17, 0x3B	; 59
    e478:	1f 5f       	subi	r17, 0xFF	; 255
    e47a:	01 2f       	mov	r16, r17
    e47c:	27 e0       	ldi	r18, 0x07	; 7
    e47e:	ae 01       	movw	r20, r28
    e480:	4f 5f       	subi	r20, 0xFF	; 255
    e482:	5f 4f       	sbci	r21, 0xFF	; 255
    e484:	a9 d2       	rcall	.+1362   	; 0xe9d8 <__ftoa_engine>
    e486:	bc 01       	movw	r22, r24
    e488:	89 81       	ldd	r24, Y+1	; 0x01
    e48a:	98 2f       	mov	r25, r24
    e48c:	99 70       	andi	r25, 0x09	; 9
    e48e:	91 30       	cpi	r25, 0x01	; 1
    e490:	09 f4       	brne	.+2      	; 0xe494 <dtoa_prf+0x50>
    e492:	4b c0       	rjmp	.+150    	; 0xe52a <dtoa_prf+0xe6>
    e494:	9b e2       	ldi	r25, 0x2B	; 43
    e496:	e1 fc       	sbrc	r14, 1
    e498:	04 c0       	rjmp	.+8      	; 0xe4a2 <dtoa_prf+0x5e>
    e49a:	9e 2d       	mov	r25, r14
    e49c:	91 70       	andi	r25, 0x01	; 1
    e49e:	e0 fc       	sbrc	r14, 0
    e4a0:	46 c0       	rjmp	.+140    	; 0xe52e <dtoa_prf+0xea>
    e4a2:	5e 2d       	mov	r21, r14
    e4a4:	50 71       	andi	r21, 0x10	; 16
    e4a6:	e8 2f       	mov	r30, r24
    e4a8:	e8 70       	andi	r30, 0x08	; 8
    e4aa:	83 ff       	sbrs	r24, 3
    e4ac:	52 c0       	rjmp	.+164    	; 0xe552 <dtoa_prf+0x10e>
    e4ae:	84 e0       	ldi	r24, 0x04	; 4
    e4b0:	91 11       	cpse	r25, r1
    e4b2:	01 c0       	rjmp	.+2      	; 0xe4b6 <dtoa_prf+0x72>
    e4b4:	83 e0       	ldi	r24, 0x03	; 3
    e4b6:	ef 2d       	mov	r30, r15
    e4b8:	e8 1b       	sub	r30, r24
    e4ba:	8f 15       	cp	r24, r15
    e4bc:	08 f0       	brcs	.+2      	; 0xe4c0 <dtoa_prf+0x7c>
    e4be:	e0 e0       	ldi	r30, 0x00	; 0
    e4c0:	d6 01       	movw	r26, r12
    e4c2:	8e 2f       	mov	r24, r30
    e4c4:	20 e2       	ldi	r18, 0x20	; 32
    e4c6:	55 23       	and	r21, r21
    e4c8:	b1 f1       	breq	.+108    	; 0xe536 <dtoa_prf+0xf2>
    e4ca:	99 23       	and	r25, r25
    e4cc:	29 f0       	breq	.+10     	; 0xe4d8 <dtoa_prf+0x94>
    e4ce:	d6 01       	movw	r26, r12
    e4d0:	9c 93       	st	X, r25
    e4d2:	c6 01       	movw	r24, r12
    e4d4:	01 96       	adiw	r24, 0x01	; 1
    e4d6:	6c 01       	movw	r12, r24
    e4d8:	96 01       	movw	r18, r12
    e4da:	2d 5f       	subi	r18, 0xFD	; 253
    e4dc:	3f 4f       	sbci	r19, 0xFF	; 255
    e4de:	e2 fe       	sbrs	r14, 2
    e4e0:	30 c0       	rjmp	.+96     	; 0xe542 <dtoa_prf+0xfe>
    e4e2:	8e e4       	ldi	r24, 0x4E	; 78
    e4e4:	d6 01       	movw	r26, r12
    e4e6:	8c 93       	st	X, r24
    e4e8:	91 e4       	ldi	r25, 0x41	; 65
    e4ea:	11 96       	adiw	r26, 0x01	; 1
    e4ec:	9c 93       	st	X, r25
    e4ee:	11 97       	sbiw	r26, 0x01	; 1
    e4f0:	12 96       	adiw	r26, 0x02	; 2
    e4f2:	8c 93       	st	X, r24
    e4f4:	d9 01       	movw	r26, r18
    e4f6:	8e 2f       	mov	r24, r30
    e4f8:	90 e2       	ldi	r25, 0x20	; 32
    e4fa:	81 11       	cpse	r24, r1
    e4fc:	27 c0       	rjmp	.+78     	; 0xe54c <dtoa_prf+0x108>
    e4fe:	e2 0f       	add	r30, r18
    e500:	f3 2f       	mov	r31, r19
    e502:	f1 1d       	adc	r31, r1
    e504:	10 82       	st	Z, r1
    e506:	8e ef       	ldi	r24, 0xFE	; 254
    e508:	9f ef       	ldi	r25, 0xFF	; 255
    e50a:	29 96       	adiw	r28, 0x09	; 9
    e50c:	cd bf       	out	0x3d, r28	; 61
    e50e:	de bf       	out	0x3e, r29	; 62
    e510:	df 91       	pop	r29
    e512:	cf 91       	pop	r28
    e514:	1f 91       	pop	r17
    e516:	0f 91       	pop	r16
    e518:	ff 90       	pop	r15
    e51a:	ef 90       	pop	r14
    e51c:	df 90       	pop	r13
    e51e:	cf 90       	pop	r12
    e520:	bf 90       	pop	r11
    e522:	af 90       	pop	r10
    e524:	9f 90       	pop	r9
    e526:	8f 90       	pop	r8
    e528:	08 95       	ret
    e52a:	9d e2       	ldi	r25, 0x2D	; 45
    e52c:	ba cf       	rjmp	.-140    	; 0xe4a2 <dtoa_prf+0x5e>
    e52e:	90 e2       	ldi	r25, 0x20	; 32
    e530:	b8 cf       	rjmp	.-144    	; 0xe4a2 <dtoa_prf+0x5e>
    e532:	2d 93       	st	X+, r18
    e534:	81 50       	subi	r24, 0x01	; 1
    e536:	81 11       	cpse	r24, r1
    e538:	fc cf       	rjmp	.-8      	; 0xe532 <dtoa_prf+0xee>
    e53a:	ce 0e       	add	r12, r30
    e53c:	d1 1c       	adc	r13, r1
    e53e:	e0 e0       	ldi	r30, 0x00	; 0
    e540:	c4 cf       	rjmp	.-120    	; 0xe4ca <dtoa_prf+0x86>
    e542:	8e e6       	ldi	r24, 0x6E	; 110
    e544:	d6 01       	movw	r26, r12
    e546:	8c 93       	st	X, r24
    e548:	91 e6       	ldi	r25, 0x61	; 97
    e54a:	cf cf       	rjmp	.-98     	; 0xe4ea <dtoa_prf+0xa6>
    e54c:	9d 93       	st	X+, r25
    e54e:	81 50       	subi	r24, 0x01	; 1
    e550:	d4 cf       	rjmp	.-88     	; 0xe4fa <dtoa_prf+0xb6>
    e552:	48 2f       	mov	r20, r24
    e554:	44 70       	andi	r20, 0x04	; 4
    e556:	82 ff       	sbrs	r24, 2
    e558:	3d c0       	rjmp	.+122    	; 0xe5d4 <dtoa_prf+0x190>
    e55a:	84 e0       	ldi	r24, 0x04	; 4
    e55c:	91 11       	cpse	r25, r1
    e55e:	01 c0       	rjmp	.+2      	; 0xe562 <dtoa_prf+0x11e>
    e560:	83 e0       	ldi	r24, 0x03	; 3
    e562:	8f 15       	cp	r24, r15
    e564:	10 f4       	brcc	.+4      	; 0xe56a <dtoa_prf+0x126>
    e566:	ef 2d       	mov	r30, r15
    e568:	e8 1b       	sub	r30, r24
    e56a:	d6 01       	movw	r26, r12
    e56c:	8e 2f       	mov	r24, r30
    e56e:	20 e2       	ldi	r18, 0x20	; 32
    e570:	55 23       	and	r21, r21
    e572:	09 f1       	breq	.+66     	; 0xe5b6 <dtoa_prf+0x172>
    e574:	99 23       	and	r25, r25
    e576:	29 f0       	breq	.+10     	; 0xe582 <dtoa_prf+0x13e>
    e578:	d6 01       	movw	r26, r12
    e57a:	9c 93       	st	X, r25
    e57c:	c6 01       	movw	r24, r12
    e57e:	01 96       	adiw	r24, 0x01	; 1
    e580:	6c 01       	movw	r12, r24
    e582:	96 01       	movw	r18, r12
    e584:	2d 5f       	subi	r18, 0xFD	; 253
    e586:	3f 4f       	sbci	r19, 0xFF	; 255
    e588:	e2 fe       	sbrs	r14, 2
    e58a:	1b c0       	rjmp	.+54     	; 0xe5c2 <dtoa_prf+0x17e>
    e58c:	89 e4       	ldi	r24, 0x49	; 73
    e58e:	d6 01       	movw	r26, r12
    e590:	8c 93       	st	X, r24
    e592:	8e e4       	ldi	r24, 0x4E	; 78
    e594:	11 96       	adiw	r26, 0x01	; 1
    e596:	8c 93       	st	X, r24
    e598:	11 97       	sbiw	r26, 0x01	; 1
    e59a:	86 e4       	ldi	r24, 0x46	; 70
    e59c:	12 96       	adiw	r26, 0x02	; 2
    e59e:	8c 93       	st	X, r24
    e5a0:	d9 01       	movw	r26, r18
    e5a2:	8e 2f       	mov	r24, r30
    e5a4:	90 e2       	ldi	r25, 0x20	; 32
    e5a6:	88 23       	and	r24, r24
    e5a8:	09 f4       	brne	.+2      	; 0xe5ac <dtoa_prf+0x168>
    e5aa:	a9 cf       	rjmp	.-174    	; 0xe4fe <dtoa_prf+0xba>
    e5ac:	9d 93       	st	X+, r25
    e5ae:	81 50       	subi	r24, 0x01	; 1
    e5b0:	fa cf       	rjmp	.-12     	; 0xe5a6 <dtoa_prf+0x162>
    e5b2:	2d 93       	st	X+, r18
    e5b4:	81 50       	subi	r24, 0x01	; 1
    e5b6:	81 11       	cpse	r24, r1
    e5b8:	fc cf       	rjmp	.-8      	; 0xe5b2 <dtoa_prf+0x16e>
    e5ba:	ce 0e       	add	r12, r30
    e5bc:	d1 1c       	adc	r13, r1
    e5be:	e0 e0       	ldi	r30, 0x00	; 0
    e5c0:	d9 cf       	rjmp	.-78     	; 0xe574 <dtoa_prf+0x130>
    e5c2:	89 e6       	ldi	r24, 0x69	; 105
    e5c4:	d6 01       	movw	r26, r12
    e5c6:	8c 93       	st	X, r24
    e5c8:	8e e6       	ldi	r24, 0x6E	; 110
    e5ca:	11 96       	adiw	r26, 0x01	; 1
    e5cc:	8c 93       	st	X, r24
    e5ce:	11 97       	sbiw	r26, 0x01	; 1
    e5d0:	86 e6       	ldi	r24, 0x66	; 102
    e5d2:	e4 cf       	rjmp	.-56     	; 0xe59c <dtoa_prf+0x158>
    e5d4:	9b 01       	movw	r18, r22
    e5d6:	77 ff       	sbrs	r23, 7
    e5d8:	02 c0       	rjmp	.+4      	; 0xe5de <dtoa_prf+0x19a>
    e5da:	30 e0       	ldi	r19, 0x00	; 0
    e5dc:	20 e0       	ldi	r18, 0x00	; 0
    e5de:	a1 e0       	ldi	r26, 0x01	; 1
    e5e0:	b0 e0       	ldi	r27, 0x00	; 0
    e5e2:	91 11       	cpse	r25, r1
    e5e4:	02 c0       	rjmp	.+4      	; 0xe5ea <dtoa_prf+0x1a6>
    e5e6:	b0 e0       	ldi	r27, 0x00	; 0
    e5e8:	a0 e0       	ldi	r26, 0x00	; 0
    e5ea:	f9 01       	movw	r30, r18
    e5ec:	31 96       	adiw	r30, 0x01	; 1
    e5ee:	ae 0f       	add	r26, r30
    e5f0:	bf 1f       	adc	r27, r31
    e5f2:	8b 2c       	mov	r8, r11
    e5f4:	91 2c       	mov	r9, r1
    e5f6:	bb 20       	and	r11, r11
    e5f8:	09 f4       	brne	.+2      	; 0xe5fc <dtoa_prf+0x1b8>
    e5fa:	61 c0       	rjmp	.+194    	; 0xe6be <dtoa_prf+0x27a>
    e5fc:	54 01       	movw	r10, r8
    e5fe:	ef ef       	ldi	r30, 0xFF	; 255
    e600:	ae 1a       	sub	r10, r30
    e602:	be 0a       	sbc	r11, r30
    e604:	aa 0d       	add	r26, r10
    e606:	bb 1d       	adc	r27, r11
    e608:	fa 16       	cp	r15, r26
    e60a:	1b 06       	cpc	r1, r27
    e60c:	19 f0       	breq	.+6      	; 0xe614 <dtoa_prf+0x1d0>
    e60e:	14 f0       	brlt	.+4      	; 0xe614 <dtoa_prf+0x1d0>
    e610:	4f 2d       	mov	r20, r15
    e612:	4a 1b       	sub	r20, r26
    e614:	51 11       	cpse	r21, r1
    e616:	88 c0       	rjmp	.+272    	; 0xe728 <dtoa_prf+0x2e4>
    e618:	e3 fc       	sbrc	r14, 3
    e61a:	59 c0       	rjmp	.+178    	; 0xe6ce <dtoa_prf+0x28a>
    e61c:	76 01       	movw	r14, r12
    e61e:	a4 2f       	mov	r26, r20
    e620:	b0 e2       	ldi	r27, 0x20	; 32
    e622:	a1 11       	cpse	r26, r1
    e624:	4f c0       	rjmp	.+158    	; 0xe6c4 <dtoa_prf+0x280>
    e626:	c4 0e       	add	r12, r20
    e628:	d1 1c       	adc	r13, r1
    e62a:	99 23       	and	r25, r25
    e62c:	09 f4       	brne	.+2      	; 0xe630 <dtoa_prf+0x1ec>
    e62e:	5b c0       	rjmp	.+182    	; 0xe6e6 <dtoa_prf+0x2a2>
    e630:	40 e0       	ldi	r20, 0x00	; 0
    e632:	d6 01       	movw	r26, r12
    e634:	11 96       	adiw	r26, 0x01	; 1
    e636:	f6 01       	movw	r30, r12
    e638:	90 83       	st	Z, r25
    e63a:	6d 01       	movw	r12, r26
    e63c:	55 23       	and	r21, r21
    e63e:	09 f4       	brne	.+2      	; 0xe642 <dtoa_prf+0x1fe>
    e640:	48 c0       	rjmp	.+144    	; 0xe6d2 <dtoa_prf+0x28e>
    e642:	01 2f       	mov	r16, r17
    e644:	06 0f       	add	r16, r22
    e646:	9a 81       	ldd	r25, Y+2	; 0x02
    e648:	58 2f       	mov	r21, r24
    e64a:	50 71       	andi	r21, 0x10	; 16
    e64c:	84 ff       	sbrs	r24, 4
    e64e:	03 c0       	rjmp	.+6      	; 0xe656 <dtoa_prf+0x212>
    e650:	91 33       	cpi	r25, 0x31	; 49
    e652:	09 f4       	brne	.+2      	; 0xe656 <dtoa_prf+0x212>
    e654:	01 50       	subi	r16, 0x01	; 1
    e656:	10 16       	cp	r1, r16
    e658:	0c f0       	brlt	.+2      	; 0xe65c <dtoa_prf+0x218>
    e65a:	47 c0       	rjmp	.+142    	; 0xe6ea <dtoa_prf+0x2a6>
    e65c:	09 30       	cpi	r16, 0x09	; 9
    e65e:	08 f0       	brcs	.+2      	; 0xe662 <dtoa_prf+0x21e>
    e660:	08 e0       	ldi	r16, 0x08	; 8
    e662:	ee e2       	ldi	r30, 0x2E	; 46
    e664:	fe 2e       	mov	r15, r30
    e666:	5b 01       	movw	r10, r22
    e668:	a0 1a       	sub	r10, r16
    e66a:	b1 08       	sbc	r11, r1
    e66c:	85 01       	movw	r16, r10
    e66e:	91 94       	neg	r9
    e670:	81 94       	neg	r8
    e672:	91 08       	sbc	r9, r1
    e674:	2f 3f       	cpi	r18, 0xFF	; 255
    e676:	32 07       	cpc	r19, r18
    e678:	29 f4       	brne	.+10     	; 0xe684 <dtoa_prf+0x240>
    e67a:	d6 01       	movw	r26, r12
    e67c:	fc 92       	st	X, r15
    e67e:	f6 01       	movw	r30, r12
    e680:	31 96       	adiw	r30, 0x01	; 1
    e682:	6f 01       	movw	r12, r30
    e684:	62 17       	cp	r22, r18
    e686:	73 07       	cpc	r23, r19
    e688:	94 f1       	brlt	.+100    	; 0xe6ee <dtoa_prf+0x2aa>
    e68a:	02 17       	cp	r16, r18
    e68c:	13 07       	cpc	r17, r19
    e68e:	7c f5       	brge	.+94     	; 0xe6ee <dtoa_prf+0x2aa>
    e690:	db 01       	movw	r26, r22
    e692:	a2 1b       	sub	r26, r18
    e694:	b3 0b       	sbc	r27, r19
    e696:	aa 24       	eor	r10, r10
    e698:	a3 94       	inc	r10
    e69a:	b1 2c       	mov	r11, r1
    e69c:	ac 0e       	add	r10, r28
    e69e:	bd 1e       	adc	r11, r29
    e6a0:	aa 0d       	add	r26, r10
    e6a2:	bb 1d       	adc	r27, r11
    e6a4:	11 96       	adiw	r26, 0x01	; 1
    e6a6:	8c 91       	ld	r24, X
    e6a8:	21 50       	subi	r18, 0x01	; 1
    e6aa:	31 09       	sbc	r19, r1
    e6ac:	d6 01       	movw	r26, r12
    e6ae:	11 96       	adiw	r26, 0x01	; 1
    e6b0:	28 15       	cp	r18, r8
    e6b2:	39 05       	cpc	r19, r9
    e6b4:	f4 f0       	brlt	.+60     	; 0xe6f2 <dtoa_prf+0x2ae>
    e6b6:	f6 01       	movw	r30, r12
    e6b8:	80 83       	st	Z, r24
    e6ba:	6d 01       	movw	r12, r26
    e6bc:	db cf       	rjmp	.-74     	; 0xe674 <dtoa_prf+0x230>
    e6be:	b1 2c       	mov	r11, r1
    e6c0:	a1 2c       	mov	r10, r1
    e6c2:	a0 cf       	rjmp	.-192    	; 0xe604 <dtoa_prf+0x1c0>
    e6c4:	f7 01       	movw	r30, r14
    e6c6:	b1 93       	st	Z+, r27
    e6c8:	7f 01       	movw	r14, r30
    e6ca:	a1 50       	subi	r26, 0x01	; 1
    e6cc:	aa cf       	rjmp	.-172    	; 0xe622 <dtoa_prf+0x1de>
    e6ce:	91 11       	cpse	r25, r1
    e6d0:	b0 cf       	rjmp	.-160    	; 0xe632 <dtoa_prf+0x1ee>
    e6d2:	d6 01       	movw	r26, r12
    e6d4:	94 2f       	mov	r25, r20
    e6d6:	50 e3       	ldi	r21, 0x30	; 48
    e6d8:	02 c0       	rjmp	.+4      	; 0xe6de <dtoa_prf+0x29a>
    e6da:	5d 93       	st	X+, r21
    e6dc:	91 50       	subi	r25, 0x01	; 1
    e6de:	91 11       	cpse	r25, r1
    e6e0:	fc cf       	rjmp	.-8      	; 0xe6da <dtoa_prf+0x296>
    e6e2:	c4 0e       	add	r12, r20
    e6e4:	d1 1c       	adc	r13, r1
    e6e6:	40 e0       	ldi	r20, 0x00	; 0
    e6e8:	ac cf       	rjmp	.-168    	; 0xe642 <dtoa_prf+0x1fe>
    e6ea:	01 e0       	ldi	r16, 0x01	; 1
    e6ec:	ba cf       	rjmp	.-140    	; 0xe662 <dtoa_prf+0x21e>
    e6ee:	80 e3       	ldi	r24, 0x30	; 48
    e6f0:	db cf       	rjmp	.-74     	; 0xe6a8 <dtoa_prf+0x264>
    e6f2:	62 17       	cp	r22, r18
    e6f4:	73 07       	cpc	r23, r19
    e6f6:	31 f4       	brne	.+12     	; 0xe704 <dtoa_prf+0x2c0>
    e6f8:	96 33       	cpi	r25, 0x36	; 54
    e6fa:	88 f4       	brcc	.+34     	; 0xe71e <dtoa_prf+0x2da>
    e6fc:	95 33       	cpi	r25, 0x35	; 53
    e6fe:	11 f4       	brne	.+4      	; 0xe704 <dtoa_prf+0x2c0>
    e700:	55 23       	and	r21, r21
    e702:	69 f0       	breq	.+26     	; 0xe71e <dtoa_prf+0x2da>
    e704:	f6 01       	movw	r30, r12
    e706:	80 83       	st	Z, r24
    e708:	fd 01       	movw	r30, r26
    e70a:	84 2f       	mov	r24, r20
    e70c:	90 e2       	ldi	r25, 0x20	; 32
    e70e:	81 11       	cpse	r24, r1
    e710:	08 c0       	rjmp	.+16     	; 0xe722 <dtoa_prf+0x2de>
    e712:	a4 0f       	add	r26, r20
    e714:	b1 1d       	adc	r27, r1
    e716:	1c 92       	st	X, r1
    e718:	90 e0       	ldi	r25, 0x00	; 0
    e71a:	80 e0       	ldi	r24, 0x00	; 0
    e71c:	f6 ce       	rjmp	.-532    	; 0xe50a <dtoa_prf+0xc6>
    e71e:	81 e3       	ldi	r24, 0x31	; 49
    e720:	f1 cf       	rjmp	.-30     	; 0xe704 <dtoa_prf+0x2c0>
    e722:	91 93       	st	Z+, r25
    e724:	81 50       	subi	r24, 0x01	; 1
    e726:	f3 cf       	rjmp	.-26     	; 0xe70e <dtoa_prf+0x2ca>
    e728:	91 11       	cpse	r25, r1
    e72a:	83 cf       	rjmp	.-250    	; 0xe632 <dtoa_prf+0x1ee>
    e72c:	8a cf       	rjmp	.-236    	; 0xe642 <dtoa_prf+0x1fe>

0000e72e <strtod>:
strtod():
    e72e:	8f 92       	push	r8
    e730:	9f 92       	push	r9
    e732:	af 92       	push	r10
    e734:	bf 92       	push	r11
    e736:	cf 92       	push	r12
    e738:	df 92       	push	r13
    e73a:	ef 92       	push	r14
    e73c:	ff 92       	push	r15
    e73e:	0f 93       	push	r16
    e740:	1f 93       	push	r17
    e742:	cf 93       	push	r28
    e744:	df 93       	push	r29
    e746:	5c 01       	movw	r10, r24
    e748:	7b 01       	movw	r14, r22
    e74a:	61 15       	cp	r22, r1
    e74c:	71 05       	cpc	r23, r1
    e74e:	19 f0       	breq	.+6      	; 0xe756 <strtod+0x28>
    e750:	db 01       	movw	r26, r22
    e752:	8d 93       	st	X+, r24
    e754:	9c 93       	st	X, r25
    e756:	85 01       	movw	r16, r10
    e758:	0f 5f       	subi	r16, 0xFF	; 255
    e75a:	1f 4f       	sbci	r17, 0xFF	; 255
    e75c:	f5 01       	movw	r30, r10
    e75e:	d0 81       	ld	r29, Z
    e760:	8d 2f       	mov	r24, r29
    e762:	90 e0       	ldi	r25, 0x00	; 0
    e764:	11 d2       	rcall	.+1058   	; 0xeb88 <isspace>
    e766:	6c 01       	movw	r12, r24
    e768:	89 2b       	or	r24, r25
    e76a:	a9 f5       	brne	.+106    	; 0xe7d6 <strtod+0xa8>
    e76c:	dd 32       	cpi	r29, 0x2D	; 45
    e76e:	a9 f5       	brne	.+106    	; 0xe7da <strtod+0xac>
    e770:	0f 5f       	subi	r16, 0xFF	; 255
    e772:	1f 4f       	sbci	r17, 0xFF	; 255
    e774:	d5 01       	movw	r26, r10
    e776:	11 96       	adiw	r26, 0x01	; 1
    e778:	dc 91       	ld	r29, X
    e77a:	c1 e0       	ldi	r28, 0x01	; 1
    e77c:	58 01       	movw	r10, r16
    e77e:	f1 e0       	ldi	r31, 0x01	; 1
    e780:	af 1a       	sub	r10, r31
    e782:	b1 08       	sbc	r11, r1
    e784:	43 e0       	ldi	r20, 0x03	; 3
    e786:	50 e0       	ldi	r21, 0x00	; 0
    e788:	6c ef       	ldi	r22, 0xFC	; 252
    e78a:	72 e0       	ldi	r23, 0x02	; 2
    e78c:	c5 01       	movw	r24, r10
    e78e:	04 d2       	rcall	.+1032   	; 0xeb98 <strncasecmp_P>
    e790:	89 2b       	or	r24, r25
    e792:	61 f5       	brne	.+88     	; 0xe7ec <strtod+0xbe>
    e794:	68 01       	movw	r12, r16
    e796:	82 e0       	ldi	r24, 0x02	; 2
    e798:	c8 0e       	add	r12, r24
    e79a:	d1 1c       	adc	r13, r1
    e79c:	45 e0       	ldi	r20, 0x05	; 5
    e79e:	50 e0       	ldi	r21, 0x00	; 0
    e7a0:	67 ef       	ldi	r22, 0xF7	; 247
    e7a2:	72 e0       	ldi	r23, 0x02	; 2
    e7a4:	c6 01       	movw	r24, r12
    e7a6:	f8 d1       	rcall	.+1008   	; 0xeb98 <strncasecmp_P>
    e7a8:	89 2b       	or	r24, r25
    e7aa:	21 f4       	brne	.+8      	; 0xe7b4 <strtod+0x86>
    e7ac:	68 01       	movw	r12, r16
    e7ae:	97 e0       	ldi	r25, 0x07	; 7
    e7b0:	c9 0e       	add	r12, r25
    e7b2:	d1 1c       	adc	r13, r1
    e7b4:	e1 14       	cp	r14, r1
    e7b6:	f1 04       	cpc	r15, r1
    e7b8:	19 f0       	breq	.+6      	; 0xe7c0 <strtod+0x92>
    e7ba:	d7 01       	movw	r26, r14
    e7bc:	cd 92       	st	X+, r12
    e7be:	dc 92       	st	X, r13
    e7c0:	60 e0       	ldi	r22, 0x00	; 0
    e7c2:	70 e0       	ldi	r23, 0x00	; 0
    e7c4:	80 e8       	ldi	r24, 0x80	; 128
    e7c6:	9f ef       	ldi	r25, 0xFF	; 255
    e7c8:	c1 11       	cpse	r28, r1
    e7ca:	f9 c0       	rjmp	.+498    	; 0xe9be <strtod+0x290>
    e7cc:	60 e0       	ldi	r22, 0x00	; 0
    e7ce:	70 e0       	ldi	r23, 0x00	; 0
    e7d0:	80 e8       	ldi	r24, 0x80	; 128
    e7d2:	9f e7       	ldi	r25, 0x7F	; 127
    e7d4:	f4 c0       	rjmp	.+488    	; 0xe9be <strtod+0x290>
    e7d6:	58 01       	movw	r10, r16
    e7d8:	be cf       	rjmp	.-132    	; 0xe756 <strtod+0x28>
    e7da:	db 32       	cpi	r29, 0x2B	; 43
    e7dc:	29 f4       	brne	.+10     	; 0xe7e8 <strtod+0xba>
    e7de:	85 01       	movw	r16, r10
    e7e0:	0e 5f       	subi	r16, 0xFE	; 254
    e7e2:	1f 4f       	sbci	r17, 0xFF	; 255
    e7e4:	f5 01       	movw	r30, r10
    e7e6:	d1 81       	ldd	r29, Z+1	; 0x01
    e7e8:	c0 e0       	ldi	r28, 0x00	; 0
    e7ea:	c8 cf       	rjmp	.-112    	; 0xe77c <strtod+0x4e>
    e7ec:	43 e0       	ldi	r20, 0x03	; 3
    e7ee:	50 e0       	ldi	r21, 0x00	; 0
    e7f0:	64 ef       	ldi	r22, 0xF4	; 244
    e7f2:	72 e0       	ldi	r23, 0x02	; 2
    e7f4:	c5 01       	movw	r24, r10
    e7f6:	d0 d1       	rcall	.+928    	; 0xeb98 <strncasecmp_P>
    e7f8:	89 2b       	or	r24, r25
    e7fa:	e9 f0       	breq	.+58     	; 0xe836 <strtod+0x108>
    e7fc:	f8 01       	movw	r30, r16
    e7fe:	10 e0       	ldi	r17, 0x00	; 0
    e800:	00 e0       	ldi	r16, 0x00	; 0
    e802:	20 e0       	ldi	r18, 0x00	; 0
    e804:	30 e0       	ldi	r19, 0x00	; 0
    e806:	a9 01       	movw	r20, r18
    e808:	5f 01       	movw	r10, r30
    e80a:	b0 ed       	ldi	r27, 0xD0	; 208
    e80c:	8b 2e       	mov	r8, r27
    e80e:	8d 0e       	add	r8, r29
    e810:	89 e0       	ldi	r24, 0x09	; 9
    e812:	88 15       	cp	r24, r8
    e814:	c0 f1       	brcs	.+112    	; 0xe886 <strtod+0x158>
    e816:	9c 2e       	mov	r9, r28
    e818:	68 94       	set
    e81a:	91 f8       	bld	r9, 1
    e81c:	8c 2f       	mov	r24, r28
    e81e:	88 70       	andi	r24, 0x08	; 8
    e820:	c2 ff       	sbrs	r28, 2
    e822:	16 c0       	rjmp	.+44     	; 0xe850 <strtod+0x122>
    e824:	81 11       	cpse	r24, r1
    e826:	02 c0       	rjmp	.+4      	; 0xe82c <strtod+0xfe>
    e828:	0f 5f       	subi	r16, 0xFF	; 255
    e82a:	1f 4f       	sbci	r17, 0xFF	; 255
    e82c:	31 96       	adiw	r30, 0x01	; 1
    e82e:	d5 01       	movw	r26, r10
    e830:	dc 91       	ld	r29, X
    e832:	c9 2d       	mov	r28, r9
    e834:	e9 cf       	rjmp	.-46     	; 0xe808 <strtod+0xda>
    e836:	e1 14       	cp	r14, r1
    e838:	f1 04       	cpc	r15, r1
    e83a:	29 f0       	breq	.+10     	; 0xe846 <strtod+0x118>
    e83c:	0e 5f       	subi	r16, 0xFE	; 254
    e83e:	1f 4f       	sbci	r17, 0xFF	; 255
    e840:	f7 01       	movw	r30, r14
    e842:	00 83       	st	Z, r16
    e844:	11 83       	std	Z+1, r17	; 0x01
    e846:	60 e0       	ldi	r22, 0x00	; 0
    e848:	70 e0       	ldi	r23, 0x00	; 0
    e84a:	80 ec       	ldi	r24, 0xC0	; 192
    e84c:	9f e7       	ldi	r25, 0x7F	; 127
    e84e:	b7 c0       	rjmp	.+366    	; 0xe9be <strtod+0x290>
    e850:	88 23       	and	r24, r24
    e852:	11 f0       	breq	.+4      	; 0xe858 <strtod+0x12a>
    e854:	01 50       	subi	r16, 0x01	; 1
    e856:	11 09       	sbc	r17, r1
    e858:	a5 e0       	ldi	r26, 0x05	; 5
    e85a:	b0 e0       	ldi	r27, 0x00	; 0
    e85c:	d1 d2       	rcall	.+1442   	; 0xee00 <__muluhisi3>
    e85e:	9b 01       	movw	r18, r22
    e860:	ac 01       	movw	r20, r24
    e862:	22 0f       	add	r18, r18
    e864:	33 1f       	adc	r19, r19
    e866:	44 1f       	adc	r20, r20
    e868:	55 1f       	adc	r21, r21
    e86a:	28 0d       	add	r18, r8
    e86c:	31 1d       	adc	r19, r1
    e86e:	41 1d       	adc	r20, r1
    e870:	51 1d       	adc	r21, r1
    e872:	28 39       	cpi	r18, 0x98	; 152
    e874:	99 e9       	ldi	r25, 0x99	; 153
    e876:	39 07       	cpc	r19, r25
    e878:	49 07       	cpc	r20, r25
    e87a:	99 e1       	ldi	r25, 0x19	; 25
    e87c:	59 07       	cpc	r21, r25
    e87e:	b0 f2       	brcs	.-84     	; 0xe82c <strtod+0xfe>
    e880:	c6 60       	ori	r28, 0x06	; 6
    e882:	9c 2e       	mov	r9, r28
    e884:	d3 cf       	rjmp	.-90     	; 0xe82c <strtod+0xfe>
    e886:	ae ef       	ldi	r26, 0xFE	; 254
    e888:	8a 12       	cpse	r8, r26
    e88a:	06 c0       	rjmp	.+12     	; 0xe898 <strtod+0x16a>
    e88c:	c3 fd       	sbrc	r28, 3
    e88e:	3c c0       	rjmp	.+120    	; 0xe908 <strtod+0x1da>
    e890:	9c 2e       	mov	r9, r28
    e892:	68 94       	set
    e894:	93 f8       	bld	r9, 3
    e896:	ca cf       	rjmp	.-108    	; 0xe82c <strtod+0xfe>
    e898:	df 7d       	andi	r29, 0xDF	; 223
    e89a:	d5 34       	cpi	r29, 0x45	; 69
    e89c:	a9 f5       	brne	.+106    	; 0xe908 <strtod+0x1da>
    e89e:	80 81       	ld	r24, Z
    e8a0:	8d 32       	cpi	r24, 0x2D	; 45
    e8a2:	39 f4       	brne	.+14     	; 0xe8b2 <strtod+0x184>
    e8a4:	c0 61       	ori	r28, 0x10	; 16
    e8a6:	df 01       	movw	r26, r30
    e8a8:	12 96       	adiw	r26, 0x02	; 2
    e8aa:	81 81       	ldd	r24, Z+1	; 0x01
    e8ac:	62 e0       	ldi	r22, 0x02	; 2
    e8ae:	70 e0       	ldi	r23, 0x00	; 0
    e8b0:	06 c0       	rjmp	.+12     	; 0xe8be <strtod+0x190>
    e8b2:	df 01       	movw	r26, r30
    e8b4:	8b 32       	cpi	r24, 0x2B	; 43
    e8b6:	c1 f3       	breq	.-16     	; 0xe8a8 <strtod+0x17a>
    e8b8:	11 96       	adiw	r26, 0x01	; 1
    e8ba:	61 e0       	ldi	r22, 0x01	; 1
    e8bc:	70 e0       	ldi	r23, 0x00	; 0
    e8be:	80 53       	subi	r24, 0x30	; 48
    e8c0:	5d 01       	movw	r10, r26
    e8c2:	a6 1a       	sub	r10, r22
    e8c4:	b7 0a       	sbc	r11, r23
    e8c6:	8a 30       	cpi	r24, 0x0A	; 10
    e8c8:	f8 f4       	brcc	.+62     	; 0xe908 <strtod+0x1da>
    e8ca:	e0 e8       	ldi	r30, 0x80	; 128
    e8cc:	ce 16       	cp	r12, r30
    e8ce:	ec e0       	ldi	r30, 0x0C	; 12
    e8d0:	de 06       	cpc	r13, r30
    e8d2:	5c f4       	brge	.+22     	; 0xe8ea <strtod+0x1bc>
    e8d4:	b6 01       	movw	r22, r12
    e8d6:	66 0f       	add	r22, r22
    e8d8:	77 1f       	adc	r23, r23
    e8da:	66 0f       	add	r22, r22
    e8dc:	77 1f       	adc	r23, r23
    e8de:	c6 0e       	add	r12, r22
    e8e0:	d7 1e       	adc	r13, r23
    e8e2:	cc 0c       	add	r12, r12
    e8e4:	dd 1c       	adc	r13, r13
    e8e6:	c8 0e       	add	r12, r24
    e8e8:	d1 1c       	adc	r13, r1
    e8ea:	5d 01       	movw	r10, r26
    e8ec:	ff ef       	ldi	r31, 0xFF	; 255
    e8ee:	af 1a       	sub	r10, r31
    e8f0:	bf 0a       	sbc	r11, r31
    e8f2:	8c 91       	ld	r24, X
    e8f4:	80 53       	subi	r24, 0x30	; 48
    e8f6:	8a 30       	cpi	r24, 0x0A	; 10
    e8f8:	98 f1       	brcs	.+102    	; 0xe960 <strtod+0x232>
    e8fa:	c4 ff       	sbrs	r28, 4
    e8fc:	03 c0       	rjmp	.+6      	; 0xe904 <strtod+0x1d6>
    e8fe:	d1 94       	neg	r13
    e900:	c1 94       	neg	r12
    e902:	d1 08       	sbc	r13, r1
    e904:	0c 0d       	add	r16, r12
    e906:	1d 1d       	adc	r17, r13
    e908:	c1 ff       	sbrs	r28, 1
    e90a:	09 c0       	rjmp	.+18     	; 0xe91e <strtod+0x1f0>
    e90c:	e1 14       	cp	r14, r1
    e90e:	f1 04       	cpc	r15, r1
    e910:	31 f0       	breq	.+12     	; 0xe91e <strtod+0x1f0>
    e912:	81 e0       	ldi	r24, 0x01	; 1
    e914:	a8 1a       	sub	r10, r24
    e916:	b1 08       	sbc	r11, r1
    e918:	d7 01       	movw	r26, r14
    e91a:	ad 92       	st	X+, r10
    e91c:	bc 92       	st	X, r11
    e91e:	ca 01       	movw	r24, r20
    e920:	b9 01       	movw	r22, r18
    e922:	56 d1       	rcall	.+684    	; 0xebd0 <__floatunsisf>
    e924:	c3 70       	andi	r28, 0x03	; 3
    e926:	c3 30       	cpi	r28, 0x03	; 3
    e928:	09 f4       	brne	.+2      	; 0xe92c <strtod+0x1fe>
    e92a:	90 58       	subi	r25, 0x80	; 128
    e92c:	4b 01       	movw	r8, r22
    e92e:	5c 01       	movw	r10, r24
    e930:	20 e0       	ldi	r18, 0x00	; 0
    e932:	30 e0       	ldi	r19, 0x00	; 0
    e934:	a9 01       	movw	r20, r18
    e936:	48 d1       	rcall	.+656    	; 0xebc8 <__cmpsf2>
    e938:	88 23       	and	r24, r24
    e93a:	09 f4       	brne	.+2      	; 0xe93e <strtod+0x210>
    e93c:	3e c0       	rjmp	.+124    	; 0xe9ba <strtod+0x28c>
    e93e:	cb e2       	ldi	r28, 0x2B	; 43
    e940:	d3 e0       	ldi	r29, 0x03	; 3
    e942:	17 ff       	sbrs	r17, 7
    e944:	05 c0       	rjmp	.+10     	; 0xe950 <strtod+0x222>
    e946:	11 95       	neg	r17
    e948:	01 95       	neg	r16
    e94a:	11 09       	sbc	r17, r1
    e94c:	c3 e1       	ldi	r28, 0x13	; 19
    e94e:	d3 e0       	ldi	r29, 0x03	; 3
    e950:	6e 01       	movw	r12, r28
    e952:	b8 e1       	ldi	r27, 0x18	; 24
    e954:	cb 1a       	sub	r12, r27
    e956:	d1 08       	sbc	r13, r1
    e958:	80 e2       	ldi	r24, 0x20	; 32
    e95a:	e8 2e       	mov	r14, r24
    e95c:	f1 2c       	mov	r15, r1
    e95e:	0e c0       	rjmp	.+28     	; 0xe97c <strtod+0x24e>
    e960:	d5 01       	movw	r26, r10
    e962:	b3 cf       	rjmp	.-154    	; 0xe8ca <strtod+0x19c>
    e964:	fe 01       	movw	r30, r28
    e966:	25 91       	lpm	r18, Z+
    e968:	35 91       	lpm	r19, Z+
    e96a:	45 91       	lpm	r20, Z+
    e96c:	54 91       	lpm	r21, Z
    e96e:	0e 19       	sub	r16, r14
    e970:	1f 09       	sbc	r17, r15
    e972:	c5 01       	movw	r24, r10
    e974:	b4 01       	movw	r22, r8
    e976:	8d d1       	rcall	.+794    	; 0xec92 <__mulsf3>
    e978:	4b 01       	movw	r8, r22
    e97a:	5c 01       	movw	r10, r24
    e97c:	d5 01       	movw	r26, r10
    e97e:	c4 01       	movw	r24, r8
    e980:	0e 15       	cp	r16, r14
    e982:	1f 05       	cpc	r17, r15
    e984:	7c f7       	brge	.-34     	; 0xe964 <strtod+0x236>
    e986:	24 97       	sbiw	r28, 0x04	; 4
    e988:	f5 94       	asr	r15
    e98a:	e7 94       	ror	r14
    e98c:	cc 16       	cp	r12, r28
    e98e:	dd 06       	cpc	r13, r29
    e990:	a9 f7       	brne	.-22     	; 0xe97c <strtod+0x24e>
    e992:	8a 2f       	mov	r24, r26
    e994:	88 0f       	add	r24, r24
    e996:	8b 2f       	mov	r24, r27
    e998:	88 1f       	adc	r24, r24
    e99a:	8f 3f       	cpi	r24, 0xFF	; 255
    e99c:	41 f0       	breq	.+16     	; 0xe9ae <strtod+0x280>
    e99e:	20 e0       	ldi	r18, 0x00	; 0
    e9a0:	30 e0       	ldi	r19, 0x00	; 0
    e9a2:	a9 01       	movw	r20, r18
    e9a4:	c5 01       	movw	r24, r10
    e9a6:	b4 01       	movw	r22, r8
    e9a8:	0f d1       	rcall	.+542    	; 0xebc8 <__cmpsf2>
    e9aa:	81 11       	cpse	r24, r1
    e9ac:	06 c0       	rjmp	.+12     	; 0xe9ba <strtod+0x28c>
    e9ae:	82 e2       	ldi	r24, 0x22	; 34
    e9b0:	90 e0       	ldi	r25, 0x00	; 0
    e9b2:	80 93 6d 55 	sts	0x556D, r24	; 0x80556d <errno>
    e9b6:	90 93 6e 55 	sts	0x556E, r25	; 0x80556e <errno+0x1>
    e9ba:	c5 01       	movw	r24, r10
    e9bc:	b4 01       	movw	r22, r8
    e9be:	df 91       	pop	r29
    e9c0:	cf 91       	pop	r28
    e9c2:	1f 91       	pop	r17
    e9c4:	0f 91       	pop	r16
    e9c6:	ff 90       	pop	r15
    e9c8:	ef 90       	pop	r14
    e9ca:	df 90       	pop	r13
    e9cc:	cf 90       	pop	r12
    e9ce:	bf 90       	pop	r11
    e9d0:	af 90       	pop	r10
    e9d2:	9f 90       	pop	r9
    e9d4:	8f 90       	pop	r8
    e9d6:	08 95       	ret

0000e9d8 <__ftoa_engine>:
__ftoa_engine():
    e9d8:	28 30       	cpi	r18, 0x08	; 8
    e9da:	08 f0       	brcs	.+2      	; 0xe9de <__ftoa_engine+0x6>
    e9dc:	27 e0       	ldi	r18, 0x07	; 7
    e9de:	33 27       	eor	r19, r19
    e9e0:	da 01       	movw	r26, r20
    e9e2:	99 0f       	add	r25, r25
    e9e4:	31 1d       	adc	r19, r1
    e9e6:	87 fd       	sbrc	r24, 7
    e9e8:	91 60       	ori	r25, 0x01	; 1
    e9ea:	00 96       	adiw	r24, 0x00	; 0
    e9ec:	61 05       	cpc	r22, r1
    e9ee:	71 05       	cpc	r23, r1
    e9f0:	39 f4       	brne	.+14     	; 0xea00 <__ftoa_engine+0x28>
    e9f2:	32 60       	ori	r19, 0x02	; 2
    e9f4:	2e 5f       	subi	r18, 0xFE	; 254
    e9f6:	3d 93       	st	X+, r19
    e9f8:	30 e3       	ldi	r19, 0x30	; 48
    e9fa:	2a 95       	dec	r18
    e9fc:	e1 f7       	brne	.-8      	; 0xe9f6 <__ftoa_engine+0x1e>
    e9fe:	08 95       	ret
    ea00:	9f 3f       	cpi	r25, 0xFF	; 255
    ea02:	30 f0       	brcs	.+12     	; 0xea10 <__ftoa_engine+0x38>
    ea04:	80 38       	cpi	r24, 0x80	; 128
    ea06:	71 05       	cpc	r23, r1
    ea08:	61 05       	cpc	r22, r1
    ea0a:	09 f0       	breq	.+2      	; 0xea0e <__ftoa_engine+0x36>
    ea0c:	3c 5f       	subi	r19, 0xFC	; 252
    ea0e:	3c 5f       	subi	r19, 0xFC	; 252
    ea10:	3d 93       	st	X+, r19
    ea12:	91 30       	cpi	r25, 0x01	; 1
    ea14:	08 f0       	brcs	.+2      	; 0xea18 <__ftoa_engine+0x40>
    ea16:	80 68       	ori	r24, 0x80	; 128
    ea18:	91 1d       	adc	r25, r1
    ea1a:	df 93       	push	r29
    ea1c:	cf 93       	push	r28
    ea1e:	1f 93       	push	r17
    ea20:	0f 93       	push	r16
    ea22:	ff 92       	push	r15
    ea24:	ef 92       	push	r14
    ea26:	19 2f       	mov	r17, r25
    ea28:	98 7f       	andi	r25, 0xF8	; 248
    ea2a:	96 95       	lsr	r25
    ea2c:	e9 2f       	mov	r30, r25
    ea2e:	96 95       	lsr	r25
    ea30:	96 95       	lsr	r25
    ea32:	e9 0f       	add	r30, r25
    ea34:	ff 27       	eor	r31, r31
    ea36:	e7 57       	subi	r30, 0x77	; 119
    ea38:	fc 4f       	sbci	r31, 0xFC	; 252
    ea3a:	99 27       	eor	r25, r25
    ea3c:	33 27       	eor	r19, r19
    ea3e:	ee 24       	eor	r14, r14
    ea40:	ff 24       	eor	r15, r15
    ea42:	a7 01       	movw	r20, r14
    ea44:	e7 01       	movw	r28, r14
    ea46:	05 90       	lpm	r0, Z+
    ea48:	08 94       	sec
    ea4a:	07 94       	ror	r0
    ea4c:	28 f4       	brcc	.+10     	; 0xea58 <__ftoa_engine+0x80>
    ea4e:	36 0f       	add	r19, r22
    ea50:	e7 1e       	adc	r14, r23
    ea52:	f8 1e       	adc	r15, r24
    ea54:	49 1f       	adc	r20, r25
    ea56:	51 1d       	adc	r21, r1
    ea58:	66 0f       	add	r22, r22
    ea5a:	77 1f       	adc	r23, r23
    ea5c:	88 1f       	adc	r24, r24
    ea5e:	99 1f       	adc	r25, r25
    ea60:	06 94       	lsr	r0
    ea62:	a1 f7       	brne	.-24     	; 0xea4c <__ftoa_engine+0x74>
    ea64:	05 90       	lpm	r0, Z+
    ea66:	07 94       	ror	r0
    ea68:	28 f4       	brcc	.+10     	; 0xea74 <__ftoa_engine+0x9c>
    ea6a:	e7 0e       	add	r14, r23
    ea6c:	f8 1e       	adc	r15, r24
    ea6e:	49 1f       	adc	r20, r25
    ea70:	56 1f       	adc	r21, r22
    ea72:	c1 1d       	adc	r28, r1
    ea74:	77 0f       	add	r23, r23
    ea76:	88 1f       	adc	r24, r24
    ea78:	99 1f       	adc	r25, r25
    ea7a:	66 1f       	adc	r22, r22
    ea7c:	06 94       	lsr	r0
    ea7e:	a1 f7       	brne	.-24     	; 0xea68 <__ftoa_engine+0x90>
    ea80:	05 90       	lpm	r0, Z+
    ea82:	07 94       	ror	r0
    ea84:	28 f4       	brcc	.+10     	; 0xea90 <__ftoa_engine+0xb8>
    ea86:	f8 0e       	add	r15, r24
    ea88:	49 1f       	adc	r20, r25
    ea8a:	56 1f       	adc	r21, r22
    ea8c:	c7 1f       	adc	r28, r23
    ea8e:	d1 1d       	adc	r29, r1
    ea90:	88 0f       	add	r24, r24
    ea92:	99 1f       	adc	r25, r25
    ea94:	66 1f       	adc	r22, r22
    ea96:	77 1f       	adc	r23, r23
    ea98:	06 94       	lsr	r0
    ea9a:	a1 f7       	brne	.-24     	; 0xea84 <__ftoa_engine+0xac>
    ea9c:	05 90       	lpm	r0, Z+
    ea9e:	07 94       	ror	r0
    eaa0:	20 f4       	brcc	.+8      	; 0xeaaa <__ftoa_engine+0xd2>
    eaa2:	49 0f       	add	r20, r25
    eaa4:	56 1f       	adc	r21, r22
    eaa6:	c7 1f       	adc	r28, r23
    eaa8:	d8 1f       	adc	r29, r24
    eaaa:	99 0f       	add	r25, r25
    eaac:	66 1f       	adc	r22, r22
    eaae:	77 1f       	adc	r23, r23
    eab0:	88 1f       	adc	r24, r24
    eab2:	06 94       	lsr	r0
    eab4:	a9 f7       	brne	.-22     	; 0xeaa0 <__ftoa_engine+0xc8>
    eab6:	84 91       	lpm	r24, Z
    eab8:	10 95       	com	r17
    eaba:	17 70       	andi	r17, 0x07	; 7
    eabc:	41 f0       	breq	.+16     	; 0xeace <__ftoa_engine+0xf6>
    eabe:	d6 95       	lsr	r29
    eac0:	c7 95       	ror	r28
    eac2:	57 95       	ror	r21
    eac4:	47 95       	ror	r20
    eac6:	f7 94       	ror	r15
    eac8:	e7 94       	ror	r14
    eaca:	1a 95       	dec	r17
    eacc:	c1 f7       	brne	.-16     	; 0xeabe <__ftoa_engine+0xe6>
    eace:	ef e2       	ldi	r30, 0x2F	; 47
    ead0:	f3 e0       	ldi	r31, 0x03	; 3
    ead2:	68 94       	set
    ead4:	15 90       	lpm	r1, Z+
    ead6:	15 91       	lpm	r17, Z+
    ead8:	35 91       	lpm	r19, Z+
    eada:	65 91       	lpm	r22, Z+
    eadc:	95 91       	lpm	r25, Z+
    eade:	05 90       	lpm	r0, Z+
    eae0:	7f e2       	ldi	r23, 0x2F	; 47
    eae2:	73 95       	inc	r23
    eae4:	e1 18       	sub	r14, r1
    eae6:	f1 0a       	sbc	r15, r17
    eae8:	43 0b       	sbc	r20, r19
    eaea:	56 0b       	sbc	r21, r22
    eaec:	c9 0b       	sbc	r28, r25
    eaee:	d0 09       	sbc	r29, r0
    eaf0:	c0 f7       	brcc	.-16     	; 0xeae2 <__ftoa_engine+0x10a>
    eaf2:	e1 0c       	add	r14, r1
    eaf4:	f1 1e       	adc	r15, r17
    eaf6:	43 1f       	adc	r20, r19
    eaf8:	56 1f       	adc	r21, r22
    eafa:	c9 1f       	adc	r28, r25
    eafc:	d0 1d       	adc	r29, r0
    eafe:	7e f4       	brtc	.+30     	; 0xeb1e <__ftoa_engine+0x146>
    eb00:	70 33       	cpi	r23, 0x30	; 48
    eb02:	11 f4       	brne	.+4      	; 0xeb08 <__ftoa_engine+0x130>
    eb04:	8a 95       	dec	r24
    eb06:	e6 cf       	rjmp	.-52     	; 0xead4 <__ftoa_engine+0xfc>
    eb08:	e8 94       	clt
    eb0a:	01 50       	subi	r16, 0x01	; 1
    eb0c:	30 f0       	brcs	.+12     	; 0xeb1a <__ftoa_engine+0x142>
    eb0e:	08 0f       	add	r16, r24
    eb10:	0a f4       	brpl	.+2      	; 0xeb14 <__ftoa_engine+0x13c>
    eb12:	00 27       	eor	r16, r16
    eb14:	02 17       	cp	r16, r18
    eb16:	08 f4       	brcc	.+2      	; 0xeb1a <__ftoa_engine+0x142>
    eb18:	20 2f       	mov	r18, r16
    eb1a:	23 95       	inc	r18
    eb1c:	02 2f       	mov	r16, r18
    eb1e:	7a 33       	cpi	r23, 0x3A	; 58
    eb20:	28 f0       	brcs	.+10     	; 0xeb2c <__ftoa_engine+0x154>
    eb22:	79 e3       	ldi	r23, 0x39	; 57
    eb24:	7d 93       	st	X+, r23
    eb26:	2a 95       	dec	r18
    eb28:	e9 f7       	brne	.-6      	; 0xeb24 <__ftoa_engine+0x14c>
    eb2a:	10 c0       	rjmp	.+32     	; 0xeb4c <__ftoa_engine+0x174>
    eb2c:	7d 93       	st	X+, r23
    eb2e:	2a 95       	dec	r18
    eb30:	89 f6       	brne	.-94     	; 0xead4 <__ftoa_engine+0xfc>
    eb32:	06 94       	lsr	r0
    eb34:	97 95       	ror	r25
    eb36:	67 95       	ror	r22
    eb38:	37 95       	ror	r19
    eb3a:	17 95       	ror	r17
    eb3c:	17 94       	ror	r1
    eb3e:	e1 18       	sub	r14, r1
    eb40:	f1 0a       	sbc	r15, r17
    eb42:	43 0b       	sbc	r20, r19
    eb44:	56 0b       	sbc	r21, r22
    eb46:	c9 0b       	sbc	r28, r25
    eb48:	d0 09       	sbc	r29, r0
    eb4a:	98 f0       	brcs	.+38     	; 0xeb72 <__ftoa_engine+0x19a>
    eb4c:	23 95       	inc	r18
    eb4e:	7e 91       	ld	r23, -X
    eb50:	73 95       	inc	r23
    eb52:	7a 33       	cpi	r23, 0x3A	; 58
    eb54:	08 f0       	brcs	.+2      	; 0xeb58 <__ftoa_engine+0x180>
    eb56:	70 e3       	ldi	r23, 0x30	; 48
    eb58:	7c 93       	st	X, r23
    eb5a:	20 13       	cpse	r18, r16
    eb5c:	b8 f7       	brcc	.-18     	; 0xeb4c <__ftoa_engine+0x174>
    eb5e:	7e 91       	ld	r23, -X
    eb60:	70 61       	ori	r23, 0x10	; 16
    eb62:	7d 93       	st	X+, r23
    eb64:	30 f0       	brcs	.+12     	; 0xeb72 <__ftoa_engine+0x19a>
    eb66:	83 95       	inc	r24
    eb68:	71 e3       	ldi	r23, 0x31	; 49
    eb6a:	7d 93       	st	X+, r23
    eb6c:	70 e3       	ldi	r23, 0x30	; 48
    eb6e:	2a 95       	dec	r18
    eb70:	e1 f7       	brne	.-8      	; 0xeb6a <__ftoa_engine+0x192>
    eb72:	11 24       	eor	r1, r1
    eb74:	ef 90       	pop	r14
    eb76:	ff 90       	pop	r15
    eb78:	0f 91       	pop	r16
    eb7a:	1f 91       	pop	r17
    eb7c:	cf 91       	pop	r28
    eb7e:	df 91       	pop	r29
    eb80:	99 27       	eor	r25, r25
    eb82:	87 fd       	sbrc	r24, 7
    eb84:	90 95       	com	r25
    eb86:	08 95       	ret

0000eb88 <isspace>:
isspace():
    eb88:	91 11       	cpse	r25, r1
    eb8a:	e6 c0       	rjmp	.+460    	; 0xed58 <__ctype_isfalse>
    eb8c:	80 32       	cpi	r24, 0x20	; 32
    eb8e:	19 f0       	breq	.+6      	; 0xeb96 <isspace+0xe>
    eb90:	89 50       	subi	r24, 0x09	; 9
    eb92:	85 50       	subi	r24, 0x05	; 5
    eb94:	d0 f7       	brcc	.-12     	; 0xeb8a <isspace+0x2>
    eb96:	08 95       	ret

0000eb98 <strncasecmp_P>:
strncasecmp_P():
    eb98:	fb 01       	movw	r30, r22
    eb9a:	dc 01       	movw	r26, r24
    eb9c:	41 50       	subi	r20, 0x01	; 1
    eb9e:	50 40       	sbci	r21, 0x00	; 0
    eba0:	88 f0       	brcs	.+34     	; 0xebc4 <strncasecmp_P+0x2c>
    eba2:	8d 91       	ld	r24, X+
    eba4:	81 34       	cpi	r24, 0x41	; 65
    eba6:	1c f0       	brlt	.+6      	; 0xebae <strncasecmp_P+0x16>
    eba8:	8b 35       	cpi	r24, 0x5B	; 91
    ebaa:	0c f4       	brge	.+2      	; 0xebae <strncasecmp_P+0x16>
    ebac:	80 5e       	subi	r24, 0xE0	; 224
    ebae:	65 91       	lpm	r22, Z+
    ebb0:	61 34       	cpi	r22, 0x41	; 65
    ebb2:	1c f0       	brlt	.+6      	; 0xebba <strncasecmp_P+0x22>
    ebb4:	6b 35       	cpi	r22, 0x5B	; 91
    ebb6:	0c f4       	brge	.+2      	; 0xebba <strncasecmp_P+0x22>
    ebb8:	60 5e       	subi	r22, 0xE0	; 224
    ebba:	86 1b       	sub	r24, r22
    ebbc:	61 11       	cpse	r22, r1
    ebbe:	71 f3       	breq	.-36     	; 0xeb9c <strncasecmp_P+0x4>
    ebc0:	99 0b       	sbc	r25, r25
    ebc2:	08 95       	ret
    ebc4:	88 1b       	sub	r24, r24
    ebc6:	fc cf       	rjmp	.-8      	; 0xebc0 <strncasecmp_P+0x28>

0000ebc8 <__cmpsf2>:
__cmpsf2():
    ebc8:	40 d0       	rcall	.+128    	; 0xec4a <__fp_cmp>
    ebca:	08 f4       	brcc	.+2      	; 0xebce <__cmpsf2+0x6>
    ebcc:	81 e0       	ldi	r24, 0x01	; 1
    ebce:	08 95       	ret

0000ebd0 <__floatunsisf>:
__floatunsisf():
    ebd0:	e8 94       	clt
    ebd2:	09 c0       	rjmp	.+18     	; 0xebe6 <__floatsisf+0x12>

0000ebd4 <__floatsisf>:
    ebd4:	97 fb       	bst	r25, 7
    ebd6:	3e f4       	brtc	.+14     	; 0xebe6 <__floatsisf+0x12>
    ebd8:	90 95       	com	r25
    ebda:	80 95       	com	r24
    ebdc:	70 95       	com	r23
    ebde:	61 95       	neg	r22
    ebe0:	7f 4f       	sbci	r23, 0xFF	; 255
    ebe2:	8f 4f       	sbci	r24, 0xFF	; 255
    ebe4:	9f 4f       	sbci	r25, 0xFF	; 255
    ebe6:	99 23       	and	r25, r25
    ebe8:	a9 f0       	breq	.+42     	; 0xec14 <__floatsisf+0x40>
    ebea:	f9 2f       	mov	r31, r25
    ebec:	96 e9       	ldi	r25, 0x96	; 150
    ebee:	bb 27       	eor	r27, r27
    ebf0:	93 95       	inc	r25
    ebf2:	f6 95       	lsr	r31
    ebf4:	87 95       	ror	r24
    ebf6:	77 95       	ror	r23
    ebf8:	67 95       	ror	r22
    ebfa:	b7 95       	ror	r27
    ebfc:	f1 11       	cpse	r31, r1
    ebfe:	f8 cf       	rjmp	.-16     	; 0xebf0 <__floatsisf+0x1c>
    ec00:	fa f4       	brpl	.+62     	; 0xec40 <__floatsisf+0x6c>
    ec02:	bb 0f       	add	r27, r27
    ec04:	11 f4       	brne	.+4      	; 0xec0a <__floatsisf+0x36>
    ec06:	60 ff       	sbrs	r22, 0
    ec08:	1b c0       	rjmp	.+54     	; 0xec40 <__floatsisf+0x6c>
    ec0a:	6f 5f       	subi	r22, 0xFF	; 255
    ec0c:	7f 4f       	sbci	r23, 0xFF	; 255
    ec0e:	8f 4f       	sbci	r24, 0xFF	; 255
    ec10:	9f 4f       	sbci	r25, 0xFF	; 255
    ec12:	16 c0       	rjmp	.+44     	; 0xec40 <__floatsisf+0x6c>
    ec14:	88 23       	and	r24, r24
    ec16:	11 f0       	breq	.+4      	; 0xec1c <__floatsisf+0x48>
    ec18:	96 e9       	ldi	r25, 0x96	; 150
    ec1a:	11 c0       	rjmp	.+34     	; 0xec3e <__floatsisf+0x6a>
    ec1c:	77 23       	and	r23, r23
    ec1e:	21 f0       	breq	.+8      	; 0xec28 <__floatsisf+0x54>
    ec20:	9e e8       	ldi	r25, 0x8E	; 142
    ec22:	87 2f       	mov	r24, r23
    ec24:	76 2f       	mov	r23, r22
    ec26:	05 c0       	rjmp	.+10     	; 0xec32 <__floatsisf+0x5e>
    ec28:	66 23       	and	r22, r22
    ec2a:	71 f0       	breq	.+28     	; 0xec48 <__floatsisf+0x74>
    ec2c:	96 e8       	ldi	r25, 0x86	; 134
    ec2e:	86 2f       	mov	r24, r22
    ec30:	70 e0       	ldi	r23, 0x00	; 0
    ec32:	60 e0       	ldi	r22, 0x00	; 0
    ec34:	2a f0       	brmi	.+10     	; 0xec40 <__floatsisf+0x6c>
    ec36:	9a 95       	dec	r25
    ec38:	66 0f       	add	r22, r22
    ec3a:	77 1f       	adc	r23, r23
    ec3c:	88 1f       	adc	r24, r24
    ec3e:	da f7       	brpl	.-10     	; 0xec36 <__floatsisf+0x62>
    ec40:	88 0f       	add	r24, r24
    ec42:	96 95       	lsr	r25
    ec44:	87 95       	ror	r24
    ec46:	97 f9       	bld	r25, 7
    ec48:	08 95       	ret

0000ec4a <__fp_cmp>:
__fp_cmp():
    ec4a:	99 0f       	add	r25, r25
    ec4c:	00 08       	sbc	r0, r0
    ec4e:	55 0f       	add	r21, r21
    ec50:	aa 0b       	sbc	r26, r26
    ec52:	e0 e8       	ldi	r30, 0x80	; 128
    ec54:	fe ef       	ldi	r31, 0xFE	; 254
    ec56:	16 16       	cp	r1, r22
    ec58:	17 06       	cpc	r1, r23
    ec5a:	e8 07       	cpc	r30, r24
    ec5c:	f9 07       	cpc	r31, r25
    ec5e:	c0 f0       	brcs	.+48     	; 0xec90 <__fp_cmp+0x46>
    ec60:	12 16       	cp	r1, r18
    ec62:	13 06       	cpc	r1, r19
    ec64:	e4 07       	cpc	r30, r20
    ec66:	f5 07       	cpc	r31, r21
    ec68:	98 f0       	brcs	.+38     	; 0xec90 <__fp_cmp+0x46>
    ec6a:	62 1b       	sub	r22, r18
    ec6c:	73 0b       	sbc	r23, r19
    ec6e:	84 0b       	sbc	r24, r20
    ec70:	95 0b       	sbc	r25, r21
    ec72:	39 f4       	brne	.+14     	; 0xec82 <__fp_cmp+0x38>
    ec74:	0a 26       	eor	r0, r26
    ec76:	61 f0       	breq	.+24     	; 0xec90 <__fp_cmp+0x46>
    ec78:	23 2b       	or	r18, r19
    ec7a:	24 2b       	or	r18, r20
    ec7c:	25 2b       	or	r18, r21
    ec7e:	21 f4       	brne	.+8      	; 0xec88 <__fp_cmp+0x3e>
    ec80:	08 95       	ret
    ec82:	0a 26       	eor	r0, r26
    ec84:	09 f4       	brne	.+2      	; 0xec88 <__fp_cmp+0x3e>
    ec86:	a1 40       	sbci	r26, 0x01	; 1
    ec88:	a6 95       	lsr	r26
    ec8a:	8f ef       	ldi	r24, 0xFF	; 255
    ec8c:	81 1d       	adc	r24, r1
    ec8e:	81 1d       	adc	r24, r1
    ec90:	08 95       	ret

0000ec92 <__mulsf3>:
__mulsf3():
    ec92:	0b d0       	rcall	.+22     	; 0xecaa <__mulsf3x>
    ec94:	7b c0       	rjmp	.+246    	; 0xed8c <__fp_round>
    ec96:	6c d0       	rcall	.+216    	; 0xed70 <__fp_pscA>
    ec98:	28 f0       	brcs	.+10     	; 0xeca4 <__mulsf3+0x12>
    ec9a:	71 d0       	rcall	.+226    	; 0xed7e <__fp_pscB>
    ec9c:	18 f0       	brcs	.+6      	; 0xeca4 <__mulsf3+0x12>
    ec9e:	95 23       	and	r25, r21
    eca0:	09 f0       	breq	.+2      	; 0xeca4 <__mulsf3+0x12>
    eca2:	5d c0       	rjmp	.+186    	; 0xed5e <__fp_inf>
    eca4:	62 c0       	rjmp	.+196    	; 0xed6a <__fp_nan>
    eca6:	11 24       	eor	r1, r1
    eca8:	a5 c0       	rjmp	.+330    	; 0xedf4 <__fp_szero>

0000ecaa <__mulsf3x>:
__mulsf3x():
    ecaa:	81 d0       	rcall	.+258    	; 0xedae <__fp_split3>
    ecac:	a0 f3       	brcs	.-24     	; 0xec96 <__mulsf3+0x4>

0000ecae <__mulsf3_pse>:
    ecae:	95 9f       	mul	r25, r21
    ecb0:	d1 f3       	breq	.-12     	; 0xeca6 <__mulsf3+0x14>
    ecb2:	95 0f       	add	r25, r21
    ecb4:	50 e0       	ldi	r21, 0x00	; 0
    ecb6:	55 1f       	adc	r21, r21
    ecb8:	62 9f       	mul	r22, r18
    ecba:	f0 01       	movw	r30, r0
    ecbc:	72 9f       	mul	r23, r18
    ecbe:	bb 27       	eor	r27, r27
    ecc0:	f0 0d       	add	r31, r0
    ecc2:	b1 1d       	adc	r27, r1
    ecc4:	63 9f       	mul	r22, r19
    ecc6:	aa 27       	eor	r26, r26
    ecc8:	f0 0d       	add	r31, r0
    ecca:	b1 1d       	adc	r27, r1
    eccc:	aa 1f       	adc	r26, r26
    ecce:	64 9f       	mul	r22, r20
    ecd0:	66 27       	eor	r22, r22
    ecd2:	b0 0d       	add	r27, r0
    ecd4:	a1 1d       	adc	r26, r1
    ecd6:	66 1f       	adc	r22, r22
    ecd8:	82 9f       	mul	r24, r18
    ecda:	22 27       	eor	r18, r18
    ecdc:	b0 0d       	add	r27, r0
    ecde:	a1 1d       	adc	r26, r1
    ece0:	62 1f       	adc	r22, r18
    ece2:	73 9f       	mul	r23, r19
    ece4:	b0 0d       	add	r27, r0
    ece6:	a1 1d       	adc	r26, r1
    ece8:	62 1f       	adc	r22, r18
    ecea:	83 9f       	mul	r24, r19
    ecec:	a0 0d       	add	r26, r0
    ecee:	61 1d       	adc	r22, r1
    ecf0:	22 1f       	adc	r18, r18
    ecf2:	74 9f       	mul	r23, r20
    ecf4:	33 27       	eor	r19, r19
    ecf6:	a0 0d       	add	r26, r0
    ecf8:	61 1d       	adc	r22, r1
    ecfa:	23 1f       	adc	r18, r19
    ecfc:	84 9f       	mul	r24, r20
    ecfe:	60 0d       	add	r22, r0
    ed00:	21 1d       	adc	r18, r1
    ed02:	82 2f       	mov	r24, r18
    ed04:	76 2f       	mov	r23, r22
    ed06:	6a 2f       	mov	r22, r26
    ed08:	11 24       	eor	r1, r1
    ed0a:	9f 57       	subi	r25, 0x7F	; 127
    ed0c:	50 40       	sbci	r21, 0x00	; 0
    ed0e:	8a f0       	brmi	.+34     	; 0xed32 <__mulsf3_pse+0x84>
    ed10:	e1 f0       	breq	.+56     	; 0xed4a <__mulsf3_pse+0x9c>
    ed12:	88 23       	and	r24, r24
    ed14:	4a f0       	brmi	.+18     	; 0xed28 <__mulsf3_pse+0x7a>
    ed16:	ee 0f       	add	r30, r30
    ed18:	ff 1f       	adc	r31, r31
    ed1a:	bb 1f       	adc	r27, r27
    ed1c:	66 1f       	adc	r22, r22
    ed1e:	77 1f       	adc	r23, r23
    ed20:	88 1f       	adc	r24, r24
    ed22:	91 50       	subi	r25, 0x01	; 1
    ed24:	50 40       	sbci	r21, 0x00	; 0
    ed26:	a9 f7       	brne	.-22     	; 0xed12 <__mulsf3_pse+0x64>
    ed28:	9e 3f       	cpi	r25, 0xFE	; 254
    ed2a:	51 05       	cpc	r21, r1
    ed2c:	70 f0       	brcs	.+28     	; 0xed4a <__mulsf3_pse+0x9c>
    ed2e:	17 c0       	rjmp	.+46     	; 0xed5e <__fp_inf>
    ed30:	61 c0       	rjmp	.+194    	; 0xedf4 <__fp_szero>
    ed32:	5f 3f       	cpi	r21, 0xFF	; 255
    ed34:	ec f3       	brlt	.-6      	; 0xed30 <__mulsf3_pse+0x82>
    ed36:	98 3e       	cpi	r25, 0xE8	; 232
    ed38:	dc f3       	brlt	.-10     	; 0xed30 <__mulsf3_pse+0x82>
    ed3a:	86 95       	lsr	r24
    ed3c:	77 95       	ror	r23
    ed3e:	67 95       	ror	r22
    ed40:	b7 95       	ror	r27
    ed42:	f7 95       	ror	r31
    ed44:	e7 95       	ror	r30
    ed46:	9f 5f       	subi	r25, 0xFF	; 255
    ed48:	c1 f7       	brne	.-16     	; 0xed3a <__mulsf3_pse+0x8c>
    ed4a:	fe 2b       	or	r31, r30
    ed4c:	88 0f       	add	r24, r24
    ed4e:	91 1d       	adc	r25, r1
    ed50:	96 95       	lsr	r25
    ed52:	87 95       	ror	r24
    ed54:	97 f9       	bld	r25, 7
    ed56:	08 95       	ret

0000ed58 <__ctype_isfalse>:
    ed58:	99 27       	eor	r25, r25
    ed5a:	88 27       	eor	r24, r24

0000ed5c <__ctype_istrue>:
    ed5c:	08 95       	ret

0000ed5e <__fp_inf>:
    ed5e:	97 f9       	bld	r25, 7
    ed60:	9f 67       	ori	r25, 0x7F	; 127
    ed62:	80 e8       	ldi	r24, 0x80	; 128
    ed64:	70 e0       	ldi	r23, 0x00	; 0
    ed66:	60 e0       	ldi	r22, 0x00	; 0
    ed68:	08 95       	ret

0000ed6a <__fp_nan>:
    ed6a:	9f ef       	ldi	r25, 0xFF	; 255
    ed6c:	80 ec       	ldi	r24, 0xC0	; 192
    ed6e:	08 95       	ret

0000ed70 <__fp_pscA>:
    ed70:	00 24       	eor	r0, r0
    ed72:	0a 94       	dec	r0
    ed74:	16 16       	cp	r1, r22
    ed76:	17 06       	cpc	r1, r23
    ed78:	18 06       	cpc	r1, r24
    ed7a:	09 06       	cpc	r0, r25
__fp_pscA():
    ed7c:	08 95       	ret

0000ed7e <__fp_pscB>:
__fp_pscB():
    ed7e:	00 24       	eor	r0, r0
    ed80:	0a 94       	dec	r0
    ed82:	12 16       	cp	r1, r18
    ed84:	13 06       	cpc	r1, r19
    ed86:	14 06       	cpc	r1, r20
    ed88:	05 06       	cpc	r0, r21
    ed8a:	08 95       	ret

0000ed8c <__fp_round>:
__fp_round():
    ed8c:	09 2e       	mov	r0, r25
    ed8e:	03 94       	inc	r0
    ed90:	00 0c       	add	r0, r0
    ed92:	11 f4       	brne	.+4      	; 0xed98 <__fp_round+0xc>
    ed94:	88 23       	and	r24, r24
    ed96:	52 f0       	brmi	.+20     	; 0xedac <__fp_round+0x20>
    ed98:	bb 0f       	add	r27, r27
    ed9a:	40 f4       	brcc	.+16     	; 0xedac <__fp_round+0x20>
    ed9c:	bf 2b       	or	r27, r31
    ed9e:	11 f4       	brne	.+4      	; 0xeda4 <__fp_round+0x18>
    eda0:	60 ff       	sbrs	r22, 0
    eda2:	04 c0       	rjmp	.+8      	; 0xedac <__fp_round+0x20>
    eda4:	6f 5f       	subi	r22, 0xFF	; 255
    eda6:	7f 4f       	sbci	r23, 0xFF	; 255
    eda8:	8f 4f       	sbci	r24, 0xFF	; 255
    edaa:	9f 4f       	sbci	r25, 0xFF	; 255
    edac:	08 95       	ret

0000edae <__fp_split3>:
__fp_split3():
    edae:	57 fd       	sbrc	r21, 7
    edb0:	90 58       	subi	r25, 0x80	; 128
    edb2:	44 0f       	add	r20, r20
    edb4:	55 1f       	adc	r21, r21
    edb6:	59 f0       	breq	.+22     	; 0xedce <__fp_splitA+0x10>
    edb8:	5f 3f       	cpi	r21, 0xFF	; 255
    edba:	71 f0       	breq	.+28     	; 0xedd8 <__fp_splitA+0x1a>
    edbc:	47 95       	ror	r20

0000edbe <__fp_splitA>:
    edbe:	88 0f       	add	r24, r24
    edc0:	97 fb       	bst	r25, 7
    edc2:	99 1f       	adc	r25, r25
    edc4:	61 f0       	breq	.+24     	; 0xedde <__fp_splitA+0x20>
    edc6:	9f 3f       	cpi	r25, 0xFF	; 255
    edc8:	79 f0       	breq	.+30     	; 0xede8 <__fp_splitA+0x2a>
    edca:	87 95       	ror	r24
    edcc:	08 95       	ret
    edce:	12 16       	cp	r1, r18
    edd0:	13 06       	cpc	r1, r19
    edd2:	14 06       	cpc	r1, r20
    edd4:	55 1f       	adc	r21, r21
    edd6:	f2 cf       	rjmp	.-28     	; 0xedbc <__fp_split3+0xe>
    edd8:	46 95       	lsr	r20
    edda:	f1 df       	rcall	.-30     	; 0xedbe <__fp_splitA>
    eddc:	08 c0       	rjmp	.+16     	; 0xedee <__fp_splitA+0x30>
    edde:	16 16       	cp	r1, r22
    ede0:	17 06       	cpc	r1, r23
    ede2:	18 06       	cpc	r1, r24
    ede4:	99 1f       	adc	r25, r25
    ede6:	f1 cf       	rjmp	.-30     	; 0xedca <__fp_splitA+0xc>
    ede8:	86 95       	lsr	r24
    edea:	71 05       	cpc	r23, r1
    edec:	61 05       	cpc	r22, r1
    edee:	08 94       	sec
    edf0:	08 95       	ret

0000edf2 <__fp_zero>:
__fp_zero():
    edf2:	e8 94       	clt

0000edf4 <__fp_szero>:
    edf4:	bb 27       	eor	r27, r27
    edf6:	66 27       	eor	r22, r22
    edf8:	77 27       	eor	r23, r23
    edfa:	cb 01       	movw	r24, r22
    edfc:	97 f9       	bld	r25, 7
    edfe:	08 95       	ret

0000ee00 <__muluhisi3>:
__muluhisi3():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    ee00:	09 d0       	rcall	.+18     	; 0xee14 <__umulhisi3>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    ee02:	a5 9f       	mul	r26, r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    ee04:	90 0d       	add	r25, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    ee06:	b4 9f       	mul	r27, r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    ee08:	90 0d       	add	r25, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    ee0a:	a4 9f       	mul	r26, r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    ee0c:	80 0d       	add	r24, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    ee0e:	91 1d       	adc	r25, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    ee10:	11 24       	eor	r1, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    ee12:	08 95       	ret

0000ee14 <__umulhisi3>:
__umulhisi3():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    ee14:	a2 9f       	mul	r26, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    ee16:	b0 01       	movw	r22, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    ee18:	b3 9f       	mul	r27, r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    ee1a:	c0 01       	movw	r24, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    ee1c:	a3 9f       	mul	r26, r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    ee1e:	70 0d       	add	r23, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    ee20:	81 1d       	adc	r24, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    ee22:	11 24       	eor	r1, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    ee24:	91 1d       	adc	r25, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    ee26:	b2 9f       	mul	r27, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    ee28:	70 0d       	add	r23, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    ee2a:	81 1d       	adc	r24, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    ee2c:	11 24       	eor	r1, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    ee2e:	91 1d       	adc	r25, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    ee30:	08 95       	ret

0000ee32 <__subsf3>:
__subsf3():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:175
    ee32:	50 58       	subi	r21, 0x80	; 128

0000ee34 <__addsf3>:
    ee34:	bb 27       	eor	r27, r27
    ee36:	aa 27       	eor	r26, r26
    ee38:	0e d0       	rcall	.+28     	; 0xee56 <__addsf3x>
    ee3a:	a8 cf       	rjmp	.-176    	; 0xed8c <__fp_round>
__addsf3():
    ee3c:	99 df       	rcall	.-206    	; 0xed70 <__fp_pscA>
    ee3e:	30 f0       	brcs	.+12     	; 0xee4c <__addsf3+0x18>
    ee40:	9e df       	rcall	.-196    	; 0xed7e <__fp_pscB>
    ee42:	20 f0       	brcs	.+8      	; 0xee4c <__addsf3+0x18>
    ee44:	31 f4       	brne	.+12     	; 0xee52 <__addsf3+0x1e>
    ee46:	9f 3f       	cpi	r25, 0xFF	; 255
    ee48:	11 f4       	brne	.+4      	; 0xee4e <__addsf3+0x1a>
    ee4a:	1e f4       	brtc	.+6      	; 0xee52 <__addsf3+0x1e>
    ee4c:	8e cf       	rjmp	.-228    	; 0xed6a <__fp_nan>
    ee4e:	0e f4       	brtc	.+2      	; 0xee52 <__addsf3+0x1e>
    ee50:	e0 95       	com	r30
    ee52:	e7 fb       	bst	r30, 7
    ee54:	84 cf       	rjmp	.-248    	; 0xed5e <__fp_inf>

0000ee56 <__addsf3x>:
__addsf3x():
    ee56:	e9 2f       	mov	r30, r25
    ee58:	aa df       	rcall	.-172    	; 0xedae <__fp_split3>
    ee5a:	80 f3       	brcs	.-32     	; 0xee3c <__addsf3+0x8>
    ee5c:	ba 17       	cp	r27, r26
    ee5e:	62 07       	cpc	r22, r18
    ee60:	73 07       	cpc	r23, r19
    ee62:	84 07       	cpc	r24, r20
    ee64:	95 07       	cpc	r25, r21
    ee66:	18 f0       	brcs	.+6      	; 0xee6e <__addsf3x+0x18>
    ee68:	71 f4       	brne	.+28     	; 0xee86 <__addsf3x+0x30>
    ee6a:	9e f5       	brtc	.+102    	; 0xeed2 <__addsf3x+0x7c>
    ee6c:	c2 cf       	rjmp	.-124    	; 0xedf2 <__fp_zero>
    ee6e:	0e f4       	brtc	.+2      	; 0xee72 <__addsf3x+0x1c>
    ee70:	e0 95       	com	r30
    ee72:	0b 2e       	mov	r0, r27
    ee74:	ba 2f       	mov	r27, r26
    ee76:	a0 2d       	mov	r26, r0
    ee78:	0b 01       	movw	r0, r22
    ee7a:	b9 01       	movw	r22, r18
    ee7c:	90 01       	movw	r18, r0
    ee7e:	0c 01       	movw	r0, r24
    ee80:	ca 01       	movw	r24, r20
    ee82:	a0 01       	movw	r20, r0
    ee84:	11 24       	eor	r1, r1
    ee86:	ff 27       	eor	r31, r31
    ee88:	59 1b       	sub	r21, r25
    ee8a:	99 f0       	breq	.+38     	; 0xeeb2 <__addsf3x+0x5c>
    ee8c:	59 3f       	cpi	r21, 0xF9	; 249
    ee8e:	50 f4       	brcc	.+20     	; 0xeea4 <__addsf3x+0x4e>
    ee90:	50 3e       	cpi	r21, 0xE0	; 224
    ee92:	68 f1       	brcs	.+90     	; 0xeeee <__addsf3x+0x98>
    ee94:	1a 16       	cp	r1, r26
    ee96:	f0 40       	sbci	r31, 0x00	; 0
    ee98:	a2 2f       	mov	r26, r18
    ee9a:	23 2f       	mov	r18, r19
    ee9c:	34 2f       	mov	r19, r20
    ee9e:	44 27       	eor	r20, r20
    eea0:	58 5f       	subi	r21, 0xF8	; 248
    eea2:	f3 cf       	rjmp	.-26     	; 0xee8a <__addsf3x+0x34>
    eea4:	46 95       	lsr	r20
    eea6:	37 95       	ror	r19
    eea8:	27 95       	ror	r18
    eeaa:	a7 95       	ror	r26
    eeac:	f0 40       	sbci	r31, 0x00	; 0
    eeae:	53 95       	inc	r21
    eeb0:	c9 f7       	brne	.-14     	; 0xeea4 <__addsf3x+0x4e>
    eeb2:	7e f4       	brtc	.+30     	; 0xeed2 <__addsf3x+0x7c>
    eeb4:	1f 16       	cp	r1, r31
    eeb6:	ba 0b       	sbc	r27, r26
    eeb8:	62 0b       	sbc	r22, r18
    eeba:	73 0b       	sbc	r23, r19
    eebc:	84 0b       	sbc	r24, r20
    eebe:	ba f0       	brmi	.+46     	; 0xeeee <__addsf3x+0x98>
    eec0:	91 50       	subi	r25, 0x01	; 1
    eec2:	a1 f0       	breq	.+40     	; 0xeeec <__addsf3x+0x96>
    eec4:	ff 0f       	add	r31, r31
    eec6:	bb 1f       	adc	r27, r27
    eec8:	66 1f       	adc	r22, r22
    eeca:	77 1f       	adc	r23, r23
    eecc:	88 1f       	adc	r24, r24
    eece:	c2 f7       	brpl	.-16     	; 0xeec0 <__addsf3x+0x6a>
    eed0:	0e c0       	rjmp	.+28     	; 0xeeee <__addsf3x+0x98>
    eed2:	ba 0f       	add	r27, r26
    eed4:	62 1f       	adc	r22, r18
    eed6:	73 1f       	adc	r23, r19
    eed8:	84 1f       	adc	r24, r20
    eeda:	48 f4       	brcc	.+18     	; 0xeeee <__addsf3x+0x98>
    eedc:	87 95       	ror	r24
    eede:	77 95       	ror	r23
    eee0:	67 95       	ror	r22
    eee2:	b7 95       	ror	r27
    eee4:	f7 95       	ror	r31
    eee6:	9e 3f       	cpi	r25, 0xFE	; 254
    eee8:	08 f0       	brcs	.+2      	; 0xeeec <__addsf3x+0x96>
    eeea:	b3 cf       	rjmp	.-154    	; 0xee52 <__addsf3+0x1e>
    eeec:	93 95       	inc	r25
    eeee:	88 0f       	add	r24, r24
    eef0:	08 f0       	brcs	.+2      	; 0xeef4 <__addsf3x+0x9e>
    eef2:	99 27       	eor	r25, r25
    eef4:	ee 0f       	add	r30, r30
    eef6:	97 95       	ror	r25
    eef8:	87 95       	ror	r24
    eefa:	08 95       	ret

0000eefc <__divsf3>:
    eefc:	0c d0       	rcall	.+24     	; 0xef16 <__divsf3x>
    eefe:	46 cf       	rjmp	.-372    	; 0xed8c <__fp_round>
    ef00:	3e df       	rcall	.-388    	; 0xed7e <__fp_pscB>
    ef02:	40 f0       	brcs	.+16     	; 0xef14 <__divsf3+0x18>
    ef04:	35 df       	rcall	.-406    	; 0xed70 <__fp_pscA>
    ef06:	30 f0       	brcs	.+12     	; 0xef14 <__divsf3+0x18>
    ef08:	21 f4       	brne	.+8      	; 0xef12 <__divsf3+0x16>
    ef0a:	5f 3f       	cpi	r21, 0xFF	; 255
    ef0c:	19 f0       	breq	.+6      	; 0xef14 <__divsf3+0x18>
    ef0e:	27 cf       	rjmp	.-434    	; 0xed5e <__fp_inf>
    ef10:	51 11       	cpse	r21, r1
    ef12:	70 cf       	rjmp	.-288    	; 0xedf4 <__fp_szero>
    ef14:	2a cf       	rjmp	.-428    	; 0xed6a <__fp_nan>

0000ef16 <__divsf3x>:
    ef16:	4b df       	rcall	.-362    	; 0xedae <__fp_split3>
    ef18:	98 f3       	brcs	.-26     	; 0xef00 <__divsf3+0x4>

0000ef1a <__divsf3_pse>:
    ef1a:	99 23       	and	r25, r25
    ef1c:	c9 f3       	breq	.-14     	; 0xef10 <__divsf3+0x14>
    ef1e:	55 23       	and	r21, r21
    ef20:	b1 f3       	breq	.-20     	; 0xef0e <__divsf3+0x12>
__divsf3_pse():
    ef22:	95 1b       	sub	r25, r21
    ef24:	55 0b       	sbc	r21, r21
    ef26:	bb 27       	eor	r27, r27
    ef28:	aa 27       	eor	r26, r26
    ef2a:	62 17       	cp	r22, r18
    ef2c:	73 07       	cpc	r23, r19
    ef2e:	84 07       	cpc	r24, r20
    ef30:	38 f0       	brcs	.+14     	; 0xef40 <__divsf3_pse+0x26>
    ef32:	9f 5f       	subi	r25, 0xFF	; 255
    ef34:	5f 4f       	sbci	r21, 0xFF	; 255
    ef36:	22 0f       	add	r18, r18
    ef38:	33 1f       	adc	r19, r19
    ef3a:	44 1f       	adc	r20, r20
    ef3c:	aa 1f       	adc	r26, r26
    ef3e:	a9 f3       	breq	.-22     	; 0xef2a <__divsf3_pse+0x10>
    ef40:	33 d0       	rcall	.+102    	; 0xefa8 <__divsf3_pse+0x8e>
    ef42:	0e 2e       	mov	r0, r30
    ef44:	3a f0       	brmi	.+14     	; 0xef54 <__divsf3_pse+0x3a>
    ef46:	e0 e8       	ldi	r30, 0x80	; 128
    ef48:	30 d0       	rcall	.+96     	; 0xefaa <__divsf3_pse+0x90>
    ef4a:	91 50       	subi	r25, 0x01	; 1
    ef4c:	50 40       	sbci	r21, 0x00	; 0
    ef4e:	e6 95       	lsr	r30
    ef50:	00 1c       	adc	r0, r0
    ef52:	ca f7       	brpl	.-14     	; 0xef46 <__divsf3_pse+0x2c>
    ef54:	29 d0       	rcall	.+82     	; 0xefa8 <__divsf3_pse+0x8e>
    ef56:	fe 2f       	mov	r31, r30
    ef58:	27 d0       	rcall	.+78     	; 0xefa8 <__divsf3_pse+0x8e>
    ef5a:	66 0f       	add	r22, r22
    ef5c:	77 1f       	adc	r23, r23
    ef5e:	88 1f       	adc	r24, r24
    ef60:	bb 1f       	adc	r27, r27
    ef62:	26 17       	cp	r18, r22
    ef64:	37 07       	cpc	r19, r23
    ef66:	48 07       	cpc	r20, r24
    ef68:	ab 07       	cpc	r26, r27
    ef6a:	b0 e8       	ldi	r27, 0x80	; 128
    ef6c:	09 f0       	breq	.+2      	; 0xef70 <__divsf3_pse+0x56>
    ef6e:	bb 0b       	sbc	r27, r27
    ef70:	80 2d       	mov	r24, r0
    ef72:	bf 01       	movw	r22, r30
    ef74:	ff 27       	eor	r31, r31
    ef76:	93 58       	subi	r25, 0x83	; 131
    ef78:	5f 4f       	sbci	r21, 0xFF	; 255
    ef7a:	2a f0       	brmi	.+10     	; 0xef86 <__divsf3_pse+0x6c>
    ef7c:	9e 3f       	cpi	r25, 0xFE	; 254
    ef7e:	51 05       	cpc	r21, r1
    ef80:	68 f0       	brcs	.+26     	; 0xef9c <__divsf3_pse+0x82>
    ef82:	ed ce       	rjmp	.-550    	; 0xed5e <__fp_inf>
    ef84:	37 cf       	rjmp	.-402    	; 0xedf4 <__fp_szero>
    ef86:	5f 3f       	cpi	r21, 0xFF	; 255
    ef88:	ec f3       	brlt	.-6      	; 0xef84 <__divsf3_pse+0x6a>
    ef8a:	98 3e       	cpi	r25, 0xE8	; 232
    ef8c:	dc f3       	brlt	.-10     	; 0xef84 <__divsf3_pse+0x6a>
    ef8e:	86 95       	lsr	r24
    ef90:	77 95       	ror	r23
    ef92:	67 95       	ror	r22
    ef94:	b7 95       	ror	r27
    ef96:	f7 95       	ror	r31
    ef98:	9f 5f       	subi	r25, 0xFF	; 255
    ef9a:	c9 f7       	brne	.-14     	; 0xef8e <__divsf3_pse+0x74>
    ef9c:	88 0f       	add	r24, r24
    ef9e:	91 1d       	adc	r25, r1
    efa0:	96 95       	lsr	r25
    efa2:	87 95       	ror	r24
    efa4:	97 f9       	bld	r25, 7
    efa6:	08 95       	ret
    efa8:	e1 e0       	ldi	r30, 0x01	; 1
    efaa:	66 0f       	add	r22, r22
    efac:	77 1f       	adc	r23, r23
    efae:	88 1f       	adc	r24, r24
    efb0:	bb 1f       	adc	r27, r27
    efb2:	62 17       	cp	r22, r18
    efb4:	73 07       	cpc	r23, r19
    efb6:	84 07       	cpc	r24, r20
    efb8:	ba 07       	cpc	r27, r26
    efba:	20 f0       	brcs	.+8      	; 0xefc4 <__divsf3_pse+0xaa>
    efbc:	62 1b       	sub	r22, r18
    efbe:	73 0b       	sbc	r23, r19
    efc0:	84 0b       	sbc	r24, r20
    efc2:	ba 0b       	sbc	r27, r26
    efc4:	ee 1f       	adc	r30, r30
    efc6:	88 f7       	brcc	.-30     	; 0xefaa <__divsf3_pse+0x90>
    efc8:	e0 95       	com	r30
    efca:	08 95       	ret

0000efcc <__fixsfsi>:
__fixsfsi():
    efcc:	04 d0       	rcall	.+8      	; 0xefd6 <__fixunssfsi>
    efce:	68 94       	set
    efd0:	b1 11       	cpse	r27, r1
    efd2:	10 cf       	rjmp	.-480    	; 0xedf4 <__fp_szero>
    efd4:	08 95       	ret

0000efd6 <__fixunssfsi>:
__fixunssfsi():
    efd6:	f3 de       	rcall	.-538    	; 0xedbe <__fp_splitA>
    efd8:	88 f0       	brcs	.+34     	; 0xeffc <__fixunssfsi+0x26>
    efda:	9f 57       	subi	r25, 0x7F	; 127
    efdc:	90 f0       	brcs	.+36     	; 0xf002 <__fixunssfsi+0x2c>
    efde:	b9 2f       	mov	r27, r25
    efe0:	99 27       	eor	r25, r25
    efe2:	b7 51       	subi	r27, 0x17	; 23
    efe4:	a0 f0       	brcs	.+40     	; 0xf00e <__fixunssfsi+0x38>
    efe6:	d1 f0       	breq	.+52     	; 0xf01c <__fixunssfsi+0x46>
    efe8:	66 0f       	add	r22, r22
    efea:	77 1f       	adc	r23, r23
    efec:	88 1f       	adc	r24, r24
    efee:	99 1f       	adc	r25, r25
    eff0:	1a f0       	brmi	.+6      	; 0xeff8 <__fixunssfsi+0x22>
    eff2:	ba 95       	dec	r27
    eff4:	c9 f7       	brne	.-14     	; 0xefe8 <__fixunssfsi+0x12>
    eff6:	12 c0       	rjmp	.+36     	; 0xf01c <__fixunssfsi+0x46>
    eff8:	b1 30       	cpi	r27, 0x01	; 1
    effa:	81 f0       	breq	.+32     	; 0xf01c <__fixunssfsi+0x46>
    effc:	fa de       	rcall	.-524    	; 0xedf2 <__fp_zero>
    effe:	b1 e0       	ldi	r27, 0x01	; 1
    f000:	08 95       	ret
    f002:	f7 ce       	rjmp	.-530    	; 0xedf2 <__fp_zero>
    f004:	67 2f       	mov	r22, r23
    f006:	78 2f       	mov	r23, r24
    f008:	88 27       	eor	r24, r24
    f00a:	b8 5f       	subi	r27, 0xF8	; 248
    f00c:	39 f0       	breq	.+14     	; 0xf01c <__fixunssfsi+0x46>
    f00e:	b9 3f       	cpi	r27, 0xF9	; 249
    f010:	cc f3       	brlt	.-14     	; 0xf004 <__fixunssfsi+0x2e>
    f012:	86 95       	lsr	r24
    f014:	77 95       	ror	r23
    f016:	67 95       	ror	r22
    f018:	b3 95       	inc	r27
    f01a:	d9 f7       	brne	.-10     	; 0xf012 <__fixunssfsi+0x3c>
    f01c:	3e f4       	brtc	.+14     	; 0xf02c <__fixunssfsi+0x56>
    f01e:	90 95       	com	r25
    f020:	80 95       	com	r24
    f022:	70 95       	com	r23
    f024:	61 95       	neg	r22
    f026:	7f 4f       	sbci	r23, 0xFF	; 255
    f028:	8f 4f       	sbci	r24, 0xFF	; 255
    f02a:	9f 4f       	sbci	r25, 0xFF	; 255
    f02c:	08 95       	ret

0000f02e <__gesf2>:
__gesf2():
    f02e:	0d de       	rcall	.-998    	; 0xec4a <__fp_cmp>
    f030:	08 f4       	brcc	.+2      	; 0xf034 <__gesf2+0x6>
    f032:	8f ef       	ldi	r24, 0xFF	; 255
    f034:	08 95       	ret

0000f036 <__unordsf2>:
__unordsf2():
    f036:	09 de       	rcall	.-1006   	; 0xec4a <__fp_cmp>
    f038:	88 0b       	sbc	r24, r24
    f03a:	99 0b       	sbc	r25, r25
    f03c:	08 95       	ret

0000f03e <__divmodqi4>:
__divmodqi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1366
    f03e:	87 fb       	bst	r24, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1367
    f040:	08 2e       	mov	r0, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1368
    f042:	06 26       	eor	r0, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1369
    f044:	87 fd       	sbrc	r24, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1370
    f046:	81 95       	neg	r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1371
    f048:	67 fd       	sbrc	r22, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1372
    f04a:	61 95       	neg	r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1373
    f04c:	79 d0       	rcall	.+242    	; 0xf140 <__udivmodqi4>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1374
    f04e:	0e f4       	brtc	.+2      	; 0xf052 <__divmodqi4_1>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1375
    f050:	91 95       	neg	r25

0000f052 <__divmodqi4_1>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1377
    f052:	07 fc       	sbrc	r0, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1378
    f054:	81 95       	neg	r24

0000f056 <__divmodqi4_exit>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1380
    f056:	08 95       	ret

0000f058 <__udivmodhi4>:
__udivmodhi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    f058:	aa 1b       	sub	r26, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    f05a:	bb 1b       	sub	r27, r27
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    f05c:	51 e1       	ldi	r21, 0x11	; 17
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    f05e:	07 c0       	rjmp	.+14     	; 0xf06e <__udivmodhi4_ep>

0000f060 <__udivmodhi4_loop>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    f060:	aa 1f       	adc	r26, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    f062:	bb 1f       	adc	r27, r27
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    f064:	a6 17       	cp	r26, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    f066:	b7 07       	cpc	r27, r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    f068:	10 f0       	brcs	.+4      	; 0xf06e <__udivmodhi4_ep>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    f06a:	a6 1b       	sub	r26, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    f06c:	b7 0b       	sbc	r27, r23

0000f06e <__udivmodhi4_ep>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    f06e:	88 1f       	adc	r24, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    f070:	99 1f       	adc	r25, r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    f072:	5a 95       	dec	r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    f074:	a9 f7       	brne	.-22     	; 0xf060 <__udivmodhi4_loop>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    f076:	80 95       	com	r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    f078:	90 95       	com	r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    f07a:	bc 01       	movw	r22, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    f07c:	cd 01       	movw	r24, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    f07e:	08 95       	ret

0000f080 <__divmodhi4>:
__divmodhi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    f080:	97 fb       	bst	r25, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    f082:	07 2e       	mov	r0, r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    f084:	16 f4       	brtc	.+4      	; 0xf08a <__divmodhi4+0xa>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    f086:	00 94       	com	r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    f088:	06 d0       	rcall	.+12     	; 0xf096 <__divmodhi4_neg1>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    f08a:	77 fd       	sbrc	r23, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    f08c:	08 d0       	rcall	.+16     	; 0xf09e <__divmodhi4_neg2>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    f08e:	e4 df       	rcall	.-56     	; 0xf058 <__udivmodhi4>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    f090:	07 fc       	sbrc	r0, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    f092:	05 d0       	rcall	.+10     	; 0xf09e <__divmodhi4_neg2>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    f094:	3e f4       	brtc	.+14     	; 0xf0a4 <__divmodhi4_exit>

0000f096 <__divmodhi4_neg1>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    f096:	90 95       	com	r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    f098:	81 95       	neg	r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    f09a:	9f 4f       	sbci	r25, 0xFF	; 255
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    f09c:	08 95       	ret

0000f09e <__divmodhi4_neg2>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    f09e:	70 95       	com	r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    f0a0:	61 95       	neg	r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    f0a2:	7f 4f       	sbci	r23, 0xFF	; 255

0000f0a4 <__divmodhi4_exit>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    f0a4:	08 95       	ret

0000f0a6 <__udivmodsi4>:
__udivmodsi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    f0a6:	a1 e2       	ldi	r26, 0x21	; 33
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    f0a8:	1a 2e       	mov	r1, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    f0aa:	aa 1b       	sub	r26, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    f0ac:	bb 1b       	sub	r27, r27
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    f0ae:	fd 01       	movw	r30, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    f0b0:	0d c0       	rjmp	.+26     	; 0xf0cc <__udivmodsi4_ep>

0000f0b2 <__udivmodsi4_loop>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    f0b2:	aa 1f       	adc	r26, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    f0b4:	bb 1f       	adc	r27, r27
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    f0b6:	ee 1f       	adc	r30, r30
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    f0b8:	ff 1f       	adc	r31, r31
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    f0ba:	a2 17       	cp	r26, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    f0bc:	b3 07       	cpc	r27, r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    f0be:	e4 07       	cpc	r30, r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    f0c0:	f5 07       	cpc	r31, r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    f0c2:	20 f0       	brcs	.+8      	; 0xf0cc <__udivmodsi4_ep>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    f0c4:	a2 1b       	sub	r26, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    f0c6:	b3 0b       	sbc	r27, r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    f0c8:	e4 0b       	sbc	r30, r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    f0ca:	f5 0b       	sbc	r31, r21

0000f0cc <__udivmodsi4_ep>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    f0cc:	66 1f       	adc	r22, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    f0ce:	77 1f       	adc	r23, r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    f0d0:	88 1f       	adc	r24, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    f0d2:	99 1f       	adc	r25, r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    f0d4:	1a 94       	dec	r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    f0d6:	69 f7       	brne	.-38     	; 0xf0b2 <__udivmodsi4_loop>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    f0d8:	60 95       	com	r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    f0da:	70 95       	com	r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    f0dc:	80 95       	com	r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    f0de:	90 95       	com	r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    f0e0:	9b 01       	movw	r18, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    f0e2:	ac 01       	movw	r20, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    f0e4:	bd 01       	movw	r22, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    f0e6:	cf 01       	movw	r24, r30
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    f0e8:	08 95       	ret

0000f0ea <__divmodsi4>:
__divmodsi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    f0ea:	05 2e       	mov	r0, r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    f0ec:	97 fb       	bst	r25, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    f0ee:	16 f4       	brtc	.+4      	; 0xf0f4 <__divmodsi4+0xa>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    f0f0:	00 94       	com	r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    f0f2:	0f d0       	rcall	.+30     	; 0xf112 <__negsi2>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    f0f4:	57 fd       	sbrc	r21, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    f0f6:	05 d0       	rcall	.+10     	; 0xf102 <__divmodsi4_neg2>
    f0f8:	d6 df       	rcall	.-84     	; 0xf0a6 <__udivmodsi4>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    f0fa:	07 fc       	sbrc	r0, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    f0fc:	02 d0       	rcall	.+4      	; 0xf102 <__divmodsi4_neg2>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    f0fe:	46 f4       	brtc	.+16     	; 0xf110 <__divmodsi4_exit>
    f100:	08 c0       	rjmp	.+16     	; 0xf112 <__negsi2>

0000f102 <__divmodsi4_neg2>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    f102:	50 95       	com	r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    f104:	40 95       	com	r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    f106:	30 95       	com	r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    f108:	21 95       	neg	r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    f10a:	3f 4f       	sbci	r19, 0xFF	; 255
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    f10c:	4f 4f       	sbci	r20, 0xFF	; 255
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    f10e:	5f 4f       	sbci	r21, 0xFF	; 255

0000f110 <__divmodsi4_exit>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    f110:	08 95       	ret

0000f112 <__negsi2>:
__negsi2():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    f112:	90 95       	com	r25
    f114:	80 95       	com	r24
    f116:	70 95       	com	r23
    f118:	61 95       	neg	r22
    f11a:	7f 4f       	sbci	r23, 0xFF	; 255
    f11c:	8f 4f       	sbci	r24, 0xFF	; 255
    f11e:	9f 4f       	sbci	r25, 0xFF	; 255
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    f120:	08 95       	ret

0000f122 <__tablejump2__>:
__tablejump2__():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    f122:	ee 0f       	add	r30, r30
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    f124:	ff 1f       	adc	r31, r31
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2304
    f126:	00 24       	eor	r0, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2305
    f128:	00 1c       	adc	r0, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2306
    f12a:	0b be       	out	0x3b, r0	; 59
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2312
    f12c:	07 90       	elpm	r0, Z+
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2313
    f12e:	f6 91       	elpm	r31, Z
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2314
    f130:	e0 2d       	mov	r30, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2319
    f132:	09 94       	ijmp

0000f134 <__usmulhisi3>:
__usmulhisi3():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:545
    f134:	6f de       	rcall	.-802    	; 0xee14 <__umulhisi3>

0000f136 <__usmulhisi3_tail>:
__usmulhisi3_tail():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:551
    f136:	b7 ff       	sbrs	r27, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:552
    f138:	08 95       	ret
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:553
    f13a:	82 1b       	sub	r24, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:554
    f13c:	93 0b       	sbc	r25, r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:555
    f13e:	08 95       	ret

0000f140 <__udivmodqi4>:
__udivmodqi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1346
    f140:	99 1b       	sub	r25, r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1347
    f142:	79 e0       	ldi	r23, 0x09	; 9
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1348
    f144:	04 c0       	rjmp	.+8      	; 0xf14e <__udivmodqi4_ep>

0000f146 <__udivmodqi4_loop>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1350
    f146:	99 1f       	adc	r25, r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1351
    f148:	96 17       	cp	r25, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1352
    f14a:	08 f0       	brcs	.+2      	; 0xf14e <__udivmodqi4_ep>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1353
    f14c:	96 1b       	sub	r25, r22

0000f14e <__udivmodqi4_ep>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1355
    f14e:	88 1f       	adc	r24, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1356
    f150:	7a 95       	dec	r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1357
    f152:	c9 f7       	brne	.-14     	; 0xf146 <__udivmodqi4_loop>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1358
    f154:	80 95       	com	r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1360
    f156:	08 95       	ret

0000f158 <memset>:
memset():
C:\Users\dax\AppData\Local\Arduino15\packages\DxCore\hardware\megaavr\1.5.5\cores\dxcore\api/Print.cpp:175
    f158:	dc 01       	movw	r26, r24
    f15a:	01 c0       	rjmp	.+2      	; 0xf15e <memset+0x6>
    f15c:	6d 93       	st	X+, r22
    f15e:	41 50       	subi	r20, 0x01	; 1
    f160:	50 40       	sbci	r21, 0x00	; 0
    f162:	e0 f7       	brcc	.-8      	; 0xf15c <memset+0x4>
    f164:	08 95       	ret

0000f166 <_exit>:
_exit():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    f166:	f8 94       	cli

0000f168 <__stop_program>:
__stop_program():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    f168:	ff cf       	rjmp	.-2      	; 0xf168 <__stop_program>
